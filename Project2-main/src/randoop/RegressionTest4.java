package randoop;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest4 {

    public static boolean debug = false;

    @Test
    public void test2001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2001");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.RequestForum requestForum1 = model.RequestForum.createRequestForum();
        model.Request request2 = new model.Request();
        request2.title = "";
        java.lang.String str5 = requestForum1.makeARequest(request2);
        int int6 = requestForum0.assessBooksPriority(request2);
        java.lang.String str7 = request2.type;
        java.lang.String str8 = request2.title;
        model.Database database9 = null;
        model.Register register10 = model.Register.makeRegister(database9);
        model.Faculty faculty11 = new model.Faculty();
        faculty11.username = "hi!";
        java.util.Collection<model.Course> courseCollection14 = null;
        faculty11.courses = courseCollection14;
        java.util.Collection<model.Course> courseCollection16 = faculty11.courses;
        model.Newsletter[] newsletterArray17 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList18 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList18, newsletterArray17);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager20 = new model.NewsletterSubscriptionManager(newsletterList18);
        model.Client client21 = newsletterSubscriptionManager20.client;
        model.Student student22 = new model.Student();
        int int23 = student22.ID;
        model.StudentOnlineResources studentOnlineResources24 = new model.StudentOnlineResources((model.Client) student22);
        student22.ID = '#';
        java.lang.String str27 = student22.email;
        newsletterSubscriptionManager20.client = student22;
        model.Newsletter[] newsletterArray29 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList30 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList30, newsletterArray29);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager32 = new model.NewsletterSubscriptionManager(newsletterList30);
        newsletterSubscriptionManager20.newsletterSubscribed = newsletterList30;
        faculty11.newsletterManager = newsletterSubscriptionManager20;
        model.Newsletter[] newsletterArray35 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList36 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList36, newsletterArray35);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager38 = new model.NewsletterSubscriptionManager(newsletterList36);
        model.Client client39 = newsletterSubscriptionManager38.client;
        model.Student student40 = new model.Student();
        int int41 = student40.ID;
        model.StudentOnlineResources studentOnlineResources42 = new model.StudentOnlineResources((model.Client) student40);
        student40.ID = '#';
        java.lang.String str45 = student40.email;
        newsletterSubscriptionManager38.client = student40;
        student40.ID = (short) 1;
        newsletterSubscriptionManager20.client = student40;
        int int50 = student40.ID;
        java.lang.String str51 = student40.username;
        boolean boolean54 = register10.registerAsStaff((model.Staff) student40, "src/BorrowedItems.csv", "model.RegistrationFailedException: model.RentingNotAllowedException: hi!");
        model.Database database55 = null;
        model.Register register56 = model.Register.makeRegister(database55);
        model.Faculty faculty57 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection58 = faculty57.courses;
        boolean boolean61 = register56.registerAsStaff((model.Staff) faculty57, "src/Book.csv", "src/Book.csv");
        model.Database database62 = register56.database;
        model.ValidateRegistration validateRegistration63 = new model.ValidateRegistration();
        model.Student student64 = new model.Student();
        student64.viewMyOnlineResource();
        boolean boolean66 = validateRegistration63.validateStaffRegistration((model.Staff) student64);
        model.Faculty faculty67 = new model.Faculty();
        boolean boolean68 = validateRegistration63.validateStaffRegistration((model.Staff) faculty67);
        boolean boolean71 = register56.registerAsStaff((model.Staff) faculty67, "src/Book.csv", "model.RegistrationFailedException: ");
        model.Faculty faculty72 = new model.Faculty();
        faculty72.username = "hi!";
        java.util.Collection<model.Course> courseCollection75 = null;
        faculty72.courses = courseCollection75;
        boolean boolean79 = register56.registerAsStaff((model.Staff) faculty72, "", "src/Magazine.csv");
        boolean boolean82 = register10.registerAsStaff((model.Staff) faculty72, "src/Client.csv", "model.RentingNotAllowedException: ");
        request2.requestee = faculty72;
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertNotNull(requestForum1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(register10);
        org.junit.Assert.assertNull(courseCollection16);
        org.junit.Assert.assertNotNull(newsletterArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(client21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(newsletterArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(newsletterArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(client39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(register56);
        org.junit.Assert.assertNull(courseCollection58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
// flaky:         org.junit.Assert.assertNotNull(database62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test2002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2002");
        model.SearchBorrowedItem searchBorrowedItem0 = model.SearchBorrowedItem.makeSearchBorrowedItem();
        model.Visitor visitor1 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList2 = visitor1.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources3 = new model.StudentOnlineResources((model.Client) visitor1);
        model.RentedItem[] rentedItemArray4 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList5 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList5, rentedItemArray4);
        model.BorrowingManager borrowingManager7 = new model.BorrowingManager(rentedItemList5);
        model.Visitor visitor8 = new model.Visitor();
        visitor8.email = "hi!";
        borrowingManager7.client = visitor8;
        studentOnlineResources3.client = visitor8;
        model.Student student13 = new model.Student();
        int int14 = student13.ID;
        model.StudentOnlineResources studentOnlineResources15 = new model.StudentOnlineResources((model.Client) student13);
        model.VirtualBook virtualBook17 = studentOnlineResources15.searchAccessibleBook("");
        model.CD cD19 = new model.CD("");
        model.Magazine magazine20 = null;
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.Book book34 = null;
        model.CD cD35 = null;
        model.Magazine magazine36 = null;
        model.Book[] bookArray37 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList38 = new java.util.ArrayList<model.Book>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList38, bookArray37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        model.Magazine[] magazineArray43 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList44 = new java.util.ArrayList<model.Magazine>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList44, magazineArray43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book34, cD35, magazine36, (java.util.Collection<model.Book>) bookList38, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList44);
        model.CD[] cDArray47 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList48 = new java.util.ArrayList<model.CD>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList48, cDArray47);
        itemSearchResult46.similarCD = cDList48;
        model.Book book51 = null;
        model.CD cD52 = null;
        model.Magazine magazine53 = null;
        model.Book[] bookArray54 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList55 = new java.util.ArrayList<model.Book>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList55, bookArray54);
        model.CD[] cDArray57 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList58 = new java.util.ArrayList<model.CD>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList58, cDArray57);
        model.Magazine[] magazineArray60 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList61 = new java.util.ArrayList<model.Magazine>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList61, magazineArray60);
        model.ItemSearchResult itemSearchResult63 = new model.ItemSearchResult(book51, cD52, magazine53, (java.util.Collection<model.Book>) bookList55, (java.util.Collection<model.CD>) cDList58, (java.util.Collection<model.Magazine>) magazineList61);
        model.ItemSearchResult itemSearchResult64 = new model.ItemSearchResult((model.Book) virtualBook17, cD19, magazine20, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList48, (java.util.Collection<model.Magazine>) magazineList61);
        java.lang.String str65 = studentOnlineResources3.readVirtualItem((model.VirtualItem) virtualBook17);
        model.Visitor visitor67 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList68 = visitor67.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources69 = new model.StudentOnlineResources((model.Client) visitor67);
        searchBorrowedItem0.addPhyscialItem((model.Item) virtualBook17, "", (model.Client) visitor67);
        model.Student student71 = new model.Student();
        int int72 = student71.ID;
        model.StudentOnlineResources studentOnlineResources73 = new model.StudentOnlineResources((model.Client) student71);
        java.util.Iterator<model.VirtualItem> virtualItemItor74 = studentOnlineResources73.iterator();
        boolean boolean75 = virtualBook17.equals((java.lang.Object) virtualItemItor74);
        java.lang.String str76 = virtualBook17.publisher;
        model.Student student77 = new model.Student();
        int int78 = student77.ID;
        model.StudentOnlineResources studentOnlineResources79 = new model.StudentOnlineResources((model.Client) student77);
        model.VirtualBook virtualBook81 = studentOnlineResources79.searchAccessibleBook("");
        virtualBook81.ISBN = "model.LoginFailedException: hi!";
        virtualBook81.publisher = "src/Book.csv";
        model.VirtualItemContent virtualItemContent87 = new model.VirtualItemContent("src/Book.csv");
        virtualBook81.content = virtualItemContent87;
        virtualBook17.content = virtualItemContent87;
        org.junit.Assert.assertNotNull(searchBorrowedItem0);
        org.junit.Assert.assertNull(virtualBookList2);
        org.junit.Assert.assertNotNull(rentedItemArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(virtualBook17);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(bookArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(magazineArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(cDArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(bookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(cDArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(magazineArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(virtualBookList68);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNull(virtualItemItor74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(virtualBook81);
    }

    @Test
    public void test2003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2003");
        model.Visitor visitor0 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList1 = visitor0.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) visitor0);
        model.RentedItem[] rentedItemArray3 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList4 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList4, rentedItemArray3);
        model.BorrowingManager borrowingManager6 = new model.BorrowingManager(rentedItemList4);
        model.Visitor visitor7 = new model.Visitor();
        visitor7.email = "hi!";
        borrowingManager6.client = visitor7;
        studentOnlineResources2.client = visitor7;
        model.UniProvidedNewsletter uniProvidedNewsletter12 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter12.title = "";
        java.lang.String str15 = studentOnlineResources2.readVirtualItem((model.VirtualItem) uniProvidedNewsletter12);
        java.util.Iterator<model.VirtualItem> virtualItemItor16 = studentOnlineResources2.iterator();
        model.Newsletter newsletter18 = studentOnlineResources2.searchSubscribedNewsletter("");
        org.junit.Assert.assertNull(virtualBookList1);
        org.junit.Assert.assertNotNull(rentedItemArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(virtualItemItor16);
        org.junit.Assert.assertNull(newsletter18);
    }

    @Test
    public void test2004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2004");
        model.ItemManagement itemManagement0 = new model.ItemManagement();
        model.Database database1 = null;
        itemManagement0.database = database1;
        model.Database database10 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        java.lang.String str11 = database10.itemPath;
        itemManagement0.database = database10;
        model.RentAndReturnSystem rentAndReturnSystem13 = new model.RentAndReturnSystem();
        model.Payment payment14 = rentAndReturnSystem13.paymentAPI;
        model.PayMobileWallet payMobileWallet15 = new model.PayMobileWallet();
        payMobileWallet15.amountPay = 100.0f;
        payMobileWallet15.pay((double) 100L);
        rentAndReturnSystem13.paymentAPI = payMobileWallet15;
        model.Magazine magazine22 = new model.Magazine("");
        java.util.Calendar calendar23 = magazine22.date;
        model.Database database24 = null;
        model.Register register25 = model.Register.makeRegister(database24);
        model.Faculty faculty26 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection27 = faculty26.courses;
        boolean boolean30 = register25.registerAsStaff((model.Staff) faculty26, "src/Book.csv", "src/Book.csv");
        model.Faculty faculty31 = new model.Faculty();
        faculty31.username = "hi!";
        java.lang.String str34 = faculty31.username;
        boolean boolean37 = register25.registerAsStaff((model.Staff) faculty31, "src/CD.csv", "hi!");
        boolean boolean38 = rentAndReturnSystem13.returnAnItem((model.Item) magazine22, (model.Client) faculty31);
        itemManagement0.disableAnItem((model.Item) magazine22);
        model.Database database40 = itemManagement0.database;
        model.VirtualBook virtualBook42 = new model.VirtualBook("");
        java.util.Calendar calendar43 = virtualBook42.date;
        virtualBook42.ID = ' ';
        itemManagement0.disableAnItem((model.Item) virtualBook42);
        org.junit.Assert.assertNotNull(database10);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNull(payment14);
        org.junit.Assert.assertNull(calendar23);
        org.junit.Assert.assertNotNull(register25);
        org.junit.Assert.assertNull(courseCollection27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNull(calendar43);
    }

    @Test
    public void test2005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2005");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.Student student1 = new model.Student();
        int int2 = student1.ID;
        model.StudentOnlineResources studentOnlineResources3 = new model.StudentOnlineResources((model.Client) student1);
        model.VirtualBook virtualBook5 = studentOnlineResources3.searchAccessibleBook("");
        model.CD cD7 = new model.CD("");
        model.Magazine magazine8 = null;
        model.Book book9 = null;
        model.CD cD10 = null;
        model.Magazine magazine11 = null;
        model.Book[] bookArray12 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList13 = new java.util.ArrayList<model.Book>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList13, bookArray12);
        model.CD[] cDArray15 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList16 = new java.util.ArrayList<model.CD>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList16, cDArray15);
        model.Magazine[] magazineArray18 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList19 = new java.util.ArrayList<model.Magazine>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList19, magazineArray18);
        model.ItemSearchResult itemSearchResult21 = new model.ItemSearchResult(book9, cD10, magazine11, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList16, (java.util.Collection<model.Magazine>) magazineList19);
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        model.CD[] cDArray35 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList36 = new java.util.ArrayList<model.CD>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList36, cDArray35);
        itemSearchResult34.similarCD = cDList36;
        model.Book book39 = null;
        model.CD cD40 = null;
        model.Magazine magazine41 = null;
        model.Book[] bookArray42 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList43 = new java.util.ArrayList<model.Book>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList43, bookArray42);
        model.CD[] cDArray45 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList46 = new java.util.ArrayList<model.CD>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList46, cDArray45);
        model.Magazine[] magazineArray48 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList49 = new java.util.ArrayList<model.Magazine>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList49, magazineArray48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult(book39, cD40, magazine41, (java.util.Collection<model.Book>) bookList43, (java.util.Collection<model.CD>) cDList46, (java.util.Collection<model.Magazine>) magazineList49);
        model.ItemSearchResult itemSearchResult52 = new model.ItemSearchResult((model.Book) virtualBook5, cD7, magazine8, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList36, (java.util.Collection<model.Magazine>) magazineList49);
        int int53 = virtualBook5.ID;
        virtualBook5.ISBN = "hi!";
        int int56 = virtualBook5.ID;
        model.LibraryManagementTeam libraryManagementTeam57 = new model.LibraryManagementTeam();
        libraryManagementTeam57.accessCode = (byte) 10;
        boolean boolean60 = virtualBook5.equals((java.lang.Object) libraryManagementTeam57);
        requestForum0.managementTeam = libraryManagementTeam57;
        int int62 = libraryManagementTeam57.ID;
        model.ItemManagement itemManagement63 = libraryManagementTeam57.itemManagement;
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(virtualBook5);
        org.junit.Assert.assertNotNull(bookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cDArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(magazineArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(cDArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(bookArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(cDArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(magazineArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNull(itemManagement63);
    }

    @Test
    public void test2006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2006");
        model.Book book0 = null;
        model.CD cD1 = null;
        model.Magazine magazine2 = null;
        model.Book[] bookArray3 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList4 = new java.util.ArrayList<model.Book>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList4, bookArray3);
        model.CD[] cDArray6 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList7 = new java.util.ArrayList<model.CD>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList7, cDArray6);
        model.Magazine[] magazineArray9 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList10 = new java.util.ArrayList<model.Magazine>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList10, magazineArray9);
        model.ItemSearchResult itemSearchResult12 = new model.ItemSearchResult(book0, cD1, magazine2, (java.util.Collection<model.Book>) bookList4, (java.util.Collection<model.CD>) cDList7, (java.util.Collection<model.Magazine>) magazineList10);
        model.CD[] cDArray13 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList14 = new java.util.ArrayList<model.CD>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList14, cDArray13);
        itemSearchResult12.similarCD = cDList14;
        model.Book book17 = null;
        itemSearchResult12.book = book17;
        model.Book book19 = null;
        model.CD cD20 = null;
        model.Magazine magazine21 = null;
        model.Book[] bookArray22 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList23 = new java.util.ArrayList<model.Book>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList23, bookArray22);
        model.CD[] cDArray25 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList26 = new java.util.ArrayList<model.CD>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList26, cDArray25);
        model.Magazine[] magazineArray28 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList29 = new java.util.ArrayList<model.Magazine>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList29, magazineArray28);
        model.ItemSearchResult itemSearchResult31 = new model.ItemSearchResult(book19, cD20, magazine21, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList29);
        itemSearchResult12.similarBooks = bookList23;
        model.Magazine magazine34 = new model.Magazine("src/Book.csv");
        itemSearchResult12.magazine = magazine34;
        model.Book book36 = null;
        model.CD cD37 = null;
        model.Magazine magazine38 = null;
        model.Book[] bookArray39 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList40 = new java.util.ArrayList<model.Book>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList40, bookArray39);
        model.CD[] cDArray42 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList43 = new java.util.ArrayList<model.CD>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList43, cDArray42);
        model.Magazine[] magazineArray45 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList46 = new java.util.ArrayList<model.Magazine>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList46, magazineArray45);
        model.ItemSearchResult itemSearchResult48 = new model.ItemSearchResult(book36, cD37, magazine38, (java.util.Collection<model.Book>) bookList40, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList46);
        model.Book book49 = null;
        model.CD cD50 = null;
        model.Magazine magazine51 = null;
        model.Book[] bookArray52 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList53 = new java.util.ArrayList<model.Book>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList53, bookArray52);
        model.CD[] cDArray55 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList56 = new java.util.ArrayList<model.CD>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList56, cDArray55);
        model.Magazine[] magazineArray58 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList59 = new java.util.ArrayList<model.Magazine>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList59, magazineArray58);
        model.ItemSearchResult itemSearchResult61 = new model.ItemSearchResult(book49, cD50, magazine51, (java.util.Collection<model.Book>) bookList53, (java.util.Collection<model.CD>) cDList56, (java.util.Collection<model.Magazine>) magazineList59);
        itemSearchResult48.similarCD = cDList56;
        model.Magazine magazine63 = null;
        itemSearchResult48.magazine = magazine63;
        java.util.Collection<model.Magazine> magazineCollection65 = itemSearchResult48.similarMagazine;
        itemSearchResult12.similarMagazine = magazineCollection65;
        org.junit.Assert.assertNotNull(bookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(cDArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(magazineArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(cDArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(bookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(magazineArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(bookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cDArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(magazineArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(bookArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(cDArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(magazineArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(magazineCollection65);
    }

    @Test
    public void test2007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2007");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter54 = null;
        model.PaidNewsletter paidNewsletter55 = null;
        model.VirtualItemSearchResult virtualItemSearchResult56 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter54, paidNewsletter55);
        model.PaidNewsletter paidNewsletter57 = virtualItemSearchResult56.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter58 = new model.UniProvidedNewsletter();
        virtualItemSearchResult56.setUniNewsletter(uniProvidedNewsletter58);
        model.UniProvidedNewsletter uniProvidedNewsletter60 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter60.title = "";
        java.lang.String str63 = uniProvidedNewsletter60.title;
        virtualItemSearchResult56.uniNewsletter = uniProvidedNewsletter60;
        model.PaidNewsletter paidNewsletter65 = virtualItemSearchResult56.getPaidNewsletter();
        model.VirtualBook virtualBook66 = virtualItemSearchResult56.getVirtualBook();
        model.UniProvidedNewsletter uniProvidedNewsletter67 = null;
        virtualItemSearchResult56.setUniNewsletter(uniProvidedNewsletter67);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertNull(paidNewsletter57);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNull(paidNewsletter65);
        org.junit.Assert.assertNotNull(virtualBook66);
    }

    @Test
    public void test2008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2008");
        int int2 = model.SearchStrategy.calculateDistance("model.RegistrationFailedException: ", "");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 35 + "'", int2 == 35);
    }

    @Test
    public void test2009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2009");
        model.Database database0 = null;
        model.Register register1 = model.Register.makeRegister(database0);
        model.ValidateRegistration validateRegistration2 = new model.ValidateRegistration();
        model.Student student3 = new model.Student();
        student3.viewMyOnlineResource();
        boolean boolean5 = validateRegistration2.validateStaffRegistration((model.Staff) student3);
        boolean boolean8 = register1.registerAsStaff((model.Staff) student3, "", "");
        model.Database database9 = null;
        model.Login login10 = new model.Login(database9);
        model.Database database18 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str19 = database18.getBookFilePath();
        database18.itemPath = "hi!";
        model.Database.database = database18;
        java.lang.String str23 = database18.getNewspaperFilePath();
        login10.db = database18;
        boolean boolean26 = database18.addItem("model.RegistrationFailedException: src/Magazine.csv");
        java.lang.String str27 = database18.getCDFilePath();
        register1.database = database18;
        org.junit.Assert.assertNotNull(register1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "src/Book.csv" + "'", str19, "src/Book.csv");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "src/Newsletter.csv" + "'", str23, "src/Newsletter.csv");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "src/CD.csv" + "'", str27, "src/CD.csv");
    }

    @Test
    public void test2010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2010");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        model.Book book4 = null;
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        java.util.Collection<model.Book> bookCollection8 = null;
        model.Book book9 = null;
        model.CD cD10 = null;
        model.Magazine magazine11 = null;
        model.Book[] bookArray12 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList13 = new java.util.ArrayList<model.Book>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList13, bookArray12);
        model.CD[] cDArray15 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList16 = new java.util.ArrayList<model.CD>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList16, cDArray15);
        model.Magazine[] magazineArray18 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList19 = new java.util.ArrayList<model.Magazine>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList19, magazineArray18);
        model.ItemSearchResult itemSearchResult21 = new model.ItemSearchResult(book9, cD10, magazine11, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList16, (java.util.Collection<model.Magazine>) magazineList19);
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        itemSearchResult21.similarCD = cDList29;
        model.Book book36 = null;
        model.CD cD37 = null;
        model.Magazine magazine38 = null;
        model.Book[] bookArray39 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList40 = new java.util.ArrayList<model.Book>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList40, bookArray39);
        model.CD[] cDArray42 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList43 = new java.util.ArrayList<model.CD>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList43, cDArray42);
        model.Magazine[] magazineArray45 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList46 = new java.util.ArrayList<model.Magazine>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList46, magazineArray45);
        model.ItemSearchResult itemSearchResult48 = new model.ItemSearchResult(book36, cD37, magazine38, (java.util.Collection<model.Book>) bookList40, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList46);
        model.ItemSearchResult itemSearchResult49 = new model.ItemSearchResult(book4, cD6, magazine7, bookCollection8, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList46);
        cD6.ID = (short) 10;
        borrowingManager3.removeRentedItem((model.Item) cD6);
        float float53 = borrowingManager3.amountOwned;
        int int54 = borrowingManager3.itemsBorrowedCount;
        borrowingManager3.updateBorrowingPrivilages();
        java.util.ArrayList<model.RentedItem> rentedItemList56 = borrowingManager3.physicalItemBorrowed;
        double double57 = borrowingManager3.checkBalanceOwed();
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(bookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cDArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(magazineArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(bookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cDArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(magazineArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + 0.0f + "'", float53 == 0.0f);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(rentedItemList56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
    }

    @Test
    public void test2011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2011");
        model.ItemManagement itemManagement0 = new model.ItemManagement();
        model.Database database1 = null;
        itemManagement0.database = database1;
        model.BuySpecialItems buySpecialItems3 = new model.BuySpecialItems();
        model.Book book4 = null;
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        java.util.Collection<model.Book> bookCollection8 = null;
        model.Book book9 = null;
        model.CD cD10 = null;
        model.Magazine magazine11 = null;
        model.Book[] bookArray12 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList13 = new java.util.ArrayList<model.Book>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList13, bookArray12);
        model.CD[] cDArray15 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList16 = new java.util.ArrayList<model.CD>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList16, cDArray15);
        model.Magazine[] magazineArray18 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList19 = new java.util.ArrayList<model.Magazine>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList19, magazineArray18);
        model.ItemSearchResult itemSearchResult21 = new model.ItemSearchResult(book9, cD10, magazine11, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList16, (java.util.Collection<model.Magazine>) magazineList19);
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        itemSearchResult21.similarCD = cDList29;
        model.Book book36 = null;
        model.CD cD37 = null;
        model.Magazine magazine38 = null;
        model.Book[] bookArray39 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList40 = new java.util.ArrayList<model.Book>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList40, bookArray39);
        model.CD[] cDArray42 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList43 = new java.util.ArrayList<model.CD>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList43, cDArray42);
        model.Magazine[] magazineArray45 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList46 = new java.util.ArrayList<model.Magazine>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList46, magazineArray45);
        model.ItemSearchResult itemSearchResult48 = new model.ItemSearchResult(book36, cD37, magazine38, (java.util.Collection<model.Book>) bookList40, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList46);
        model.ItemSearchResult itemSearchResult49 = new model.ItemSearchResult(book4, cD6, magazine7, bookCollection8, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList46);
        cD6.ID = (short) 10;
        boolean boolean53 = buySpecialItems3.buyAnItem((model.Item) cD6, (double) 0);
        itemManagement0.enableAnItem((model.Item) cD6);
        model.Database database55 = model.Database.database;
        model.Student student56 = new model.Student();
        int int57 = student56.ID;
        model.StudentOnlineResources studentOnlineResources58 = new model.StudentOnlineResources((model.Client) student56);
        student56.ID = '#';
        database55.addClient((model.Client) student56);
        itemManagement0.database = database55;
        int int63 = database55.getRandomID();
        java.lang.String str64 = database55.getBorrowedItemFilePath();
        java.lang.String str65 = database55.virtualItemFilePath;
        model.Login login66 = model.Login.makeLogin(database55);
        org.junit.Assert.assertNotNull(bookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cDArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(magazineArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(bookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cDArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(magazineArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1294162 + "'", int63 == 1294162);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "src/BorrowedItems.csv" + "'", str64, "src/BorrowedItems.csv");
// flaky:         org.junit.Assert.assertEquals("'" + str65 + "' != '" + "model.RegistrationFailedException: model.RentingNotAllowedException: hi!" + "'", str65, "model.RegistrationFailedException: model.RentingNotAllowedException: hi!");
        org.junit.Assert.assertNotNull(login66);
    }

    @Test
    public void test2012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2012");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager4 = new model.NewsletterSubscriptionManager(newsletterList1);
        java.util.ArrayList<model.Newsletter> newsletterList5 = newsletterSubscriptionManager4.newsletterSubscribed;
        model.PaidNewsletter paidNewsletter6 = new model.PaidNewsletter();
        newsletterSubscriptionManager4.subscribeToPaidNewsletter(paidNewsletter6, "src/Client.csv");
        model.BuySpecialItems buySpecialItems9 = new model.BuySpecialItems();
        model.Payment payment10 = null;
        buySpecialItems9.paymentAPI = payment10;
        model.PayMobileWallet payMobileWallet12 = new model.PayMobileWallet();
        buySpecialItems9.paymentAPI = payMobileWallet12;
        payMobileWallet12.amountPay = (-1L);
        payMobileWallet12.pay((double) (-1.0f));
        payMobileWallet12.amountPay = 97;
        double double20 = payMobileWallet12.amountPay;
        newsletterSubscriptionManager4.paymentAPI = payMobileWallet12;
        payMobileWallet12.amountPay = (-1.0f);
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(newsletterList5);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 97.0d + "'", double20 == 97.0d);
    }

    @Test
    public void test2013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2013");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.Payment payment1 = rentAndReturnSystem0.paymentAPI;
        model.PayMobileWallet payMobileWallet2 = new model.PayMobileWallet();
        payMobileWallet2.amountPay = 100.0f;
        payMobileWallet2.pay((double) 100L);
        rentAndReturnSystem0.paymentAPI = payMobileWallet2;
        model.Payment payment8 = rentAndReturnSystem0.paymentAPI;
        model.Magazine magazine10 = new model.Magazine("");
        java.lang.String str11 = magazine10.title;
        model.Client client12 = null;
        boolean boolean13 = rentAndReturnSystem0.rentAnItem((model.Item) magazine10, client12);
        model.RentAndReturnSystem rentAndReturnSystem14 = new model.RentAndReturnSystem();
        model.BuySpecialItems buySpecialItems15 = new model.BuySpecialItems();
        model.PayDebit payDebit16 = new model.PayDebit();
        buySpecialItems15.paymentAPI = payDebit16;
        rentAndReturnSystem14.paymentAPI = payDebit16;
        double double19 = payDebit16.amountPay;
        rentAndReturnSystem0.paymentAPI = payDebit16;
        org.junit.Assert.assertNull(payment1);
        org.junit.Assert.assertNotNull(payment8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
    }

    @Test
    public void test2014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2014");
        java.lang.String[] strArray4 = new java.lang.String[] {};
        model.Item item5 = model.ItemFactory.makeItem("model.RegistrationFailedException: ", strArray4);
        model.Item item6 = model.ItemFactory.makeItem("src/Client.csv", strArray4);
        model.Item item7 = model.ItemFactory.makeItem("", strArray4);
        model.Item item8 = model.ItemFactory.makeItem("src/Newsletter.csv", strArray4);
        // The following exception was thrown during execution in test generation
        try {
            model.Client client9 = model.ClientFactory.makeClient(strArray4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 3 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNull(item5);
        org.junit.Assert.assertNull(item6);
        org.junit.Assert.assertNull(item7);
        org.junit.Assert.assertNull(item8);
    }

    @Test
    public void test2015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2015");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        model.Book book4 = null;
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        java.util.Collection<model.Book> bookCollection8 = null;
        model.Book book9 = null;
        model.CD cD10 = null;
        model.Magazine magazine11 = null;
        model.Book[] bookArray12 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList13 = new java.util.ArrayList<model.Book>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList13, bookArray12);
        model.CD[] cDArray15 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList16 = new java.util.ArrayList<model.CD>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList16, cDArray15);
        model.Magazine[] magazineArray18 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList19 = new java.util.ArrayList<model.Magazine>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList19, magazineArray18);
        model.ItemSearchResult itemSearchResult21 = new model.ItemSearchResult(book9, cD10, magazine11, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList16, (java.util.Collection<model.Magazine>) magazineList19);
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        itemSearchResult21.similarCD = cDList29;
        model.Book book36 = null;
        model.CD cD37 = null;
        model.Magazine magazine38 = null;
        model.Book[] bookArray39 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList40 = new java.util.ArrayList<model.Book>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList40, bookArray39);
        model.CD[] cDArray42 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList43 = new java.util.ArrayList<model.CD>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList43, cDArray42);
        model.Magazine[] magazineArray45 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList46 = new java.util.ArrayList<model.Magazine>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList46, magazineArray45);
        model.ItemSearchResult itemSearchResult48 = new model.ItemSearchResult(book36, cD37, magazine38, (java.util.Collection<model.Book>) bookList40, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList46);
        model.ItemSearchResult itemSearchResult49 = new model.ItemSearchResult(book4, cD6, magazine7, bookCollection8, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList46);
        cD6.ID = (short) 10;
        borrowingManager3.removeRentedItem((model.Item) cD6);
        float float53 = borrowingManager3.amountOwned;
        model.Database database54 = null;
        model.Register register55 = model.Register.makeRegister(database54);
        model.Faculty faculty56 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection57 = faculty56.courses;
        boolean boolean60 = register55.registerAsStaff((model.Staff) faculty56, "src/Book.csv", "src/Book.csv");
        faculty56.faculty = "src/Magazine.csv";
        borrowingManager3.client = faculty56;
        double double64 = borrowingManager3.checkBalanceOwed();
        borrowingManager3.itemsBorrowedCount = 5671056;
        int int67 = borrowingManager3.itemsBorrowedCount;
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(bookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cDArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(magazineArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(bookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cDArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(magazineArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + 0.0f + "'", float53 == 0.0f);
        org.junit.Assert.assertNotNull(register55);
        org.junit.Assert.assertNull(courseCollection57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 5671056 + "'", int67 == 5671056);
    }

    @Test
    public void test2016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2016");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        model.SearchClient searchClient8 = model.SearchClient.makeSearchClient(database7);
        int int9 = database7.getRandomID();
        model.Client client11 = database7.getClient("model.RegistrationFailedException: src/Magazine.csv");
        boolean boolean13 = database7.addItem("src/Newsletter.csv");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(searchClient8);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7478123 + "'", int9 == 7478123);
        org.junit.Assert.assertNotNull(client11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test2017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2017");
        model.Visitor visitor0 = new model.Visitor();
        model.StudentOnlineResources studentOnlineResources1 = new model.StudentOnlineResources((model.Client) visitor0);
        model.Database database9 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database9;
        model.SearchVirtualItem searchVirtualItem11 = new model.SearchVirtualItem(database9);
        model.VirtualItemSearchResult virtualItemSearchResult13 = searchVirtualItem11.searchVirtualItem("src/VirtualBook.csv");
        model.Student student14 = new model.Student();
        int int15 = student14.ID;
        model.StudentOnlineResources studentOnlineResources16 = new model.StudentOnlineResources((model.Client) student14);
        model.VirtualBook virtualBook18 = studentOnlineResources16.searchAccessibleBook("");
        java.lang.String str19 = virtualBook18.location;
        int int20 = virtualBook18.ID;
        virtualBook18.isBookLost = false;
        virtualItemSearchResult13.virtualBook = virtualBook18;
        model.VirtualBook virtualBook24 = virtualItemSearchResult13.getVirtualBook();
        model.VirtualItemContent virtualItemContent25 = virtualBook24.content;
        virtualBook24.ID = (byte) 100;
        int int28 = virtualBook24.copiesAvailable;
        java.lang.String str29 = studentOnlineResources1.readVirtualItem((model.VirtualItem) virtualBook24);
        model.VirtualBook virtualBook31 = studentOnlineResources1.searchAccessibleBook("model.RegistrationFailedException: ");
        virtualBook31.author = "model.RegistrationFailedException: src/Book.csv";
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(virtualItemSearchResult13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(virtualBook18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(virtualBook24);
        org.junit.Assert.assertNull(virtualItemContent25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 20 + "'", int28 == 20);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(virtualBook31);
    }

    @Test
    public void test2018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2018");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        boolean boolean4 = borrowingManager3.canRent();
        borrowingManager3.updateBorrowingPrivilages();
        java.util.ArrayList<model.RentedItem> rentedItemList6 = borrowingManager3.physicalItemBorrowed;
        model.BorrowingManager borrowingManager7 = new model.BorrowingManager(rentedItemList6);
        model.RentedItem rentedItem8 = null;
        // The following exception was thrown during execution in test generation
        try {
            borrowingManager7.removeRentedItem(rentedItem8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"item\" because \"item\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(rentedItemList6);
    }

    @Test
    public void test2019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2019");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        boolean boolean4 = borrowingManager3.canRent();
        model.Client client5 = borrowingManager3.client;
        model.Student student6 = new model.Student();
        int int7 = student6.ID;
        model.StudentOnlineResources studentOnlineResources8 = new model.StudentOnlineResources((model.Client) student6);
        model.StudentOnlineResources studentOnlineResources9 = new model.StudentOnlineResources((model.Client) student6);
        model.RentedItem[] rentedItemArray10 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList11 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList11, rentedItemArray10);
        model.BorrowingManager borrowingManager13 = new model.BorrowingManager(rentedItemList11);
        model.Visitor visitor14 = new model.Visitor();
        visitor14.email = "hi!";
        borrowingManager13.client = visitor14;
        studentOnlineResources9.client = visitor14;
        model.Client client19 = studentOnlineResources9.client;
        borrowingManager3.client = client19;
        borrowingManager3.amountOwned = (byte) 1;
        java.util.ArrayList<model.RentedItem> rentedItemList23 = borrowingManager3.physicalItemBorrowed;
        borrowingManager3.amountOwned = 11;
        int int26 = borrowingManager3.itemsBorrowedCount;
        int int27 = borrowingManager3.itemsBorrowedCount;
        boolean boolean28 = borrowingManager3.canRent();
        model.Student student29 = new model.Student();
        int int30 = student29.ID;
        model.StudentOnlineResources studentOnlineResources31 = new model.StudentOnlineResources((model.Client) student29);
        java.util.Iterator<model.VirtualItem> virtualItemItor32 = studentOnlineResources31.iterator();
        model.Student student33 = new model.Student();
        int int34 = student33.ID;
        model.StudentOnlineResources studentOnlineResources35 = new model.StudentOnlineResources((model.Client) student33);
        model.VirtualBook virtualBook37 = studentOnlineResources35.searchAccessibleBook("");
        model.CD cD39 = new model.CD("");
        model.Magazine magazine40 = null;
        model.Book book41 = null;
        model.CD cD42 = null;
        model.Magazine magazine43 = null;
        model.Book[] bookArray44 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList45 = new java.util.ArrayList<model.Book>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList45, bookArray44);
        model.CD[] cDArray47 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList48 = new java.util.ArrayList<model.CD>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList48, cDArray47);
        model.Magazine[] magazineArray50 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList51 = new java.util.ArrayList<model.Magazine>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList51, magazineArray50);
        model.ItemSearchResult itemSearchResult53 = new model.ItemSearchResult(book41, cD42, magazine43, (java.util.Collection<model.Book>) bookList45, (java.util.Collection<model.CD>) cDList48, (java.util.Collection<model.Magazine>) magazineList51);
        model.Book book54 = null;
        model.CD cD55 = null;
        model.Magazine magazine56 = null;
        model.Book[] bookArray57 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList58 = new java.util.ArrayList<model.Book>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList58, bookArray57);
        model.CD[] cDArray60 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList61 = new java.util.ArrayList<model.CD>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList61, cDArray60);
        model.Magazine[] magazineArray63 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList64 = new java.util.ArrayList<model.Magazine>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList64, magazineArray63);
        model.ItemSearchResult itemSearchResult66 = new model.ItemSearchResult(book54, cD55, magazine56, (java.util.Collection<model.Book>) bookList58, (java.util.Collection<model.CD>) cDList61, (java.util.Collection<model.Magazine>) magazineList64);
        model.CD[] cDArray67 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList68 = new java.util.ArrayList<model.CD>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList68, cDArray67);
        itemSearchResult66.similarCD = cDList68;
        model.Book book71 = null;
        model.CD cD72 = null;
        model.Magazine magazine73 = null;
        model.Book[] bookArray74 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList75 = new java.util.ArrayList<model.Book>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList75, bookArray74);
        model.CD[] cDArray77 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList78 = new java.util.ArrayList<model.CD>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList78, cDArray77);
        model.Magazine[] magazineArray80 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList81 = new java.util.ArrayList<model.Magazine>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList81, magazineArray80);
        model.ItemSearchResult itemSearchResult83 = new model.ItemSearchResult(book71, cD72, magazine73, (java.util.Collection<model.Book>) bookList75, (java.util.Collection<model.CD>) cDList78, (java.util.Collection<model.Magazine>) magazineList81);
        model.ItemSearchResult itemSearchResult84 = new model.ItemSearchResult((model.Book) virtualBook37, cD39, magazine40, (java.util.Collection<model.Book>) bookList45, (java.util.Collection<model.CD>) cDList68, (java.util.Collection<model.Magazine>) magazineList81);
        java.lang.String str85 = studentOnlineResources31.readVirtualItem((model.VirtualItem) virtualBook37);
        java.lang.String str86 = virtualBook37.publisher;
        virtualBook37.edition = 6645047;
        virtualBook37.showContent();
        // The following exception was thrown during execution in test generation
        try {
            borrowingManager3.rentAnItem((model.Item) virtualBook37, "src/Client.csv");
            org.junit.Assert.fail("Expected exception of type model.RentingNotAllowedException; message: Item Not Rentable.");
        } catch (model.RentingNotAllowedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(client5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(rentedItemArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(client19);
        org.junit.Assert.assertNotNull(rentedItemList23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(virtualItemItor32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(virtualBook37);
        org.junit.Assert.assertNotNull(bookArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(cDArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(magazineArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(bookArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(cDArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(magazineArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(cDArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(bookArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(cDArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(magazineArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNull(str86);
    }

    @Test
    public void test2020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2020");
        model.Database database0 = null;
        model.Register register1 = model.Register.makeRegister(database0);
        model.Faculty faculty2 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection3 = faculty2.courses;
        boolean boolean6 = register1.registerAsStaff((model.Staff) faculty2, "src/Book.csv", "src/Book.csv");
        java.lang.String str7 = faculty2.email;
        model.Database database8 = null;
        model.Register register9 = model.Register.makeRegister(database8);
        model.Faculty faculty10 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection11 = faculty10.courses;
        boolean boolean14 = register9.registerAsStaff((model.Staff) faculty10, "src/Book.csv", "src/Book.csv");
        model.Database database15 = register9.database;
        model.ValidateRegistration validateRegistration16 = new model.ValidateRegistration();
        model.Student student17 = new model.Student();
        student17.viewMyOnlineResource();
        boolean boolean19 = validateRegistration16.validateStaffRegistration((model.Staff) student17);
        model.Faculty faculty20 = new model.Faculty();
        boolean boolean21 = validateRegistration16.validateStaffRegistration((model.Staff) faculty20);
        boolean boolean24 = register9.registerAsStaff((model.Staff) faculty20, "src/Book.csv", "model.RegistrationFailedException: ");
        model.RentAndReturnSystem rentAndReturnSystem25 = new model.RentAndReturnSystem();
        model.Book book26 = null;
        model.CD cD28 = new model.CD("");
        model.Magazine magazine29 = null;
        java.util.Collection<model.Book> bookCollection30 = null;
        model.Book book31 = null;
        model.CD cD32 = null;
        model.Magazine magazine33 = null;
        model.Book[] bookArray34 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList35 = new java.util.ArrayList<model.Book>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList35, bookArray34);
        model.CD[] cDArray37 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList38 = new java.util.ArrayList<model.CD>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList38, cDArray37);
        model.Magazine[] magazineArray40 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList41 = new java.util.ArrayList<model.Magazine>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList41, magazineArray40);
        model.ItemSearchResult itemSearchResult43 = new model.ItemSearchResult(book31, cD32, magazine33, (java.util.Collection<model.Book>) bookList35, (java.util.Collection<model.CD>) cDList38, (java.util.Collection<model.Magazine>) magazineList41);
        model.Book book44 = null;
        model.CD cD45 = null;
        model.Magazine magazine46 = null;
        model.Book[] bookArray47 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList48 = new java.util.ArrayList<model.Book>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList48, bookArray47);
        model.CD[] cDArray50 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList51 = new java.util.ArrayList<model.CD>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList51, cDArray50);
        model.Magazine[] magazineArray53 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList54 = new java.util.ArrayList<model.Magazine>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList54, magazineArray53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult(book44, cD45, magazine46, (java.util.Collection<model.Book>) bookList48, (java.util.Collection<model.CD>) cDList51, (java.util.Collection<model.Magazine>) magazineList54);
        itemSearchResult43.similarCD = cDList51;
        model.Book book58 = null;
        model.CD cD59 = null;
        model.Magazine magazine60 = null;
        model.Book[] bookArray61 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList62 = new java.util.ArrayList<model.Book>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList62, bookArray61);
        model.CD[] cDArray64 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList65 = new java.util.ArrayList<model.CD>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList65, cDArray64);
        model.Magazine[] magazineArray67 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList68 = new java.util.ArrayList<model.Magazine>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList68, magazineArray67);
        model.ItemSearchResult itemSearchResult70 = new model.ItemSearchResult(book58, cD59, magazine60, (java.util.Collection<model.Book>) bookList62, (java.util.Collection<model.CD>) cDList65, (java.util.Collection<model.Magazine>) magazineList68);
        model.ItemSearchResult itemSearchResult71 = new model.ItemSearchResult(book26, cD28, magazine29, bookCollection30, (java.util.Collection<model.CD>) cDList51, (java.util.Collection<model.Magazine>) magazineList68);
        cD28.ID = (short) 10;
        cD28.canBePurchased = false;
        boolean boolean76 = cD28.canBePurchased;
        model.Faculty faculty77 = new model.Faculty();
        boolean boolean78 = rentAndReturnSystem25.rentAnItem((model.Item) cD28, (model.Client) faculty77);
        model.NonFaculty nonFaculty79 = new model.NonFaculty();
        model.Visitor visitor80 = new model.Visitor();
        model.VirtualBook[] virtualBookArray81 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList82 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList82, virtualBookArray81);
        visitor80.virtualBooksAvailable = virtualBookList82;
        visitor80.username = "";
        model.Visitor visitor87 = new model.Visitor();
        model.VirtualBook[] virtualBookArray88 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList89 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList89, virtualBookArray88);
        visitor87.virtualBooksAvailable = virtualBookList89;
        visitor80.virtualBooksAvailable = virtualBookList89;
        nonFaculty79.virtualBooksAvailable = virtualBookList89;
        faculty77.virtualBooksAvailable = virtualBookList89;
        faculty20.virtualBooksAvailable = virtualBookList89;
        faculty2.virtualBooksAvailable = virtualBookList89;
        org.junit.Assert.assertNotNull(register1);
        org.junit.Assert.assertNull(courseCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(register9);
        org.junit.Assert.assertNull(courseCollection11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(bookArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(cDArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(magazineArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(bookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(cDArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(magazineArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(bookArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(cDArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(magazineArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(virtualBookArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(virtualBookArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test2021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2021");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.Database.database = database7;
        java.lang.String str10 = database7.virtualItemFilePath;
        model.Login login11 = new model.Login(database7);
        java.lang.String str12 = database7.getClientFilePath();
        model.Login login13 = new model.Login(database7);
        model.Database database14 = login13.db;
        model.Database database22 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database22;
        model.SearchVirtualItem searchVirtualItem24 = new model.SearchVirtualItem(database22);
        database22.itemPath = "model.RegistrationFailedException: src/Book.csv";
        model.SearchItems searchItems27 = new model.SearchItems(database22);
        model.SearchItems searchItems28 = new model.SearchItems(database22);
        login13.db = database22;
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "model.RegistrationFailedException: model.RentingNotAllowedException: hi!" + "'", str10, "model.RegistrationFailedException: model.RentingNotAllowedException: hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "src/Client.csv" + "'", str12, "src/Client.csv");
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(database22);
    }

    @Test
    public void test2022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2022");
        model.LibraryManagementTeam libraryManagementTeam0 = new model.LibraryManagementTeam();
        int int1 = libraryManagementTeam0.ID;
        int int2 = libraryManagementTeam0.accessCode;
        model.ItemManagement itemManagement3 = libraryManagementTeam0.itemManagement;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(itemManagement3);
    }

    @Test
    public void test2023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2023");
        model.Course course0 = new model.Course();
        java.lang.String str1 = course0.code;
        java.lang.String str2 = course0.subject;
        course0.subject = "model.RegistrationFailedException: ";
        java.lang.String str5 = course0.subject;
        course0.year = 7208239;
        java.lang.String str8 = course0.code;
        course0.subject = "model.RentingNotAllowedException: hi!";
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "model.RegistrationFailedException: " + "'", str5, "model.RegistrationFailedException: ");
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test2024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2024");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getBookFilePath();
        model.SearchClient searchClient9 = model.SearchClient.makeSearchClient(database7);
        model.ValidateRegistration validateRegistration10 = new model.ValidateRegistration();
        model.Student student11 = new model.Student();
        student11.viewMyOnlineResource();
        boolean boolean13 = validateRegistration10.validateStaffRegistration((model.Staff) student11);
        model.RentAndReturnSystem rentAndReturnSystem14 = new model.RentAndReturnSystem();
        model.Book book15 = null;
        model.CD cD17 = new model.CD("");
        model.Magazine magazine18 = null;
        java.util.Collection<model.Book> bookCollection19 = null;
        model.Book book20 = null;
        model.CD cD21 = null;
        model.Magazine magazine22 = null;
        model.Book[] bookArray23 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList24 = new java.util.ArrayList<model.Book>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList24, bookArray23);
        model.CD[] cDArray26 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList27 = new java.util.ArrayList<model.CD>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList27, cDArray26);
        model.Magazine[] magazineArray29 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList30 = new java.util.ArrayList<model.Magazine>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList30, magazineArray29);
        model.ItemSearchResult itemSearchResult32 = new model.ItemSearchResult(book20, cD21, magazine22, (java.util.Collection<model.Book>) bookList24, (java.util.Collection<model.CD>) cDList27, (java.util.Collection<model.Magazine>) magazineList30);
        model.Book book33 = null;
        model.CD cD34 = null;
        model.Magazine magazine35 = null;
        model.Book[] bookArray36 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList37 = new java.util.ArrayList<model.Book>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList37, bookArray36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        model.Magazine[] magazineArray42 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList43 = new java.util.ArrayList<model.Magazine>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList43, magazineArray42);
        model.ItemSearchResult itemSearchResult45 = new model.ItemSearchResult(book33, cD34, magazine35, (java.util.Collection<model.Book>) bookList37, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList43);
        itemSearchResult32.similarCD = cDList40;
        model.Book book47 = null;
        model.CD cD48 = null;
        model.Magazine magazine49 = null;
        model.Book[] bookArray50 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList51 = new java.util.ArrayList<model.Book>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList51, bookArray50);
        model.CD[] cDArray53 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList54 = new java.util.ArrayList<model.CD>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList54, cDArray53);
        model.Magazine[] magazineArray56 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList57 = new java.util.ArrayList<model.Magazine>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList57, magazineArray56);
        model.ItemSearchResult itemSearchResult59 = new model.ItemSearchResult(book47, cD48, magazine49, (java.util.Collection<model.Book>) bookList51, (java.util.Collection<model.CD>) cDList54, (java.util.Collection<model.Magazine>) magazineList57);
        model.ItemSearchResult itemSearchResult60 = new model.ItemSearchResult(book15, cD17, magazine18, bookCollection19, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList57);
        cD17.ID = (short) 10;
        cD17.canBePurchased = false;
        boolean boolean65 = cD17.canBePurchased;
        model.Faculty faculty66 = new model.Faculty();
        boolean boolean67 = rentAndReturnSystem14.rentAnItem((model.Item) cD17, (model.Client) faculty66);
        java.lang.String str68 = faculty66.faculty;
        model.RentedItem[] rentedItemArray69 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList70 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList70, rentedItemArray69);
        model.BorrowingManager borrowingManager72 = new model.BorrowingManager(rentedItemList70);
        boolean boolean73 = borrowingManager72.canRent();
        model.Client client74 = borrowingManager72.client;
        faculty66.borrowManager = borrowingManager72;
        java.util.Collection<model.Course> courseCollection76 = faculty66.courses;
        model.NewsletterSubscriptionManager newsletterSubscriptionManager77 = faculty66.newsletterManager;
        boolean boolean78 = validateRegistration10.validateStaffRegistration((model.Staff) faculty66);
        database7.addClient((model.Client) faculty66);
        faculty66.faculty = "model.LoginFailedException: hi!";
        model.NewsletterSubscriptionManager newsletterSubscriptionManager82 = faculty66.newsletterManager;
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/Book.csv" + "'", str8, "src/Book.csv");
        org.junit.Assert.assertNotNull(searchClient9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(bookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(cDArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(magazineArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(bookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(magazineArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(bookArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(cDArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(magazineArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(rentedItemArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(client74);
        org.junit.Assert.assertNull(courseCollection76);
        org.junit.Assert.assertNull(newsletterSubscriptionManager77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(newsletterSubscriptionManager82);
    }

    @Test
    public void test2025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2025");
        model.Faculty faculty0 = new model.Faculty();
        java.lang.String str1 = faculty0.faculty;
        java.lang.String str2 = faculty0.faculty;
        model.Book book3 = null;
        model.CD cD4 = null;
        model.Magazine magazine5 = null;
        model.Book[] bookArray6 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList7 = new java.util.ArrayList<model.Book>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList7, bookArray6);
        model.CD[] cDArray9 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList10 = new java.util.ArrayList<model.CD>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList10, cDArray9);
        model.Magazine[] magazineArray12 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList13 = new java.util.ArrayList<model.Magazine>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList13, magazineArray12);
        model.ItemSearchResult itemSearchResult15 = new model.ItemSearchResult(book3, cD4, magazine5, (java.util.Collection<model.Book>) bookList7, (java.util.Collection<model.CD>) cDList10, (java.util.Collection<model.Magazine>) magazineList13);
        model.CD[] cDArray16 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList17 = new java.util.ArrayList<model.CD>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList17, cDArray16);
        itemSearchResult15.similarCD = cDList17;
        model.Book book20 = null;
        itemSearchResult15.book = book20;
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        itemSearchResult15.similarBooks = bookList26;
        faculty0.textbooks = bookList26;
        model.Faculty faculty37 = new model.Faculty();
        java.lang.String str38 = faculty37.faculty;
        java.lang.String str39 = faculty37.faculty;
        model.Book book40 = null;
        model.CD cD41 = null;
        model.Magazine magazine42 = null;
        model.Book[] bookArray43 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList44 = new java.util.ArrayList<model.Book>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList44, bookArray43);
        model.CD[] cDArray46 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList47 = new java.util.ArrayList<model.CD>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList47, cDArray46);
        model.Magazine[] magazineArray49 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList50 = new java.util.ArrayList<model.Magazine>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList50, magazineArray49);
        model.ItemSearchResult itemSearchResult52 = new model.ItemSearchResult(book40, cD41, magazine42, (java.util.Collection<model.Book>) bookList44, (java.util.Collection<model.CD>) cDList47, (java.util.Collection<model.Magazine>) magazineList50);
        model.CD[] cDArray53 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList54 = new java.util.ArrayList<model.CD>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList54, cDArray53);
        itemSearchResult52.similarCD = cDList54;
        model.Book book57 = null;
        itemSearchResult52.book = book57;
        model.Book book59 = null;
        model.CD cD60 = null;
        model.Magazine magazine61 = null;
        model.Book[] bookArray62 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList63 = new java.util.ArrayList<model.Book>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList63, bookArray62);
        model.CD[] cDArray65 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList66 = new java.util.ArrayList<model.CD>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList66, cDArray65);
        model.Magazine[] magazineArray68 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList69 = new java.util.ArrayList<model.Magazine>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList69, magazineArray68);
        model.ItemSearchResult itemSearchResult71 = new model.ItemSearchResult(book59, cD60, magazine61, (java.util.Collection<model.Book>) bookList63, (java.util.Collection<model.CD>) cDList66, (java.util.Collection<model.Magazine>) magazineList69);
        itemSearchResult52.similarBooks = bookList63;
        faculty37.textbooks = bookList63;
        faculty0.textbooks = bookList63;
        java.lang.String str75 = faculty0.email;
        java.lang.String str76 = faculty0.faculty;
        model.NewsletterSubscriptionManager newsletterSubscriptionManager77 = faculty0.newsletterManager;
        model.StudentOnlineResources studentOnlineResources78 = new model.StudentOnlineResources((model.Client) faculty0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(bookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(cDArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(magazineArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cDArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(bookArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(cDArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(magazineArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(cDArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(bookArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(cDArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(magazineArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(newsletterSubscriptionManager77);
    }

    @Test
    public void test2026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2026");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.Payment payment1 = rentAndReturnSystem0.paymentAPI;
        model.PayMobileWallet payMobileWallet2 = new model.PayMobileWallet();
        payMobileWallet2.amountPay = 100.0f;
        payMobileWallet2.amountPay = (byte) -1;
        rentAndReturnSystem0.paymentAPI = payMobileWallet2;
        payMobileWallet2.amountPay = 0.0d;
        double double10 = payMobileWallet2.amountPay;
        org.junit.Assert.assertNull(payment1);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }

    @Test
    public void test2027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2027");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.Student student5 = new model.Student();
        int int6 = student5.ID;
        model.StudentOnlineResources studentOnlineResources7 = new model.StudentOnlineResources((model.Client) student5);
        model.VirtualBook virtualBook9 = studentOnlineResources7.searchAccessibleBook("");
        model.CD cD11 = new model.CD("");
        model.Magazine magazine12 = null;
        model.Book book13 = null;
        model.CD cD14 = null;
        model.Magazine magazine15 = null;
        model.Book[] bookArray16 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList17 = new java.util.ArrayList<model.Book>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList17, bookArray16);
        model.CD[] cDArray19 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList20 = new java.util.ArrayList<model.CD>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList20, cDArray19);
        model.Magazine[] magazineArray22 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList23 = new java.util.ArrayList<model.Magazine>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList23, magazineArray22);
        model.ItemSearchResult itemSearchResult25 = new model.ItemSearchResult(book13, cD14, magazine15, (java.util.Collection<model.Book>) bookList17, (java.util.Collection<model.CD>) cDList20, (java.util.Collection<model.Magazine>) magazineList23);
        model.Book book26 = null;
        model.CD cD27 = null;
        model.Magazine magazine28 = null;
        model.Book[] bookArray29 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList30 = new java.util.ArrayList<model.Book>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList30, bookArray29);
        model.CD[] cDArray32 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList33 = new java.util.ArrayList<model.CD>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList33, cDArray32);
        model.Magazine[] magazineArray35 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList36 = new java.util.ArrayList<model.Magazine>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList36, magazineArray35);
        model.ItemSearchResult itemSearchResult38 = new model.ItemSearchResult(book26, cD27, magazine28, (java.util.Collection<model.Book>) bookList30, (java.util.Collection<model.CD>) cDList33, (java.util.Collection<model.Magazine>) magazineList36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        itemSearchResult38.similarCD = cDList40;
        model.Book book43 = null;
        model.CD cD44 = null;
        model.Magazine magazine45 = null;
        model.Book[] bookArray46 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList47 = new java.util.ArrayList<model.Book>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList47, bookArray46);
        model.CD[] cDArray49 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList50 = new java.util.ArrayList<model.CD>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList50, cDArray49);
        model.Magazine[] magazineArray52 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList53 = new java.util.ArrayList<model.Magazine>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList53, magazineArray52);
        model.ItemSearchResult itemSearchResult55 = new model.ItemSearchResult(book43, cD44, magazine45, (java.util.Collection<model.Book>) bookList47, (java.util.Collection<model.CD>) cDList50, (java.util.Collection<model.Magazine>) magazineList53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult((model.Book) virtualBook9, cD11, magazine12, (java.util.Collection<model.Book>) bookList17, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList53);
        int int57 = virtualBook9.ID;
        int int58 = virtualBook9.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter59 = null;
        model.PaidNewsletter paidNewsletter60 = null;
        model.VirtualItemSearchResult virtualItemSearchResult61 = new model.VirtualItemSearchResult(virtualBook9, uniProvidedNewsletter59, paidNewsletter60);
        boolean boolean62 = virtualBook9.isBookLost;
        model.VirtualItemContent virtualItemContent63 = virtualBook9.content;
        model.VirtualItemContent virtualItemContent65 = new model.VirtualItemContent("hi!");
        java.lang.String str66 = virtualItemContent65.link;
        java.lang.String str68 = virtualItemContent65.getContent("");
        java.lang.String str70 = virtualItemContent65.getContent("model.RegistrationFailedException: ");
        virtualBook9.content = virtualItemContent65;
        boolean boolean72 = virtualBook9.isBookLost;
        virtualBook9.ID = 7680716;
        java.lang.String str75 = virtualBook9.author;
        java.lang.String str76 = studentOnlineResources2.readVirtualItem((model.VirtualItem) virtualBook9);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(virtualBook9);
        org.junit.Assert.assertNotNull(bookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(cDArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(magazineArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(bookArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(cDArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(magazineArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(bookArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(cDArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(magazineArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 20 + "'", int58 == 20);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(virtualItemContent63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(str76);
    }

    @Test
    public void test2028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2028");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.RequestForum requestForum1 = model.RequestForum.createRequestForum();
        model.Request request2 = new model.Request();
        request2.title = "";
        java.lang.String str5 = requestForum1.makeARequest(request2);
        int int6 = requestForum0.assessBooksPriority(request2);
        model.LibraryManagementTeam libraryManagementTeam7 = new model.LibraryManagementTeam();
        int int8 = libraryManagementTeam7.ID;
        int int9 = libraryManagementTeam7.accessCode;
        model.Item item10 = null;
        libraryManagementTeam7.addAnItem(item10);
        java.util.ArrayList<model.Item> itemList12 = libraryManagementTeam7.items;
        requestForum0.managementTeam = libraryManagementTeam7;
        model.RequestForum requestForum14 = model.RequestForum.createRequestForum();
        model.RequestForum requestForum15 = model.RequestForum.createRequestForum();
        model.Request request16 = new model.Request();
        request16.title = "";
        java.lang.String str19 = requestForum15.makeARequest(request16);
        int int20 = requestForum14.assessBooksPriority(request16);
        model.Client client21 = request16.requestee;
        java.lang.String str22 = requestForum0.makeARequest(request16);
        model.Request request23 = new model.Request();
        java.lang.String str24 = request23.type;
        model.Database database32 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database32;
        model.SearchVirtualItem searchVirtualItem34 = new model.SearchVirtualItem(database32);
        model.RentAndReturnSystem rentAndReturnSystem35 = new model.RentAndReturnSystem();
        model.Book book36 = null;
        model.CD cD38 = new model.CD("");
        model.Magazine magazine39 = null;
        java.util.Collection<model.Book> bookCollection40 = null;
        model.Book book41 = null;
        model.CD cD42 = null;
        model.Magazine magazine43 = null;
        model.Book[] bookArray44 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList45 = new java.util.ArrayList<model.Book>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList45, bookArray44);
        model.CD[] cDArray47 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList48 = new java.util.ArrayList<model.CD>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList48, cDArray47);
        model.Magazine[] magazineArray50 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList51 = new java.util.ArrayList<model.Magazine>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList51, magazineArray50);
        model.ItemSearchResult itemSearchResult53 = new model.ItemSearchResult(book41, cD42, magazine43, (java.util.Collection<model.Book>) bookList45, (java.util.Collection<model.CD>) cDList48, (java.util.Collection<model.Magazine>) magazineList51);
        model.Book book54 = null;
        model.CD cD55 = null;
        model.Magazine magazine56 = null;
        model.Book[] bookArray57 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList58 = new java.util.ArrayList<model.Book>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList58, bookArray57);
        model.CD[] cDArray60 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList61 = new java.util.ArrayList<model.CD>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList61, cDArray60);
        model.Magazine[] magazineArray63 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList64 = new java.util.ArrayList<model.Magazine>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList64, magazineArray63);
        model.ItemSearchResult itemSearchResult66 = new model.ItemSearchResult(book54, cD55, magazine56, (java.util.Collection<model.Book>) bookList58, (java.util.Collection<model.CD>) cDList61, (java.util.Collection<model.Magazine>) magazineList64);
        itemSearchResult53.similarCD = cDList61;
        model.Book book68 = null;
        model.CD cD69 = null;
        model.Magazine magazine70 = null;
        model.Book[] bookArray71 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList72 = new java.util.ArrayList<model.Book>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList72, bookArray71);
        model.CD[] cDArray74 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList75 = new java.util.ArrayList<model.CD>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList75, cDArray74);
        model.Magazine[] magazineArray77 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList78 = new java.util.ArrayList<model.Magazine>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList78, magazineArray77);
        model.ItemSearchResult itemSearchResult80 = new model.ItemSearchResult(book68, cD69, magazine70, (java.util.Collection<model.Book>) bookList72, (java.util.Collection<model.CD>) cDList75, (java.util.Collection<model.Magazine>) magazineList78);
        model.ItemSearchResult itemSearchResult81 = new model.ItemSearchResult(book36, cD38, magazine39, bookCollection40, (java.util.Collection<model.CD>) cDList61, (java.util.Collection<model.Magazine>) magazineList78);
        cD38.ID = (short) 10;
        cD38.canBePurchased = false;
        boolean boolean86 = cD38.canBePurchased;
        model.Faculty faculty87 = new model.Faculty();
        boolean boolean88 = rentAndReturnSystem35.rentAnItem((model.Item) cD38, (model.Client) faculty87);
        java.lang.String str89 = faculty87.faculty;
        database32.addClient((model.Client) faculty87);
        request23.requestee = faculty87;
        java.lang.String str92 = requestForum0.makeARequest(request23);
        model.Request request93 = null;
        java.lang.String str94 = requestForum0.makeARequest(request93);
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertNotNull(requestForum1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(itemList12);
        org.junit.Assert.assertNotNull(requestForum14);
        org.junit.Assert.assertNotNull(requestForum15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(client21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(database32);
        org.junit.Assert.assertNotNull(bookArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(cDArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(magazineArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(bookArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(cDArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(magazineArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(bookArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(cDArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(magazineArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "" + "'", str92, "");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "" + "'", str94, "");
    }

    @Test
    public void test2029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2029");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getBookFilePath();
        model.SearchClient searchClient9 = model.SearchClient.makeSearchClient(database7);
        model.ValidateRegistration validateRegistration10 = new model.ValidateRegistration();
        model.Student student11 = new model.Student();
        student11.viewMyOnlineResource();
        boolean boolean13 = validateRegistration10.validateStaffRegistration((model.Staff) student11);
        model.RentAndReturnSystem rentAndReturnSystem14 = new model.RentAndReturnSystem();
        model.Book book15 = null;
        model.CD cD17 = new model.CD("");
        model.Magazine magazine18 = null;
        java.util.Collection<model.Book> bookCollection19 = null;
        model.Book book20 = null;
        model.CD cD21 = null;
        model.Magazine magazine22 = null;
        model.Book[] bookArray23 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList24 = new java.util.ArrayList<model.Book>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList24, bookArray23);
        model.CD[] cDArray26 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList27 = new java.util.ArrayList<model.CD>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList27, cDArray26);
        model.Magazine[] magazineArray29 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList30 = new java.util.ArrayList<model.Magazine>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList30, magazineArray29);
        model.ItemSearchResult itemSearchResult32 = new model.ItemSearchResult(book20, cD21, magazine22, (java.util.Collection<model.Book>) bookList24, (java.util.Collection<model.CD>) cDList27, (java.util.Collection<model.Magazine>) magazineList30);
        model.Book book33 = null;
        model.CD cD34 = null;
        model.Magazine magazine35 = null;
        model.Book[] bookArray36 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList37 = new java.util.ArrayList<model.Book>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList37, bookArray36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        model.Magazine[] magazineArray42 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList43 = new java.util.ArrayList<model.Magazine>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList43, magazineArray42);
        model.ItemSearchResult itemSearchResult45 = new model.ItemSearchResult(book33, cD34, magazine35, (java.util.Collection<model.Book>) bookList37, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList43);
        itemSearchResult32.similarCD = cDList40;
        model.Book book47 = null;
        model.CD cD48 = null;
        model.Magazine magazine49 = null;
        model.Book[] bookArray50 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList51 = new java.util.ArrayList<model.Book>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList51, bookArray50);
        model.CD[] cDArray53 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList54 = new java.util.ArrayList<model.CD>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList54, cDArray53);
        model.Magazine[] magazineArray56 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList57 = new java.util.ArrayList<model.Magazine>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList57, magazineArray56);
        model.ItemSearchResult itemSearchResult59 = new model.ItemSearchResult(book47, cD48, magazine49, (java.util.Collection<model.Book>) bookList51, (java.util.Collection<model.CD>) cDList54, (java.util.Collection<model.Magazine>) magazineList57);
        model.ItemSearchResult itemSearchResult60 = new model.ItemSearchResult(book15, cD17, magazine18, bookCollection19, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList57);
        cD17.ID = (short) 10;
        cD17.canBePurchased = false;
        boolean boolean65 = cD17.canBePurchased;
        model.Faculty faculty66 = new model.Faculty();
        boolean boolean67 = rentAndReturnSystem14.rentAnItem((model.Item) cD17, (model.Client) faculty66);
        java.lang.String str68 = faculty66.faculty;
        model.RentedItem[] rentedItemArray69 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList70 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList70, rentedItemArray69);
        model.BorrowingManager borrowingManager72 = new model.BorrowingManager(rentedItemList70);
        boolean boolean73 = borrowingManager72.canRent();
        model.Client client74 = borrowingManager72.client;
        faculty66.borrowManager = borrowingManager72;
        java.util.Collection<model.Course> courseCollection76 = faculty66.courses;
        model.NewsletterSubscriptionManager newsletterSubscriptionManager77 = faculty66.newsletterManager;
        boolean boolean78 = validateRegistration10.validateStaffRegistration((model.Staff) faculty66);
        database7.addClient((model.Client) faculty66);
        java.lang.String str80 = database7.getClientFilePath();
        int int81 = database7.getRandomID();
        java.lang.String str82 = database7.getMagazineFilePath();
        model.Client client84 = database7.getClient("model.RegistrationFailedException: src/Book.csv");
        model.Login login85 = new model.Login(database7);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/Book.csv" + "'", str8, "src/Book.csv");
        org.junit.Assert.assertNotNull(searchClient9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(bookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(cDArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(magazineArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(bookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(magazineArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(bookArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(cDArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(magazineArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(rentedItemArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(client74);
        org.junit.Assert.assertNull(courseCollection76);
        org.junit.Assert.assertNull(newsletterSubscriptionManager77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "src/Client.csv" + "'", str80, "src/Client.csv");
// flaky:         org.junit.Assert.assertTrue("'" + int81 + "' != '" + 2718112 + "'", int81 == 2718112);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "src/Magazine.csv" + "'", str82, "src/Magazine.csv");
        org.junit.Assert.assertNotNull(client84);
    }

    @Test
    public void test2030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2030");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: src/Magazine.csv", "", "model.RegistrationFailedException: model.RentingNotAllowedException: hi!", "src/Client.csv", "src/Magazine.csv", "model.LoginFailedException: hi!", "src/Magazine.csv");
        org.junit.Assert.assertNotNull(database7);
    }

    @Test
    public void test2031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2031");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.Book book1 = null;
        model.CD cD3 = new model.CD("");
        model.Magazine magazine4 = null;
        java.util.Collection<model.Book> bookCollection5 = null;
        model.Book book6 = null;
        model.CD cD7 = null;
        model.Magazine magazine8 = null;
        model.Book[] bookArray9 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList10 = new java.util.ArrayList<model.Book>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList10, bookArray9);
        model.CD[] cDArray12 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList13 = new java.util.ArrayList<model.CD>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList13, cDArray12);
        model.Magazine[] magazineArray15 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList16 = new java.util.ArrayList<model.Magazine>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList16, magazineArray15);
        model.ItemSearchResult itemSearchResult18 = new model.ItemSearchResult(book6, cD7, magazine8, (java.util.Collection<model.Book>) bookList10, (java.util.Collection<model.CD>) cDList13, (java.util.Collection<model.Magazine>) magazineList16);
        model.Book book19 = null;
        model.CD cD20 = null;
        model.Magazine magazine21 = null;
        model.Book[] bookArray22 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList23 = new java.util.ArrayList<model.Book>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList23, bookArray22);
        model.CD[] cDArray25 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList26 = new java.util.ArrayList<model.CD>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList26, cDArray25);
        model.Magazine[] magazineArray28 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList29 = new java.util.ArrayList<model.Magazine>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList29, magazineArray28);
        model.ItemSearchResult itemSearchResult31 = new model.ItemSearchResult(book19, cD20, magazine21, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList29);
        itemSearchResult18.similarCD = cDList26;
        model.Book book33 = null;
        model.CD cD34 = null;
        model.Magazine magazine35 = null;
        model.Book[] bookArray36 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList37 = new java.util.ArrayList<model.Book>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList37, bookArray36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        model.Magazine[] magazineArray42 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList43 = new java.util.ArrayList<model.Magazine>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList43, magazineArray42);
        model.ItemSearchResult itemSearchResult45 = new model.ItemSearchResult(book33, cD34, magazine35, (java.util.Collection<model.Book>) bookList37, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book1, cD3, magazine4, bookCollection5, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList43);
        cD3.ID = (short) 10;
        cD3.canBePurchased = false;
        boolean boolean51 = cD3.canBePurchased;
        model.Faculty faculty52 = new model.Faculty();
        boolean boolean53 = rentAndReturnSystem0.rentAnItem((model.Item) cD3, (model.Client) faculty52);
        java.lang.String str54 = faculty52.faculty;
        model.RentedItem[] rentedItemArray55 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList56 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList56, rentedItemArray55);
        model.BorrowingManager borrowingManager58 = new model.BorrowingManager(rentedItemList56);
        boolean boolean59 = borrowingManager58.canRent();
        model.Client client60 = borrowingManager58.client;
        faculty52.borrowManager = borrowingManager58;
        model.RentedItem[] rentedItemArray62 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList63 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList63, rentedItemArray62);
        model.BorrowingManager borrowingManager65 = new model.BorrowingManager(rentedItemList63);
        borrowingManager58.physicalItemBorrowed = rentedItemList63;
        model.BorrowingManager borrowingManager67 = new model.BorrowingManager(rentedItemList63);
        model.BorrowingManager borrowingManager68 = new model.BorrowingManager(rentedItemList63);
        model.RentedItem[] rentedItemArray69 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList70 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList70, rentedItemArray69);
        model.BorrowingManager borrowingManager72 = new model.BorrowingManager(rentedItemList70);
        model.RentedItem[] rentedItemArray73 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList74 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList74, rentedItemArray73);
        model.BorrowingManager borrowingManager76 = new model.BorrowingManager(rentedItemList74);
        borrowingManager72.physicalItemBorrowed = rentedItemList74;
        model.BorrowingManager borrowingManager78 = new model.BorrowingManager(rentedItemList74);
        model.BorrowingManager borrowingManager79 = new model.BorrowingManager(rentedItemList74);
        borrowingManager68.physicalItemBorrowed = rentedItemList74;
        boolean boolean81 = borrowingManager68.canRent();
        model.Client client82 = borrowingManager68.client;
        org.junit.Assert.assertNotNull(bookArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(cDArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(magazineArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(bookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(magazineArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(bookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(magazineArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(rentedItemArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(client60);
        org.junit.Assert.assertNotNull(rentedItemArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(rentedItemArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(rentedItemArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(client82);
    }

    @Test
    public void test2032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2032");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.VirtualItemContent virtualItemContent5 = virtualBook4.content;
        model.Student student6 = new model.Student();
        int int7 = student6.ID;
        model.StudentOnlineResources studentOnlineResources8 = new model.StudentOnlineResources((model.Client) student6);
        model.VirtualBook virtualBook10 = studentOnlineResources8.searchAccessibleBook("");
        model.CD cD12 = new model.CD("");
        model.Magazine magazine13 = null;
        model.Book book14 = null;
        model.CD cD15 = null;
        model.Magazine magazine16 = null;
        model.Book[] bookArray17 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList18 = new java.util.ArrayList<model.Book>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList18, bookArray17);
        model.CD[] cDArray20 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList21 = new java.util.ArrayList<model.CD>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList21, cDArray20);
        model.Magazine[] magazineArray23 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList24 = new java.util.ArrayList<model.Magazine>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList24, magazineArray23);
        model.ItemSearchResult itemSearchResult26 = new model.ItemSearchResult(book14, cD15, magazine16, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList21, (java.util.Collection<model.Magazine>) magazineList24);
        model.Book book27 = null;
        model.CD cD28 = null;
        model.Magazine magazine29 = null;
        model.Book[] bookArray30 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList31 = new java.util.ArrayList<model.Book>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList31, bookArray30);
        model.CD[] cDArray33 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList34 = new java.util.ArrayList<model.CD>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList34, cDArray33);
        model.Magazine[] magazineArray36 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList37 = new java.util.ArrayList<model.Magazine>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList37, magazineArray36);
        model.ItemSearchResult itemSearchResult39 = new model.ItemSearchResult(book27, cD28, magazine29, (java.util.Collection<model.Book>) bookList31, (java.util.Collection<model.CD>) cDList34, (java.util.Collection<model.Magazine>) magazineList37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        itemSearchResult39.similarCD = cDList41;
        model.Book book44 = null;
        model.CD cD45 = null;
        model.Magazine magazine46 = null;
        model.Book[] bookArray47 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList48 = new java.util.ArrayList<model.Book>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList48, bookArray47);
        model.CD[] cDArray50 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList51 = new java.util.ArrayList<model.CD>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList51, cDArray50);
        model.Magazine[] magazineArray53 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList54 = new java.util.ArrayList<model.Magazine>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList54, magazineArray53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult(book44, cD45, magazine46, (java.util.Collection<model.Book>) bookList48, (java.util.Collection<model.CD>) cDList51, (java.util.Collection<model.Magazine>) magazineList54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult((model.Book) virtualBook10, cD12, magazine13, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList54);
        int int58 = virtualBook10.ID;
        int int59 = virtualBook10.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter60 = null;
        model.PaidNewsletter paidNewsletter61 = null;
        model.VirtualItemSearchResult virtualItemSearchResult62 = new model.VirtualItemSearchResult(virtualBook10, uniProvidedNewsletter60, paidNewsletter61);
        model.PaidNewsletter paidNewsletter63 = virtualItemSearchResult62.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter64 = new model.UniProvidedNewsletter();
        virtualItemSearchResult62.setUniNewsletter(uniProvidedNewsletter64);
        java.lang.String str66 = uniProvidedNewsletter64.title;
        model.PaidNewsletter paidNewsletter67 = null;
        model.VirtualItemSearchResult virtualItemSearchResult68 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter64, paidNewsletter67);
        uniProvidedNewsletter64.ID = ' ';
        uniProvidedNewsletter64.cost = (byte) 1;
        int int73 = uniProvidedNewsletter64.ID;
        java.lang.String str74 = uniProvidedNewsletter64.title;
        float float75 = uniProvidedNewsletter64.cost;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNull(virtualItemContent5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(virtualBook10);
        org.junit.Assert.assertNotNull(bookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(cDArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(magazineArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(bookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(magazineArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(bookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(cDArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(magazineArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 20 + "'", int59 == 20);
        org.junit.Assert.assertNull(paidNewsletter63);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 32 + "'", int73 == 32);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + 1.0f + "'", float75 == 1.0f);
    }

    @Test
    public void test2033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2033");
        model.Visitor visitor0 = new model.Visitor();
        model.StudentOnlineResources studentOnlineResources1 = new model.StudentOnlineResources((model.Client) visitor0);
        model.VirtualBook virtualBook3 = studentOnlineResources1.searchAccessibleBook("src/Book.csv");
        model.ItemManagement itemManagement4 = new model.ItemManagement();
        model.Database database5 = null;
        itemManagement4.database = database5;
        model.Item item8 = itemManagement4.selectAnItemFromDatabase((int) '#');
        model.Database database16 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str17 = database16.getVirtualBookFilePath();
        model.Database.database = database16;
        java.lang.String str19 = database16.virtualItemFilePath;
        java.lang.String str20 = database16.getBookFilePath();
        database16.itemPath = "src/Magazine.csv";
        itemManagement4.database = database16;
        model.Student student24 = new model.Student();
        int int25 = student24.ID;
        model.StudentOnlineResources studentOnlineResources26 = new model.StudentOnlineResources((model.Client) student24);
        model.VirtualBook virtualBook28 = studentOnlineResources26.searchAccessibleBook("");
        model.CD cD30 = new model.CD("");
        model.Magazine magazine31 = null;
        model.Book book32 = null;
        model.CD cD33 = null;
        model.Magazine magazine34 = null;
        model.Book[] bookArray35 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList36 = new java.util.ArrayList<model.Book>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList36, bookArray35);
        model.CD[] cDArray38 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList39 = new java.util.ArrayList<model.CD>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList39, cDArray38);
        model.Magazine[] magazineArray41 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList42 = new java.util.ArrayList<model.Magazine>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList42, magazineArray41);
        model.ItemSearchResult itemSearchResult44 = new model.ItemSearchResult(book32, cD33, magazine34, (java.util.Collection<model.Book>) bookList36, (java.util.Collection<model.CD>) cDList39, (java.util.Collection<model.Magazine>) magazineList42);
        model.Book book45 = null;
        model.CD cD46 = null;
        model.Magazine magazine47 = null;
        model.Book[] bookArray48 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList49 = new java.util.ArrayList<model.Book>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList49, bookArray48);
        model.CD[] cDArray51 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList52 = new java.util.ArrayList<model.CD>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList52, cDArray51);
        model.Magazine[] magazineArray54 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList55 = new java.util.ArrayList<model.Magazine>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList55, magazineArray54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult(book45, cD46, magazine47, (java.util.Collection<model.Book>) bookList49, (java.util.Collection<model.CD>) cDList52, (java.util.Collection<model.Magazine>) magazineList55);
        model.CD[] cDArray58 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList59 = new java.util.ArrayList<model.CD>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList59, cDArray58);
        itemSearchResult57.similarCD = cDList59;
        model.Book book62 = null;
        model.CD cD63 = null;
        model.Magazine magazine64 = null;
        model.Book[] bookArray65 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList66 = new java.util.ArrayList<model.Book>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList66, bookArray65);
        model.CD[] cDArray68 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList69 = new java.util.ArrayList<model.CD>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList69, cDArray68);
        model.Magazine[] magazineArray71 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList72 = new java.util.ArrayList<model.Magazine>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList72, magazineArray71);
        model.ItemSearchResult itemSearchResult74 = new model.ItemSearchResult(book62, cD63, magazine64, (java.util.Collection<model.Book>) bookList66, (java.util.Collection<model.CD>) cDList69, (java.util.Collection<model.Magazine>) magazineList72);
        model.ItemSearchResult itemSearchResult75 = new model.ItemSearchResult((model.Book) virtualBook28, cD30, magazine31, (java.util.Collection<model.Book>) bookList36, (java.util.Collection<model.CD>) cDList59, (java.util.Collection<model.Magazine>) magazineList72);
        int int76 = virtualBook28.ID;
        int int77 = virtualBook28.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter78 = null;
        model.PaidNewsletter paidNewsletter79 = null;
        model.VirtualItemSearchResult virtualItemSearchResult80 = new model.VirtualItemSearchResult(virtualBook28, uniProvidedNewsletter78, paidNewsletter79);
        model.PaidNewsletter paidNewsletter81 = virtualItemSearchResult80.getPaidNewsletter();
        model.PaidNewsletter paidNewsletter82 = virtualItemSearchResult80.getPaidNewsletter();
        model.VirtualBook virtualBook83 = virtualItemSearchResult80.getVirtualBook();
        model.UniProvidedNewsletter uniProvidedNewsletter84 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter84.title = "hi!";
        virtualItemSearchResult80.setUniNewsletter(uniProvidedNewsletter84);
        model.VirtualBook virtualBook88 = virtualItemSearchResult80.getVirtualBook();
        itemManagement4.disableAnItem((model.Item) virtualBook88);
        java.util.Calendar calendar90 = null;
        virtualBook88.date = calendar90;
        java.lang.String str92 = studentOnlineResources1.readVirtualItem((model.VirtualItem) virtualBook88);
        org.junit.Assert.assertNotNull(virtualBook3);
        org.junit.Assert.assertNull(item8);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "src/VirtualBook.csv" + "'", str17, "src/VirtualBook.csv");
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "model.RegistrationFailedException: model.RentingNotAllowedException: hi!" + "'", str19, "model.RegistrationFailedException: model.RentingNotAllowedException: hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "src/Book.csv" + "'", str20, "src/Book.csv");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(virtualBook28);
        org.junit.Assert.assertNotNull(bookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(cDArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(magazineArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(bookArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(cDArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(magazineArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(cDArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(bookArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(cDArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(magazineArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 20 + "'", int77 == 20);
        org.junit.Assert.assertNull(paidNewsletter81);
        org.junit.Assert.assertNull(paidNewsletter82);
        org.junit.Assert.assertNotNull(virtualBook83);
        org.junit.Assert.assertNotNull(virtualBook88);
        org.junit.Assert.assertNull(str92);
    }

    @Test
    public void test2034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2034");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.StudentOnlineResources studentOnlineResources3 = new model.StudentOnlineResources((model.Client) student0);
        model.RentedItem[] rentedItemArray4 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList5 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList5, rentedItemArray4);
        model.BorrowingManager borrowingManager7 = new model.BorrowingManager(rentedItemList5);
        model.Visitor visitor8 = new model.Visitor();
        visitor8.email = "hi!";
        borrowingManager7.client = visitor8;
        studentOnlineResources3.client = visitor8;
        model.Student student13 = new model.Student();
        int int14 = student13.ID;
        model.StudentOnlineResources studentOnlineResources15 = new model.StudentOnlineResources((model.Client) student13);
        model.VirtualBook virtualBook17 = studentOnlineResources15.searchAccessibleBook("");
        java.lang.String str18 = virtualBook17.location;
        model.VirtualItemContent virtualItemContent19 = virtualBook17.content;
        java.lang.String str20 = studentOnlineResources3.readVirtualItem((model.VirtualItem) virtualBook17);
        model.ItemManagement itemManagement21 = new model.ItemManagement();
        model.Item item23 = itemManagement21.selectAnItemFromDatabase((int) (short) 0);
        model.Database database24 = itemManagement21.database;
        model.BuySpecialItems buySpecialItems25 = new model.BuySpecialItems();
        model.CD cD27 = new model.CD("");
        int int28 = cD27.ID;
        boolean boolean30 = buySpecialItems25.buyAnItem((model.Item) cD27, (double) (short) 0);
        itemManagement21.addAnItem((model.Item) cD27);
        model.Student student32 = new model.Student();
        int int33 = student32.ID;
        model.StudentOnlineResources studentOnlineResources34 = new model.StudentOnlineResources((model.Client) student32);
        model.VirtualBook virtualBook36 = studentOnlineResources34.searchAccessibleBook("");
        model.CD cD38 = new model.CD("");
        model.Magazine magazine39 = null;
        model.Book book40 = null;
        model.CD cD41 = null;
        model.Magazine magazine42 = null;
        model.Book[] bookArray43 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList44 = new java.util.ArrayList<model.Book>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList44, bookArray43);
        model.CD[] cDArray46 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList47 = new java.util.ArrayList<model.CD>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList47, cDArray46);
        model.Magazine[] magazineArray49 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList50 = new java.util.ArrayList<model.Magazine>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList50, magazineArray49);
        model.ItemSearchResult itemSearchResult52 = new model.ItemSearchResult(book40, cD41, magazine42, (java.util.Collection<model.Book>) bookList44, (java.util.Collection<model.CD>) cDList47, (java.util.Collection<model.Magazine>) magazineList50);
        model.Book book53 = null;
        model.CD cD54 = null;
        model.Magazine magazine55 = null;
        model.Book[] bookArray56 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList57 = new java.util.ArrayList<model.Book>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList57, bookArray56);
        model.CD[] cDArray59 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList60 = new java.util.ArrayList<model.CD>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList60, cDArray59);
        model.Magazine[] magazineArray62 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList63 = new java.util.ArrayList<model.Magazine>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList63, magazineArray62);
        model.ItemSearchResult itemSearchResult65 = new model.ItemSearchResult(book53, cD54, magazine55, (java.util.Collection<model.Book>) bookList57, (java.util.Collection<model.CD>) cDList60, (java.util.Collection<model.Magazine>) magazineList63);
        model.CD[] cDArray66 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList67 = new java.util.ArrayList<model.CD>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList67, cDArray66);
        itemSearchResult65.similarCD = cDList67;
        model.Book book70 = null;
        model.CD cD71 = null;
        model.Magazine magazine72 = null;
        model.Book[] bookArray73 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList74 = new java.util.ArrayList<model.Book>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList74, bookArray73);
        model.CD[] cDArray76 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList77 = new java.util.ArrayList<model.CD>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList77, cDArray76);
        model.Magazine[] magazineArray79 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList80 = new java.util.ArrayList<model.Magazine>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList80, magazineArray79);
        model.ItemSearchResult itemSearchResult82 = new model.ItemSearchResult(book70, cD71, magazine72, (java.util.Collection<model.Book>) bookList74, (java.util.Collection<model.CD>) cDList77, (java.util.Collection<model.Magazine>) magazineList80);
        model.ItemSearchResult itemSearchResult83 = new model.ItemSearchResult((model.Book) virtualBook36, cD38, magazine39, (java.util.Collection<model.Book>) bookList44, (java.util.Collection<model.CD>) cDList67, (java.util.Collection<model.Magazine>) magazineList80);
        int int84 = virtualBook36.ID;
        int int85 = virtualBook36.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter86 = null;
        model.PaidNewsletter paidNewsletter87 = null;
        model.VirtualItemSearchResult virtualItemSearchResult88 = new model.VirtualItemSearchResult(virtualBook36, uniProvidedNewsletter86, paidNewsletter87);
        model.PaidNewsletter paidNewsletter89 = virtualItemSearchResult88.getPaidNewsletter();
        model.PaidNewsletter paidNewsletter90 = virtualItemSearchResult88.getPaidNewsletter();
        model.VirtualBook virtualBook91 = virtualItemSearchResult88.getVirtualBook();
        itemManagement21.enableAnItem((model.Item) virtualBook91);
        java.lang.String str93 = studentOnlineResources3.readVirtualItem((model.VirtualItem) virtualBook91);
        virtualBook91.isBookLost = false;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(rentedItemArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(virtualBook17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(virtualItemContent19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(item23);
        org.junit.Assert.assertNull(database24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(virtualBook36);
        org.junit.Assert.assertNotNull(bookArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(cDArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(magazineArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(bookArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(cDArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(magazineArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(cDArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(bookArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(cDArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(magazineArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 20 + "'", int85 == 20);
        org.junit.Assert.assertNull(paidNewsletter89);
        org.junit.Assert.assertNull(paidNewsletter90);
        org.junit.Assert.assertNotNull(virtualBook91);
        org.junit.Assert.assertNull(str93);
    }

    @Test
    public void test2035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2035");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        java.util.Iterator<model.VirtualItem> virtualItemItor3 = studentOnlineResources2.iterator();
        model.VirtualItem virtualItem4 = null;
        java.lang.String str5 = studentOnlineResources2.readVirtualItem(virtualItem4);
        model.Student student6 = new model.Student();
        int int7 = student6.ID;
        model.StudentOnlineResources studentOnlineResources8 = new model.StudentOnlineResources((model.Client) student6);
        model.VirtualBook virtualBook10 = studentOnlineResources8.searchAccessibleBook("");
        model.CD cD12 = new model.CD("");
        model.Magazine magazine13 = null;
        model.Book book14 = null;
        model.CD cD15 = null;
        model.Magazine magazine16 = null;
        model.Book[] bookArray17 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList18 = new java.util.ArrayList<model.Book>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList18, bookArray17);
        model.CD[] cDArray20 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList21 = new java.util.ArrayList<model.CD>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList21, cDArray20);
        model.Magazine[] magazineArray23 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList24 = new java.util.ArrayList<model.Magazine>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList24, magazineArray23);
        model.ItemSearchResult itemSearchResult26 = new model.ItemSearchResult(book14, cD15, magazine16, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList21, (java.util.Collection<model.Magazine>) magazineList24);
        model.Book book27 = null;
        model.CD cD28 = null;
        model.Magazine magazine29 = null;
        model.Book[] bookArray30 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList31 = new java.util.ArrayList<model.Book>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList31, bookArray30);
        model.CD[] cDArray33 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList34 = new java.util.ArrayList<model.CD>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList34, cDArray33);
        model.Magazine[] magazineArray36 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList37 = new java.util.ArrayList<model.Magazine>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList37, magazineArray36);
        model.ItemSearchResult itemSearchResult39 = new model.ItemSearchResult(book27, cD28, magazine29, (java.util.Collection<model.Book>) bookList31, (java.util.Collection<model.CD>) cDList34, (java.util.Collection<model.Magazine>) magazineList37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        itemSearchResult39.similarCD = cDList41;
        model.Book book44 = null;
        model.CD cD45 = null;
        model.Magazine magazine46 = null;
        model.Book[] bookArray47 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList48 = new java.util.ArrayList<model.Book>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList48, bookArray47);
        model.CD[] cDArray50 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList51 = new java.util.ArrayList<model.CD>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList51, cDArray50);
        model.Magazine[] magazineArray53 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList54 = new java.util.ArrayList<model.Magazine>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList54, magazineArray53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult(book44, cD45, magazine46, (java.util.Collection<model.Book>) bookList48, (java.util.Collection<model.CD>) cDList51, (java.util.Collection<model.Magazine>) magazineList54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult((model.Book) virtualBook10, cD12, magazine13, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList54);
        int int58 = virtualBook10.ID;
        int int59 = virtualBook10.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter60 = null;
        model.PaidNewsletter paidNewsletter61 = null;
        model.VirtualItemSearchResult virtualItemSearchResult62 = new model.VirtualItemSearchResult(virtualBook10, uniProvidedNewsletter60, paidNewsletter61);
        java.lang.String str63 = studentOnlineResources2.readVirtualItem((model.VirtualItem) paidNewsletter61);
        model.UniProvidedNewsletter uniProvidedNewsletter64 = new model.UniProvidedNewsletter();
        java.lang.String str65 = studentOnlineResources2.readVirtualItem((model.VirtualItem) uniProvidedNewsletter64);
        model.VirtualBook virtualBook67 = studentOnlineResources2.searchAccessibleBook("hi!");
        java.util.Iterator<model.VirtualItem> virtualItemItor68 = studentOnlineResources2.iterator();
        java.util.Iterator<model.VirtualItem> virtualItemItor69 = studentOnlineResources2.iterator();
        model.VirtualBook virtualBook71 = studentOnlineResources2.searchAccessibleBook("model.RegistrationFailedException: ");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(virtualItemItor3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(virtualBook10);
        org.junit.Assert.assertNotNull(bookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(cDArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(magazineArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(bookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(magazineArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(bookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(cDArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(magazineArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 20 + "'", int59 == 20);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(virtualBook67);
        org.junit.Assert.assertNull(virtualItemItor68);
        org.junit.Assert.assertNull(virtualItemItor69);
        org.junit.Assert.assertNotNull(virtualBook71);
    }

    @Test
    public void test2036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2036");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.Student student5 = new model.Student();
        int int6 = student5.ID;
        model.StudentOnlineResources studentOnlineResources7 = new model.StudentOnlineResources((model.Client) student5);
        student5.ID = '#';
        java.lang.String str10 = student5.email;
        newsletterSubscriptionManager3.client = student5;
        model.Newsletter[] newsletterArray12 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList13 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList13, newsletterArray12);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager15 = new model.NewsletterSubscriptionManager(newsletterList13);
        newsletterSubscriptionManager3.newsletterSubscribed = newsletterList13;
        model.NewsletterSubscriptionManager newsletterSubscriptionManager17 = new model.NewsletterSubscriptionManager(newsletterList13);
        model.Visitor visitor18 = new model.Visitor();
        model.VirtualBook[] virtualBookArray19 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList20 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList20, virtualBookArray19);
        visitor18.virtualBooksAvailable = virtualBookList20;
        visitor18.viewMyOnlineResource();
        newsletterSubscriptionManager17.client = visitor18;
        visitor18.viewMyOnlineResource();
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(newsletterArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(virtualBookArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test2037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2037");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.util.ArrayList<java.lang.String> strList8 = database7.getAllItems();
        java.util.ArrayList<java.lang.String> strList9 = database7.getAllItems();
        java.util.List<java.lang.String> strList11 = model.SearchStrategy.findMostSimilarStrings((java.util.Collection<java.lang.String>) strList9, "");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList11);
    }

    @Test
    public void test2038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2038");
        model.Database database7 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database7;
        model.SearchVirtualItem searchVirtualItem9 = new model.SearchVirtualItem(database7);
        model.UniProvidedNewsletter uniProvidedNewsletter11 = searchVirtualItem9.getUniNewsletter("");
        model.UniProvidedNewsletter uniProvidedNewsletter13 = searchVirtualItem9.getUniNewsletter("hi!");
        model.VirtualItemSearchResult virtualItemSearchResult15 = searchVirtualItem9.searchVirtualItem("src/Magazine.csv");
        model.UniProvidedNewsletter uniProvidedNewsletter17 = searchVirtualItem9.getUniNewsletter("");
        model.VirtualItemSearchResult virtualItemSearchResult19 = searchVirtualItem9.searchVirtualItem("model.RegistrationFailedException: ");
        model.PaidNewsletter paidNewsletter21 = searchVirtualItem9.getPaidNewsletter("src/CD.csv");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNull(uniProvidedNewsletter11);
        org.junit.Assert.assertNull(uniProvidedNewsletter13);
        org.junit.Assert.assertNotNull(virtualItemSearchResult15);
        org.junit.Assert.assertNull(uniProvidedNewsletter17);
        org.junit.Assert.assertNotNull(virtualItemSearchResult19);
        org.junit.Assert.assertNull(paidNewsletter21);
    }

    @Test
    public void test2039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2039");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.VirtualItemContent virtualItemContent5 = virtualBook4.content;
        model.Student student6 = new model.Student();
        int int7 = student6.ID;
        model.StudentOnlineResources studentOnlineResources8 = new model.StudentOnlineResources((model.Client) student6);
        model.VirtualBook virtualBook10 = studentOnlineResources8.searchAccessibleBook("");
        model.CD cD12 = new model.CD("");
        model.Magazine magazine13 = null;
        model.Book book14 = null;
        model.CD cD15 = null;
        model.Magazine magazine16 = null;
        model.Book[] bookArray17 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList18 = new java.util.ArrayList<model.Book>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList18, bookArray17);
        model.CD[] cDArray20 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList21 = new java.util.ArrayList<model.CD>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList21, cDArray20);
        model.Magazine[] magazineArray23 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList24 = new java.util.ArrayList<model.Magazine>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList24, magazineArray23);
        model.ItemSearchResult itemSearchResult26 = new model.ItemSearchResult(book14, cD15, magazine16, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList21, (java.util.Collection<model.Magazine>) magazineList24);
        model.Book book27 = null;
        model.CD cD28 = null;
        model.Magazine magazine29 = null;
        model.Book[] bookArray30 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList31 = new java.util.ArrayList<model.Book>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList31, bookArray30);
        model.CD[] cDArray33 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList34 = new java.util.ArrayList<model.CD>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList34, cDArray33);
        model.Magazine[] magazineArray36 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList37 = new java.util.ArrayList<model.Magazine>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList37, magazineArray36);
        model.ItemSearchResult itemSearchResult39 = new model.ItemSearchResult(book27, cD28, magazine29, (java.util.Collection<model.Book>) bookList31, (java.util.Collection<model.CD>) cDList34, (java.util.Collection<model.Magazine>) magazineList37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        itemSearchResult39.similarCD = cDList41;
        model.Book book44 = null;
        model.CD cD45 = null;
        model.Magazine magazine46 = null;
        model.Book[] bookArray47 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList48 = new java.util.ArrayList<model.Book>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList48, bookArray47);
        model.CD[] cDArray50 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList51 = new java.util.ArrayList<model.CD>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList51, cDArray50);
        model.Magazine[] magazineArray53 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList54 = new java.util.ArrayList<model.Magazine>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList54, magazineArray53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult(book44, cD45, magazine46, (java.util.Collection<model.Book>) bookList48, (java.util.Collection<model.CD>) cDList51, (java.util.Collection<model.Magazine>) magazineList54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult((model.Book) virtualBook10, cD12, magazine13, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList54);
        int int58 = virtualBook10.ID;
        int int59 = virtualBook10.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter60 = null;
        model.PaidNewsletter paidNewsletter61 = null;
        model.VirtualItemSearchResult virtualItemSearchResult62 = new model.VirtualItemSearchResult(virtualBook10, uniProvidedNewsletter60, paidNewsletter61);
        model.PaidNewsletter paidNewsletter63 = virtualItemSearchResult62.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter64 = new model.UniProvidedNewsletter();
        virtualItemSearchResult62.setUniNewsletter(uniProvidedNewsletter64);
        java.lang.String str66 = uniProvidedNewsletter64.title;
        model.PaidNewsletter paidNewsletter67 = null;
        model.VirtualItemSearchResult virtualItemSearchResult68 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter64, paidNewsletter67);
        model.VirtualBook virtualBook69 = virtualItemSearchResult68.virtualBook;
        model.PaidNewsletter paidNewsletter70 = new model.PaidNewsletter();
        virtualItemSearchResult68.setPaidNewsletter(paidNewsletter70);
        paidNewsletter70.subscriptionPrice = 'a';
        paidNewsletter70.subscriptionPrice = 0.0d;
        double double76 = paidNewsletter70.subscriptionPrice;
        model.VirtualItemContent virtualItemContent78 = new model.VirtualItemContent("src/CD.csv");
        paidNewsletter70.content = virtualItemContent78;
        java.lang.String str81 = virtualItemContent78.getContent("src/BorrowedItems.csv");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNull(virtualItemContent5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(virtualBook10);
        org.junit.Assert.assertNotNull(bookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(cDArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(magazineArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(bookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(magazineArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(bookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(cDArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(magazineArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 20 + "'", int59 == 20);
        org.junit.Assert.assertNull(paidNewsletter63);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(virtualBook69);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "src/CD.csv" + "'", str81, "src/CD.csv");
    }

    @Test
    public void test2040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2040");
        model.Database database0 = null;
        model.Register register1 = model.Register.makeRegister(database0);
        model.Faculty faculty2 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection3 = faculty2.courses;
        boolean boolean6 = register1.registerAsStaff((model.Staff) faculty2, "src/Book.csv", "src/Book.csv");
        model.Faculty faculty7 = new model.Faculty();
        java.lang.String str8 = faculty7.faculty;
        java.lang.String str9 = faculty7.faculty;
        faculty7.viewMyOnlineResource();
        model.Course course11 = new model.Course();
        java.lang.String str12 = course11.subject;
        java.lang.String str13 = course11.subject;
        java.lang.String str14 = course11.code;
        java.lang.String str15 = course11.code;
        course11.subject = "";
        model.Course course18 = new model.Course();
        java.lang.String str19 = course18.code;
        model.Course course20 = new model.Course();
        java.lang.String str21 = course20.subject;
        course20.code = "";
        int int24 = course20.year;
        course20.subject = "src/CD.csv";
        model.Course course27 = new model.Course();
        java.lang.String str28 = course27.subject;
        java.lang.String str29 = course27.subject;
        java.lang.String str30 = course27.code;
        java.lang.String str31 = course27.code;
        model.Course course32 = new model.Course();
        model.Course course33 = new model.Course();
        java.lang.String str34 = course33.subject;
        course33.year = (byte) 10;
        model.Course course37 = new model.Course();
        model.Course course38 = new model.Course();
        java.lang.String str39 = course38.subject;
        java.lang.String str40 = course38.subject;
        java.lang.String str41 = course38.code;
        java.lang.String str42 = course38.code;
        course38.subject = "";
        model.Course course45 = new model.Course();
        java.lang.String str46 = course45.code;
        java.lang.String str47 = course45.subject;
        course45.subject = "model.RegistrationFailedException: ";
        course45.subject = "src/Magazine.csv";
        course45.subject = "model.RegistrationFailedException: ";
        model.Course course54 = new model.Course();
        java.lang.String str55 = course54.subject;
        java.lang.String str56 = course54.subject;
        model.Course course57 = new model.Course();
        java.lang.String str58 = course57.subject;
        course57.code = "";
        course57.subject = "src/Magazine.csv";
        model.Course course63 = new model.Course();
        java.lang.String str64 = course63.code;
        java.lang.String str65 = course63.subject;
        model.Course course66 = new model.Course();
        java.lang.String str67 = course66.subject;
        course66.code = "";
        int int70 = course66.year;
        course66.subject = "src/CD.csv";
        model.Course course73 = new model.Course();
        java.lang.String str74 = course73.subject;
        course73.code = "";
        int int77 = course73.year;
        course73.subject = "src/CD.csv";
        model.Course[] courseArray80 = new model.Course[] { course11, course18, course20, course27, course32, course33, course37, course38, course45, course54, course57, course63, course66, course73 };
        java.util.ArrayList<model.Course> courseList81 = new java.util.ArrayList<model.Course>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<model.Course>) courseList81, courseArray80);
        faculty7.courses = courseList81;
        faculty2.courses = courseList81;
        java.util.Collection<model.Course> courseCollection85 = faculty2.courses;
        java.lang.String str86 = faculty2.email;
        faculty2.faculty = "model.RegistrationFailedException: model.RentingNotAllowedException: hi!";
        org.junit.Assert.assertNotNull(register1);
        org.junit.Assert.assertNull(courseCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(courseArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(courseCollection85);
        org.junit.Assert.assertNull(str86);
    }

    @Test
    public void test2041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2041");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.Database.database = database7;
        java.lang.String str10 = database7.virtualItemFilePath;
        java.lang.String str11 = database7.getBookFilePath();
        database7.itemPath = "src/Magazine.csv";
        model.Client client15 = database7.getClient("src/CD.csv");
        java.lang.String str16 = database7.getCDFilePath();
        java.lang.String str17 = database7.virtualItemFilePath;
        model.Login login18 = model.Login.makeLogin(database7);
        model.Database database19 = null;
        model.Register register20 = model.Register.makeRegister(database19);
        model.Faculty faculty21 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection22 = faculty21.courses;
        boolean boolean25 = register20.registerAsStaff((model.Staff) faculty21, "src/Book.csv", "src/Book.csv");
        model.Database database26 = model.Database.database;
        model.Student student27 = new model.Student();
        int int28 = student27.ID;
        model.StudentOnlineResources studentOnlineResources29 = new model.StudentOnlineResources((model.Client) student27);
        student27.ID = '#';
        database26.addClient((model.Client) student27);
        student27.email = "hi!";
        boolean boolean37 = register20.registerAsStaff((model.Staff) student27, "src/CD.csv", "src/Book.csv");
        model.Database database45 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str46 = database45.getVirtualBookFilePath();
        register20.database = database45;
        model.Database database55 = model.Database.createDatabase("", "src/CD.csv", "model.RegistrationFailedException: src/Magazine.csv", "model.RegistrationFailedException: src/Magazine.csv", "model.RegistrationFailedException: ", "src/Magazine.csv", "hi!");
        register20.database = database55;
        model.Database database57 = null;
        register20.database = database57;
        model.Database database66 = model.Database.createDatabase("src/BorrowedItems.csv", "src/Magazine.csv", "src/Magazine.csv", "model.RegistrationFailedException: src/Book.csv", "src/Client.csv", "model.RegistrationFailedException: src/Magazine.csv", "model.RegistrationFailedException: ");
        register20.database = database66;
        login18.db = database66;
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "model.RegistrationFailedException: model.RentingNotAllowedException: hi!" + "'", str10, "model.RegistrationFailedException: model.RentingNotAllowedException: hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "src/Book.csv" + "'", str11, "src/Book.csv");
        org.junit.Assert.assertNotNull(client15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "src/CD.csv" + "'", str16, "src/CD.csv");
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "model.RegistrationFailedException: model.RentingNotAllowedException: hi!" + "'", str17, "model.RegistrationFailedException: model.RentingNotAllowedException: hi!");
        org.junit.Assert.assertNotNull(login18);
        org.junit.Assert.assertNotNull(register20);
        org.junit.Assert.assertNull(courseCollection22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "src/VirtualBook.csv" + "'", str46, "src/VirtualBook.csv");
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(database66);
    }

    @Test
    public void test2042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2042");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.Book book1 = null;
        model.CD cD3 = new model.CD("");
        model.Magazine magazine4 = null;
        java.util.Collection<model.Book> bookCollection5 = null;
        model.Book book6 = null;
        model.CD cD7 = null;
        model.Magazine magazine8 = null;
        model.Book[] bookArray9 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList10 = new java.util.ArrayList<model.Book>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList10, bookArray9);
        model.CD[] cDArray12 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList13 = new java.util.ArrayList<model.CD>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList13, cDArray12);
        model.Magazine[] magazineArray15 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList16 = new java.util.ArrayList<model.Magazine>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList16, magazineArray15);
        model.ItemSearchResult itemSearchResult18 = new model.ItemSearchResult(book6, cD7, magazine8, (java.util.Collection<model.Book>) bookList10, (java.util.Collection<model.CD>) cDList13, (java.util.Collection<model.Magazine>) magazineList16);
        model.Book book19 = null;
        model.CD cD20 = null;
        model.Magazine magazine21 = null;
        model.Book[] bookArray22 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList23 = new java.util.ArrayList<model.Book>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList23, bookArray22);
        model.CD[] cDArray25 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList26 = new java.util.ArrayList<model.CD>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList26, cDArray25);
        model.Magazine[] magazineArray28 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList29 = new java.util.ArrayList<model.Magazine>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList29, magazineArray28);
        model.ItemSearchResult itemSearchResult31 = new model.ItemSearchResult(book19, cD20, magazine21, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList29);
        itemSearchResult18.similarCD = cDList26;
        model.Book book33 = null;
        model.CD cD34 = null;
        model.Magazine magazine35 = null;
        model.Book[] bookArray36 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList37 = new java.util.ArrayList<model.Book>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList37, bookArray36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        model.Magazine[] magazineArray42 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList43 = new java.util.ArrayList<model.Magazine>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList43, magazineArray42);
        model.ItemSearchResult itemSearchResult45 = new model.ItemSearchResult(book33, cD34, magazine35, (java.util.Collection<model.Book>) bookList37, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book1, cD3, magazine4, bookCollection5, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList43);
        cD3.ID = (short) 10;
        cD3.canBePurchased = false;
        boolean boolean51 = cD3.canBePurchased;
        model.Faculty faculty52 = new model.Faculty();
        boolean boolean53 = rentAndReturnSystem0.rentAnItem((model.Item) cD3, (model.Client) faculty52);
        java.lang.String str54 = faculty52.faculty;
        model.RentedItem[] rentedItemArray55 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList56 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList56, rentedItemArray55);
        model.BorrowingManager borrowingManager58 = new model.BorrowingManager(rentedItemList56);
        boolean boolean59 = borrowingManager58.canRent();
        model.Client client60 = borrowingManager58.client;
        faculty52.borrowManager = borrowingManager58;
        model.RentedItem[] rentedItemArray62 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList63 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList63, rentedItemArray62);
        model.BorrowingManager borrowingManager65 = new model.BorrowingManager(rentedItemList63);
        borrowingManager58.physicalItemBorrowed = rentedItemList63;
        model.BorrowingManager borrowingManager67 = new model.BorrowingManager(rentedItemList63);
        double double68 = borrowingManager67.checkBalanceOwed();
        org.junit.Assert.assertNotNull(bookArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(cDArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(magazineArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(bookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(magazineArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(bookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(magazineArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(rentedItemArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(client60);
        org.junit.Assert.assertNotNull(rentedItemArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
    }

    @Test
    public void test2043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2043");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.StudentOnlineResources studentOnlineResources3 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook5 = studentOnlineResources3.searchAccessibleBook("src/Book.csv");
        int int6 = virtualBook5.ID;
        model.VirtualItemContent virtualItemContent8 = new model.VirtualItemContent("model.RegistrationFailedException: ");
        java.lang.String str9 = virtualItemContent8.link;
        virtualBook5.content = virtualItemContent8;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "model.RegistrationFailedException: " + "'", str9, "model.RegistrationFailedException: ");
    }

    @Test
    public void test2044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2044");
        model.BuySpecialItems buySpecialItems0 = new model.BuySpecialItems();
        model.Payment payment1 = buySpecialItems0.paymentAPI;
        model.Payment payment2 = buySpecialItems0.paymentAPI;
        model.BuySpecialItems buySpecialItems3 = new model.BuySpecialItems();
        model.Payment payment4 = null;
        buySpecialItems3.paymentAPI = payment4;
        model.Newsletter[] newsletterArray6 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList7 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList7, newsletterArray6);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager9 = new model.NewsletterSubscriptionManager(newsletterList7);
        model.Client client10 = newsletterSubscriptionManager9.client;
        model.PayCredit payCredit11 = new model.PayCredit();
        payCredit11.amountPay = 10;
        newsletterSubscriptionManager9.paymentAPI = payCredit11;
        buySpecialItems3.paymentAPI = payCredit11;
        buySpecialItems0.paymentAPI = payCredit11;
        payCredit11.pay(0.0d);
        double double19 = payCredit11.amountPay;
        org.junit.Assert.assertNull(payment1);
        org.junit.Assert.assertNull(payment2);
        org.junit.Assert.assertNotNull(newsletterArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(client10);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
    }

    @Test
    public void test2045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2045");
        model.Visitor visitor0 = new model.Visitor();
        model.VirtualBook[] virtualBookArray1 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList2 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList2, virtualBookArray1);
        visitor0.virtualBooksAvailable = virtualBookList2;
        java.lang.String str5 = visitor0.username;
        org.junit.Assert.assertNotNull(virtualBookArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test2046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2046");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.PaidNewsletter paidNewsletter4 = null;
        newsletterSubscriptionManager3.subscribeToPaidNewsletter(paidNewsletter4, "");
        model.Student student7 = new model.Student();
        student7.viewMyOnlineResource();
        newsletterSubscriptionManager3.client = student7;
        model.PaidNewsletter paidNewsletter10 = new model.PaidNewsletter();
        model.Student student11 = new model.Student();
        int int12 = student11.ID;
        model.StudentOnlineResources studentOnlineResources13 = new model.StudentOnlineResources((model.Client) student11);
        model.VirtualBook virtualBook15 = studentOnlineResources13.searchAccessibleBook("");
        model.CD cD17 = new model.CD("");
        model.Magazine magazine18 = null;
        model.Book book19 = null;
        model.CD cD20 = null;
        model.Magazine magazine21 = null;
        model.Book[] bookArray22 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList23 = new java.util.ArrayList<model.Book>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList23, bookArray22);
        model.CD[] cDArray25 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList26 = new java.util.ArrayList<model.CD>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList26, cDArray25);
        model.Magazine[] magazineArray28 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList29 = new java.util.ArrayList<model.Magazine>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList29, magazineArray28);
        model.ItemSearchResult itemSearchResult31 = new model.ItemSearchResult(book19, cD20, magazine21, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList29);
        model.Book book32 = null;
        model.CD cD33 = null;
        model.Magazine magazine34 = null;
        model.Book[] bookArray35 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList36 = new java.util.ArrayList<model.Book>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList36, bookArray35);
        model.CD[] cDArray38 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList39 = new java.util.ArrayList<model.CD>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList39, cDArray38);
        model.Magazine[] magazineArray41 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList42 = new java.util.ArrayList<model.Magazine>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList42, magazineArray41);
        model.ItemSearchResult itemSearchResult44 = new model.ItemSearchResult(book32, cD33, magazine34, (java.util.Collection<model.Book>) bookList36, (java.util.Collection<model.CD>) cDList39, (java.util.Collection<model.Magazine>) magazineList42);
        model.CD[] cDArray45 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList46 = new java.util.ArrayList<model.CD>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList46, cDArray45);
        itemSearchResult44.similarCD = cDList46;
        model.Book book49 = null;
        model.CD cD50 = null;
        model.Magazine magazine51 = null;
        model.Book[] bookArray52 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList53 = new java.util.ArrayList<model.Book>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList53, bookArray52);
        model.CD[] cDArray55 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList56 = new java.util.ArrayList<model.CD>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList56, cDArray55);
        model.Magazine[] magazineArray58 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList59 = new java.util.ArrayList<model.Magazine>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList59, magazineArray58);
        model.ItemSearchResult itemSearchResult61 = new model.ItemSearchResult(book49, cD50, magazine51, (java.util.Collection<model.Book>) bookList53, (java.util.Collection<model.CD>) cDList56, (java.util.Collection<model.Magazine>) magazineList59);
        model.ItemSearchResult itemSearchResult62 = new model.ItemSearchResult((model.Book) virtualBook15, cD17, magazine18, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList46, (java.util.Collection<model.Magazine>) magazineList59);
        int int63 = virtualBook15.ID;
        int int64 = virtualBook15.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter65 = null;
        model.PaidNewsletter paidNewsletter66 = null;
        model.VirtualItemSearchResult virtualItemSearchResult67 = new model.VirtualItemSearchResult(virtualBook15, uniProvidedNewsletter65, paidNewsletter66);
        virtualBook15.author = "hi!";
        virtualBook15.showContent();
        boolean boolean71 = paidNewsletter10.equals((java.lang.Object) virtualBook15);
        newsletterSubscriptionManager3.subscribeToPaidNewsletter(paidNewsletter10, "src/Book.csv");
        double double74 = paidNewsletter10.subscriptionPrice;
        paidNewsletter10.ID = (short) 10;
        double double77 = paidNewsletter10.subscriptionPrice;
        paidNewsletter10.subscriptionPrice = 35;
        paidNewsletter10.title = "src/BorrowedItems.csv";
        java.lang.String str82 = paidNewsletter10.title;
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(virtualBook15);
        org.junit.Assert.assertNotNull(bookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(magazineArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(bookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(cDArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(magazineArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(bookArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(cDArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(magazineArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 20 + "'", int64 == 20);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "src/BorrowedItems.csv" + "'", str82, "src/BorrowedItems.csv");
    }

    @Test
    public void test2047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2047");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.RequestForum requestForum1 = model.RequestForum.createRequestForum();
        model.Request request2 = new model.Request();
        request2.title = "";
        java.lang.String str5 = requestForum1.makeARequest(request2);
        int int6 = requestForum0.assessBooksPriority(request2);
        model.LibraryManagementTeam libraryManagementTeam7 = requestForum0.managementTeam;
        model.LibraryManagementTeam libraryManagementTeam8 = new model.LibraryManagementTeam();
        int int9 = libraryManagementTeam8.ID;
        int int10 = libraryManagementTeam8.accessCode;
        libraryManagementTeam8.accessCode = '#';
        int int13 = libraryManagementTeam8.accessCode;
        requestForum0.managementTeam = libraryManagementTeam8;
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertNotNull(requestForum1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(libraryManagementTeam7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 35 + "'", int13 == 35);
    }

    @Test
    public void test2048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2048");
        model.SearchBorrowedItem searchBorrowedItem0 = model.SearchBorrowedItem.makeSearchBorrowedItem();
        model.Visitor visitor1 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList2 = visitor1.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources3 = new model.StudentOnlineResources((model.Client) visitor1);
        model.RentedItem[] rentedItemArray4 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList5 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList5, rentedItemArray4);
        model.BorrowingManager borrowingManager7 = new model.BorrowingManager(rentedItemList5);
        model.Visitor visitor8 = new model.Visitor();
        visitor8.email = "hi!";
        borrowingManager7.client = visitor8;
        studentOnlineResources3.client = visitor8;
        model.Student student13 = new model.Student();
        int int14 = student13.ID;
        model.StudentOnlineResources studentOnlineResources15 = new model.StudentOnlineResources((model.Client) student13);
        model.VirtualBook virtualBook17 = studentOnlineResources15.searchAccessibleBook("");
        model.CD cD19 = new model.CD("");
        model.Magazine magazine20 = null;
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.Book book34 = null;
        model.CD cD35 = null;
        model.Magazine magazine36 = null;
        model.Book[] bookArray37 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList38 = new java.util.ArrayList<model.Book>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList38, bookArray37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        model.Magazine[] magazineArray43 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList44 = new java.util.ArrayList<model.Magazine>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList44, magazineArray43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book34, cD35, magazine36, (java.util.Collection<model.Book>) bookList38, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList44);
        model.CD[] cDArray47 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList48 = new java.util.ArrayList<model.CD>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList48, cDArray47);
        itemSearchResult46.similarCD = cDList48;
        model.Book book51 = null;
        model.CD cD52 = null;
        model.Magazine magazine53 = null;
        model.Book[] bookArray54 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList55 = new java.util.ArrayList<model.Book>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList55, bookArray54);
        model.CD[] cDArray57 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList58 = new java.util.ArrayList<model.CD>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList58, cDArray57);
        model.Magazine[] magazineArray60 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList61 = new java.util.ArrayList<model.Magazine>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList61, magazineArray60);
        model.ItemSearchResult itemSearchResult63 = new model.ItemSearchResult(book51, cD52, magazine53, (java.util.Collection<model.Book>) bookList55, (java.util.Collection<model.CD>) cDList58, (java.util.Collection<model.Magazine>) magazineList61);
        model.ItemSearchResult itemSearchResult64 = new model.ItemSearchResult((model.Book) virtualBook17, cD19, magazine20, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList48, (java.util.Collection<model.Magazine>) magazineList61);
        java.lang.String str65 = studentOnlineResources3.readVirtualItem((model.VirtualItem) virtualBook17);
        model.Visitor visitor67 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList68 = visitor67.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources69 = new model.StudentOnlineResources((model.Client) visitor67);
        searchBorrowedItem0.addPhyscialItem((model.Item) virtualBook17, "", (model.Client) visitor67);
        java.util.ArrayList<model.RentedItem> rentedItemList73 = null; // flaky: searchBorrowedItem0.searchBorrowedItem("hi!", "model.RegistrationFailedException: src/Magazine.csv");
// flaky:         searchBorrowedItem0.removeItem("model.LoginFailedException: hi!", "model.LoginFailedException: hi!");
        model.SearchBorrowedItem.object = searchBorrowedItem0;
        org.junit.Assert.assertNotNull(searchBorrowedItem0);
        org.junit.Assert.assertNull(virtualBookList2);
        org.junit.Assert.assertNotNull(rentedItemArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(virtualBook17);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(bookArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(magazineArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(cDArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(bookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(cDArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(magazineArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(virtualBookList68);
// flaky:         org.junit.Assert.assertNotNull(rentedItemList73);
    }

    @Test
    public void test2049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2049");
        model.Database database7 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.SearchVirtualItem searchVirtualItem8 = new model.SearchVirtualItem(database7);
        model.UniProvidedNewsletter uniProvidedNewsletter10 = searchVirtualItem8.getUniNewsletter("model.RegistrationFailedException: src/Book.csv");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNull(uniProvidedNewsletter10);
    }

    @Test
    public void test2050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2050");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.LibraryManagementTeam libraryManagementTeam1 = requestForum0.managementTeam;
        model.LibraryManagementTeam libraryManagementTeam2 = new model.LibraryManagementTeam();
        int int3 = libraryManagementTeam2.ID;
        int int4 = libraryManagementTeam2.accessCode;
        requestForum0.managementTeam = libraryManagementTeam2;
        model.LibraryManagementTeam libraryManagementTeam6 = requestForum0.managementTeam;
        int int7 = libraryManagementTeam6.ID;
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertNotNull(libraryManagementTeam1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(libraryManagementTeam6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test2051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2051");
        model.Book book0 = null;
        model.CD cD1 = null;
        model.Magazine magazine2 = null;
        model.Book[] bookArray3 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList4 = new java.util.ArrayList<model.Book>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList4, bookArray3);
        model.CD[] cDArray6 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList7 = new java.util.ArrayList<model.CD>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList7, cDArray6);
        model.Magazine[] magazineArray9 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList10 = new java.util.ArrayList<model.Magazine>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList10, magazineArray9);
        model.ItemSearchResult itemSearchResult12 = new model.ItemSearchResult(book0, cD1, magazine2, (java.util.Collection<model.Book>) bookList4, (java.util.Collection<model.CD>) cDList7, (java.util.Collection<model.Magazine>) magazineList10);
        model.Book book13 = null;
        model.CD cD14 = null;
        model.Magazine magazine15 = null;
        model.Book[] bookArray16 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList17 = new java.util.ArrayList<model.Book>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList17, bookArray16);
        model.CD[] cDArray19 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList20 = new java.util.ArrayList<model.CD>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList20, cDArray19);
        model.Magazine[] magazineArray22 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList23 = new java.util.ArrayList<model.Magazine>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList23, magazineArray22);
        model.ItemSearchResult itemSearchResult25 = new model.ItemSearchResult(book13, cD14, magazine15, (java.util.Collection<model.Book>) bookList17, (java.util.Collection<model.CD>) cDList20, (java.util.Collection<model.Magazine>) magazineList23);
        itemSearchResult12.similarCD = cDList20;
        model.Magazine magazine27 = itemSearchResult12.magazine;
        model.CD cD28 = itemSearchResult12.cd;
        java.util.Collection<model.Magazine> magazineCollection29 = itemSearchResult12.similarMagazine;
        model.Student student30 = new model.Student();
        int int31 = student30.ID;
        model.StudentOnlineResources studentOnlineResources32 = new model.StudentOnlineResources((model.Client) student30);
        model.VirtualBook virtualBook34 = studentOnlineResources32.searchAccessibleBook("");
        model.CD cD36 = new model.CD("");
        model.Magazine magazine37 = null;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.Book book51 = null;
        model.CD cD52 = null;
        model.Magazine magazine53 = null;
        model.Book[] bookArray54 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList55 = new java.util.ArrayList<model.Book>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList55, bookArray54);
        model.CD[] cDArray57 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList58 = new java.util.ArrayList<model.CD>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList58, cDArray57);
        model.Magazine[] magazineArray60 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList61 = new java.util.ArrayList<model.Magazine>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList61, magazineArray60);
        model.ItemSearchResult itemSearchResult63 = new model.ItemSearchResult(book51, cD52, magazine53, (java.util.Collection<model.Book>) bookList55, (java.util.Collection<model.CD>) cDList58, (java.util.Collection<model.Magazine>) magazineList61);
        model.CD[] cDArray64 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList65 = new java.util.ArrayList<model.CD>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList65, cDArray64);
        itemSearchResult63.similarCD = cDList65;
        model.Book book68 = null;
        model.CD cD69 = null;
        model.Magazine magazine70 = null;
        model.Book[] bookArray71 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList72 = new java.util.ArrayList<model.Book>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList72, bookArray71);
        model.CD[] cDArray74 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList75 = new java.util.ArrayList<model.CD>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList75, cDArray74);
        model.Magazine[] magazineArray77 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList78 = new java.util.ArrayList<model.Magazine>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList78, magazineArray77);
        model.ItemSearchResult itemSearchResult80 = new model.ItemSearchResult(book68, cD69, magazine70, (java.util.Collection<model.Book>) bookList72, (java.util.Collection<model.CD>) cDList75, (java.util.Collection<model.Magazine>) magazineList78);
        model.ItemSearchResult itemSearchResult81 = new model.ItemSearchResult((model.Book) virtualBook34, cD36, magazine37, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList65, (java.util.Collection<model.Magazine>) magazineList78);
        virtualBook34.ID = (short) 10;
        virtualBook34.showContent();
        virtualBook34.author = "";
        itemSearchResult12.book = virtualBook34;
        model.Student student88 = new model.Student();
        int int89 = student88.ID;
        model.StudentOnlineResources studentOnlineResources90 = new model.StudentOnlineResources((model.Client) student88);
        model.VirtualBook virtualBook92 = studentOnlineResources90.searchAccessibleBook("");
        java.lang.String str93 = virtualBook92.location;
        int int94 = virtualBook92.ID;
        itemSearchResult12.book = virtualBook92;
        model.Book book96 = itemSearchResult12.book;
        java.util.Calendar calendar97 = book96.date;
        org.junit.Assert.assertNotNull(bookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(cDArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(magazineArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(bookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(cDArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(magazineArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(magazine27);
        org.junit.Assert.assertNull(cD28);
        org.junit.Assert.assertNotNull(magazineCollection29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(virtualBook34);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(bookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(cDArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(magazineArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(cDArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(bookArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(cDArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(magazineArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertNotNull(virtualBook92);
        org.junit.Assert.assertNull(str93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
        org.junit.Assert.assertNotNull(book96);
        org.junit.Assert.assertNull(calendar97);
    }

    @Test
    public void test2052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2052");
        model.Database database7 = model.Database.createDatabase("", "src/CD.csv", "model.RegistrationFailedException: src/Magazine.csv", "model.RegistrationFailedException: src/Magazine.csv", "model.RegistrationFailedException: ", "src/Magazine.csv", "hi!");
        int int8 = database7.getRandomID();
        model.Client client10 = database7.getClient("");
        org.junit.Assert.assertNotNull(database7);
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 9265126 + "'", int8 == 9265126);
        org.junit.Assert.assertNotNull(client10);
    }

    @Test
    public void test2053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2053");
        model.LoginFailedException loginFailedException1 = new model.LoginFailedException("model.RegistrationFailedException: ");
        model.RegistrationFailedException registrationFailedException3 = new model.RegistrationFailedException("src/VirtualBook.csv");
        loginFailedException1.addSuppressed((java.lang.Throwable) registrationFailedException3);
        java.lang.Throwable[] throwableArray5 = registrationFailedException3.getSuppressed();
        java.lang.String str6 = registrationFailedException3.toString();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "model.RegistrationFailedException: src/VirtualBook.csv" + "'", str6, "model.RegistrationFailedException: src/VirtualBook.csv");
    }

    @Test
    public void test2054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2054");
        model.Book book0 = null;
        model.CD cD1 = null;
        model.Magazine magazine2 = null;
        model.Book[] bookArray3 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList4 = new java.util.ArrayList<model.Book>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList4, bookArray3);
        model.CD[] cDArray6 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList7 = new java.util.ArrayList<model.CD>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList7, cDArray6);
        model.Magazine[] magazineArray9 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList10 = new java.util.ArrayList<model.Magazine>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList10, magazineArray9);
        model.ItemSearchResult itemSearchResult12 = new model.ItemSearchResult(book0, cD1, magazine2, (java.util.Collection<model.Book>) bookList4, (java.util.Collection<model.CD>) cDList7, (java.util.Collection<model.Magazine>) magazineList10);
        model.CD[] cDArray13 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList14 = new java.util.ArrayList<model.CD>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList14, cDArray13);
        itemSearchResult12.similarCD = cDList14;
        model.Book book17 = null;
        itemSearchResult12.book = book17;
        model.Book book19 = null;
        model.CD cD20 = null;
        model.Magazine magazine21 = null;
        model.Book[] bookArray22 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList23 = new java.util.ArrayList<model.Book>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList23, bookArray22);
        model.CD[] cDArray25 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList26 = new java.util.ArrayList<model.CD>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList26, cDArray25);
        model.Magazine[] magazineArray28 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList29 = new java.util.ArrayList<model.Magazine>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList29, magazineArray28);
        model.ItemSearchResult itemSearchResult31 = new model.ItemSearchResult(book19, cD20, magazine21, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList29);
        itemSearchResult12.similarBooks = bookList23;
        model.Book book33 = itemSearchResult12.book;
        java.util.Collection<model.CD> cDCollection34 = itemSearchResult12.similarCD;
        model.Magazine magazine35 = itemSearchResult12.magazine;
        model.Student student36 = new model.Student();
        int int37 = student36.ID;
        model.StudentOnlineResources studentOnlineResources38 = new model.StudentOnlineResources((model.Client) student36);
        model.VirtualBook virtualBook40 = studentOnlineResources38.searchAccessibleBook("");
        java.lang.String str41 = virtualBook40.location;
        int int42 = virtualBook40.ID;
        virtualBook40.isBookLost = false;
        java.lang.String str45 = virtualBook40.author;
        virtualBook40.edition = 'a';
        itemSearchResult12.book = virtualBook40;
        model.CD cD50 = new model.CD("hi!");
        itemSearchResult12.cd = cD50;
        model.Book book52 = itemSearchResult12.book;
        model.CD cD53 = itemSearchResult12.cd;
        org.junit.Assert.assertNotNull(bookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(cDArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(magazineArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(cDArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(bookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(magazineArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(book33);
        org.junit.Assert.assertNotNull(cDCollection34);
        org.junit.Assert.assertNull(magazine35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(virtualBook40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(book52);
        org.junit.Assert.assertNotNull(cD53);
    }

    @Test
    public void test2055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2055");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getBookFilePath();
        database7.itemPath = "hi!";
        model.Database.database = database7;
        java.lang.String str12 = database7.getBookFilePath();
        model.SearchVirtualItem searchVirtualItem13 = new model.SearchVirtualItem(database7);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/Book.csv" + "'", str8, "src/Book.csv");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "src/Book.csv" + "'", str12, "src/Book.csv");
    }

    @Test
    public void test2056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2056");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        java.lang.String str9 = database7.getNewspaperFilePath();
        model.Register register10 = model.Register.makeRegister(database7);
        java.lang.String str11 = database7.getBookFilePath();
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "src/Newsletter.csv" + "'", str9, "src/Newsletter.csv");
        org.junit.Assert.assertNotNull(register10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "src/Book.csv" + "'", str11, "src/Book.csv");
    }

    @Test
    public void test2057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2057");
        model.Course course0 = new model.Course();
        java.lang.String str1 = course0.subject;
        course0.year = (byte) 10;
        int int4 = course0.year;
        course0.code = "src/BorrowedItems.csv";
        java.lang.String str7 = course0.subject;
        course0.subject = "model.RentingNotAllowedException: ";
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 10 + "'", int4 == 10);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test2058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2058");
        model.Database database7 = model.Database.createDatabase("src/Client.csv", "src/CD.csv", "model.RegistrationFailedException: src/Magazine.csv", "src/Magazine.csv", "", "model.RegistrationFailedException: src/Magazine.csv", "src/VirtualBook.csv");
        model.Database database15 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str16 = database15.getVirtualBookFilePath();
        model.Database.database = database15;
        java.lang.String str18 = database15.virtualItemFilePath;
        java.lang.String str19 = database15.getBookFilePath();
        database15.itemPath = "src/Magazine.csv";
        model.Client client23 = database15.getClient("src/CD.csv");
        model.StudentOnlineResources studentOnlineResources24 = new model.StudentOnlineResources(client23);
        model.BorrowingManager borrowingManager25 = client23.borrowManager;
        model.RentedItem[] rentedItemArray26 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList27 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList27, rentedItemArray26);
        model.BorrowingManager borrowingManager29 = new model.BorrowingManager(rentedItemList27);
        model.Book book30 = null;
        model.CD cD32 = new model.CD("");
        model.Magazine magazine33 = null;
        java.util.Collection<model.Book> bookCollection34 = null;
        model.Book book35 = null;
        model.CD cD36 = null;
        model.Magazine magazine37 = null;
        model.Book[] bookArray38 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList39 = new java.util.ArrayList<model.Book>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList39, bookArray38);
        model.CD[] cDArray41 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList42 = new java.util.ArrayList<model.CD>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList42, cDArray41);
        model.Magazine[] magazineArray44 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList45 = new java.util.ArrayList<model.Magazine>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList45, magazineArray44);
        model.ItemSearchResult itemSearchResult47 = new model.ItemSearchResult(book35, cD36, magazine37, (java.util.Collection<model.Book>) bookList39, (java.util.Collection<model.CD>) cDList42, (java.util.Collection<model.Magazine>) magazineList45);
        model.Book book48 = null;
        model.CD cD49 = null;
        model.Magazine magazine50 = null;
        model.Book[] bookArray51 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList52 = new java.util.ArrayList<model.Book>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList52, bookArray51);
        model.CD[] cDArray54 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList55 = new java.util.ArrayList<model.CD>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList55, cDArray54);
        model.Magazine[] magazineArray57 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList58 = new java.util.ArrayList<model.Magazine>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList58, magazineArray57);
        model.ItemSearchResult itemSearchResult60 = new model.ItemSearchResult(book48, cD49, magazine50, (java.util.Collection<model.Book>) bookList52, (java.util.Collection<model.CD>) cDList55, (java.util.Collection<model.Magazine>) magazineList58);
        itemSearchResult47.similarCD = cDList55;
        model.Book book62 = null;
        model.CD cD63 = null;
        model.Magazine magazine64 = null;
        model.Book[] bookArray65 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList66 = new java.util.ArrayList<model.Book>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList66, bookArray65);
        model.CD[] cDArray68 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList69 = new java.util.ArrayList<model.CD>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList69, cDArray68);
        model.Magazine[] magazineArray71 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList72 = new java.util.ArrayList<model.Magazine>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList72, magazineArray71);
        model.ItemSearchResult itemSearchResult74 = new model.ItemSearchResult(book62, cD63, magazine64, (java.util.Collection<model.Book>) bookList66, (java.util.Collection<model.CD>) cDList69, (java.util.Collection<model.Magazine>) magazineList72);
        model.ItemSearchResult itemSearchResult75 = new model.ItemSearchResult(book30, cD32, magazine33, bookCollection34, (java.util.Collection<model.CD>) cDList55, (java.util.Collection<model.Magazine>) magazineList72);
        cD32.ID = (short) 10;
        borrowingManager29.removeRentedItem((model.Item) cD32);
        float float79 = borrowingManager29.amountOwned;
        client23.borrowManager = borrowingManager29;
        database7.addClient(client23);
        java.lang.String str82 = database7.getClientFilePath();
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "src/VirtualBook.csv" + "'", str16, "src/VirtualBook.csv");
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "model.RegistrationFailedException: model.RentingNotAllowedException: hi!" + "'", str18, "model.RegistrationFailedException: model.RentingNotAllowedException: hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "src/Book.csv" + "'", str19, "src/Book.csv");
        org.junit.Assert.assertNotNull(client23);
        org.junit.Assert.assertNull(borrowingManager25);
        org.junit.Assert.assertNotNull(rentedItemArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(bookArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(cDArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(magazineArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(bookArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(cDArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(magazineArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(bookArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(cDArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(magazineArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + 0.0f + "'", float79 == 0.0f);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "src/Client.csv" + "'", str82, "src/Client.csv");
    }

    @Test
    public void test2059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2059");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        virtualBook4.ID = 20;
        virtualBook4.ID = (short) 100;
        boolean boolean9 = virtualBook4.canBePurchased;
        virtualBook4.isBookLost = false;
        virtualBook4.ISBN = "model.RegistrationFailedException: ";
        virtualBook4.title = "model.LoginFailedException: hi!";
        virtualBook4.edition = 0;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test2060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2060");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.Database.database = database7;
        java.lang.String str10 = database7.virtualItemFilePath;
        java.lang.String str11 = database7.getBookFilePath();
        database7.itemPath = "src/Magazine.csv";
        model.Login login14 = model.Login.makeLogin(database7);
        boolean boolean16 = database7.addItem("src/Client.csv");
        model.SearchItems searchItems17 = new model.SearchItems(database7);
        model.CD cD19 = searchItems17.getCD("src/Client.csv");
        model.Book book21 = searchItems17.getBook("src/CD.csv");
        model.Magazine magazine23 = searchItems17.getMagazine("src/BorrowedItems.csv");
        model.Book book25 = searchItems17.getBook("model.RentingNotAllowedException: src/Magazine.csv");
        model.ItemSearchResult itemSearchResult27 = searchItems17.searchItem("model.RentingNotAllowedException: src/Magazine.csv");
        java.util.Collection<model.Magazine> magazineCollection28 = itemSearchResult27.similarMagazine;
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "model.RegistrationFailedException: model.RentingNotAllowedException: hi!" + "'", str10, "model.RegistrationFailedException: model.RentingNotAllowedException: hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "src/Book.csv" + "'", str11, "src/Book.csv");
        org.junit.Assert.assertNotNull(login14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(cD19);
        org.junit.Assert.assertNull(book21);
        org.junit.Assert.assertNull(magazine23);
        org.junit.Assert.assertNull(book25);
        org.junit.Assert.assertNotNull(itemSearchResult27);
        org.junit.Assert.assertNull(magazineCollection28);
    }

    @Test
    public void test2061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2061");
        model.PayDebit payDebit0 = new model.PayDebit();
        double double1 = payDebit0.amountPay;
        double double2 = payDebit0.amountPay;
        payDebit0.pay((double) 9042984);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
    }

    @Test
    public void test2062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2062");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.StudentOnlineResources studentOnlineResources3 = new model.StudentOnlineResources((model.Client) student0);
        model.RentedItem[] rentedItemArray4 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList5 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList5, rentedItemArray4);
        model.BorrowingManager borrowingManager7 = new model.BorrowingManager(rentedItemList5);
        model.Visitor visitor8 = new model.Visitor();
        visitor8.email = "hi!";
        borrowingManager7.client = visitor8;
        studentOnlineResources3.client = visitor8;
        model.Client client13 = studentOnlineResources3.client;
        java.util.ArrayList<model.VirtualBook> virtualBookList14 = null;
        client13.virtualBooksAvailable = virtualBookList14;
        java.util.ArrayList<model.VirtualBook> virtualBookList16 = null;
        client13.virtualBooksAvailable = virtualBookList16;
        model.NewsletterSubscriptionManager newsletterSubscriptionManager18 = client13.newsletterManager;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(rentedItemArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(client13);
        org.junit.Assert.assertNull(newsletterSubscriptionManager18);
    }

    @Test
    public void test2063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2063");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        model.Book book4 = null;
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        java.util.Collection<model.Book> bookCollection8 = null;
        model.Book book9 = null;
        model.CD cD10 = null;
        model.Magazine magazine11 = null;
        model.Book[] bookArray12 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList13 = new java.util.ArrayList<model.Book>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList13, bookArray12);
        model.CD[] cDArray15 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList16 = new java.util.ArrayList<model.CD>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList16, cDArray15);
        model.Magazine[] magazineArray18 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList19 = new java.util.ArrayList<model.Magazine>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList19, magazineArray18);
        model.ItemSearchResult itemSearchResult21 = new model.ItemSearchResult(book9, cD10, magazine11, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList16, (java.util.Collection<model.Magazine>) magazineList19);
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        itemSearchResult21.similarCD = cDList29;
        model.Book book36 = null;
        model.CD cD37 = null;
        model.Magazine magazine38 = null;
        model.Book[] bookArray39 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList40 = new java.util.ArrayList<model.Book>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList40, bookArray39);
        model.CD[] cDArray42 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList43 = new java.util.ArrayList<model.CD>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList43, cDArray42);
        model.Magazine[] magazineArray45 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList46 = new java.util.ArrayList<model.Magazine>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList46, magazineArray45);
        model.ItemSearchResult itemSearchResult48 = new model.ItemSearchResult(book36, cD37, magazine38, (java.util.Collection<model.Book>) bookList40, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList46);
        model.ItemSearchResult itemSearchResult49 = new model.ItemSearchResult(book4, cD6, magazine7, bookCollection8, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList46);
        cD6.ID = (short) 10;
        borrowingManager3.removeRentedItem((model.Item) cD6);
        int int53 = borrowingManager3.itemsBorrowedCount;
        model.Client client54 = borrowingManager3.client;
        borrowingManager3.itemsBorrowedCount = 7967658;
        model.Client client57 = borrowingManager3.client;
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(bookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cDArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(magazineArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(bookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cDArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(magazineArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(client54);
        org.junit.Assert.assertNull(client57);
    }

    @Test
    public void test2064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2064");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.Payment payment1 = rentAndReturnSystem0.paymentAPI;
        model.PayMobileWallet payMobileWallet2 = new model.PayMobileWallet();
        payMobileWallet2.amountPay = 100.0f;
        payMobileWallet2.pay((double) 100L);
        rentAndReturnSystem0.paymentAPI = payMobileWallet2;
        model.Payment payment8 = rentAndReturnSystem0.paymentAPI;
        model.Payment payment9 = rentAndReturnSystem0.paymentAPI;
        model.PayCredit payCredit10 = new model.PayCredit();
        payCredit10.amountPay = 10;
        payCredit10.pay((double) (-1.0f));
        payCredit10.pay((double) ' ');
        payCredit10.pay(0.0d);
        double double19 = payCredit10.amountPay;
        payCredit10.pay((double) (short) 100);
        rentAndReturnSystem0.paymentAPI = payCredit10;
        model.Student student23 = new model.Student();
        int int24 = student23.ID;
        model.StudentOnlineResources studentOnlineResources25 = new model.StudentOnlineResources((model.Client) student23);
        model.VirtualBook virtualBook27 = studentOnlineResources25.searchAccessibleBook("");
        model.CD cD29 = new model.CD("");
        model.Magazine magazine30 = null;
        model.Book book31 = null;
        model.CD cD32 = null;
        model.Magazine magazine33 = null;
        model.Book[] bookArray34 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList35 = new java.util.ArrayList<model.Book>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList35, bookArray34);
        model.CD[] cDArray37 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList38 = new java.util.ArrayList<model.CD>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList38, cDArray37);
        model.Magazine[] magazineArray40 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList41 = new java.util.ArrayList<model.Magazine>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList41, magazineArray40);
        model.ItemSearchResult itemSearchResult43 = new model.ItemSearchResult(book31, cD32, magazine33, (java.util.Collection<model.Book>) bookList35, (java.util.Collection<model.CD>) cDList38, (java.util.Collection<model.Magazine>) magazineList41);
        model.Book book44 = null;
        model.CD cD45 = null;
        model.Magazine magazine46 = null;
        model.Book[] bookArray47 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList48 = new java.util.ArrayList<model.Book>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList48, bookArray47);
        model.CD[] cDArray50 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList51 = new java.util.ArrayList<model.CD>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList51, cDArray50);
        model.Magazine[] magazineArray53 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList54 = new java.util.ArrayList<model.Magazine>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList54, magazineArray53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult(book44, cD45, magazine46, (java.util.Collection<model.Book>) bookList48, (java.util.Collection<model.CD>) cDList51, (java.util.Collection<model.Magazine>) magazineList54);
        model.CD[] cDArray57 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList58 = new java.util.ArrayList<model.CD>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList58, cDArray57);
        itemSearchResult56.similarCD = cDList58;
        model.Book book61 = null;
        model.CD cD62 = null;
        model.Magazine magazine63 = null;
        model.Book[] bookArray64 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList65 = new java.util.ArrayList<model.Book>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList65, bookArray64);
        model.CD[] cDArray67 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList68 = new java.util.ArrayList<model.CD>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList68, cDArray67);
        model.Magazine[] magazineArray70 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList71 = new java.util.ArrayList<model.Magazine>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList71, magazineArray70);
        model.ItemSearchResult itemSearchResult73 = new model.ItemSearchResult(book61, cD62, magazine63, (java.util.Collection<model.Book>) bookList65, (java.util.Collection<model.CD>) cDList68, (java.util.Collection<model.Magazine>) magazineList71);
        model.ItemSearchResult itemSearchResult74 = new model.ItemSearchResult((model.Book) virtualBook27, cD29, magazine30, (java.util.Collection<model.Book>) bookList35, (java.util.Collection<model.CD>) cDList58, (java.util.Collection<model.Magazine>) magazineList71);
        int int75 = virtualBook27.ID;
        int int76 = virtualBook27.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter77 = null;
        model.PaidNewsletter paidNewsletter78 = null;
        model.VirtualItemSearchResult virtualItemSearchResult79 = new model.VirtualItemSearchResult(virtualBook27, uniProvidedNewsletter77, paidNewsletter78);
        model.PaidNewsletter paidNewsletter80 = virtualItemSearchResult79.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter81 = virtualItemSearchResult79.getUniNewsletter();
        model.PaidNewsletter paidNewsletter82 = virtualItemSearchResult79.getPaidNewsletter();
        model.UniProvidedNewsletter uniProvidedNewsletter83 = virtualItemSearchResult79.getUniNewsletter();
        model.PaidNewsletter paidNewsletter84 = null;
        virtualItemSearchResult79.setPaidNewsletter(paidNewsletter84);
        model.VirtualBook virtualBook86 = virtualItemSearchResult79.virtualBook;
        boolean boolean87 = virtualBook86.isBookLost;
        model.ValidateRegistration validateRegistration88 = new model.ValidateRegistration();
        model.Student student89 = new model.Student();
        student89.viewMyOnlineResource();
        boolean boolean91 = validateRegistration88.validateStaffRegistration((model.Staff) student89);
        model.Faculty faculty92 = new model.Faculty();
        boolean boolean93 = validateRegistration88.validateStaffRegistration((model.Staff) faculty92);
        java.util.Collection<model.Book> bookCollection94 = null;
        faculty92.textbooks = bookCollection94;
        java.util.Collection<model.Course> courseCollection96 = faculty92.courses;
        int int97 = faculty92.ID;
        boolean boolean98 = rentAndReturnSystem0.returnAnItem((model.Item) virtualBook86, (model.Client) faculty92);
        int int99 = virtualBook86.ID;
        org.junit.Assert.assertNull(payment1);
        org.junit.Assert.assertNotNull(payment8);
        org.junit.Assert.assertNotNull(payment9);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 41.0d + "'", double19 == 41.0d);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(virtualBook27);
        org.junit.Assert.assertNotNull(bookArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(cDArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(magazineArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(bookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(cDArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(magazineArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(cDArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(bookArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(cDArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(magazineArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 20 + "'", int76 == 20);
        org.junit.Assert.assertNull(paidNewsletter80);
        org.junit.Assert.assertNull(uniProvidedNewsletter81);
        org.junit.Assert.assertNull(paidNewsletter82);
        org.junit.Assert.assertNull(uniProvidedNewsletter83);
        org.junit.Assert.assertNotNull(virtualBook86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNull(courseCollection96);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 0 + "'", int97 == 0);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 0 + "'", int99 == 0);
    }

    @Test
    public void test2065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2065");
        model.Database database7 = model.Database.createDatabase("src/Client.csv", "src/CD.csv", "model.RegistrationFailedException: src/Magazine.csv", "src/Magazine.csv", "", "model.RegistrationFailedException: src/Magazine.csv", "src/VirtualBook.csv");
        model.Login login8 = model.Login.makeLogin(database7);
        model.Database database9 = login8.db;
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(login8);
        org.junit.Assert.assertNotNull(database9);
    }

    @Test
    public void test2066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2066");
        model.LibraryManagementTeam libraryManagementTeam0 = new model.LibraryManagementTeam();
        libraryManagementTeam0.accessCode = (short) 10;
        java.util.Collection<model.Request> requestCollection3 = libraryManagementTeam0.bookRequests;
        java.util.ArrayList<model.Item> itemList4 = libraryManagementTeam0.items;
        model.ItemManagement itemManagement5 = new model.ItemManagement();
        model.Database database6 = null;
        itemManagement5.database = database6;
        model.Student student8 = new model.Student();
        int int9 = student8.ID;
        model.StudentOnlineResources studentOnlineResources10 = new model.StudentOnlineResources((model.Client) student8);
        model.VirtualBook virtualBook12 = studentOnlineResources10.searchAccessibleBook("");
        itemManagement5.disableAnItem((model.Item) virtualBook12);
        model.Item item15 = itemManagement5.selectAnItemFromDatabase((int) '#');
        model.ItemManagement itemManagement16 = new model.ItemManagement();
        model.Database database17 = null;
        itemManagement16.database = database17;
        model.Student student19 = new model.Student();
        int int20 = student19.ID;
        model.StudentOnlineResources studentOnlineResources21 = new model.StudentOnlineResources((model.Client) student19);
        model.VirtualBook virtualBook23 = studentOnlineResources21.searchAccessibleBook("");
        itemManagement16.disableAnItem((model.Item) virtualBook23);
        itemManagement5.disableAnItem((model.Item) virtualBook23);
        model.Database database26 = itemManagement5.database;
        libraryManagementTeam0.itemManagement = itemManagement5;
        model.ItemManagement itemManagement28 = new model.ItemManagement();
        model.Student student29 = new model.Student();
        int int30 = student29.ID;
        model.StudentOnlineResources studentOnlineResources31 = new model.StudentOnlineResources((model.Client) student29);
        model.VirtualBook virtualBook33 = studentOnlineResources31.searchAccessibleBook("");
        model.VirtualItemContent virtualItemContent34 = virtualBook33.content;
        itemManagement28.disableAnItem((model.Item) virtualBook33);
        libraryManagementTeam0.itemManagement = itemManagement28;
        org.junit.Assert.assertNull(requestCollection3);
        org.junit.Assert.assertNotNull(itemList4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(virtualBook12);
        org.junit.Assert.assertNull(item15);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(virtualBook23);
        org.junit.Assert.assertNull(database26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(virtualBook33);
        org.junit.Assert.assertNull(virtualItemContent34);
    }

    @Test
    public void test2067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2067");
        model.RentingNotAllowedException rentingNotAllowedException1 = new model.RentingNotAllowedException("src/Newsletter.csv");
    }

    @Test
    public void test2068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2068");
        model.Database database7 = model.Database.createDatabase("src/VirtualBook.csv", "", "model.RegistrationFailedException: src/Magazine.csv", "model.RegistrationFailedException: ", "model.RegistrationFailedException: src/Magazine.csv", "src/CD.csv", "src/CD.csv");
        int int8 = database7.getRandomID();
        java.util.ArrayList<java.lang.String> strList9 = database7.getAllItems();
        model.SearchItems searchItems10 = new model.SearchItems(database7);
        model.SearchVirtualItem searchVirtualItem11 = new model.SearchVirtualItem(database7);
        model.PaidNewsletter paidNewsletter13 = searchVirtualItem11.getPaidNewsletter("model.RegistrationFailedException: src/Book.csv");
        model.VirtualItemSearchResult virtualItemSearchResult15 = searchVirtualItem11.searchVirtualItem("");
        model.PaidNewsletter paidNewsletter17 = searchVirtualItem11.getPaidNewsletter("src/BorrowedItems.csv");
        org.junit.Assert.assertNotNull(database7);
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 7241244 + "'", int8 == 7241244);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(paidNewsletter13);
        org.junit.Assert.assertNotNull(virtualItemSearchResult15);
        org.junit.Assert.assertNull(paidNewsletter17);
    }

    @Test
    public void test2069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2069");
        model.VirtualBook virtualBook1 = new model.VirtualBook("model.RegistrationFailedException: src/VirtualBook.csv");
    }

    @Test
    public void test2070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2070");
        model.Database database0 = null;
        model.Login login1 = new model.Login(database0);
        model.Database database9 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str10 = database9.getBookFilePath();
        database9.itemPath = "hi!";
        model.Database.database = database9;
        java.lang.String str14 = database9.getNewspaperFilePath();
        login1.db = database9;
        java.lang.String str16 = database9.getClientFilePath();
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "src/Book.csv" + "'", str10, "src/Book.csv");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "src/Newsletter.csv" + "'", str14, "src/Newsletter.csv");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "src/Client.csv" + "'", str16, "src/Client.csv");
    }

    @Test
    public void test2071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2071");
        model.Visitor visitor0 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList1 = visitor0.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) visitor0);
        model.RentedItem[] rentedItemArray3 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList4 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList4, rentedItemArray3);
        model.BorrowingManager borrowingManager6 = new model.BorrowingManager(rentedItemList4);
        model.Visitor visitor7 = new model.Visitor();
        visitor7.email = "hi!";
        borrowingManager6.client = visitor7;
        studentOnlineResources2.client = visitor7;
        model.Student student12 = new model.Student();
        int int13 = student12.ID;
        model.StudentOnlineResources studentOnlineResources14 = new model.StudentOnlineResources((model.Client) student12);
        model.VirtualBook virtualBook16 = studentOnlineResources14.searchAccessibleBook("");
        model.CD cD18 = new model.CD("");
        model.Magazine magazine19 = null;
        model.Book book20 = null;
        model.CD cD21 = null;
        model.Magazine magazine22 = null;
        model.Book[] bookArray23 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList24 = new java.util.ArrayList<model.Book>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList24, bookArray23);
        model.CD[] cDArray26 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList27 = new java.util.ArrayList<model.CD>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList27, cDArray26);
        model.Magazine[] magazineArray29 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList30 = new java.util.ArrayList<model.Magazine>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList30, magazineArray29);
        model.ItemSearchResult itemSearchResult32 = new model.ItemSearchResult(book20, cD21, magazine22, (java.util.Collection<model.Book>) bookList24, (java.util.Collection<model.CD>) cDList27, (java.util.Collection<model.Magazine>) magazineList30);
        model.Book book33 = null;
        model.CD cD34 = null;
        model.Magazine magazine35 = null;
        model.Book[] bookArray36 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList37 = new java.util.ArrayList<model.Book>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList37, bookArray36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        model.Magazine[] magazineArray42 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList43 = new java.util.ArrayList<model.Magazine>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList43, magazineArray42);
        model.ItemSearchResult itemSearchResult45 = new model.ItemSearchResult(book33, cD34, magazine35, (java.util.Collection<model.Book>) bookList37, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList43);
        model.CD[] cDArray46 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList47 = new java.util.ArrayList<model.CD>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList47, cDArray46);
        itemSearchResult45.similarCD = cDList47;
        model.Book book50 = null;
        model.CD cD51 = null;
        model.Magazine magazine52 = null;
        model.Book[] bookArray53 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList54 = new java.util.ArrayList<model.Book>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList54, bookArray53);
        model.CD[] cDArray56 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList57 = new java.util.ArrayList<model.CD>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList57, cDArray56);
        model.Magazine[] magazineArray59 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList60 = new java.util.ArrayList<model.Magazine>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList60, magazineArray59);
        model.ItemSearchResult itemSearchResult62 = new model.ItemSearchResult(book50, cD51, magazine52, (java.util.Collection<model.Book>) bookList54, (java.util.Collection<model.CD>) cDList57, (java.util.Collection<model.Magazine>) magazineList60);
        model.ItemSearchResult itemSearchResult63 = new model.ItemSearchResult((model.Book) virtualBook16, cD18, magazine19, (java.util.Collection<model.Book>) bookList24, (java.util.Collection<model.CD>) cDList47, (java.util.Collection<model.Magazine>) magazineList60);
        java.lang.String str64 = studentOnlineResources2.readVirtualItem((model.VirtualItem) virtualBook16);
        virtualBook16.showContent();
        org.junit.Assert.assertNull(virtualBookList1);
        org.junit.Assert.assertNotNull(rentedItemArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(virtualBook16);
        org.junit.Assert.assertNotNull(bookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(cDArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(magazineArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(bookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(magazineArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(cDArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(bookArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(cDArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(magazineArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(str64);
    }

    @Test
    public void test2072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2072");
        model.Book book0 = null;
        model.CD cD1 = null;
        model.Magazine magazine2 = null;
        model.Book[] bookArray3 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList4 = new java.util.ArrayList<model.Book>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList4, bookArray3);
        model.CD[] cDArray6 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList7 = new java.util.ArrayList<model.CD>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList7, cDArray6);
        model.Magazine[] magazineArray9 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList10 = new java.util.ArrayList<model.Magazine>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList10, magazineArray9);
        model.ItemSearchResult itemSearchResult12 = new model.ItemSearchResult(book0, cD1, magazine2, (java.util.Collection<model.Book>) bookList4, (java.util.Collection<model.CD>) cDList7, (java.util.Collection<model.Magazine>) magazineList10);
        model.CD[] cDArray13 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList14 = new java.util.ArrayList<model.CD>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList14, cDArray13);
        itemSearchResult12.similarCD = cDList14;
        model.Book book17 = null;
        itemSearchResult12.book = book17;
        model.Book book19 = null;
        model.CD cD20 = null;
        model.Magazine magazine21 = null;
        model.Book[] bookArray22 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList23 = new java.util.ArrayList<model.Book>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList23, bookArray22);
        model.CD[] cDArray25 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList26 = new java.util.ArrayList<model.CD>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList26, cDArray25);
        model.Magazine[] magazineArray28 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList29 = new java.util.ArrayList<model.Magazine>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList29, magazineArray28);
        model.ItemSearchResult itemSearchResult31 = new model.ItemSearchResult(book19, cD20, magazine21, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList29);
        itemSearchResult12.similarBooks = bookList23;
        model.Magazine magazine34 = new model.Magazine("src/Book.csv");
        itemSearchResult12.magazine = magazine34;
        model.Magazine magazine36 = itemSearchResult12.magazine;
        magazine36.canBePurchased = true;
        org.junit.Assert.assertNotNull(bookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(cDArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(magazineArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(cDArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(bookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(magazineArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazine36);
    }

    @Test
    public void test2073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2073");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.Visitor visitor5 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList6 = visitor5.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources7 = new model.StudentOnlineResources((model.Client) visitor5);
        model.RentedItem[] rentedItemArray8 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList9 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList9, rentedItemArray8);
        model.BorrowingManager borrowingManager11 = new model.BorrowingManager(rentedItemList9);
        model.Visitor visitor12 = new model.Visitor();
        visitor12.email = "hi!";
        borrowingManager11.client = visitor12;
        studentOnlineResources7.client = visitor12;
        model.UniProvidedNewsletter uniProvidedNewsletter17 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter17.title = "";
        java.lang.String str20 = studentOnlineResources7.readVirtualItem((model.VirtualItem) uniProvidedNewsletter17);
        newsletterSubscriptionManager3.cancelSubscription((model.Newsletter) uniProvidedNewsletter17);
        java.util.ArrayList<model.Newsletter> newsletterList22 = newsletterSubscriptionManager3.newsletterSubscribed;
        model.NewsletterSubscriptionManager newsletterSubscriptionManager23 = new model.NewsletterSubscriptionManager(newsletterList22);
        java.util.ArrayList<model.Newsletter> newsletterList24 = newsletterSubscriptionManager23.newsletterSubscribed;
        model.NewsletterSubscriptionManager newsletterSubscriptionManager25 = new model.NewsletterSubscriptionManager(newsletterList24);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager26 = new model.NewsletterSubscriptionManager(newsletterList24);
        java.util.ArrayList<model.Newsletter> newsletterList27 = null;
        newsletterSubscriptionManager26.newsletterSubscribed = newsletterList27;
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertNull(virtualBookList6);
        org.junit.Assert.assertNotNull(rentedItemArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(newsletterList22);
        org.junit.Assert.assertNotNull(newsletterList24);
    }

    @Test
    public void test2074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2074");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.Request request1 = new model.Request();
        request1.title = "";
        java.lang.String str4 = requestForum0.makeARequest(request1);
        model.LibraryManagementTeam libraryManagementTeam5 = new model.LibraryManagementTeam();
        int int6 = libraryManagementTeam5.ID;
        model.Magazine magazine8 = new model.Magazine("");
        java.util.Calendar calendar9 = magazine8.date;
        magazine8.author = "model.RegistrationFailedException: ";
        libraryManagementTeam5.disableAnItem((model.Item) magazine8);
        requestForum0.managementTeam = libraryManagementTeam5;
        model.Student student14 = new model.Student();
        int int15 = student14.ID;
        model.StudentOnlineResources studentOnlineResources16 = new model.StudentOnlineResources((model.Client) student14);
        model.VirtualBook virtualBook18 = studentOnlineResources16.searchAccessibleBook("");
        model.VirtualItemContent virtualItemContent19 = virtualBook18.content;
        model.Student student20 = new model.Student();
        int int21 = student20.ID;
        model.StudentOnlineResources studentOnlineResources22 = new model.StudentOnlineResources((model.Client) student20);
        model.VirtualBook virtualBook24 = studentOnlineResources22.searchAccessibleBook("");
        model.CD cD26 = new model.CD("");
        model.Magazine magazine27 = null;
        model.Book book28 = null;
        model.CD cD29 = null;
        model.Magazine magazine30 = null;
        model.Book[] bookArray31 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList32 = new java.util.ArrayList<model.Book>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList32, bookArray31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        model.Magazine[] magazineArray37 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList38 = new java.util.ArrayList<model.Magazine>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList38, magazineArray37);
        model.ItemSearchResult itemSearchResult40 = new model.ItemSearchResult(book28, cD29, magazine30, (java.util.Collection<model.Book>) bookList32, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList38);
        model.Book book41 = null;
        model.CD cD42 = null;
        model.Magazine magazine43 = null;
        model.Book[] bookArray44 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList45 = new java.util.ArrayList<model.Book>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList45, bookArray44);
        model.CD[] cDArray47 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList48 = new java.util.ArrayList<model.CD>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList48, cDArray47);
        model.Magazine[] magazineArray50 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList51 = new java.util.ArrayList<model.Magazine>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList51, magazineArray50);
        model.ItemSearchResult itemSearchResult53 = new model.ItemSearchResult(book41, cD42, magazine43, (java.util.Collection<model.Book>) bookList45, (java.util.Collection<model.CD>) cDList48, (java.util.Collection<model.Magazine>) magazineList51);
        model.CD[] cDArray54 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList55 = new java.util.ArrayList<model.CD>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList55, cDArray54);
        itemSearchResult53.similarCD = cDList55;
        model.Book book58 = null;
        model.CD cD59 = null;
        model.Magazine magazine60 = null;
        model.Book[] bookArray61 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList62 = new java.util.ArrayList<model.Book>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList62, bookArray61);
        model.CD[] cDArray64 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList65 = new java.util.ArrayList<model.CD>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList65, cDArray64);
        model.Magazine[] magazineArray67 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList68 = new java.util.ArrayList<model.Magazine>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList68, magazineArray67);
        model.ItemSearchResult itemSearchResult70 = new model.ItemSearchResult(book58, cD59, magazine60, (java.util.Collection<model.Book>) bookList62, (java.util.Collection<model.CD>) cDList65, (java.util.Collection<model.Magazine>) magazineList68);
        model.ItemSearchResult itemSearchResult71 = new model.ItemSearchResult((model.Book) virtualBook24, cD26, magazine27, (java.util.Collection<model.Book>) bookList32, (java.util.Collection<model.CD>) cDList55, (java.util.Collection<model.Magazine>) magazineList68);
        int int72 = virtualBook24.ID;
        int int73 = virtualBook24.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter74 = null;
        model.PaidNewsletter paidNewsletter75 = null;
        model.VirtualItemSearchResult virtualItemSearchResult76 = new model.VirtualItemSearchResult(virtualBook24, uniProvidedNewsletter74, paidNewsletter75);
        model.PaidNewsletter paidNewsletter77 = virtualItemSearchResult76.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter78 = new model.UniProvidedNewsletter();
        virtualItemSearchResult76.setUniNewsletter(uniProvidedNewsletter78);
        java.lang.String str80 = uniProvidedNewsletter78.title;
        model.PaidNewsletter paidNewsletter81 = null;
        model.VirtualItemSearchResult virtualItemSearchResult82 = new model.VirtualItemSearchResult(virtualBook18, uniProvidedNewsletter78, paidNewsletter81);
        model.VirtualItemContent virtualItemContent84 = new model.VirtualItemContent("hi!");
        java.lang.String str85 = virtualItemContent84.link;
        java.lang.String str87 = virtualItemContent84.getContent("");
        java.lang.String str89 = virtualItemContent84.getContent("model.RegistrationFailedException: ");
        java.lang.String str90 = virtualItemContent84.link;
        virtualBook18.content = virtualItemContent84;
        libraryManagementTeam5.addAnItem((model.Item) virtualBook18);
        java.lang.Object obj93 = null;
        boolean boolean94 = virtualBook18.equals(obj93);
        int int95 = virtualBook18.edition;
        virtualBook18.showContent();
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(calendar9);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(virtualBook18);
        org.junit.Assert.assertNull(virtualItemContent19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(virtualBook24);
        org.junit.Assert.assertNotNull(bookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(magazineArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(bookArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(cDArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(magazineArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(cDArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(bookArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(cDArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(magazineArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 20 + "'", int73 == 20);
        org.junit.Assert.assertNull(paidNewsletter77);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "hi!" + "'", str85, "hi!");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "hi!" + "'", str87, "hi!");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "hi!" + "'", str89, "hi!");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "hi!" + "'", str90, "hi!");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 0 + "'", int95 == 0);
    }

    @Test
    public void test2075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2075");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.Request request1 = new model.Request();
        java.lang.String str2 = request1.type;
        request1.title = "model.RegistrationFailedException: src/Magazine.csv";
        request1.type = "model.RegistrationFailedException: src/Book.csv";
        java.lang.String str7 = request1.type;
        int int8 = requestForum0.assessBooksPriority(request1);
        java.lang.String str9 = request1.title;
        model.RentedItem[] rentedItemArray10 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList11 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList11, rentedItemArray10);
        model.BorrowingManager borrowingManager13 = new model.BorrowingManager(rentedItemList11);
        model.RentedItem[] rentedItemArray14 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList15 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList15, rentedItemArray14);
        model.BorrowingManager borrowingManager17 = new model.BorrowingManager(rentedItemList15);
        model.RentedItem[] rentedItemArray18 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList19 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList19, rentedItemArray18);
        model.BorrowingManager borrowingManager21 = new model.BorrowingManager(rentedItemList19);
        borrowingManager17.physicalItemBorrowed = rentedItemList19;
        borrowingManager13.physicalItemBorrowed = rentedItemList19;
        int int24 = borrowingManager13.itemsBorrowedCount;
        java.util.ArrayList<model.RentedItem> rentedItemList25 = borrowingManager13.physicalItemBorrowed;
        model.BorrowingManager borrowingManager26 = new model.BorrowingManager(rentedItemList25);
        model.Student student27 = new model.Student();
        int int28 = student27.ID;
        model.StudentOnlineResources studentOnlineResources29 = new model.StudentOnlineResources((model.Client) student27);
        model.StudentOnlineResources studentOnlineResources30 = new model.StudentOnlineResources((model.Client) student27);
        student27.ID = 9047933;
        borrowingManager26.client = student27;
        request1.requestee = student27;
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "model.RegistrationFailedException: src/Book.csv" + "'", str7, "model.RegistrationFailedException: src/Book.csv");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "model.RegistrationFailedException: src/Magazine.csv" + "'", str9, "model.RegistrationFailedException: src/Magazine.csv");
        org.junit.Assert.assertNotNull(rentedItemArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(rentedItemArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(rentedItemArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(rentedItemList25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }

    @Test
    public void test2076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2076");
        model.PayCredit payCredit0 = new model.PayCredit();
        payCredit0.amountPay = 100;
        payCredit0.pay((double) 4749527);
        double double5 = payCredit0.amountPay;
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4749627.0d + "'", double5 == 4749627.0d);
    }

    @Test
    public void test2077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2077");
        model.BuySpecialItems buySpecialItems0 = new model.BuySpecialItems();
        model.Book book1 = null;
        model.CD cD3 = new model.CD("");
        model.Magazine magazine4 = null;
        java.util.Collection<model.Book> bookCollection5 = null;
        model.Book book6 = null;
        model.CD cD7 = null;
        model.Magazine magazine8 = null;
        model.Book[] bookArray9 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList10 = new java.util.ArrayList<model.Book>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList10, bookArray9);
        model.CD[] cDArray12 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList13 = new java.util.ArrayList<model.CD>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList13, cDArray12);
        model.Magazine[] magazineArray15 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList16 = new java.util.ArrayList<model.Magazine>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList16, magazineArray15);
        model.ItemSearchResult itemSearchResult18 = new model.ItemSearchResult(book6, cD7, magazine8, (java.util.Collection<model.Book>) bookList10, (java.util.Collection<model.CD>) cDList13, (java.util.Collection<model.Magazine>) magazineList16);
        model.Book book19 = null;
        model.CD cD20 = null;
        model.Magazine magazine21 = null;
        model.Book[] bookArray22 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList23 = new java.util.ArrayList<model.Book>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList23, bookArray22);
        model.CD[] cDArray25 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList26 = new java.util.ArrayList<model.CD>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList26, cDArray25);
        model.Magazine[] magazineArray28 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList29 = new java.util.ArrayList<model.Magazine>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList29, magazineArray28);
        model.ItemSearchResult itemSearchResult31 = new model.ItemSearchResult(book19, cD20, magazine21, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList29);
        itemSearchResult18.similarCD = cDList26;
        model.Book book33 = null;
        model.CD cD34 = null;
        model.Magazine magazine35 = null;
        model.Book[] bookArray36 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList37 = new java.util.ArrayList<model.Book>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList37, bookArray36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        model.Magazine[] magazineArray42 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList43 = new java.util.ArrayList<model.Magazine>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList43, magazineArray42);
        model.ItemSearchResult itemSearchResult45 = new model.ItemSearchResult(book33, cD34, magazine35, (java.util.Collection<model.Book>) bookList37, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book1, cD3, magazine4, bookCollection5, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList43);
        cD3.ID = (short) 10;
        boolean boolean50 = buySpecialItems0.buyAnItem((model.Item) cD3, (double) 0);
        model.PayDebit payDebit51 = new model.PayDebit();
        buySpecialItems0.paymentAPI = payDebit51;
        double double53 = payDebit51.amountPay;
        payDebit51.amountPay = 10.0f;
        org.junit.Assert.assertNotNull(bookArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(cDArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(magazineArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(bookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(magazineArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(bookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(magazineArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
    }

    @Test
    public void test2078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2078");
        model.Database database7 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database7;
        model.SearchVirtualItem searchVirtualItem9 = new model.SearchVirtualItem(database7);
        model.VirtualItemSearchResult virtualItemSearchResult11 = searchVirtualItem9.searchVirtualItem("src/VirtualBook.csv");
        model.PaidNewsletter paidNewsletter13 = searchVirtualItem9.getPaidNewsletter("src/Magazine.csv");
        model.UniProvidedNewsletter uniProvidedNewsletter15 = searchVirtualItem9.getUniNewsletter("src/VirtualBook.csv");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(virtualItemSearchResult11);
        org.junit.Assert.assertNull(paidNewsletter13);
        org.junit.Assert.assertNull(uniProvidedNewsletter15);
    }

    @Test
    public void test2079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2079");
        model.Database database0 = model.Database.database;
        java.lang.String str1 = database0.getMagazineFilePath();
        model.Login login2 = new model.Login(database0);
        java.lang.String str3 = database0.getBorrowedItemFilePath();
        model.Register register4 = model.Register.makeRegister(database0);
        model.SearchItems searchItems5 = new model.SearchItems(database0);
        org.junit.Assert.assertNotNull(database0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "src/Magazine.csv" + "'", str1, "src/Magazine.csv");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "src/BorrowedItems.csv" + "'", str3, "src/BorrowedItems.csv");
        org.junit.Assert.assertNotNull(register4);
    }

    @Test
    public void test2080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2080");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.Request request1 = new model.Request();
        request1.title = "";
        java.lang.String str4 = requestForum0.makeARequest(request1);
        model.LibraryManagementTeam libraryManagementTeam5 = new model.LibraryManagementTeam();
        int int6 = libraryManagementTeam5.ID;
        model.Magazine magazine8 = new model.Magazine("");
        java.util.Calendar calendar9 = magazine8.date;
        magazine8.author = "model.RegistrationFailedException: ";
        libraryManagementTeam5.disableAnItem((model.Item) magazine8);
        requestForum0.managementTeam = libraryManagementTeam5;
        model.Request request14 = new model.Request();
        request14.title = "src/Client.csv";
        java.lang.String str17 = requestForum0.makeARequest(request14);
        java.lang.String str18 = request14.type;
        request14.title = "model.RentingNotAllowedException: src/Magazine.csv";
        request14.type = "model.RegistrationFailedException: model.RentingNotAllowedException: hi!";
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(calendar9);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test2081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2081");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        model.Book book4 = null;
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        java.util.Collection<model.Book> bookCollection8 = null;
        model.Book book9 = null;
        model.CD cD10 = null;
        model.Magazine magazine11 = null;
        model.Book[] bookArray12 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList13 = new java.util.ArrayList<model.Book>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList13, bookArray12);
        model.CD[] cDArray15 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList16 = new java.util.ArrayList<model.CD>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList16, cDArray15);
        model.Magazine[] magazineArray18 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList19 = new java.util.ArrayList<model.Magazine>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList19, magazineArray18);
        model.ItemSearchResult itemSearchResult21 = new model.ItemSearchResult(book9, cD10, magazine11, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList16, (java.util.Collection<model.Magazine>) magazineList19);
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        itemSearchResult21.similarCD = cDList29;
        model.Book book36 = null;
        model.CD cD37 = null;
        model.Magazine magazine38 = null;
        model.Book[] bookArray39 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList40 = new java.util.ArrayList<model.Book>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList40, bookArray39);
        model.CD[] cDArray42 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList43 = new java.util.ArrayList<model.CD>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList43, cDArray42);
        model.Magazine[] magazineArray45 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList46 = new java.util.ArrayList<model.Magazine>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList46, magazineArray45);
        model.ItemSearchResult itemSearchResult48 = new model.ItemSearchResult(book36, cD37, magazine38, (java.util.Collection<model.Book>) bookList40, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList46);
        model.ItemSearchResult itemSearchResult49 = new model.ItemSearchResult(book4, cD6, magazine7, bookCollection8, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList46);
        cD6.ID = (short) 10;
        borrowingManager3.removeRentedItem((model.Item) cD6);
        model.Client client53 = borrowingManager3.client;
        model.Visitor visitor54 = new model.Visitor();
        borrowingManager3.client = visitor54;
        java.lang.String str56 = visitor54.username;
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(bookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cDArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(magazineArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(bookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cDArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(magazineArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(client53);
        org.junit.Assert.assertNull(str56);
    }

    @Test
    public void test2082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2082");
        model.Database database0 = model.Database.database;
        java.lang.String str1 = database0.getMagazineFilePath();
        model.Login login2 = new model.Login(database0);
        model.RentAndReturnSystem rentAndReturnSystem3 = new model.RentAndReturnSystem();
        model.BuySpecialItems buySpecialItems4 = new model.BuySpecialItems();
        model.PayDebit payDebit5 = new model.PayDebit();
        buySpecialItems4.paymentAPI = payDebit5;
        rentAndReturnSystem3.paymentAPI = payDebit5;
        model.PaidNewsletter paidNewsletter8 = new model.PaidNewsletter();
        model.Student student9 = new model.Student();
        int int10 = student9.ID;
        model.StudentOnlineResources studentOnlineResources11 = new model.StudentOnlineResources((model.Client) student9);
        model.VirtualBook virtualBook13 = studentOnlineResources11.searchAccessibleBook("");
        model.CD cD15 = new model.CD("");
        model.Magazine magazine16 = null;
        model.Book book17 = null;
        model.CD cD18 = null;
        model.Magazine magazine19 = null;
        model.Book[] bookArray20 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList21 = new java.util.ArrayList<model.Book>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList21, bookArray20);
        model.CD[] cDArray23 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList24 = new java.util.ArrayList<model.CD>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList24, cDArray23);
        model.Magazine[] magazineArray26 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList27 = new java.util.ArrayList<model.Magazine>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList27, magazineArray26);
        model.ItemSearchResult itemSearchResult29 = new model.ItemSearchResult(book17, cD18, magazine19, (java.util.Collection<model.Book>) bookList21, (java.util.Collection<model.CD>) cDList24, (java.util.Collection<model.Magazine>) magazineList27);
        model.Book book30 = null;
        model.CD cD31 = null;
        model.Magazine magazine32 = null;
        model.Book[] bookArray33 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList34 = new java.util.ArrayList<model.Book>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList34, bookArray33);
        model.CD[] cDArray36 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList37 = new java.util.ArrayList<model.CD>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList37, cDArray36);
        model.Magazine[] magazineArray39 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList40 = new java.util.ArrayList<model.Magazine>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList40, magazineArray39);
        model.ItemSearchResult itemSearchResult42 = new model.ItemSearchResult(book30, cD31, magazine32, (java.util.Collection<model.Book>) bookList34, (java.util.Collection<model.CD>) cDList37, (java.util.Collection<model.Magazine>) magazineList40);
        model.CD[] cDArray43 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList44 = new java.util.ArrayList<model.CD>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList44, cDArray43);
        itemSearchResult42.similarCD = cDList44;
        model.Book book47 = null;
        model.CD cD48 = null;
        model.Magazine magazine49 = null;
        model.Book[] bookArray50 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList51 = new java.util.ArrayList<model.Book>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList51, bookArray50);
        model.CD[] cDArray53 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList54 = new java.util.ArrayList<model.CD>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList54, cDArray53);
        model.Magazine[] magazineArray56 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList57 = new java.util.ArrayList<model.Magazine>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList57, magazineArray56);
        model.ItemSearchResult itemSearchResult59 = new model.ItemSearchResult(book47, cD48, magazine49, (java.util.Collection<model.Book>) bookList51, (java.util.Collection<model.CD>) cDList54, (java.util.Collection<model.Magazine>) magazineList57);
        model.ItemSearchResult itemSearchResult60 = new model.ItemSearchResult((model.Book) virtualBook13, cD15, magazine16, (java.util.Collection<model.Book>) bookList21, (java.util.Collection<model.CD>) cDList44, (java.util.Collection<model.Magazine>) magazineList57);
        int int61 = virtualBook13.ID;
        int int62 = virtualBook13.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter63 = null;
        model.PaidNewsletter paidNewsletter64 = null;
        model.VirtualItemSearchResult virtualItemSearchResult65 = new model.VirtualItemSearchResult(virtualBook13, uniProvidedNewsletter63, paidNewsletter64);
        virtualBook13.author = "hi!";
        virtualBook13.showContent();
        boolean boolean69 = paidNewsletter8.equals((java.lang.Object) virtualBook13);
        model.Faculty faculty70 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection71 = faculty70.courses;
        boolean boolean72 = rentAndReturnSystem3.rentAnItem((model.Item) virtualBook13, (model.Client) faculty70);
        database0.addClient((model.Client) faculty70);
        java.util.Collection<model.Book> bookCollection74 = faculty70.textbooks;
        org.junit.Assert.assertNotNull(database0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "src/Magazine.csv" + "'", str1, "src/Magazine.csv");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(virtualBook13);
        org.junit.Assert.assertNotNull(bookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(cDArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(magazineArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(bookArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(cDArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(magazineArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cDArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(bookArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(cDArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(magazineArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 20 + "'", int62 == 20);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(courseCollection71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(bookCollection74);
    }

    @Test
    public void test2083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2083");
        int int2 = model.SearchStrategy.calculateDistance("model.RentingNotAllowedException: ", "src/Book.csv");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
    }

    @Test
    public void test2084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2084");
        model.Book book0 = null;
        model.CD cD1 = null;
        model.Magazine magazine2 = null;
        model.Book[] bookArray3 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList4 = new java.util.ArrayList<model.Book>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList4, bookArray3);
        model.CD[] cDArray6 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList7 = new java.util.ArrayList<model.CD>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList7, cDArray6);
        model.Magazine[] magazineArray9 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList10 = new java.util.ArrayList<model.Magazine>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList10, magazineArray9);
        model.ItemSearchResult itemSearchResult12 = new model.ItemSearchResult(book0, cD1, magazine2, (java.util.Collection<model.Book>) bookList4, (java.util.Collection<model.CD>) cDList7, (java.util.Collection<model.Magazine>) magazineList10);
        model.CD[] cDArray13 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList14 = new java.util.ArrayList<model.CD>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList14, cDArray13);
        itemSearchResult12.similarCD = cDList14;
        java.util.Collection<model.Magazine> magazineCollection17 = itemSearchResult12.similarMagazine;
        model.Faculty faculty18 = new model.Faculty();
        java.lang.String str19 = faculty18.faculty;
        java.lang.String str20 = faculty18.faculty;
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        itemSearchResult33.book = book38;
        model.Book book40 = null;
        model.CD cD41 = null;
        model.Magazine magazine42 = null;
        model.Book[] bookArray43 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList44 = new java.util.ArrayList<model.Book>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList44, bookArray43);
        model.CD[] cDArray46 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList47 = new java.util.ArrayList<model.CD>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList47, cDArray46);
        model.Magazine[] magazineArray49 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList50 = new java.util.ArrayList<model.Magazine>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList50, magazineArray49);
        model.ItemSearchResult itemSearchResult52 = new model.ItemSearchResult(book40, cD41, magazine42, (java.util.Collection<model.Book>) bookList44, (java.util.Collection<model.CD>) cDList47, (java.util.Collection<model.Magazine>) magazineList50);
        itemSearchResult33.similarBooks = bookList44;
        faculty18.textbooks = bookList44;
        model.Faculty faculty55 = new model.Faculty();
        java.lang.String str56 = faculty55.faculty;
        java.lang.String str57 = faculty55.faculty;
        model.Book book58 = null;
        model.CD cD59 = null;
        model.Magazine magazine60 = null;
        model.Book[] bookArray61 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList62 = new java.util.ArrayList<model.Book>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList62, bookArray61);
        model.CD[] cDArray64 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList65 = new java.util.ArrayList<model.CD>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList65, cDArray64);
        model.Magazine[] magazineArray67 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList68 = new java.util.ArrayList<model.Magazine>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList68, magazineArray67);
        model.ItemSearchResult itemSearchResult70 = new model.ItemSearchResult(book58, cD59, magazine60, (java.util.Collection<model.Book>) bookList62, (java.util.Collection<model.CD>) cDList65, (java.util.Collection<model.Magazine>) magazineList68);
        model.CD[] cDArray71 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList72 = new java.util.ArrayList<model.CD>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList72, cDArray71);
        itemSearchResult70.similarCD = cDList72;
        model.Book book75 = null;
        itemSearchResult70.book = book75;
        model.Book book77 = null;
        model.CD cD78 = null;
        model.Magazine magazine79 = null;
        model.Book[] bookArray80 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList81 = new java.util.ArrayList<model.Book>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList81, bookArray80);
        model.CD[] cDArray83 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList84 = new java.util.ArrayList<model.CD>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList84, cDArray83);
        model.Magazine[] magazineArray86 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList87 = new java.util.ArrayList<model.Magazine>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList87, magazineArray86);
        model.ItemSearchResult itemSearchResult89 = new model.ItemSearchResult(book77, cD78, magazine79, (java.util.Collection<model.Book>) bookList81, (java.util.Collection<model.CD>) cDList84, (java.util.Collection<model.Magazine>) magazineList87);
        itemSearchResult70.similarBooks = bookList81;
        faculty55.textbooks = bookList81;
        faculty18.textbooks = bookList81;
        itemSearchResult12.similarBooks = bookList81;
        org.junit.Assert.assertNotNull(bookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(cDArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(magazineArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(cDArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(magazineCollection17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(cDArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(magazineArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(bookArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(cDArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(magazineArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(cDArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(bookArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(cDArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(magazineArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test2085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2085");
        model.VirtualItemContent virtualItemContent1 = new model.VirtualItemContent("hi!");
        java.lang.String str2 = virtualItemContent1.link;
        java.lang.String str4 = virtualItemContent1.getContent("src/Magazine.csv");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
    }

    @Test
    public void test2086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2086");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.UniProvidedNewsletter uniProvidedNewsletter5 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter5.title = "";
        java.lang.String str8 = uniProvidedNewsletter5.title;
        newsletterSubscriptionManager3.subscribeToUniProvidedNewsletter(uniProvidedNewsletter5, "");
        java.util.ArrayList<model.Newsletter> newsletterList11 = newsletterSubscriptionManager3.newsletterSubscribed;
        model.Visitor visitor12 = new model.Visitor();
        visitor12.email = "hi!";
        newsletterSubscriptionManager3.client = visitor12;
        model.StudentOnlineResources studentOnlineResources16 = new model.StudentOnlineResources((model.Client) visitor12);
        model.Newsletter newsletter18 = studentOnlineResources16.searchSubscribedNewsletter("src/VirtualBook.csv");
        model.Request request19 = new model.Request();
        java.lang.String str20 = request19.type;
        model.Database database28 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database28;
        model.SearchVirtualItem searchVirtualItem30 = new model.SearchVirtualItem(database28);
        model.RentAndReturnSystem rentAndReturnSystem31 = new model.RentAndReturnSystem();
        model.Book book32 = null;
        model.CD cD34 = new model.CD("");
        model.Magazine magazine35 = null;
        java.util.Collection<model.Book> bookCollection36 = null;
        model.Book book37 = null;
        model.CD cD38 = null;
        model.Magazine magazine39 = null;
        model.Book[] bookArray40 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList41 = new java.util.ArrayList<model.Book>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList41, bookArray40);
        model.CD[] cDArray43 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList44 = new java.util.ArrayList<model.CD>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList44, cDArray43);
        model.Magazine[] magazineArray46 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList47 = new java.util.ArrayList<model.Magazine>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList47, magazineArray46);
        model.ItemSearchResult itemSearchResult49 = new model.ItemSearchResult(book37, cD38, magazine39, (java.util.Collection<model.Book>) bookList41, (java.util.Collection<model.CD>) cDList44, (java.util.Collection<model.Magazine>) magazineList47);
        model.Book book50 = null;
        model.CD cD51 = null;
        model.Magazine magazine52 = null;
        model.Book[] bookArray53 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList54 = new java.util.ArrayList<model.Book>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList54, bookArray53);
        model.CD[] cDArray56 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList57 = new java.util.ArrayList<model.CD>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList57, cDArray56);
        model.Magazine[] magazineArray59 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList60 = new java.util.ArrayList<model.Magazine>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList60, magazineArray59);
        model.ItemSearchResult itemSearchResult62 = new model.ItemSearchResult(book50, cD51, magazine52, (java.util.Collection<model.Book>) bookList54, (java.util.Collection<model.CD>) cDList57, (java.util.Collection<model.Magazine>) magazineList60);
        itemSearchResult49.similarCD = cDList57;
        model.Book book64 = null;
        model.CD cD65 = null;
        model.Magazine magazine66 = null;
        model.Book[] bookArray67 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList68 = new java.util.ArrayList<model.Book>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList68, bookArray67);
        model.CD[] cDArray70 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList71 = new java.util.ArrayList<model.CD>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList71, cDArray70);
        model.Magazine[] magazineArray73 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList74 = new java.util.ArrayList<model.Magazine>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList74, magazineArray73);
        model.ItemSearchResult itemSearchResult76 = new model.ItemSearchResult(book64, cD65, magazine66, (java.util.Collection<model.Book>) bookList68, (java.util.Collection<model.CD>) cDList71, (java.util.Collection<model.Magazine>) magazineList74);
        model.ItemSearchResult itemSearchResult77 = new model.ItemSearchResult(book32, cD34, magazine35, bookCollection36, (java.util.Collection<model.CD>) cDList57, (java.util.Collection<model.Magazine>) magazineList74);
        cD34.ID = (short) 10;
        cD34.canBePurchased = false;
        boolean boolean82 = cD34.canBePurchased;
        model.Faculty faculty83 = new model.Faculty();
        boolean boolean84 = rentAndReturnSystem31.rentAnItem((model.Item) cD34, (model.Client) faculty83);
        java.lang.String str85 = faculty83.faculty;
        database28.addClient((model.Client) faculty83);
        request19.requestee = faculty83;
        model.NewsletterSubscriptionManager newsletterSubscriptionManager88 = faculty83.newsletterManager;
        faculty83.email = "";
        studentOnlineResources16.client = faculty83;
        java.lang.String str92 = faculty83.faculty;
        faculty83.ID = 4211142;
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(newsletterList11);
        org.junit.Assert.assertNull(newsletter18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(bookArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(cDArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(magazineArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(bookArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(cDArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(magazineArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(bookArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(cDArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(magazineArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNull(newsletterSubscriptionManager88);
        org.junit.Assert.assertNull(str92);
    }

    @Test
    public void test2087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2087");
        model.BookOverDueNotif bookOverDueNotif0 = new model.BookOverDueNotif();
        java.lang.String str1 = bookOverDueNotif0.message;
        bookOverDueNotif0.message = "model.RegistrationFailedException: ";
        java.lang.String str4 = bookOverDueNotif0.message;
        java.lang.String str5 = bookOverDueNotif0.message;
        java.lang.String str6 = bookOverDueNotif0.message;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "model.RegistrationFailedException: " + "'", str4, "model.RegistrationFailedException: ");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "model.RegistrationFailedException: " + "'", str5, "model.RegistrationFailedException: ");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "model.RegistrationFailedException: " + "'", str6, "model.RegistrationFailedException: ");
    }

    @Test
    public void test2088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2088");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.Database.database = database7;
        java.lang.String str10 = database7.virtualItemFilePath;
        java.lang.String str11 = database7.getBookFilePath();
        database7.itemPath = "src/Magazine.csv";
        model.Login login14 = model.Login.makeLogin(database7);
        java.lang.String str15 = database7.getNewspaperFilePath();
        java.lang.String str16 = database7.getMagazineFilePath();
        model.SearchClient searchClient17 = model.SearchClient.makeSearchClient(database7);
        model.SearchItems searchItems18 = new model.SearchItems(database7);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "model.RegistrationFailedException: model.RentingNotAllowedException: hi!" + "'", str10, "model.RegistrationFailedException: model.RentingNotAllowedException: hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "src/Book.csv" + "'", str11, "src/Book.csv");
        org.junit.Assert.assertNotNull(login14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "src/Newsletter.csv" + "'", str15, "src/Newsletter.csv");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "src/Magazine.csv" + "'", str16, "src/Magazine.csv");
        org.junit.Assert.assertNotNull(searchClient17);
    }

    @Test
    public void test2089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2089");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        boolean boolean4 = borrowingManager3.canRent();
        model.Client client5 = borrowingManager3.client;
        double double6 = borrowingManager3.checkBalanceOwed();
        model.Student student7 = new model.Student();
        int int8 = student7.ID;
        model.StudentOnlineResources studentOnlineResources9 = new model.StudentOnlineResources((model.Client) student7);
        model.VirtualBook virtualBook11 = studentOnlineResources9.searchAccessibleBook("");
        model.CD cD13 = new model.CD("");
        model.Magazine magazine14 = null;
        model.Book book15 = null;
        model.CD cD16 = null;
        model.Magazine magazine17 = null;
        model.Book[] bookArray18 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList19 = new java.util.ArrayList<model.Book>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList19, bookArray18);
        model.CD[] cDArray21 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList22 = new java.util.ArrayList<model.CD>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList22, cDArray21);
        model.Magazine[] magazineArray24 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList25 = new java.util.ArrayList<model.Magazine>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList25, magazineArray24);
        model.ItemSearchResult itemSearchResult27 = new model.ItemSearchResult(book15, cD16, magazine17, (java.util.Collection<model.Book>) bookList19, (java.util.Collection<model.CD>) cDList22, (java.util.Collection<model.Magazine>) magazineList25);
        model.Book book28 = null;
        model.CD cD29 = null;
        model.Magazine magazine30 = null;
        model.Book[] bookArray31 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList32 = new java.util.ArrayList<model.Book>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList32, bookArray31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        model.Magazine[] magazineArray37 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList38 = new java.util.ArrayList<model.Magazine>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList38, magazineArray37);
        model.ItemSearchResult itemSearchResult40 = new model.ItemSearchResult(book28, cD29, magazine30, (java.util.Collection<model.Book>) bookList32, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList38);
        model.CD[] cDArray41 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList42 = new java.util.ArrayList<model.CD>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList42, cDArray41);
        itemSearchResult40.similarCD = cDList42;
        model.Book book45 = null;
        model.CD cD46 = null;
        model.Magazine magazine47 = null;
        model.Book[] bookArray48 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList49 = new java.util.ArrayList<model.Book>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList49, bookArray48);
        model.CD[] cDArray51 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList52 = new java.util.ArrayList<model.CD>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList52, cDArray51);
        model.Magazine[] magazineArray54 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList55 = new java.util.ArrayList<model.Magazine>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList55, magazineArray54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult(book45, cD46, magazine47, (java.util.Collection<model.Book>) bookList49, (java.util.Collection<model.CD>) cDList52, (java.util.Collection<model.Magazine>) magazineList55);
        model.ItemSearchResult itemSearchResult58 = new model.ItemSearchResult((model.Book) virtualBook11, cD13, magazine14, (java.util.Collection<model.Book>) bookList19, (java.util.Collection<model.CD>) cDList42, (java.util.Collection<model.Magazine>) magazineList55);
        int int59 = virtualBook11.ID;
        virtualBook11.ISBN = "hi!";
        model.Student student62 = new model.Student();
        int int63 = student62.ID;
        model.StudentOnlineResources studentOnlineResources64 = new model.StudentOnlineResources((model.Client) student62);
        model.VirtualBook virtualBook66 = studentOnlineResources64.searchAccessibleBook("");
        model.Client client67 = studentOnlineResources64.client;
        boolean boolean68 = virtualBook11.equals((java.lang.Object) studentOnlineResources64);
        // The following exception was thrown during execution in test generation
        try {
            borrowingManager3.rentAnItem((model.Item) virtualBook11, "src/Newsletter.csv");
            org.junit.Assert.fail("Expected exception of type model.RentingNotAllowedException; message: Item Not Rentable.");
        } catch (model.RentingNotAllowedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(client5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(virtualBook11);
        org.junit.Assert.assertNotNull(bookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(cDArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(magazineArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(bookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(magazineArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(cDArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(bookArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(cDArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(magazineArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(virtualBook66);
        org.junit.Assert.assertNotNull(client67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test2090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2090");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.Payment payment1 = rentAndReturnSystem0.paymentAPI;
        model.PayMobileWallet payMobileWallet2 = new model.PayMobileWallet();
        payMobileWallet2.amountPay = 100.0f;
        payMobileWallet2.amountPay = (byte) -1;
        rentAndReturnSystem0.paymentAPI = payMobileWallet2;
        model.ItemManagement itemManagement8 = new model.ItemManagement();
        model.Database database9 = null;
        itemManagement8.database = database9;
        model.Student student11 = new model.Student();
        int int12 = student11.ID;
        model.StudentOnlineResources studentOnlineResources13 = new model.StudentOnlineResources((model.Client) student11);
        model.VirtualBook virtualBook15 = studentOnlineResources13.searchAccessibleBook("");
        itemManagement8.disableAnItem((model.Item) virtualBook15);
        model.Item item18 = itemManagement8.selectAnItemFromDatabase((int) '#');
        model.ItemManagement itemManagement19 = new model.ItemManagement();
        model.Database database20 = null;
        itemManagement19.database = database20;
        model.Student student22 = new model.Student();
        int int23 = student22.ID;
        model.StudentOnlineResources studentOnlineResources24 = new model.StudentOnlineResources((model.Client) student22);
        model.VirtualBook virtualBook26 = studentOnlineResources24.searchAccessibleBook("");
        itemManagement19.disableAnItem((model.Item) virtualBook26);
        itemManagement8.disableAnItem((model.Item) virtualBook26);
        int int29 = virtualBook26.copiesAvailable;
        model.Visitor visitor30 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList31 = visitor30.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources32 = new model.StudentOnlineResources((model.Client) visitor30);
        model.RentedItem[] rentedItemArray33 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList34 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList34, rentedItemArray33);
        model.BorrowingManager borrowingManager36 = new model.BorrowingManager(rentedItemList34);
        model.Visitor visitor37 = new model.Visitor();
        visitor37.email = "hi!";
        borrowingManager36.client = visitor37;
        studentOnlineResources32.client = visitor37;
        visitor37.username = "hi!";
        boolean boolean44 = rentAndReturnSystem0.rentAnItem((model.Item) virtualBook26, (model.Client) visitor37);
        virtualBook26.author = "";
        org.junit.Assert.assertNull(payment1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(virtualBook15);
        org.junit.Assert.assertNull(item18);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(virtualBook26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 20 + "'", int29 == 20);
        org.junit.Assert.assertNull(virtualBookList31);
        org.junit.Assert.assertNotNull(rentedItemArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test2091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2091");
        model.BuySpecialItems buySpecialItems0 = new model.BuySpecialItems();
        model.Book book1 = null;
        model.CD cD3 = new model.CD("");
        model.Magazine magazine4 = null;
        java.util.Collection<model.Book> bookCollection5 = null;
        model.Book book6 = null;
        model.CD cD7 = null;
        model.Magazine magazine8 = null;
        model.Book[] bookArray9 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList10 = new java.util.ArrayList<model.Book>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList10, bookArray9);
        model.CD[] cDArray12 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList13 = new java.util.ArrayList<model.CD>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList13, cDArray12);
        model.Magazine[] magazineArray15 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList16 = new java.util.ArrayList<model.Magazine>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList16, magazineArray15);
        model.ItemSearchResult itemSearchResult18 = new model.ItemSearchResult(book6, cD7, magazine8, (java.util.Collection<model.Book>) bookList10, (java.util.Collection<model.CD>) cDList13, (java.util.Collection<model.Magazine>) magazineList16);
        model.Book book19 = null;
        model.CD cD20 = null;
        model.Magazine magazine21 = null;
        model.Book[] bookArray22 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList23 = new java.util.ArrayList<model.Book>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList23, bookArray22);
        model.CD[] cDArray25 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList26 = new java.util.ArrayList<model.CD>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList26, cDArray25);
        model.Magazine[] magazineArray28 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList29 = new java.util.ArrayList<model.Magazine>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList29, magazineArray28);
        model.ItemSearchResult itemSearchResult31 = new model.ItemSearchResult(book19, cD20, magazine21, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList29);
        itemSearchResult18.similarCD = cDList26;
        model.Book book33 = null;
        model.CD cD34 = null;
        model.Magazine magazine35 = null;
        model.Book[] bookArray36 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList37 = new java.util.ArrayList<model.Book>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList37, bookArray36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        model.Magazine[] magazineArray42 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList43 = new java.util.ArrayList<model.Magazine>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList43, magazineArray42);
        model.ItemSearchResult itemSearchResult45 = new model.ItemSearchResult(book33, cD34, magazine35, (java.util.Collection<model.Book>) bookList37, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book1, cD3, magazine4, bookCollection5, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList43);
        cD3.ID = (short) 10;
        boolean boolean50 = buySpecialItems0.buyAnItem((model.Item) cD3, (double) 0);
        java.util.ArrayList<model.Item> itemList51 = buySpecialItems0.purchasedItems;
        java.util.ArrayList<model.Item> itemList52 = buySpecialItems0.purchasedItems;
        java.util.ArrayList<model.Item> itemList53 = buySpecialItems0.purchasedItems;
        model.CD cD55 = new model.CD("src/CD.csv");
        boolean boolean57 = buySpecialItems0.buyAnItem((model.Item) cD55, (double) 100L);
        org.junit.Assert.assertNotNull(bookArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(cDArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(magazineArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(bookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(magazineArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(bookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(magazineArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(itemList51);
        org.junit.Assert.assertNotNull(itemList52);
        org.junit.Assert.assertNotNull(itemList53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test2092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2092");
        model.ItemManagement itemManagement0 = new model.ItemManagement();
        model.Item item2 = itemManagement0.selectAnItemFromDatabase((int) (short) 0);
        model.Database database3 = model.Database.database;
        model.Student student4 = new model.Student();
        int int5 = student4.ID;
        model.StudentOnlineResources studentOnlineResources6 = new model.StudentOnlineResources((model.Client) student4);
        student4.ID = '#';
        database3.addClient((model.Client) student4);
        itemManagement0.database = database3;
        model.Login login11 = new model.Login(database3);
        model.Database.database = database3;
        org.junit.Assert.assertNull(item2);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test2093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2093");
        model.Faculty faculty0 = new model.Faculty();
        model.BorrowingManager borrowingManager1 = faculty0.borrowManager;
        faculty0.faculty = "model.RegistrationFailedException: src/Magazine.csv";
        faculty0.email = "src/Magazine.csv";
        java.util.Collection<model.Book> bookCollection6 = faculty0.textbooks;
        org.junit.Assert.assertNull(borrowingManager1);
        org.junit.Assert.assertNull(bookCollection6);
    }

    @Test
    public void test2094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2094");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        model.Book book4 = null;
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        java.util.Collection<model.Book> bookCollection8 = null;
        model.Book book9 = null;
        model.CD cD10 = null;
        model.Magazine magazine11 = null;
        model.Book[] bookArray12 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList13 = new java.util.ArrayList<model.Book>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList13, bookArray12);
        model.CD[] cDArray15 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList16 = new java.util.ArrayList<model.CD>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList16, cDArray15);
        model.Magazine[] magazineArray18 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList19 = new java.util.ArrayList<model.Magazine>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList19, magazineArray18);
        model.ItemSearchResult itemSearchResult21 = new model.ItemSearchResult(book9, cD10, magazine11, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList16, (java.util.Collection<model.Magazine>) magazineList19);
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        itemSearchResult21.similarCD = cDList29;
        model.Book book36 = null;
        model.CD cD37 = null;
        model.Magazine magazine38 = null;
        model.Book[] bookArray39 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList40 = new java.util.ArrayList<model.Book>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList40, bookArray39);
        model.CD[] cDArray42 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList43 = new java.util.ArrayList<model.CD>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList43, cDArray42);
        model.Magazine[] magazineArray45 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList46 = new java.util.ArrayList<model.Magazine>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList46, magazineArray45);
        model.ItemSearchResult itemSearchResult48 = new model.ItemSearchResult(book36, cD37, magazine38, (java.util.Collection<model.Book>) bookList40, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList46);
        model.ItemSearchResult itemSearchResult49 = new model.ItemSearchResult(book4, cD6, magazine7, bookCollection8, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList46);
        cD6.ID = (short) 10;
        borrowingManager3.removeRentedItem((model.Item) cD6);
        float float53 = borrowingManager3.amountOwned;
        model.RentedItem[] rentedItemArray54 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList55 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList55, rentedItemArray54);
        borrowingManager3.physicalItemBorrowed = rentedItemList55;
        model.BorrowingManager borrowingManager58 = new model.BorrowingManager(rentedItemList55);
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(bookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cDArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(magazineArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(bookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cDArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(magazineArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + 0.0f + "'", float53 == 0.0f);
        org.junit.Assert.assertNotNull(rentedItemArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test2095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2095");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        model.RentedItem[] rentedItemArray4 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList5 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList5, rentedItemArray4);
        model.BorrowingManager borrowingManager7 = new model.BorrowingManager(rentedItemList5);
        model.RentedItem[] rentedItemArray8 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList9 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList9, rentedItemArray8);
        model.BorrowingManager borrowingManager11 = new model.BorrowingManager(rentedItemList9);
        borrowingManager7.physicalItemBorrowed = rentedItemList9;
        borrowingManager3.physicalItemBorrowed = rentedItemList9;
        model.Visitor visitor14 = new model.Visitor();
        model.VirtualBook[] virtualBookArray15 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList16 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList16, virtualBookArray15);
        visitor14.virtualBooksAvailable = virtualBookList16;
        borrowingManager3.client = visitor14;
        model.Faculty faculty20 = new model.Faculty();
        java.lang.String str21 = faculty20.faculty;
        borrowingManager3.client = faculty20;
        int int23 = borrowingManager3.itemsBorrowedCount;
        borrowingManager3.amountOwned = (short) 0;
        model.Student student26 = new model.Student();
        int int27 = student26.ID;
        model.StudentOnlineResources studentOnlineResources28 = new model.StudentOnlineResources((model.Client) student26);
        model.VirtualBook virtualBook30 = studentOnlineResources28.searchAccessibleBook("");
        model.CD cD32 = new model.CD("");
        model.Magazine magazine33 = null;
        model.Book book34 = null;
        model.CD cD35 = null;
        model.Magazine magazine36 = null;
        model.Book[] bookArray37 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList38 = new java.util.ArrayList<model.Book>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList38, bookArray37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        model.Magazine[] magazineArray43 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList44 = new java.util.ArrayList<model.Magazine>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList44, magazineArray43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book34, cD35, magazine36, (java.util.Collection<model.Book>) bookList38, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList44);
        model.Book book47 = null;
        model.CD cD48 = null;
        model.Magazine magazine49 = null;
        model.Book[] bookArray50 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList51 = new java.util.ArrayList<model.Book>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList51, bookArray50);
        model.CD[] cDArray53 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList54 = new java.util.ArrayList<model.CD>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList54, cDArray53);
        model.Magazine[] magazineArray56 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList57 = new java.util.ArrayList<model.Magazine>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList57, magazineArray56);
        model.ItemSearchResult itemSearchResult59 = new model.ItemSearchResult(book47, cD48, magazine49, (java.util.Collection<model.Book>) bookList51, (java.util.Collection<model.CD>) cDList54, (java.util.Collection<model.Magazine>) magazineList57);
        model.CD[] cDArray60 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList61 = new java.util.ArrayList<model.CD>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList61, cDArray60);
        itemSearchResult59.similarCD = cDList61;
        model.Book book64 = null;
        model.CD cD65 = null;
        model.Magazine magazine66 = null;
        model.Book[] bookArray67 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList68 = new java.util.ArrayList<model.Book>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList68, bookArray67);
        model.CD[] cDArray70 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList71 = new java.util.ArrayList<model.CD>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList71, cDArray70);
        model.Magazine[] magazineArray73 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList74 = new java.util.ArrayList<model.Magazine>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList74, magazineArray73);
        model.ItemSearchResult itemSearchResult76 = new model.ItemSearchResult(book64, cD65, magazine66, (java.util.Collection<model.Book>) bookList68, (java.util.Collection<model.CD>) cDList71, (java.util.Collection<model.Magazine>) magazineList74);
        model.ItemSearchResult itemSearchResult77 = new model.ItemSearchResult((model.Book) virtualBook30, cD32, magazine33, (java.util.Collection<model.Book>) bookList38, (java.util.Collection<model.CD>) cDList61, (java.util.Collection<model.Magazine>) magazineList74);
        virtualBook30.ID = (short) 10;
        int int80 = virtualBook30.ID;
        boolean boolean81 = virtualBook30.canBePurchased;
        virtualBook30.publisher = "model.RegistrationFailedException: src/Magazine.csv";
        java.time.LocalDate localDate84 = null;
        // The following exception was thrown during execution in test generation
        try {
            borrowingManager3.rentAnItem((model.Item) virtualBook30, localDate84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.toString()\" because \"date\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(rentedItemArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rentedItemArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(virtualBookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(virtualBook30);
        org.junit.Assert.assertNotNull(bookArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(magazineArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(bookArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(cDArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(magazineArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(cDArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(bookArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(cDArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(magazineArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test2096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2096");
        model.Course course0 = new model.Course();
        java.lang.String str1 = course0.code;
        java.lang.String str2 = course0.subject;
        course0.subject = "model.RegistrationFailedException: ";
        java.lang.String str5 = course0.subject;
        course0.year = 7208239;
        java.lang.String str8 = course0.code;
        course0.code = "src/Client.csv";
        course0.code = "model.RegistrationFailedException: src/Magazine.csv";
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "model.RegistrationFailedException: " + "'", str5, "model.RegistrationFailedException: ");
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test2097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2097");
        model.Database database7 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        java.lang.Class<?> wildcardClass8 = database7.getClass();
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test2098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2098");
        model.Database database7 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.SearchClient searchClient8 = model.SearchClient.makeSearchClient(database7);
        java.lang.String str9 = database7.getNewspaperFilePath();
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(searchClient8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "src/Newsletter.csv" + "'", str9, "src/Newsletter.csv");
    }

    @Test
    public void test2099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2099");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.LibraryManagementTeam libraryManagementTeam3 = new model.LibraryManagementTeam();
        int int4 = libraryManagementTeam3.ID;
        model.Student student5 = new model.Student();
        int int6 = student5.ID;
        model.StudentOnlineResources studentOnlineResources7 = new model.StudentOnlineResources((model.Client) student5);
        model.VirtualBook virtualBook9 = studentOnlineResources7.searchAccessibleBook("");
        model.VirtualItemContent virtualItemContent10 = virtualBook9.content;
        libraryManagementTeam3.enableAnItem((model.Item) virtualBook9);
        java.lang.String str12 = studentOnlineResources2.readVirtualItem((model.VirtualItem) virtualBook9);
        model.Client client13 = studentOnlineResources2.client;
        model.Student student14 = new model.Student();
        int int15 = student14.ID;
        model.StudentOnlineResources studentOnlineResources16 = new model.StudentOnlineResources((model.Client) student14);
        model.VirtualBook virtualBook18 = studentOnlineResources16.searchAccessibleBook("");
        model.CD cD20 = new model.CD("");
        model.Magazine magazine21 = null;
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        model.Book book35 = null;
        model.CD cD36 = null;
        model.Magazine magazine37 = null;
        model.Book[] bookArray38 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList39 = new java.util.ArrayList<model.Book>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList39, bookArray38);
        model.CD[] cDArray41 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList42 = new java.util.ArrayList<model.CD>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList42, cDArray41);
        model.Magazine[] magazineArray44 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList45 = new java.util.ArrayList<model.Magazine>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList45, magazineArray44);
        model.ItemSearchResult itemSearchResult47 = new model.ItemSearchResult(book35, cD36, magazine37, (java.util.Collection<model.Book>) bookList39, (java.util.Collection<model.CD>) cDList42, (java.util.Collection<model.Magazine>) magazineList45);
        model.CD[] cDArray48 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList49 = new java.util.ArrayList<model.CD>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList49, cDArray48);
        itemSearchResult47.similarCD = cDList49;
        model.Book book52 = null;
        model.CD cD53 = null;
        model.Magazine magazine54 = null;
        model.Book[] bookArray55 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList56 = new java.util.ArrayList<model.Book>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList56, bookArray55);
        model.CD[] cDArray58 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList59 = new java.util.ArrayList<model.CD>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList59, cDArray58);
        model.Magazine[] magazineArray61 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList62 = new java.util.ArrayList<model.Magazine>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList62, magazineArray61);
        model.ItemSearchResult itemSearchResult64 = new model.ItemSearchResult(book52, cD53, magazine54, (java.util.Collection<model.Book>) bookList56, (java.util.Collection<model.CD>) cDList59, (java.util.Collection<model.Magazine>) magazineList62);
        model.ItemSearchResult itemSearchResult65 = new model.ItemSearchResult((model.Book) virtualBook18, cD20, magazine21, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList49, (java.util.Collection<model.Magazine>) magazineList62);
        int int66 = virtualBook18.ID;
        int int67 = virtualBook18.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter68 = null;
        model.PaidNewsletter paidNewsletter69 = null;
        model.VirtualItemSearchResult virtualItemSearchResult70 = new model.VirtualItemSearchResult(virtualBook18, uniProvidedNewsletter68, paidNewsletter69);
        model.PaidNewsletter paidNewsletter71 = virtualItemSearchResult70.getPaidNewsletter();
        model.PaidNewsletter paidNewsletter72 = virtualItemSearchResult70.getPaidNewsletter();
        model.VirtualBook virtualBook73 = virtualItemSearchResult70.getVirtualBook();
        model.UniProvidedNewsletter uniProvidedNewsletter74 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter74.title = "hi!";
        virtualItemSearchResult70.setUniNewsletter(uniProvidedNewsletter74);
        model.VirtualBook virtualBook78 = virtualItemSearchResult70.getVirtualBook();
        int int79 = virtualBook78.edition;
        virtualBook78.ID = 8289616;
        java.lang.String str82 = studentOnlineResources2.readVirtualItem((model.VirtualItem) virtualBook78);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(virtualBook9);
        org.junit.Assert.assertNull(virtualItemContent10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(client13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(virtualBook18);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(bookArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(cDArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(magazineArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(cDArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(bookArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(cDArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(magazineArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 20 + "'", int67 == 20);
        org.junit.Assert.assertNull(paidNewsletter71);
        org.junit.Assert.assertNull(paidNewsletter72);
        org.junit.Assert.assertNotNull(virtualBook73);
        org.junit.Assert.assertNotNull(virtualBook78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNull(str82);
    }

    @Test
    public void test2100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2100");
        model.Database database7 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database7;
        model.SearchVirtualItem searchVirtualItem9 = new model.SearchVirtualItem(database7);
        model.VirtualItemSearchResult virtualItemSearchResult11 = searchVirtualItem9.searchVirtualItem("src/VirtualBook.csv");
        model.VirtualItemSearchResult virtualItemSearchResult13 = searchVirtualItem9.searchVirtualItem("src/CD.csv");
        model.VirtualItemSearchResult virtualItemSearchResult15 = searchVirtualItem9.searchVirtualItem("model.RegistrationFailedException: ");
        model.VirtualBook virtualBook16 = virtualItemSearchResult15.getVirtualBook();
        model.VirtualBook virtualBook17 = virtualItemSearchResult15.getVirtualBook();
        model.UniProvidedNewsletter uniProvidedNewsletter18 = virtualItemSearchResult15.getUniNewsletter();
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(virtualItemSearchResult11);
        org.junit.Assert.assertNotNull(virtualItemSearchResult13);
        org.junit.Assert.assertNotNull(virtualItemSearchResult15);
        org.junit.Assert.assertNull(virtualBook16);
        org.junit.Assert.assertNull(virtualBook17);
        org.junit.Assert.assertNull(uniProvidedNewsletter18);
    }

    @Test
    public void test2101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2101");
        model.Database database7 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database7;
        java.lang.String str9 = database7.virtualItemFilePath;
        java.lang.String str10 = database7.getClientFilePath();
        model.Login login11 = new model.Login(database7);
        model.Database database12 = login11.db;
        boolean boolean14 = database12.addItem("model.RegistrationFailedException: src/Magazine.csv");
        org.junit.Assert.assertNotNull(database7);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "model.RegistrationFailedException: model.RentingNotAllowedException: hi!" + "'", str9, "model.RegistrationFailedException: model.RentingNotAllowedException: hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "src/Client.csv" + "'", str10, "src/Client.csv");
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test2102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2102");
        model.Database database0 = null;
        model.Register register1 = model.Register.makeRegister(database0);
        model.Faculty faculty2 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection3 = faculty2.courses;
        boolean boolean6 = register1.registerAsStaff((model.Staff) faculty2, "src/Book.csv", "src/Book.csv");
        model.Database database7 = model.Database.database;
        model.Student student8 = new model.Student();
        int int9 = student8.ID;
        model.StudentOnlineResources studentOnlineResources10 = new model.StudentOnlineResources((model.Client) student8);
        student8.ID = '#';
        database7.addClient((model.Client) student8);
        student8.email = "hi!";
        boolean boolean18 = register1.registerAsStaff((model.Staff) student8, "src/CD.csv", "src/Book.csv");
        model.Database database26 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str27 = database26.getVirtualBookFilePath();
        register1.database = database26;
        model.Database database29 = register1.database;
        java.lang.String str30 = database29.getBookFilePath();
        model.Database.database = database29;
        model.SearchVirtualItem searchVirtualItem32 = new model.SearchVirtualItem(database29);
        model.VirtualItemSearchResult virtualItemSearchResult34 = searchVirtualItem32.searchVirtualItem("src/Client.csv");
        model.PaidNewsletter paidNewsletter35 = virtualItemSearchResult34.getPaidNewsletter();
        org.junit.Assert.assertNotNull(register1);
        org.junit.Assert.assertNull(courseCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "src/VirtualBook.csv" + "'", str27, "src/VirtualBook.csv");
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "src/Book.csv" + "'", str30, "src/Book.csv");
        org.junit.Assert.assertNotNull(virtualItemSearchResult34);
        org.junit.Assert.assertNull(paidNewsletter35);
    }

    @Test
    public void test2103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2103");
        model.Book book0 = null;
        model.CD cD1 = null;
        model.Magazine magazine2 = null;
        model.Book[] bookArray3 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList4 = new java.util.ArrayList<model.Book>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList4, bookArray3);
        model.CD[] cDArray6 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList7 = new java.util.ArrayList<model.CD>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList7, cDArray6);
        model.Magazine[] magazineArray9 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList10 = new java.util.ArrayList<model.Magazine>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList10, magazineArray9);
        model.ItemSearchResult itemSearchResult12 = new model.ItemSearchResult(book0, cD1, magazine2, (java.util.Collection<model.Book>) bookList4, (java.util.Collection<model.CD>) cDList7, (java.util.Collection<model.Magazine>) magazineList10);
        model.Book book13 = null;
        model.CD cD14 = null;
        model.Magazine magazine15 = null;
        model.Book[] bookArray16 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList17 = new java.util.ArrayList<model.Book>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList17, bookArray16);
        model.CD[] cDArray19 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList20 = new java.util.ArrayList<model.CD>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList20, cDArray19);
        model.Magazine[] magazineArray22 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList23 = new java.util.ArrayList<model.Magazine>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList23, magazineArray22);
        model.ItemSearchResult itemSearchResult25 = new model.ItemSearchResult(book13, cD14, magazine15, (java.util.Collection<model.Book>) bookList17, (java.util.Collection<model.CD>) cDList20, (java.util.Collection<model.Magazine>) magazineList23);
        itemSearchResult12.similarCD = cDList20;
        model.Magazine magazine27 = itemSearchResult12.magazine;
        model.CD cD28 = itemSearchResult12.cd;
        model.Book book29 = null;
        model.CD cD31 = new model.CD("");
        model.Magazine magazine32 = null;
        java.util.Collection<model.Book> bookCollection33 = null;
        model.Book book34 = null;
        model.CD cD35 = null;
        model.Magazine magazine36 = null;
        model.Book[] bookArray37 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList38 = new java.util.ArrayList<model.Book>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList38, bookArray37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        model.Magazine[] magazineArray43 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList44 = new java.util.ArrayList<model.Magazine>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList44, magazineArray43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book34, cD35, magazine36, (java.util.Collection<model.Book>) bookList38, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList44);
        model.Book book47 = null;
        model.CD cD48 = null;
        model.Magazine magazine49 = null;
        model.Book[] bookArray50 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList51 = new java.util.ArrayList<model.Book>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList51, bookArray50);
        model.CD[] cDArray53 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList54 = new java.util.ArrayList<model.CD>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList54, cDArray53);
        model.Magazine[] magazineArray56 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList57 = new java.util.ArrayList<model.Magazine>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList57, magazineArray56);
        model.ItemSearchResult itemSearchResult59 = new model.ItemSearchResult(book47, cD48, magazine49, (java.util.Collection<model.Book>) bookList51, (java.util.Collection<model.CD>) cDList54, (java.util.Collection<model.Magazine>) magazineList57);
        itemSearchResult46.similarCD = cDList54;
        model.Book book61 = null;
        model.CD cD62 = null;
        model.Magazine magazine63 = null;
        model.Book[] bookArray64 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList65 = new java.util.ArrayList<model.Book>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList65, bookArray64);
        model.CD[] cDArray67 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList68 = new java.util.ArrayList<model.CD>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList68, cDArray67);
        model.Magazine[] magazineArray70 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList71 = new java.util.ArrayList<model.Magazine>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList71, magazineArray70);
        model.ItemSearchResult itemSearchResult73 = new model.ItemSearchResult(book61, cD62, magazine63, (java.util.Collection<model.Book>) bookList65, (java.util.Collection<model.CD>) cDList68, (java.util.Collection<model.Magazine>) magazineList71);
        model.ItemSearchResult itemSearchResult74 = new model.ItemSearchResult(book29, cD31, magazine32, bookCollection33, (java.util.Collection<model.CD>) cDList54, (java.util.Collection<model.Magazine>) magazineList71);
        model.Book book75 = null;
        itemSearchResult74.book = book75;
        java.util.Collection<model.Book> bookCollection77 = itemSearchResult74.similarBooks;
        model.Magazine magazine79 = new model.Magazine("");
        itemSearchResult74.magazine = magazine79;
        itemSearchResult12.magazine = magazine79;
        java.util.Collection<model.Book> bookCollection82 = itemSearchResult12.similarBooks;
        model.CD cD83 = itemSearchResult12.cd;
        org.junit.Assert.assertNotNull(bookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(cDArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(magazineArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(bookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(cDArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(magazineArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(magazine27);
        org.junit.Assert.assertNull(cD28);
        org.junit.Assert.assertNotNull(bookArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(magazineArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(bookArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(cDArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(magazineArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(bookArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(cDArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(magazineArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(bookCollection77);
        org.junit.Assert.assertNotNull(bookCollection82);
        org.junit.Assert.assertNull(cD83);
    }

    @Test
    public void test2104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2104");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        model.RentedItem[] rentedItemArray4 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList5 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList5, rentedItemArray4);
        model.BorrowingManager borrowingManager7 = new model.BorrowingManager(rentedItemList5);
        model.RentedItem[] rentedItemArray8 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList9 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList9, rentedItemArray8);
        model.BorrowingManager borrowingManager11 = new model.BorrowingManager(rentedItemList9);
        borrowingManager7.physicalItemBorrowed = rentedItemList9;
        borrowingManager3.physicalItemBorrowed = rentedItemList9;
        int int14 = borrowingManager3.itemsBorrowedCount;
        java.util.ArrayList<model.RentedItem> rentedItemList15 = borrowingManager3.physicalItemBorrowed;
        model.BorrowingManager borrowingManager16 = new model.BorrowingManager(rentedItemList15);
        model.BorrowingManager borrowingManager17 = new model.BorrowingManager(rentedItemList15);
        model.BorrowingManager borrowingManager18 = new model.BorrowingManager(rentedItemList15);
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(rentedItemArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rentedItemArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(rentedItemList15);
    }

    @Test
    public void test2105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2105");
        model.BuySpecialItems buySpecialItems0 = new model.BuySpecialItems();
        model.Payment payment1 = null;
        buySpecialItems0.paymentAPI = payment1;
        model.PayMobileWallet payMobileWallet3 = new model.PayMobileWallet();
        buySpecialItems0.paymentAPI = payMobileWallet3;
        payMobileWallet3.amountPay = (-1L);
        payMobileWallet3.pay((double) (-1.0f));
        payMobileWallet3.pay((double) 1);
        payMobileWallet3.pay((double) 3005968);
    }

    @Test
    public void test2106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2106");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.Student student5 = new model.Student();
        int int6 = student5.ID;
        model.StudentOnlineResources studentOnlineResources7 = new model.StudentOnlineResources((model.Client) student5);
        student5.ID = '#';
        java.lang.String str10 = student5.email;
        newsletterSubscriptionManager3.client = student5;
        model.Newsletter[] newsletterArray12 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList13 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList13, newsletterArray12);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager15 = new model.NewsletterSubscriptionManager(newsletterList13);
        newsletterSubscriptionManager3.newsletterSubscribed = newsletterList13;
        model.NewsletterSubscriptionManager newsletterSubscriptionManager17 = new model.NewsletterSubscriptionManager(newsletterList13);
        model.Student student18 = new model.Student();
        int int19 = student18.ID;
        model.StudentOnlineResources studentOnlineResources20 = new model.StudentOnlineResources((model.Client) student18);
        model.VirtualBook virtualBook22 = studentOnlineResources20.searchAccessibleBook("");
        model.CD cD24 = new model.CD("");
        model.Magazine magazine25 = null;
        model.Book book26 = null;
        model.CD cD27 = null;
        model.Magazine magazine28 = null;
        model.Book[] bookArray29 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList30 = new java.util.ArrayList<model.Book>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList30, bookArray29);
        model.CD[] cDArray32 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList33 = new java.util.ArrayList<model.CD>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList33, cDArray32);
        model.Magazine[] magazineArray35 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList36 = new java.util.ArrayList<model.Magazine>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList36, magazineArray35);
        model.ItemSearchResult itemSearchResult38 = new model.ItemSearchResult(book26, cD27, magazine28, (java.util.Collection<model.Book>) bookList30, (java.util.Collection<model.CD>) cDList33, (java.util.Collection<model.Magazine>) magazineList36);
        model.Book book39 = null;
        model.CD cD40 = null;
        model.Magazine magazine41 = null;
        model.Book[] bookArray42 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList43 = new java.util.ArrayList<model.Book>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList43, bookArray42);
        model.CD[] cDArray45 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList46 = new java.util.ArrayList<model.CD>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList46, cDArray45);
        model.Magazine[] magazineArray48 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList49 = new java.util.ArrayList<model.Magazine>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList49, magazineArray48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult(book39, cD40, magazine41, (java.util.Collection<model.Book>) bookList43, (java.util.Collection<model.CD>) cDList46, (java.util.Collection<model.Magazine>) magazineList49);
        model.CD[] cDArray52 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList53 = new java.util.ArrayList<model.CD>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList53, cDArray52);
        itemSearchResult51.similarCD = cDList53;
        model.Book book56 = null;
        model.CD cD57 = null;
        model.Magazine magazine58 = null;
        model.Book[] bookArray59 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList60 = new java.util.ArrayList<model.Book>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList60, bookArray59);
        model.CD[] cDArray62 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList63 = new java.util.ArrayList<model.CD>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList63, cDArray62);
        model.Magazine[] magazineArray65 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList66 = new java.util.ArrayList<model.Magazine>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList66, magazineArray65);
        model.ItemSearchResult itemSearchResult68 = new model.ItemSearchResult(book56, cD57, magazine58, (java.util.Collection<model.Book>) bookList60, (java.util.Collection<model.CD>) cDList63, (java.util.Collection<model.Magazine>) magazineList66);
        model.ItemSearchResult itemSearchResult69 = new model.ItemSearchResult((model.Book) virtualBook22, cD24, magazine25, (java.util.Collection<model.Book>) bookList30, (java.util.Collection<model.CD>) cDList53, (java.util.Collection<model.Magazine>) magazineList66);
        int int70 = virtualBook22.ID;
        int int71 = virtualBook22.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter72 = null;
        model.PaidNewsletter paidNewsletter73 = null;
        model.VirtualItemSearchResult virtualItemSearchResult74 = new model.VirtualItemSearchResult(virtualBook22, uniProvidedNewsletter72, paidNewsletter73);
        model.PaidNewsletter paidNewsletter75 = virtualItemSearchResult74.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter76 = new model.UniProvidedNewsletter();
        virtualItemSearchResult74.setUniNewsletter(uniProvidedNewsletter76);
        java.lang.String str78 = uniProvidedNewsletter76.title;
        uniProvidedNewsletter76.cost = 0L;
        newsletterSubscriptionManager17.subscribeToUniProvidedNewsletter(uniProvidedNewsletter76, "src/VirtualBook.csv");
        uniProvidedNewsletter76.showContent();
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(newsletterArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(virtualBook22);
        org.junit.Assert.assertNotNull(bookArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(cDArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(magazineArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(bookArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(cDArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(magazineArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(cDArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(bookArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(cDArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(magazineArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 20 + "'", int71 == 20);
        org.junit.Assert.assertNull(paidNewsletter75);
        org.junit.Assert.assertNull(str78);
    }

    @Test
    public void test2107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2107");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        virtualBook4.ID = (short) 10;
        int int54 = virtualBook4.ID;
        virtualBook4.showContent();
        virtualBook4.publisher = "src/Book.csv";
        boolean boolean58 = virtualBook4.isBookLost;
        int int59 = virtualBook4.ID;
        virtualBook4.author = "model.RegistrationFailedException: model.RentingNotAllowedException: hi!";
        java.lang.String str62 = virtualBook4.location;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 10 + "'", int59 == 10);
        org.junit.Assert.assertNull(str62);
    }

    @Test
    public void test2108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2108");
        model.Visitor visitor0 = new model.Visitor();
        model.StudentOnlineResources studentOnlineResources1 = new model.StudentOnlineResources((model.Client) visitor0);
        model.VirtualBook virtualBook3 = studentOnlineResources1.searchAccessibleBook("src/Book.csv");
        virtualBook3.ISBN = "model.RentingNotAllowedException: src/Magazine.csv";
        model.CD cD7 = new model.CD("");
        int int8 = cD7.ID;
        boolean boolean9 = virtualBook3.equals((java.lang.Object) cD7);
        org.junit.Assert.assertNotNull(virtualBook3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test2109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2109");
        model.ItemManagement itemManagement0 = new model.ItemManagement();
        model.Database database8 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str9 = database8.getVirtualBookFilePath();
        model.Database.database = database8;
        database8.itemPath = "";
        model.SearchClient searchClient13 = model.SearchClient.makeSearchClient(database8);
        java.lang.String str14 = database8.getVirtualBookFilePath();
        model.Client client16 = database8.getClient("model.RegistrationFailedException: src/Book.csv");
        itemManagement0.database = database8;
        model.Student student18 = new model.Student();
        int int19 = student18.ID;
        model.StudentOnlineResources studentOnlineResources20 = new model.StudentOnlineResources((model.Client) student18);
        model.VirtualBook virtualBook22 = studentOnlineResources20.searchAccessibleBook("");
        model.CD cD24 = new model.CD("");
        model.Magazine magazine25 = null;
        model.Book book26 = null;
        model.CD cD27 = null;
        model.Magazine magazine28 = null;
        model.Book[] bookArray29 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList30 = new java.util.ArrayList<model.Book>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList30, bookArray29);
        model.CD[] cDArray32 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList33 = new java.util.ArrayList<model.CD>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList33, cDArray32);
        model.Magazine[] magazineArray35 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList36 = new java.util.ArrayList<model.Magazine>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList36, magazineArray35);
        model.ItemSearchResult itemSearchResult38 = new model.ItemSearchResult(book26, cD27, magazine28, (java.util.Collection<model.Book>) bookList30, (java.util.Collection<model.CD>) cDList33, (java.util.Collection<model.Magazine>) magazineList36);
        model.Book book39 = null;
        model.CD cD40 = null;
        model.Magazine magazine41 = null;
        model.Book[] bookArray42 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList43 = new java.util.ArrayList<model.Book>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList43, bookArray42);
        model.CD[] cDArray45 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList46 = new java.util.ArrayList<model.CD>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList46, cDArray45);
        model.Magazine[] magazineArray48 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList49 = new java.util.ArrayList<model.Magazine>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList49, magazineArray48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult(book39, cD40, magazine41, (java.util.Collection<model.Book>) bookList43, (java.util.Collection<model.CD>) cDList46, (java.util.Collection<model.Magazine>) magazineList49);
        model.CD[] cDArray52 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList53 = new java.util.ArrayList<model.CD>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList53, cDArray52);
        itemSearchResult51.similarCD = cDList53;
        model.Book book56 = null;
        model.CD cD57 = null;
        model.Magazine magazine58 = null;
        model.Book[] bookArray59 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList60 = new java.util.ArrayList<model.Book>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList60, bookArray59);
        model.CD[] cDArray62 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList63 = new java.util.ArrayList<model.CD>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList63, cDArray62);
        model.Magazine[] magazineArray65 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList66 = new java.util.ArrayList<model.Magazine>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList66, magazineArray65);
        model.ItemSearchResult itemSearchResult68 = new model.ItemSearchResult(book56, cD57, magazine58, (java.util.Collection<model.Book>) bookList60, (java.util.Collection<model.CD>) cDList63, (java.util.Collection<model.Magazine>) magazineList66);
        model.ItemSearchResult itemSearchResult69 = new model.ItemSearchResult((model.Book) virtualBook22, cD24, magazine25, (java.util.Collection<model.Book>) bookList30, (java.util.Collection<model.CD>) cDList53, (java.util.Collection<model.Magazine>) magazineList66);
        int int70 = virtualBook22.ID;
        int int71 = virtualBook22.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter72 = null;
        model.PaidNewsletter paidNewsletter73 = null;
        model.VirtualItemSearchResult virtualItemSearchResult74 = new model.VirtualItemSearchResult(virtualBook22, uniProvidedNewsletter72, paidNewsletter73);
        model.UniProvidedNewsletter uniProvidedNewsletter75 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter75.title = "hi!";
        uniProvidedNewsletter75.title = "";
        virtualItemSearchResult74.uniNewsletter = uniProvidedNewsletter75;
        model.PaidNewsletter paidNewsletter81 = null;
        virtualItemSearchResult74.paidNewsletter = paidNewsletter81;
        model.VirtualBook virtualBook83 = virtualItemSearchResult74.getVirtualBook();
        virtualBook83.ID = '4';
        itemManagement0.enableAnItem((model.Item) virtualBook83);
        model.Course course87 = new model.Course();
        java.lang.String str88 = course87.code;
        course87.code = "src/Newsletter.csv";
        course87.subject = "src/VirtualBook.csv";
        course87.code = "";
        boolean boolean95 = virtualBook83.equals((java.lang.Object) course87);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "src/VirtualBook.csv" + "'", str9, "src/VirtualBook.csv");
        org.junit.Assert.assertNotNull(searchClient13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "src/VirtualBook.csv" + "'", str14, "src/VirtualBook.csv");
        org.junit.Assert.assertNotNull(client16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(virtualBook22);
        org.junit.Assert.assertNotNull(bookArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(cDArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(magazineArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(bookArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(cDArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(magazineArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(cDArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(bookArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(cDArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(magazineArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 20 + "'", int71 == 20);
        org.junit.Assert.assertNotNull(virtualBook83);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test2110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2110");
        model.Faculty faculty0 = new model.Faculty();
        faculty0.username = "hi!";
        java.util.Collection<model.Course> courseCollection3 = null;
        faculty0.courses = courseCollection3;
        java.util.Collection<model.Course> courseCollection5 = faculty0.courses;
        model.Newsletter[] newsletterArray6 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList7 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList7, newsletterArray6);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager9 = new model.NewsletterSubscriptionManager(newsletterList7);
        model.Client client10 = newsletterSubscriptionManager9.client;
        model.Student student11 = new model.Student();
        int int12 = student11.ID;
        model.StudentOnlineResources studentOnlineResources13 = new model.StudentOnlineResources((model.Client) student11);
        student11.ID = '#';
        java.lang.String str16 = student11.email;
        newsletterSubscriptionManager9.client = student11;
        model.Newsletter[] newsletterArray18 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList19 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList19, newsletterArray18);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager21 = new model.NewsletterSubscriptionManager(newsletterList19);
        newsletterSubscriptionManager9.newsletterSubscribed = newsletterList19;
        faculty0.newsletterManager = newsletterSubscriptionManager9;
        model.Newsletter[] newsletterArray24 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList25 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList25, newsletterArray24);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager27 = new model.NewsletterSubscriptionManager(newsletterList25);
        model.Client client28 = newsletterSubscriptionManager27.client;
        model.Student student29 = new model.Student();
        int int30 = student29.ID;
        model.StudentOnlineResources studentOnlineResources31 = new model.StudentOnlineResources((model.Client) student29);
        student29.ID = '#';
        java.lang.String str34 = student29.email;
        newsletterSubscriptionManager27.client = student29;
        student29.ID = (short) 1;
        newsletterSubscriptionManager9.client = student29;
        int int39 = student29.ID;
        java.lang.String str40 = student29.username;
        student29.ID = 9265126;
        org.junit.Assert.assertNull(courseCollection5);
        org.junit.Assert.assertNotNull(newsletterArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(client10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(newsletterArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(newsletterArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(client28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNull(str40);
    }

    @Test
    public void test2111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2111");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.RequestForum requestForum1 = model.RequestForum.createRequestForum();
        model.Request request2 = new model.Request();
        request2.title = "";
        java.lang.String str5 = requestForum1.makeARequest(request2);
        int int6 = requestForum0.assessBooksPriority(request2);
        model.LibraryManagementTeam libraryManagementTeam7 = new model.LibraryManagementTeam();
        int int8 = libraryManagementTeam7.ID;
        int int9 = libraryManagementTeam7.accessCode;
        model.Item item10 = null;
        libraryManagementTeam7.addAnItem(item10);
        java.util.ArrayList<model.Item> itemList12 = libraryManagementTeam7.items;
        requestForum0.managementTeam = libraryManagementTeam7;
        model.LibraryManagementTeam libraryManagementTeam14 = requestForum0.managementTeam;
        int int15 = libraryManagementTeam14.accessCode;
        int int16 = libraryManagementTeam14.ID;
        java.util.ArrayList<model.Item> itemList17 = libraryManagementTeam14.items;
        int int18 = libraryManagementTeam14.accessCode;
        libraryManagementTeam14.ID = 9809433;
        libraryManagementTeam14.accessCode = 66;
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertNotNull(requestForum1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(itemList12);
        org.junit.Assert.assertNotNull(libraryManagementTeam14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(itemList17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test2112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2112");
        model.BuySpecialItems buySpecialItems0 = new model.BuySpecialItems();
        model.Payment payment1 = buySpecialItems0.paymentAPI;
        model.Payment payment2 = buySpecialItems0.paymentAPI;
        model.PayCredit payCredit3 = new model.PayCredit();
        payCredit3.amountPay = 10;
        payCredit3.pay((double) (-1.0f));
        payCredit3.pay((double) ' ');
        payCredit3.amountPay = (short) 1;
        buySpecialItems0.paymentAPI = payCredit3;
        org.junit.Assert.assertNull(payment1);
        org.junit.Assert.assertNull(payment2);
    }

    @Test
    public void test2113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2113");
        model.Book book0 = null;
        model.CD cD1 = null;
        model.Magazine magazine2 = null;
        model.Book[] bookArray3 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList4 = new java.util.ArrayList<model.Book>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList4, bookArray3);
        model.CD[] cDArray6 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList7 = new java.util.ArrayList<model.CD>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList7, cDArray6);
        model.Magazine[] magazineArray9 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList10 = new java.util.ArrayList<model.Magazine>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList10, magazineArray9);
        model.ItemSearchResult itemSearchResult12 = new model.ItemSearchResult(book0, cD1, magazine2, (java.util.Collection<model.Book>) bookList4, (java.util.Collection<model.CD>) cDList7, (java.util.Collection<model.Magazine>) magazineList10);
        model.Book book13 = null;
        model.CD cD14 = null;
        model.Magazine magazine15 = null;
        model.Book[] bookArray16 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList17 = new java.util.ArrayList<model.Book>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList17, bookArray16);
        model.CD[] cDArray19 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList20 = new java.util.ArrayList<model.CD>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList20, cDArray19);
        model.Magazine[] magazineArray22 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList23 = new java.util.ArrayList<model.Magazine>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList23, magazineArray22);
        model.ItemSearchResult itemSearchResult25 = new model.ItemSearchResult(book13, cD14, magazine15, (java.util.Collection<model.Book>) bookList17, (java.util.Collection<model.CD>) cDList20, (java.util.Collection<model.Magazine>) magazineList23);
        itemSearchResult12.similarCD = cDList20;
        model.Magazine magazine27 = itemSearchResult12.magazine;
        model.CD cD28 = itemSearchResult12.cd;
        model.Magazine magazine29 = itemSearchResult12.magazine;
        model.LibraryManagementTeam libraryManagementTeam30 = new model.LibraryManagementTeam();
        int int31 = libraryManagementTeam30.ID;
        model.Student student32 = new model.Student();
        int int33 = student32.ID;
        model.StudentOnlineResources studentOnlineResources34 = new model.StudentOnlineResources((model.Client) student32);
        model.VirtualBook virtualBook36 = studentOnlineResources34.searchAccessibleBook("");
        model.VirtualItemContent virtualItemContent37 = virtualBook36.content;
        libraryManagementTeam30.enableAnItem((model.Item) virtualBook36);
        itemSearchResult12.book = virtualBook36;
        // The following exception was thrown during execution in test generation
        try {
            model.RentedItem rentedItem41 = new model.RentedItem((model.Item) virtualBook36, "src/Newsletter.csv");
            org.junit.Assert.fail("Expected exception of type java.time.format.DateTimeParseException; message: Text 'src/Newsletter.csv' could not be parsed at index 0");
        } catch (java.time.format.DateTimeParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(bookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(cDArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(magazineArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(bookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(cDArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(magazineArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(magazine27);
        org.junit.Assert.assertNull(cD28);
        org.junit.Assert.assertNull(magazine29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(virtualBook36);
        org.junit.Assert.assertNull(virtualItemContent37);
    }

    @Test
    public void test2114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2114");
        model.Visitor visitor0 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList1 = visitor0.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) visitor0);
        model.RentedItem[] rentedItemArray3 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList4 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList4, rentedItemArray3);
        model.BorrowingManager borrowingManager6 = new model.BorrowingManager(rentedItemList4);
        model.Visitor visitor7 = new model.Visitor();
        visitor7.email = "hi!";
        borrowingManager6.client = visitor7;
        studentOnlineResources2.client = visitor7;
        model.Student student12 = new model.Student();
        int int13 = student12.ID;
        model.StudentOnlineResources studentOnlineResources14 = new model.StudentOnlineResources((model.Client) student12);
        model.VirtualBook virtualBook16 = studentOnlineResources14.searchAccessibleBook("");
        model.CD cD18 = new model.CD("");
        model.Magazine magazine19 = null;
        model.Book book20 = null;
        model.CD cD21 = null;
        model.Magazine magazine22 = null;
        model.Book[] bookArray23 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList24 = new java.util.ArrayList<model.Book>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList24, bookArray23);
        model.CD[] cDArray26 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList27 = new java.util.ArrayList<model.CD>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList27, cDArray26);
        model.Magazine[] magazineArray29 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList30 = new java.util.ArrayList<model.Magazine>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList30, magazineArray29);
        model.ItemSearchResult itemSearchResult32 = new model.ItemSearchResult(book20, cD21, magazine22, (java.util.Collection<model.Book>) bookList24, (java.util.Collection<model.CD>) cDList27, (java.util.Collection<model.Magazine>) magazineList30);
        model.Book book33 = null;
        model.CD cD34 = null;
        model.Magazine magazine35 = null;
        model.Book[] bookArray36 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList37 = new java.util.ArrayList<model.Book>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList37, bookArray36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        model.Magazine[] magazineArray42 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList43 = new java.util.ArrayList<model.Magazine>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList43, magazineArray42);
        model.ItemSearchResult itemSearchResult45 = new model.ItemSearchResult(book33, cD34, magazine35, (java.util.Collection<model.Book>) bookList37, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList43);
        model.CD[] cDArray46 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList47 = new java.util.ArrayList<model.CD>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList47, cDArray46);
        itemSearchResult45.similarCD = cDList47;
        model.Book book50 = null;
        model.CD cD51 = null;
        model.Magazine magazine52 = null;
        model.Book[] bookArray53 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList54 = new java.util.ArrayList<model.Book>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList54, bookArray53);
        model.CD[] cDArray56 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList57 = new java.util.ArrayList<model.CD>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList57, cDArray56);
        model.Magazine[] magazineArray59 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList60 = new java.util.ArrayList<model.Magazine>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList60, magazineArray59);
        model.ItemSearchResult itemSearchResult62 = new model.ItemSearchResult(book50, cD51, magazine52, (java.util.Collection<model.Book>) bookList54, (java.util.Collection<model.CD>) cDList57, (java.util.Collection<model.Magazine>) magazineList60);
        model.ItemSearchResult itemSearchResult63 = new model.ItemSearchResult((model.Book) virtualBook16, cD18, magazine19, (java.util.Collection<model.Book>) bookList24, (java.util.Collection<model.CD>) cDList47, (java.util.Collection<model.Magazine>) magazineList60);
        java.lang.String str64 = studentOnlineResources2.readVirtualItem((model.VirtualItem) virtualBook16);
        model.VirtualItem virtualItem65 = null;
        java.lang.String str66 = studentOnlineResources2.readVirtualItem(virtualItem65);
        model.VirtualBook virtualBook68 = new model.VirtualBook("");
        java.lang.String str69 = studentOnlineResources2.readVirtualItem((model.VirtualItem) virtualBook68);
        model.Newsletter newsletter71 = studentOnlineResources2.searchSubscribedNewsletter("hi!");
        model.Newsletter newsletter73 = studentOnlineResources2.searchSubscribedNewsletter("src/Book.csv");
        model.Client client74 = studentOnlineResources2.client;
        org.junit.Assert.assertNull(virtualBookList1);
        org.junit.Assert.assertNotNull(rentedItemArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(virtualBook16);
        org.junit.Assert.assertNotNull(bookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(cDArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(magazineArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(bookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(magazineArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(cDArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(bookArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(cDArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(magazineArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(newsletter71);
        org.junit.Assert.assertNull(newsletter73);
        org.junit.Assert.assertNotNull(client74);
    }

    @Test
    public void test2115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2115");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.UniProvidedNewsletter uniProvidedNewsletter5 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter5.title = "";
        java.lang.String str8 = uniProvidedNewsletter5.title;
        newsletterSubscriptionManager3.subscribeToUniProvidedNewsletter(uniProvidedNewsletter5, "");
        java.util.ArrayList<model.Newsletter> newsletterList11 = newsletterSubscriptionManager3.newsletterSubscribed;
        model.BuySpecialItems buySpecialItems12 = new model.BuySpecialItems();
        model.Payment payment13 = null;
        buySpecialItems12.paymentAPI = payment13;
        model.RequestForum requestForum15 = model.RequestForum.createRequestForum();
        model.LibraryManagementTeam libraryManagementTeam16 = new model.LibraryManagementTeam();
        int int17 = libraryManagementTeam16.ID;
        int int18 = libraryManagementTeam16.accessCode;
        model.Item item19 = null;
        libraryManagementTeam16.addAnItem(item19);
        requestForum15.managementTeam = libraryManagementTeam16;
        java.util.ArrayList<model.Item> itemList22 = libraryManagementTeam16.items;
        buySpecialItems12.purchasedItems = itemList22;
        model.BuySpecialItems buySpecialItems24 = new model.BuySpecialItems();
        model.Book book25 = null;
        model.CD cD27 = new model.CD("");
        model.Magazine magazine28 = null;
        java.util.Collection<model.Book> bookCollection29 = null;
        model.Book book30 = null;
        model.CD cD31 = null;
        model.Magazine magazine32 = null;
        model.Book[] bookArray33 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList34 = new java.util.ArrayList<model.Book>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList34, bookArray33);
        model.CD[] cDArray36 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList37 = new java.util.ArrayList<model.CD>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList37, cDArray36);
        model.Magazine[] magazineArray39 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList40 = new java.util.ArrayList<model.Magazine>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList40, magazineArray39);
        model.ItemSearchResult itemSearchResult42 = new model.ItemSearchResult(book30, cD31, magazine32, (java.util.Collection<model.Book>) bookList34, (java.util.Collection<model.CD>) cDList37, (java.util.Collection<model.Magazine>) magazineList40);
        model.Book book43 = null;
        model.CD cD44 = null;
        model.Magazine magazine45 = null;
        model.Book[] bookArray46 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList47 = new java.util.ArrayList<model.Book>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList47, bookArray46);
        model.CD[] cDArray49 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList50 = new java.util.ArrayList<model.CD>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList50, cDArray49);
        model.Magazine[] magazineArray52 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList53 = new java.util.ArrayList<model.Magazine>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList53, magazineArray52);
        model.ItemSearchResult itemSearchResult55 = new model.ItemSearchResult(book43, cD44, magazine45, (java.util.Collection<model.Book>) bookList47, (java.util.Collection<model.CD>) cDList50, (java.util.Collection<model.Magazine>) magazineList53);
        itemSearchResult42.similarCD = cDList50;
        model.Book book57 = null;
        model.CD cD58 = null;
        model.Magazine magazine59 = null;
        model.Book[] bookArray60 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList61 = new java.util.ArrayList<model.Book>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList61, bookArray60);
        model.CD[] cDArray63 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList64 = new java.util.ArrayList<model.CD>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList64, cDArray63);
        model.Magazine[] magazineArray66 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList67 = new java.util.ArrayList<model.Magazine>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList67, magazineArray66);
        model.ItemSearchResult itemSearchResult69 = new model.ItemSearchResult(book57, cD58, magazine59, (java.util.Collection<model.Book>) bookList61, (java.util.Collection<model.CD>) cDList64, (java.util.Collection<model.Magazine>) magazineList67);
        model.ItemSearchResult itemSearchResult70 = new model.ItemSearchResult(book25, cD27, magazine28, bookCollection29, (java.util.Collection<model.CD>) cDList50, (java.util.Collection<model.Magazine>) magazineList67);
        cD27.ID = (short) 10;
        boolean boolean74 = buySpecialItems24.buyAnItem((model.Item) cD27, (double) 0);
        model.PayDebit payDebit75 = new model.PayDebit();
        buySpecialItems24.paymentAPI = payDebit75;
        buySpecialItems12.paymentAPI = payDebit75;
        newsletterSubscriptionManager3.paymentAPI = payDebit75;
        model.BuySpecialItems buySpecialItems79 = new model.BuySpecialItems();
        model.Payment payment80 = null;
        buySpecialItems79.paymentAPI = payment80;
        model.PayMobileWallet payMobileWallet82 = new model.PayMobileWallet();
        buySpecialItems79.paymentAPI = payMobileWallet82;
        payMobileWallet82.amountPay = (-1L);
        payMobileWallet82.pay((double) (-1.0f));
        payMobileWallet82.pay(0.0d);
        newsletterSubscriptionManager3.paymentAPI = payMobileWallet82;
        model.Visitor visitor91 = new model.Visitor();
        newsletterSubscriptionManager3.client = visitor91;
        model.Faculty faculty93 = new model.Faculty();
        faculty93.username = "hi!";
        java.util.Collection<model.Course> courseCollection96 = faculty93.courses;
        java.lang.String str97 = faculty93.username;
        newsletterSubscriptionManager3.client = faculty93;
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(newsletterList11);
        org.junit.Assert.assertNotNull(requestForum15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(itemList22);
        org.junit.Assert.assertNotNull(bookArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(cDArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(magazineArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(bookArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(cDArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(magazineArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(bookArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(cDArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(magazineArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(courseCollection96);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "hi!" + "'", str97, "hi!");
    }

    @Test
    public void test2116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2116");
        model.Faculty faculty0 = new model.Faculty();
        faculty0.username = "hi!";
        faculty0.faculty = "src/Client.csv";
        java.util.Collection<model.Book> bookCollection5 = faculty0.textbooks;
        faculty0.viewMyOnlineResource();
        faculty0.faculty = "src/CD.csv";
        model.Faculty faculty9 = new model.Faculty();
        faculty9.username = "hi!";
        java.lang.String str12 = faculty9.username;
        model.Course course13 = new model.Course();
        java.lang.String str14 = course13.subject;
        course13.code = "";
        course13.subject = "src/Magazine.csv";
        model.Course course19 = new model.Course();
        java.lang.String str20 = course19.code;
        model.Course course21 = new model.Course();
        java.lang.String str22 = course21.subject;
        java.lang.String str23 = course21.subject;
        java.lang.String str24 = course21.code;
        java.lang.String str25 = course21.code;
        model.Course course26 = new model.Course();
        java.lang.String str27 = course26.code;
        model.Course course28 = new model.Course();
        java.lang.String str29 = course28.subject;
        java.lang.String str30 = course28.subject;
        java.lang.String str31 = course28.code;
        course28.code = "src/VirtualBook.csv";
        model.Course course34 = new model.Course();
        model.Course course35 = new model.Course();
        java.lang.String str36 = course35.subject;
        course35.code = "";
        course35.subject = "src/Magazine.csv";
        int int41 = course35.year;
        model.Course course42 = new model.Course();
        java.lang.String str43 = course42.code;
        java.lang.String str44 = course42.subject;
        course42.subject = "model.RegistrationFailedException: ";
        course42.subject = "src/Magazine.csv";
        model.Course[] courseArray49 = new model.Course[] { course13, course19, course21, course26, course28, course34, course35, course42 };
        java.util.ArrayList<model.Course> courseList50 = new java.util.ArrayList<model.Course>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<model.Course>) courseList50, courseArray49);
        faculty9.courses = courseList50;
        faculty0.courses = courseList50;
        org.junit.Assert.assertNull(bookCollection5);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(courseArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test2117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2117");
        java.lang.String[] strArray3 = new java.lang.String[] { "model.RegistrationFailedException: ", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.List<java.lang.String> strList7 = model.SearchStrategy.findMostSimilarStrings((java.util.Collection<java.lang.String>) strList4, "");
        java.util.List<java.lang.String> strList9 = model.SearchStrategy.findMostSimilarStrings((java.util.Collection<java.lang.String>) strList7, "src/Magazine.csv");
        java.util.List<java.lang.String> strList11 = model.SearchStrategy.findMostSimilarStrings((java.util.Collection<java.lang.String>) strList7, "model.RentingNotAllowedException: hi!");
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList11);
    }

    @Test
    public void test2118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2118");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.Request request1 = new model.Request();
        java.lang.String str2 = request1.type;
        request1.title = "model.RegistrationFailedException: src/Magazine.csv";
        request1.type = "model.RegistrationFailedException: src/Book.csv";
        java.lang.String str7 = request1.type;
        int int8 = requestForum0.assessBooksPriority(request1);
        model.RequestForum requestForum9 = model.RequestForum.createRequestForum();
        model.Request request10 = new model.Request();
        java.lang.String str11 = request10.type;
        request10.title = "model.RegistrationFailedException: src/Magazine.csv";
        request10.type = "model.RegistrationFailedException: src/Book.csv";
        java.lang.String str16 = request10.type;
        int int17 = requestForum9.assessBooksPriority(request10);
        int int18 = requestForum0.assessBooksPriority(request10);
        model.Faculty faculty19 = new model.Faculty();
        java.lang.String str20 = faculty19.email;
        model.StudentOnlineResources studentOnlineResources21 = new model.StudentOnlineResources((model.Client) faculty19);
        model.Client client22 = studentOnlineResources21.client;
        request10.requestee = client22;
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "model.RegistrationFailedException: src/Book.csv" + "'", str7, "model.RegistrationFailedException: src/Book.csv");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(requestForum9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "model.RegistrationFailedException: src/Book.csv" + "'", str16, "model.RegistrationFailedException: src/Book.csv");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(client22);
    }

    @Test
    public void test2119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2119");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.Request request1 = new model.Request();
        request1.title = "";
        java.lang.String str4 = requestForum0.makeARequest(request1);
        model.LibraryManagementTeam libraryManagementTeam5 = requestForum0.managementTeam;
        model.RequestForum requestForum6 = model.RequestForum.createRequestForum();
        model.Request request7 = new model.Request();
        request7.title = "";
        java.lang.String str10 = requestForum6.makeARequest(request7);
        model.Client client11 = request7.requestee;
        int int12 = requestForum0.assessBooksPriority(request7);
        java.lang.String str13 = request7.type;
        model.RentAndReturnSystem rentAndReturnSystem14 = new model.RentAndReturnSystem();
        model.Book book15 = null;
        model.CD cD17 = new model.CD("");
        model.Magazine magazine18 = null;
        java.util.Collection<model.Book> bookCollection19 = null;
        model.Book book20 = null;
        model.CD cD21 = null;
        model.Magazine magazine22 = null;
        model.Book[] bookArray23 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList24 = new java.util.ArrayList<model.Book>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList24, bookArray23);
        model.CD[] cDArray26 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList27 = new java.util.ArrayList<model.CD>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList27, cDArray26);
        model.Magazine[] magazineArray29 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList30 = new java.util.ArrayList<model.Magazine>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList30, magazineArray29);
        model.ItemSearchResult itemSearchResult32 = new model.ItemSearchResult(book20, cD21, magazine22, (java.util.Collection<model.Book>) bookList24, (java.util.Collection<model.CD>) cDList27, (java.util.Collection<model.Magazine>) magazineList30);
        model.Book book33 = null;
        model.CD cD34 = null;
        model.Magazine magazine35 = null;
        model.Book[] bookArray36 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList37 = new java.util.ArrayList<model.Book>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList37, bookArray36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        model.Magazine[] magazineArray42 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList43 = new java.util.ArrayList<model.Magazine>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList43, magazineArray42);
        model.ItemSearchResult itemSearchResult45 = new model.ItemSearchResult(book33, cD34, magazine35, (java.util.Collection<model.Book>) bookList37, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList43);
        itemSearchResult32.similarCD = cDList40;
        model.Book book47 = null;
        model.CD cD48 = null;
        model.Magazine magazine49 = null;
        model.Book[] bookArray50 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList51 = new java.util.ArrayList<model.Book>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList51, bookArray50);
        model.CD[] cDArray53 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList54 = new java.util.ArrayList<model.CD>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList54, cDArray53);
        model.Magazine[] magazineArray56 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList57 = new java.util.ArrayList<model.Magazine>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList57, magazineArray56);
        model.ItemSearchResult itemSearchResult59 = new model.ItemSearchResult(book47, cD48, magazine49, (java.util.Collection<model.Book>) bookList51, (java.util.Collection<model.CD>) cDList54, (java.util.Collection<model.Magazine>) magazineList57);
        model.ItemSearchResult itemSearchResult60 = new model.ItemSearchResult(book15, cD17, magazine18, bookCollection19, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList57);
        cD17.ID = (short) 10;
        cD17.canBePurchased = false;
        boolean boolean65 = cD17.canBePurchased;
        model.Faculty faculty66 = new model.Faculty();
        boolean boolean67 = rentAndReturnSystem14.rentAnItem((model.Item) cD17, (model.Client) faculty66);
        java.lang.String str68 = faculty66.faculty;
        faculty66.ID = 'a';
        request7.requestee = faculty66;
        java.lang.String str72 = faculty66.email;
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(libraryManagementTeam5);
        org.junit.Assert.assertNotNull(requestForum6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(client11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(bookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(cDArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(magazineArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(bookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(magazineArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(bookArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(cDArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(magazineArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(str72);
    }

    @Test
    public void test2120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2120");
        model.Database database7 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database7;
        model.SearchVirtualItem searchVirtualItem9 = new model.SearchVirtualItem(database7);
        model.VirtualItemSearchResult virtualItemSearchResult11 = searchVirtualItem9.searchVirtualItem("src/VirtualBook.csv");
        model.Student student12 = new model.Student();
        int int13 = student12.ID;
        model.StudentOnlineResources studentOnlineResources14 = new model.StudentOnlineResources((model.Client) student12);
        model.VirtualBook virtualBook16 = studentOnlineResources14.searchAccessibleBook("");
        model.CD cD18 = new model.CD("");
        model.Magazine magazine19 = null;
        model.Book book20 = null;
        model.CD cD21 = null;
        model.Magazine magazine22 = null;
        model.Book[] bookArray23 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList24 = new java.util.ArrayList<model.Book>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList24, bookArray23);
        model.CD[] cDArray26 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList27 = new java.util.ArrayList<model.CD>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList27, cDArray26);
        model.Magazine[] magazineArray29 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList30 = new java.util.ArrayList<model.Magazine>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList30, magazineArray29);
        model.ItemSearchResult itemSearchResult32 = new model.ItemSearchResult(book20, cD21, magazine22, (java.util.Collection<model.Book>) bookList24, (java.util.Collection<model.CD>) cDList27, (java.util.Collection<model.Magazine>) magazineList30);
        model.Book book33 = null;
        model.CD cD34 = null;
        model.Magazine magazine35 = null;
        model.Book[] bookArray36 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList37 = new java.util.ArrayList<model.Book>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList37, bookArray36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        model.Magazine[] magazineArray42 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList43 = new java.util.ArrayList<model.Magazine>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList43, magazineArray42);
        model.ItemSearchResult itemSearchResult45 = new model.ItemSearchResult(book33, cD34, magazine35, (java.util.Collection<model.Book>) bookList37, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList43);
        model.CD[] cDArray46 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList47 = new java.util.ArrayList<model.CD>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList47, cDArray46);
        itemSearchResult45.similarCD = cDList47;
        model.Book book50 = null;
        model.CD cD51 = null;
        model.Magazine magazine52 = null;
        model.Book[] bookArray53 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList54 = new java.util.ArrayList<model.Book>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList54, bookArray53);
        model.CD[] cDArray56 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList57 = new java.util.ArrayList<model.CD>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList57, cDArray56);
        model.Magazine[] magazineArray59 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList60 = new java.util.ArrayList<model.Magazine>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList60, magazineArray59);
        model.ItemSearchResult itemSearchResult62 = new model.ItemSearchResult(book50, cD51, magazine52, (java.util.Collection<model.Book>) bookList54, (java.util.Collection<model.CD>) cDList57, (java.util.Collection<model.Magazine>) magazineList60);
        model.ItemSearchResult itemSearchResult63 = new model.ItemSearchResult((model.Book) virtualBook16, cD18, magazine19, (java.util.Collection<model.Book>) bookList24, (java.util.Collection<model.CD>) cDList47, (java.util.Collection<model.Magazine>) magazineList60);
        int int64 = virtualBook16.ID;
        int int65 = virtualBook16.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter66 = null;
        model.PaidNewsletter paidNewsletter67 = null;
        model.VirtualItemSearchResult virtualItemSearchResult68 = new model.VirtualItemSearchResult(virtualBook16, uniProvidedNewsletter66, paidNewsletter67);
        model.PaidNewsletter paidNewsletter69 = virtualItemSearchResult68.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter70 = virtualItemSearchResult68.getUniNewsletter();
        model.UniProvidedNewsletter uniProvidedNewsletter71 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter71.title = "";
        java.lang.String str74 = uniProvidedNewsletter71.title;
        uniProvidedNewsletter71.showContent();
        virtualItemSearchResult68.setUniNewsletter(uniProvidedNewsletter71);
        model.UniProvidedNewsletter uniProvidedNewsletter77 = virtualItemSearchResult68.uniNewsletter;
        uniProvidedNewsletter77.cost = 9;
        virtualItemSearchResult11.setUniNewsletter(uniProvidedNewsletter77);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(virtualItemSearchResult11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(virtualBook16);
        org.junit.Assert.assertNotNull(bookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(cDArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(magazineArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(bookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(magazineArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(cDArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(bookArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(cDArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(magazineArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 20 + "'", int65 == 20);
        org.junit.Assert.assertNull(paidNewsletter69);
        org.junit.Assert.assertNull(uniProvidedNewsletter70);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertNotNull(uniProvidedNewsletter77);
    }

    @Test
    public void test2121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2121");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        java.util.Iterator<model.VirtualItem> virtualItemItor3 = studentOnlineResources2.iterator();
        model.Student student4 = new model.Student();
        int int5 = student4.ID;
        model.StudentOnlineResources studentOnlineResources6 = new model.StudentOnlineResources((model.Client) student4);
        model.VirtualBook virtualBook8 = studentOnlineResources6.searchAccessibleBook("");
        model.CD cD10 = new model.CD("");
        model.Magazine magazine11 = null;
        model.Book book12 = null;
        model.CD cD13 = null;
        model.Magazine magazine14 = null;
        model.Book[] bookArray15 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList16 = new java.util.ArrayList<model.Book>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList16, bookArray15);
        model.CD[] cDArray18 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList19 = new java.util.ArrayList<model.CD>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList19, cDArray18);
        model.Magazine[] magazineArray21 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList22 = new java.util.ArrayList<model.Magazine>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList22, magazineArray21);
        model.ItemSearchResult itemSearchResult24 = new model.ItemSearchResult(book12, cD13, magazine14, (java.util.Collection<model.Book>) bookList16, (java.util.Collection<model.CD>) cDList19, (java.util.Collection<model.Magazine>) magazineList22);
        model.Book book25 = null;
        model.CD cD26 = null;
        model.Magazine magazine27 = null;
        model.Book[] bookArray28 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList29 = new java.util.ArrayList<model.Book>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList29, bookArray28);
        model.CD[] cDArray31 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList32 = new java.util.ArrayList<model.CD>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList32, cDArray31);
        model.Magazine[] magazineArray34 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList35 = new java.util.ArrayList<model.Magazine>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList35, magazineArray34);
        model.ItemSearchResult itemSearchResult37 = new model.ItemSearchResult(book25, cD26, magazine27, (java.util.Collection<model.Book>) bookList29, (java.util.Collection<model.CD>) cDList32, (java.util.Collection<model.Magazine>) magazineList35);
        model.CD[] cDArray38 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList39 = new java.util.ArrayList<model.CD>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList39, cDArray38);
        itemSearchResult37.similarCD = cDList39;
        model.Book book42 = null;
        model.CD cD43 = null;
        model.Magazine magazine44 = null;
        model.Book[] bookArray45 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList46 = new java.util.ArrayList<model.Book>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList46, bookArray45);
        model.CD[] cDArray48 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList49 = new java.util.ArrayList<model.CD>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList49, cDArray48);
        model.Magazine[] magazineArray51 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList52 = new java.util.ArrayList<model.Magazine>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList52, magazineArray51);
        model.ItemSearchResult itemSearchResult54 = new model.ItemSearchResult(book42, cD43, magazine44, (java.util.Collection<model.Book>) bookList46, (java.util.Collection<model.CD>) cDList49, (java.util.Collection<model.Magazine>) magazineList52);
        model.ItemSearchResult itemSearchResult55 = new model.ItemSearchResult((model.Book) virtualBook8, cD10, magazine11, (java.util.Collection<model.Book>) bookList16, (java.util.Collection<model.CD>) cDList39, (java.util.Collection<model.Magazine>) magazineList52);
        java.lang.String str56 = studentOnlineResources2.readVirtualItem((model.VirtualItem) virtualBook8);
        java.lang.String str57 = virtualBook8.publisher;
        int int58 = virtualBook8.ID;
        // The following exception was thrown during execution in test generation
        try {
            model.RentedItem rentedItem60 = new model.RentedItem((model.Item) virtualBook8, "src/VirtualBook.csv");
            org.junit.Assert.fail("Expected exception of type java.time.format.DateTimeParseException; message: Text 'src/VirtualBook.csv' could not be parsed at index 0");
        } catch (java.time.format.DateTimeParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(virtualItemItor3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(virtualBook8);
        org.junit.Assert.assertNotNull(bookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(cDArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(magazineArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(bookArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(cDArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(magazineArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(cDArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(bookArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(cDArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(magazineArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
    }

    @Test
    public void test2122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2122");
        model.BorrowingManager.maxBorrowCount = 9008065;
    }

    @Test
    public void test2123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2123");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.Book book1 = null;
        model.CD cD3 = new model.CD("");
        model.Magazine magazine4 = null;
        java.util.Collection<model.Book> bookCollection5 = null;
        model.Book book6 = null;
        model.CD cD7 = null;
        model.Magazine magazine8 = null;
        model.Book[] bookArray9 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList10 = new java.util.ArrayList<model.Book>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList10, bookArray9);
        model.CD[] cDArray12 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList13 = new java.util.ArrayList<model.CD>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList13, cDArray12);
        model.Magazine[] magazineArray15 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList16 = new java.util.ArrayList<model.Magazine>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList16, magazineArray15);
        model.ItemSearchResult itemSearchResult18 = new model.ItemSearchResult(book6, cD7, magazine8, (java.util.Collection<model.Book>) bookList10, (java.util.Collection<model.CD>) cDList13, (java.util.Collection<model.Magazine>) magazineList16);
        model.Book book19 = null;
        model.CD cD20 = null;
        model.Magazine magazine21 = null;
        model.Book[] bookArray22 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList23 = new java.util.ArrayList<model.Book>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList23, bookArray22);
        model.CD[] cDArray25 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList26 = new java.util.ArrayList<model.CD>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList26, cDArray25);
        model.Magazine[] magazineArray28 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList29 = new java.util.ArrayList<model.Magazine>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList29, magazineArray28);
        model.ItemSearchResult itemSearchResult31 = new model.ItemSearchResult(book19, cD20, magazine21, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList29);
        itemSearchResult18.similarCD = cDList26;
        model.Book book33 = null;
        model.CD cD34 = null;
        model.Magazine magazine35 = null;
        model.Book[] bookArray36 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList37 = new java.util.ArrayList<model.Book>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList37, bookArray36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        model.Magazine[] magazineArray42 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList43 = new java.util.ArrayList<model.Magazine>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList43, magazineArray42);
        model.ItemSearchResult itemSearchResult45 = new model.ItemSearchResult(book33, cD34, magazine35, (java.util.Collection<model.Book>) bookList37, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book1, cD3, magazine4, bookCollection5, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList43);
        cD3.ID = (short) 10;
        cD3.canBePurchased = false;
        boolean boolean51 = cD3.canBePurchased;
        model.Faculty faculty52 = new model.Faculty();
        boolean boolean53 = rentAndReturnSystem0.rentAnItem((model.Item) cD3, (model.Client) faculty52);
        java.lang.String str54 = faculty52.faculty;
        model.RentedItem[] rentedItemArray55 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList56 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList56, rentedItemArray55);
        model.BorrowingManager borrowingManager58 = new model.BorrowingManager(rentedItemList56);
        boolean boolean59 = borrowingManager58.canRent();
        model.Client client60 = borrowingManager58.client;
        faculty52.borrowManager = borrowingManager58;
        java.util.Collection<model.Course> courseCollection62 = faculty52.courses;
        model.NewsletterSubscriptionManager newsletterSubscriptionManager63 = faculty52.newsletterManager;
        java.util.Collection<model.Book> bookCollection64 = null;
        faculty52.textbooks = bookCollection64;
        faculty52.ID = 100;
        faculty52.username = "model.RegistrationFailedException: ";
        int int70 = faculty52.ID;
        org.junit.Assert.assertNotNull(bookArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(cDArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(magazineArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(bookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(magazineArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(bookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(magazineArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(rentedItemArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(client60);
        org.junit.Assert.assertNull(courseCollection62);
        org.junit.Assert.assertNull(newsletterSubscriptionManager63);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 100 + "'", int70 == 100);
    }

    @Test
    public void test2124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2124");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter54 = null;
        model.PaidNewsletter paidNewsletter55 = null;
        model.VirtualItemSearchResult virtualItemSearchResult56 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter54, paidNewsletter55);
        model.UniProvidedNewsletter uniProvidedNewsletter57 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter57.title = "hi!";
        uniProvidedNewsletter57.title = "";
        virtualItemSearchResult56.uniNewsletter = uniProvidedNewsletter57;
        model.UniProvidedNewsletter uniProvidedNewsletter63 = virtualItemSearchResult56.uniNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter64 = virtualItemSearchResult56.getUniNewsletter();
        model.VirtualBook virtualBook65 = virtualItemSearchResult56.virtualBook;
        model.PaidNewsletter paidNewsletter66 = virtualItemSearchResult56.getPaidNewsletter();
        model.VirtualBook virtualBook67 = virtualItemSearchResult56.virtualBook;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertNotNull(uniProvidedNewsletter63);
        org.junit.Assert.assertNotNull(uniProvidedNewsletter64);
        org.junit.Assert.assertNotNull(virtualBook65);
        org.junit.Assert.assertNull(paidNewsletter66);
        org.junit.Assert.assertNotNull(virtualBook67);
    }

    @Test
    public void test2125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2125");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        virtualBook4.ID = (short) 10;
        int int54 = virtualBook4.ID;
        virtualBook4.ID = 9042984;
        model.VirtualItemContent virtualItemContent58 = new model.VirtualItemContent("model.RentingNotAllowedException: hi!");
        virtualBook4.content = virtualItemContent58;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
    }

    @Test
    public void test2126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2126");
        model.BorrowingManager.maxBorrowCount = 5248424;
    }

    @Test
    public void test2127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2127");
        model.Database database7 = model.Database.createDatabase("src/Newsletter.csv", "model.RegistrationFailedException: src/Book.csv", "src/BorrowedItems.csv", "model.RegistrationFailedException: model.RentingNotAllowedException: hi!", "src/BorrowedItems.csv", "", "model.RentingNotAllowedException: hi!");
        model.Client client9 = database7.getClient("model.RentingNotAllowedException: src/Magazine.csv");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(client9);
    }

    @Test
    public void test2128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2128");
        model.Faculty faculty0 = new model.Faculty();
        faculty0.username = "hi!";
        faculty0.faculty = "hi!";
        faculty0.email = "src/Client.csv";
    }

    @Test
    public void test2129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2129");
        model.ItemManagement itemManagement0 = new model.ItemManagement();
        model.Database database1 = null;
        itemManagement0.database = database1;
        model.Student student3 = new model.Student();
        int int4 = student3.ID;
        model.StudentOnlineResources studentOnlineResources5 = new model.StudentOnlineResources((model.Client) student3);
        model.VirtualBook virtualBook7 = studentOnlineResources5.searchAccessibleBook("");
        itemManagement0.disableAnItem((model.Item) virtualBook7);
        model.Item item10 = itemManagement0.selectAnItemFromDatabase(1052342);
        model.Database database11 = itemManagement0.database;
        model.Database database12 = null;
        model.Register register13 = model.Register.makeRegister(database12);
        model.Faculty faculty14 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection15 = faculty14.courses;
        boolean boolean18 = register13.registerAsStaff((model.Staff) faculty14, "src/Book.csv", "src/Book.csv");
        model.Database database19 = model.Database.database;
        model.Student student20 = new model.Student();
        int int21 = student20.ID;
        model.StudentOnlineResources studentOnlineResources22 = new model.StudentOnlineResources((model.Client) student20);
        student20.ID = '#';
        database19.addClient((model.Client) student20);
        student20.email = "hi!";
        boolean boolean30 = register13.registerAsStaff((model.Staff) student20, "src/CD.csv", "src/Book.csv");
        model.Database database38 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str39 = database38.getVirtualBookFilePath();
        register13.database = database38;
        model.Database database48 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str49 = database48.getVirtualBookFilePath();
        model.Database.database = database48;
        register13.database = database48;
        itemManagement0.database = database48;
        database48.itemPath = "";
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(virtualBook7);
        org.junit.Assert.assertNull(item10);
        org.junit.Assert.assertNull(database11);
        org.junit.Assert.assertNotNull(register13);
        org.junit.Assert.assertNull(courseCollection15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "src/VirtualBook.csv" + "'", str39, "src/VirtualBook.csv");
        org.junit.Assert.assertNotNull(database48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "src/VirtualBook.csv" + "'", str49, "src/VirtualBook.csv");
    }

    @Test
    public void test2130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2130");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.Student student5 = new model.Student();
        int int6 = student5.ID;
        model.StudentOnlineResources studentOnlineResources7 = new model.StudentOnlineResources((model.Client) student5);
        student5.ID = '#';
        java.lang.String str10 = student5.email;
        newsletterSubscriptionManager3.client = student5;
        model.Client client12 = newsletterSubscriptionManager3.client;
        model.Client client13 = newsletterSubscriptionManager3.client;
        client13.username = "model.RegistrationFailedException: ";
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(client12);
        org.junit.Assert.assertNotNull(client13);
    }

    @Test
    public void test2131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2131");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter54 = null;
        model.PaidNewsletter paidNewsletter55 = null;
        model.VirtualItemSearchResult virtualItemSearchResult56 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter54, paidNewsletter55);
        model.PaidNewsletter paidNewsletter57 = virtualItemSearchResult56.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter58 = new model.UniProvidedNewsletter();
        virtualItemSearchResult56.setUniNewsletter(uniProvidedNewsletter58);
        java.lang.String str60 = uniProvidedNewsletter58.title;
        uniProvidedNewsletter58.cost = 0L;
        uniProvidedNewsletter58.title = "model.RegistrationFailedException: src/Book.csv";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertNull(paidNewsletter57);
        org.junit.Assert.assertNull(str60);
    }

    @Test
    public void test2132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2132");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.Payment payment1 = rentAndReturnSystem0.paymentAPI;
        model.PayMobileWallet payMobileWallet2 = new model.PayMobileWallet();
        payMobileWallet2.amountPay = 100.0f;
        payMobileWallet2.pay((double) 100L);
        rentAndReturnSystem0.paymentAPI = payMobileWallet2;
        model.Payment payment8 = rentAndReturnSystem0.paymentAPI;
        model.Magazine magazine10 = new model.Magazine("");
        java.lang.String str11 = magazine10.title;
        model.Client client12 = null;
        boolean boolean13 = rentAndReturnSystem0.rentAnItem((model.Item) magazine10, client12);
        model.Payment payment14 = rentAndReturnSystem0.paymentAPI;
        org.junit.Assert.assertNull(payment1);
        org.junit.Assert.assertNotNull(payment8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(payment14);
    }

    @Test
    public void test2133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2133");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.Student student5 = new model.Student();
        int int6 = student5.ID;
        model.StudentOnlineResources studentOnlineResources7 = new model.StudentOnlineResources((model.Client) student5);
        student5.ID = '#';
        java.lang.String str10 = student5.email;
        newsletterSubscriptionManager3.client = student5;
        model.BuySpecialItems buySpecialItems12 = new model.BuySpecialItems();
        model.Book book13 = null;
        model.CD cD15 = new model.CD("");
        model.Magazine magazine16 = null;
        java.util.Collection<model.Book> bookCollection17 = null;
        model.Book book18 = null;
        model.CD cD19 = null;
        model.Magazine magazine20 = null;
        model.Book[] bookArray21 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList22 = new java.util.ArrayList<model.Book>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList22, bookArray21);
        model.CD[] cDArray24 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList25 = new java.util.ArrayList<model.CD>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList25, cDArray24);
        model.Magazine[] magazineArray27 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList28 = new java.util.ArrayList<model.Magazine>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList28, magazineArray27);
        model.ItemSearchResult itemSearchResult30 = new model.ItemSearchResult(book18, cD19, magazine20, (java.util.Collection<model.Book>) bookList22, (java.util.Collection<model.CD>) cDList25, (java.util.Collection<model.Magazine>) magazineList28);
        model.Book book31 = null;
        model.CD cD32 = null;
        model.Magazine magazine33 = null;
        model.Book[] bookArray34 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList35 = new java.util.ArrayList<model.Book>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList35, bookArray34);
        model.CD[] cDArray37 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList38 = new java.util.ArrayList<model.CD>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList38, cDArray37);
        model.Magazine[] magazineArray40 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList41 = new java.util.ArrayList<model.Magazine>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList41, magazineArray40);
        model.ItemSearchResult itemSearchResult43 = new model.ItemSearchResult(book31, cD32, magazine33, (java.util.Collection<model.Book>) bookList35, (java.util.Collection<model.CD>) cDList38, (java.util.Collection<model.Magazine>) magazineList41);
        itemSearchResult30.similarCD = cDList38;
        model.Book book45 = null;
        model.CD cD46 = null;
        model.Magazine magazine47 = null;
        model.Book[] bookArray48 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList49 = new java.util.ArrayList<model.Book>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList49, bookArray48);
        model.CD[] cDArray51 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList52 = new java.util.ArrayList<model.CD>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList52, cDArray51);
        model.Magazine[] magazineArray54 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList55 = new java.util.ArrayList<model.Magazine>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList55, magazineArray54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult(book45, cD46, magazine47, (java.util.Collection<model.Book>) bookList49, (java.util.Collection<model.CD>) cDList52, (java.util.Collection<model.Magazine>) magazineList55);
        model.ItemSearchResult itemSearchResult58 = new model.ItemSearchResult(book13, cD15, magazine16, bookCollection17, (java.util.Collection<model.CD>) cDList38, (java.util.Collection<model.Magazine>) magazineList55);
        cD15.ID = (short) 10;
        boolean boolean62 = buySpecialItems12.buyAnItem((model.Item) cD15, (double) 0);
        model.PayDebit payDebit63 = new model.PayDebit();
        buySpecialItems12.paymentAPI = payDebit63;
        newsletterSubscriptionManager3.paymentAPI = payDebit63;
        model.BuySpecialItems buySpecialItems66 = new model.BuySpecialItems();
        model.Payment payment67 = null;
        buySpecialItems66.paymentAPI = payment67;
        model.RequestForum requestForum69 = model.RequestForum.createRequestForum();
        model.LibraryManagementTeam libraryManagementTeam70 = new model.LibraryManagementTeam();
        int int71 = libraryManagementTeam70.ID;
        int int72 = libraryManagementTeam70.accessCode;
        model.Item item73 = null;
        libraryManagementTeam70.addAnItem(item73);
        requestForum69.managementTeam = libraryManagementTeam70;
        java.util.ArrayList<model.Item> itemList76 = libraryManagementTeam70.items;
        buySpecialItems66.purchasedItems = itemList76;
        model.Payment payment78 = buySpecialItems66.paymentAPI;
        model.PayDebit payDebit79 = new model.PayDebit();
        buySpecialItems66.paymentAPI = payDebit79;
        double double81 = payDebit79.amountPay;
        payDebit79.pay((double) '#');
        newsletterSubscriptionManager3.paymentAPI = payDebit79;
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(bookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(cDArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(magazineArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(bookArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(cDArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(magazineArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(bookArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(cDArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(magazineArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(requestForum69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(itemList76);
        org.junit.Assert.assertNull(payment78);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
    }

    @Test
    public void test2134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2134");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        model.Book book4 = null;
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        java.util.Collection<model.Book> bookCollection8 = null;
        model.Book book9 = null;
        model.CD cD10 = null;
        model.Magazine magazine11 = null;
        model.Book[] bookArray12 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList13 = new java.util.ArrayList<model.Book>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList13, bookArray12);
        model.CD[] cDArray15 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList16 = new java.util.ArrayList<model.CD>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList16, cDArray15);
        model.Magazine[] magazineArray18 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList19 = new java.util.ArrayList<model.Magazine>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList19, magazineArray18);
        model.ItemSearchResult itemSearchResult21 = new model.ItemSearchResult(book9, cD10, magazine11, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList16, (java.util.Collection<model.Magazine>) magazineList19);
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        itemSearchResult21.similarCD = cDList29;
        model.Book book36 = null;
        model.CD cD37 = null;
        model.Magazine magazine38 = null;
        model.Book[] bookArray39 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList40 = new java.util.ArrayList<model.Book>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList40, bookArray39);
        model.CD[] cDArray42 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList43 = new java.util.ArrayList<model.CD>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList43, cDArray42);
        model.Magazine[] magazineArray45 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList46 = new java.util.ArrayList<model.Magazine>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList46, magazineArray45);
        model.ItemSearchResult itemSearchResult48 = new model.ItemSearchResult(book36, cD37, magazine38, (java.util.Collection<model.Book>) bookList40, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList46);
        model.ItemSearchResult itemSearchResult49 = new model.ItemSearchResult(book4, cD6, magazine7, bookCollection8, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList46);
        cD6.ID = (short) 10;
        borrowingManager3.removeRentedItem((model.Item) cD6);
        float float53 = borrowingManager3.amountOwned;
        int int54 = borrowingManager3.itemsBorrowedCount;
        model.RentedItem rentedItem55 = null;
        // The following exception was thrown during execution in test generation
        try {
            borrowingManager3.removeRentedItem(rentedItem55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"item\" because \"item\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(bookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cDArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(magazineArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(bookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cDArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(magazineArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + 0.0f + "'", float53 == 0.0f);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
    }

    @Test
    public void test2135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2135");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        java.util.Iterator<model.VirtualItem> virtualItemItor3 = studentOnlineResources2.iterator();
        model.Student student4 = new model.Student();
        int int5 = student4.ID;
        model.StudentOnlineResources studentOnlineResources6 = new model.StudentOnlineResources((model.Client) student4);
        student4.ID = '#';
        java.lang.String str9 = student4.email;
        studentOnlineResources2.client = student4;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(virtualItemItor3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test2136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2136");
        model.Course course0 = new model.Course();
        java.lang.String str1 = course0.subject;
        course0.subject = "";
        course0.code = "src/Newsletter.csv";
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test2137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2137");
        model.Database database7 = model.Database.createDatabase("hi!", "model.RegistrationFailedException: src/Magazine.csv", "src/CD.csv", "src/Client.csv", "model.LoginFailedException: hi!", "model.RegistrationFailedException: src/Magazine.csv", "model.LoginFailedException: hi!");
        java.lang.String str8 = database7.getBorrowedItemFilePath();
        model.Register register9 = model.Register.makeRegister(database7);
        model.Database database10 = null;
        model.Register register11 = model.Register.makeRegister(database10);
        model.Faculty faculty12 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection13 = faculty12.courses;
        boolean boolean16 = register11.registerAsStaff((model.Staff) faculty12, "src/Book.csv", "src/Book.csv");
        model.Database database17 = register11.database;
        java.lang.String str18 = database17.getBookFilePath();
        register9.database = database17;
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/BorrowedItems.csv" + "'", str8, "src/BorrowedItems.csv");
        org.junit.Assert.assertNotNull(register9);
        org.junit.Assert.assertNotNull(register11);
        org.junit.Assert.assertNull(courseCollection13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "src/Book.csv" + "'", str18, "src/Book.csv");
    }

    @Test
    public void test2138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2138");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter54 = null;
        model.PaidNewsletter paidNewsletter55 = null;
        model.VirtualItemSearchResult virtualItemSearchResult56 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter54, paidNewsletter55);
        model.PaidNewsletter paidNewsletter57 = virtualItemSearchResult56.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter58 = virtualItemSearchResult56.getUniNewsletter();
        model.UniProvidedNewsletter uniProvidedNewsletter59 = new model.UniProvidedNewsletter();
        virtualItemSearchResult56.uniNewsletter = uniProvidedNewsletter59;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertNull(paidNewsletter57);
        org.junit.Assert.assertNull(uniProvidedNewsletter58);
    }

    @Test
    public void test2139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2139");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.RequestForum requestForum1 = model.RequestForum.createRequestForum();
        model.Request request2 = new model.Request();
        request2.title = "";
        java.lang.String str5 = requestForum1.makeARequest(request2);
        int int6 = requestForum0.assessBooksPriority(request2);
        model.LibraryManagementTeam libraryManagementTeam7 = requestForum0.managementTeam;
        model.LibraryManagementTeam libraryManagementTeam8 = requestForum0.managementTeam;
        model.RequestForum requestForum9 = model.RequestForum.createRequestForum();
        model.RequestForum requestForum10 = model.RequestForum.createRequestForum();
        model.Request request11 = new model.Request();
        request11.title = "";
        java.lang.String str14 = requestForum10.makeARequest(request11);
        int int15 = requestForum9.assessBooksPriority(request11);
        java.lang.String str16 = request11.type;
        request11.type = "src/CD.csv";
        model.Newsletter[] newsletterArray19 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList20 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList20, newsletterArray19);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager22 = new model.NewsletterSubscriptionManager(newsletterList20);
        model.Client client23 = newsletterSubscriptionManager22.client;
        model.UniProvidedNewsletter uniProvidedNewsletter24 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter24.title = "";
        java.lang.String str27 = uniProvidedNewsletter24.title;
        newsletterSubscriptionManager22.subscribeToUniProvidedNewsletter(uniProvidedNewsletter24, "");
        java.util.ArrayList<model.Newsletter> newsletterList30 = newsletterSubscriptionManager22.newsletterSubscribed;
        model.Visitor visitor31 = new model.Visitor();
        visitor31.email = "hi!";
        newsletterSubscriptionManager22.client = visitor31;
        model.RentedItem[] rentedItemArray35 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList36 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList36, rentedItemArray35);
        model.BorrowingManager borrowingManager38 = new model.BorrowingManager(rentedItemList36);
        model.Book book39 = null;
        model.CD cD41 = new model.CD("");
        model.Magazine magazine42 = null;
        java.util.Collection<model.Book> bookCollection43 = null;
        model.Book book44 = null;
        model.CD cD45 = null;
        model.Magazine magazine46 = null;
        model.Book[] bookArray47 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList48 = new java.util.ArrayList<model.Book>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList48, bookArray47);
        model.CD[] cDArray50 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList51 = new java.util.ArrayList<model.CD>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList51, cDArray50);
        model.Magazine[] magazineArray53 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList54 = new java.util.ArrayList<model.Magazine>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList54, magazineArray53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult(book44, cD45, magazine46, (java.util.Collection<model.Book>) bookList48, (java.util.Collection<model.CD>) cDList51, (java.util.Collection<model.Magazine>) magazineList54);
        model.Book book57 = null;
        model.CD cD58 = null;
        model.Magazine magazine59 = null;
        model.Book[] bookArray60 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList61 = new java.util.ArrayList<model.Book>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList61, bookArray60);
        model.CD[] cDArray63 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList64 = new java.util.ArrayList<model.CD>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList64, cDArray63);
        model.Magazine[] magazineArray66 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList67 = new java.util.ArrayList<model.Magazine>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList67, magazineArray66);
        model.ItemSearchResult itemSearchResult69 = new model.ItemSearchResult(book57, cD58, magazine59, (java.util.Collection<model.Book>) bookList61, (java.util.Collection<model.CD>) cDList64, (java.util.Collection<model.Magazine>) magazineList67);
        itemSearchResult56.similarCD = cDList64;
        model.Book book71 = null;
        model.CD cD72 = null;
        model.Magazine magazine73 = null;
        model.Book[] bookArray74 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList75 = new java.util.ArrayList<model.Book>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList75, bookArray74);
        model.CD[] cDArray77 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList78 = new java.util.ArrayList<model.CD>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList78, cDArray77);
        model.Magazine[] magazineArray80 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList81 = new java.util.ArrayList<model.Magazine>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList81, magazineArray80);
        model.ItemSearchResult itemSearchResult83 = new model.ItemSearchResult(book71, cD72, magazine73, (java.util.Collection<model.Book>) bookList75, (java.util.Collection<model.CD>) cDList78, (java.util.Collection<model.Magazine>) magazineList81);
        model.ItemSearchResult itemSearchResult84 = new model.ItemSearchResult(book39, cD41, magazine42, bookCollection43, (java.util.Collection<model.CD>) cDList64, (java.util.Collection<model.Magazine>) magazineList81);
        cD41.ID = (short) 10;
        borrowingManager38.removeRentedItem((model.Item) cD41);
        float float88 = borrowingManager38.amountOwned;
        float float89 = borrowingManager38.amountOwned;
        borrowingManager38.amountOwned = '#';
        visitor31.borrowManager = borrowingManager38;
        request11.requestee = visitor31;
        model.Client client94 = request11.requestee;
        int int95 = requestForum0.assessBooksPriority(request11);
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertNotNull(requestForum1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(libraryManagementTeam7);
        org.junit.Assert.assertNotNull(libraryManagementTeam8);
        org.junit.Assert.assertNotNull(requestForum9);
        org.junit.Assert.assertNotNull(requestForum10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(newsletterArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(client23);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(newsletterList30);
        org.junit.Assert.assertNotNull(rentedItemArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(bookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(cDArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(magazineArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(bookArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(cDArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(magazineArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(bookArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(cDArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(magazineArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + float88 + "' != '" + 0.0f + "'", float88 == 0.0f);
        org.junit.Assert.assertTrue("'" + float89 + "' != '" + 0.0f + "'", float89 == 0.0f);
        org.junit.Assert.assertNotNull(client94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 0 + "'", int95 == 0);
    }

    @Test
    public void test2140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2140");
        model.LibraryManagementTeam libraryManagementTeam0 = model.LibraryManagementTeam.createLibraryManagementTeam();
        model.RentAndReturnSystem rentAndReturnSystem1 = new model.RentAndReturnSystem();
        model.Payment payment2 = rentAndReturnSystem1.paymentAPI;
        model.PayMobileWallet payMobileWallet3 = new model.PayMobileWallet();
        payMobileWallet3.amountPay = 100.0f;
        payMobileWallet3.amountPay = (byte) -1;
        rentAndReturnSystem1.paymentAPI = payMobileWallet3;
        model.ItemManagement itemManagement9 = new model.ItemManagement();
        model.Database database10 = null;
        itemManagement9.database = database10;
        model.Student student12 = new model.Student();
        int int13 = student12.ID;
        model.StudentOnlineResources studentOnlineResources14 = new model.StudentOnlineResources((model.Client) student12);
        model.VirtualBook virtualBook16 = studentOnlineResources14.searchAccessibleBook("");
        itemManagement9.disableAnItem((model.Item) virtualBook16);
        model.Item item19 = itemManagement9.selectAnItemFromDatabase((int) '#');
        model.ItemManagement itemManagement20 = new model.ItemManagement();
        model.Database database21 = null;
        itemManagement20.database = database21;
        model.Student student23 = new model.Student();
        int int24 = student23.ID;
        model.StudentOnlineResources studentOnlineResources25 = new model.StudentOnlineResources((model.Client) student23);
        model.VirtualBook virtualBook27 = studentOnlineResources25.searchAccessibleBook("");
        itemManagement20.disableAnItem((model.Item) virtualBook27);
        itemManagement9.disableAnItem((model.Item) virtualBook27);
        int int30 = virtualBook27.copiesAvailable;
        model.Visitor visitor31 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList32 = visitor31.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources33 = new model.StudentOnlineResources((model.Client) visitor31);
        model.RentedItem[] rentedItemArray34 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList35 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList35, rentedItemArray34);
        model.BorrowingManager borrowingManager37 = new model.BorrowingManager(rentedItemList35);
        model.Visitor visitor38 = new model.Visitor();
        visitor38.email = "hi!";
        borrowingManager37.client = visitor38;
        studentOnlineResources33.client = visitor38;
        visitor38.username = "hi!";
        boolean boolean45 = rentAndReturnSystem1.rentAnItem((model.Item) virtualBook27, (model.Client) visitor38);
        virtualBook27.showContent();
        libraryManagementTeam0.addAnItem((model.Item) virtualBook27);
        model.VirtualItemContent virtualItemContent48 = virtualBook27.content;
        org.junit.Assert.assertNotNull(libraryManagementTeam0);
        org.junit.Assert.assertNull(payment2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(virtualBook16);
        org.junit.Assert.assertNull(item19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(virtualBook27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 20 + "'", int30 == 20);
        org.junit.Assert.assertNull(virtualBookList32);
        org.junit.Assert.assertNotNull(rentedItemArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(virtualItemContent48);
    }

    @Test
    public void test2141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2141");
        model.ItemManagement itemManagement0 = new model.ItemManagement();
        model.Database database1 = null;
        itemManagement0.database = database1;
        model.BuySpecialItems buySpecialItems3 = new model.BuySpecialItems();
        model.Book book4 = null;
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        java.util.Collection<model.Book> bookCollection8 = null;
        model.Book book9 = null;
        model.CD cD10 = null;
        model.Magazine magazine11 = null;
        model.Book[] bookArray12 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList13 = new java.util.ArrayList<model.Book>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList13, bookArray12);
        model.CD[] cDArray15 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList16 = new java.util.ArrayList<model.CD>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList16, cDArray15);
        model.Magazine[] magazineArray18 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList19 = new java.util.ArrayList<model.Magazine>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList19, magazineArray18);
        model.ItemSearchResult itemSearchResult21 = new model.ItemSearchResult(book9, cD10, magazine11, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList16, (java.util.Collection<model.Magazine>) magazineList19);
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        itemSearchResult21.similarCD = cDList29;
        model.Book book36 = null;
        model.CD cD37 = null;
        model.Magazine magazine38 = null;
        model.Book[] bookArray39 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList40 = new java.util.ArrayList<model.Book>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList40, bookArray39);
        model.CD[] cDArray42 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList43 = new java.util.ArrayList<model.CD>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList43, cDArray42);
        model.Magazine[] magazineArray45 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList46 = new java.util.ArrayList<model.Magazine>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList46, magazineArray45);
        model.ItemSearchResult itemSearchResult48 = new model.ItemSearchResult(book36, cD37, magazine38, (java.util.Collection<model.Book>) bookList40, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList46);
        model.ItemSearchResult itemSearchResult49 = new model.ItemSearchResult(book4, cD6, magazine7, bookCollection8, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList46);
        cD6.ID = (short) 10;
        boolean boolean53 = buySpecialItems3.buyAnItem((model.Item) cD6, (double) 0);
        itemManagement0.enableAnItem((model.Item) cD6);
        model.Database database62 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str63 = database62.getVirtualBookFilePath();
        model.Database.database = database62;
        java.lang.String str65 = database62.virtualItemFilePath;
        itemManagement0.database = database62;
        model.VirtualBook virtualBook68 = new model.VirtualBook("model.RegistrationFailedException: model.RentingNotAllowedException: hi!");
        java.lang.String str69 = virtualBook68.title;
        itemManagement0.addAnItem((model.Item) virtualBook68);
        virtualBook68.title = "src/VirtualBook.csv";
        int int73 = virtualBook68.edition;
        org.junit.Assert.assertNotNull(bookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cDArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(magazineArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(bookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cDArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(magazineArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(database62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "src/VirtualBook.csv" + "'", str63, "src/VirtualBook.csv");
// flaky:         org.junit.Assert.assertEquals("'" + str65 + "' != '" + "model.RegistrationFailedException: model.RentingNotAllowedException: hi!" + "'", str65, "model.RegistrationFailedException: model.RentingNotAllowedException: hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "model.RegistrationFailedException: model.RentingNotAllowedException: hi!" + "'", str69, "model.RegistrationFailedException: model.RentingNotAllowedException: hi!");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
    }

    @Test
    public void test2142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2142");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.Visitor visitor5 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList6 = visitor5.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources7 = new model.StudentOnlineResources((model.Client) visitor5);
        model.RentedItem[] rentedItemArray8 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList9 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList9, rentedItemArray8);
        model.BorrowingManager borrowingManager11 = new model.BorrowingManager(rentedItemList9);
        model.Visitor visitor12 = new model.Visitor();
        visitor12.email = "hi!";
        borrowingManager11.client = visitor12;
        studentOnlineResources7.client = visitor12;
        model.UniProvidedNewsletter uniProvidedNewsletter17 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter17.title = "";
        java.lang.String str20 = studentOnlineResources7.readVirtualItem((model.VirtualItem) uniProvidedNewsletter17);
        newsletterSubscriptionManager3.cancelSubscription((model.Newsletter) uniProvidedNewsletter17);
        model.Client client22 = newsletterSubscriptionManager3.client;
        model.BuySpecialItems buySpecialItems23 = new model.BuySpecialItems();
        model.Payment payment24 = null;
        buySpecialItems23.paymentAPI = payment24;
        model.PayMobileWallet payMobileWallet26 = new model.PayMobileWallet();
        buySpecialItems23.paymentAPI = payMobileWallet26;
        model.PayMobileWallet payMobileWallet28 = new model.PayMobileWallet();
        payMobileWallet28.amountPay = 100.0f;
        payMobileWallet28.amountPay = (byte) -1;
        buySpecialItems23.paymentAPI = payMobileWallet28;
        newsletterSubscriptionManager3.paymentAPI = payMobileWallet28;
        payMobileWallet28.pay(98.0d);
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertNull(virtualBookList6);
        org.junit.Assert.assertNotNull(rentedItemArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(client22);
    }

    @Test
    public void test2143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2143");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.Book book1 = null;
        model.CD cD3 = new model.CD("");
        model.Magazine magazine4 = null;
        java.util.Collection<model.Book> bookCollection5 = null;
        model.Book book6 = null;
        model.CD cD7 = null;
        model.Magazine magazine8 = null;
        model.Book[] bookArray9 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList10 = new java.util.ArrayList<model.Book>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList10, bookArray9);
        model.CD[] cDArray12 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList13 = new java.util.ArrayList<model.CD>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList13, cDArray12);
        model.Magazine[] magazineArray15 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList16 = new java.util.ArrayList<model.Magazine>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList16, magazineArray15);
        model.ItemSearchResult itemSearchResult18 = new model.ItemSearchResult(book6, cD7, magazine8, (java.util.Collection<model.Book>) bookList10, (java.util.Collection<model.CD>) cDList13, (java.util.Collection<model.Magazine>) magazineList16);
        model.Book book19 = null;
        model.CD cD20 = null;
        model.Magazine magazine21 = null;
        model.Book[] bookArray22 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList23 = new java.util.ArrayList<model.Book>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList23, bookArray22);
        model.CD[] cDArray25 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList26 = new java.util.ArrayList<model.CD>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList26, cDArray25);
        model.Magazine[] magazineArray28 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList29 = new java.util.ArrayList<model.Magazine>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList29, magazineArray28);
        model.ItemSearchResult itemSearchResult31 = new model.ItemSearchResult(book19, cD20, magazine21, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList29);
        itemSearchResult18.similarCD = cDList26;
        model.Book book33 = null;
        model.CD cD34 = null;
        model.Magazine magazine35 = null;
        model.Book[] bookArray36 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList37 = new java.util.ArrayList<model.Book>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList37, bookArray36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        model.Magazine[] magazineArray42 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList43 = new java.util.ArrayList<model.Magazine>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList43, magazineArray42);
        model.ItemSearchResult itemSearchResult45 = new model.ItemSearchResult(book33, cD34, magazine35, (java.util.Collection<model.Book>) bookList37, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book1, cD3, magazine4, bookCollection5, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList43);
        cD3.ID = (short) 10;
        cD3.canBePurchased = false;
        boolean boolean51 = cD3.canBePurchased;
        model.Faculty faculty52 = new model.Faculty();
        boolean boolean53 = rentAndReturnSystem0.rentAnItem((model.Item) cD3, (model.Client) faculty52);
        java.lang.String str54 = faculty52.faculty;
        model.RentedItem[] rentedItemArray55 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList56 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList56, rentedItemArray55);
        model.BorrowingManager borrowingManager58 = new model.BorrowingManager(rentedItemList56);
        boolean boolean59 = borrowingManager58.canRent();
        model.Client client60 = borrowingManager58.client;
        faculty52.borrowManager = borrowingManager58;
        model.StudentOnlineResources studentOnlineResources62 = new model.StudentOnlineResources((model.Client) faculty52);
        model.VirtualBook virtualBook64 = studentOnlineResources62.searchAccessibleBook("src/VirtualBook.csv");
        java.util.Iterator<model.VirtualItem> virtualItemItor65 = studentOnlineResources62.iterator();
        org.junit.Assert.assertNotNull(bookArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(cDArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(magazineArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(bookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(magazineArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(bookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(magazineArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(rentedItemArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(client60);
        org.junit.Assert.assertNotNull(virtualBook64);
        org.junit.Assert.assertNull(virtualItemItor65);
    }

    @Test
    public void test2144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2144");
        model.Database database7 = model.Database.createDatabase("src/Client.csv", "src/Book.csv", "", "model.RegistrationFailedException: src/Book.csv", "src/Book.csv", "model.RegistrationFailedException: ", "model.RegistrationFailedException: src/Magazine.csv");
        java.lang.String str8 = database7.getNewspaperFilePath();
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/Newsletter.csv" + "'", str8, "src/Newsletter.csv");
    }

    @Test
    public void test2145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2145");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        student0.email = "model.LoginFailedException: hi!";
        model.BorrowingManager borrowingManager5 = student0.borrowManager;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(borrowingManager5);
    }

    @Test
    public void test2146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2146");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.Request request1 = new model.Request();
        request1.title = "";
        java.lang.String str4 = requestForum0.makeARequest(request1);
        model.LibraryManagementTeam libraryManagementTeam5 = requestForum0.managementTeam;
        model.RequestForum requestForum6 = model.RequestForum.createRequestForum();
        model.Request request7 = new model.Request();
        request7.title = "";
        java.lang.String str10 = requestForum6.makeARequest(request7);
        model.Client client11 = request7.requestee;
        int int12 = requestForum0.assessBooksPriority(request7);
        java.lang.String str13 = request7.type;
        model.Client client14 = request7.requestee;
        model.Faculty faculty15 = new model.Faculty();
        model.BorrowingManager borrowingManager16 = faculty15.borrowManager;
        faculty15.faculty = "model.RegistrationFailedException: src/Magazine.csv";
        request7.requestee = faculty15;
        java.util.Collection<model.Book> bookCollection20 = faculty15.textbooks;
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(libraryManagementTeam5);
        org.junit.Assert.assertNotNull(requestForum6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(client11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(client14);
        org.junit.Assert.assertNull(borrowingManager16);
        org.junit.Assert.assertNull(bookCollection20);
    }

    @Test
    public void test2147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2147");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter54 = null;
        model.PaidNewsletter paidNewsletter55 = null;
        model.VirtualItemSearchResult virtualItemSearchResult56 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter54, paidNewsletter55);
        boolean boolean57 = virtualBook4.isBookLost;
        model.VirtualItemContent virtualItemContent58 = virtualBook4.content;
        model.VirtualItemContent virtualItemContent60 = new model.VirtualItemContent("hi!");
        java.lang.String str61 = virtualItemContent60.link;
        java.lang.String str63 = virtualItemContent60.getContent("");
        java.lang.String str65 = virtualItemContent60.getContent("model.RegistrationFailedException: ");
        virtualBook4.content = virtualItemContent60;
        virtualBook4.title = "src/Magazine.csv";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(virtualItemContent58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
    }

    @Test
    public void test2148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2148");
        model.RentingNotAllowedException rentingNotAllowedException1 = new model.RentingNotAllowedException("model.LoginFailedException: hi!");
        java.lang.String str2 = rentingNotAllowedException1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "model.RentingNotAllowedException: model.LoginFailedException: hi!" + "'", str2, "model.RentingNotAllowedException: model.LoginFailedException: hi!");
    }

    @Test
    public void test2149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2149");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        java.lang.String str5 = virtualBook4.location;
        int int6 = virtualBook4.ID;
        virtualBook4.isBookLost = false;
        java.lang.String str9 = virtualBook4.author;
        virtualBook4.edition = 'a';
        int int12 = virtualBook4.edition;
        int int13 = virtualBook4.copiesAvailable;
        boolean boolean14 = virtualBook4.isBookLost;
        virtualBook4.author = "model.RegistrationFailedException: src/Magazine.csv";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 97 + "'", int12 == 97);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 20 + "'", int13 == 20);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test2150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2150");
        model.LoginFailedException loginFailedException1 = new model.LoginFailedException("hi!");
        model.LoginFailedException loginFailedException3 = new model.LoginFailedException("hi!");
        loginFailedException1.addSuppressed((java.lang.Throwable) loginFailedException3);
        model.RegistrationFailedException registrationFailedException6 = new model.RegistrationFailedException("src/Newsletter.csv");
        java.lang.Throwable[] throwableArray7 = registrationFailedException6.getSuppressed();
        loginFailedException3.addSuppressed((java.lang.Throwable) registrationFailedException6);
        model.RegistrationFailedException registrationFailedException10 = new model.RegistrationFailedException("");
        loginFailedException3.addSuppressed((java.lang.Throwable) registrationFailedException10);
        org.junit.Assert.assertNotNull(throwableArray7);
    }

    @Test
    public void test2151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2151");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.UniProvidedNewsletter uniProvidedNewsletter5 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter5.title = "";
        java.lang.String str8 = uniProvidedNewsletter5.title;
        newsletterSubscriptionManager3.subscribeToUniProvidedNewsletter(uniProvidedNewsletter5, "");
        java.util.ArrayList<model.Newsletter> newsletterList11 = newsletterSubscriptionManager3.newsletterSubscribed;
        java.util.ArrayList<model.Newsletter> newsletterList12 = newsletterSubscriptionManager3.newsletterSubscribed;
        model.Student student13 = new model.Student();
        int int14 = student13.ID;
        model.StudentOnlineResources studentOnlineResources15 = new model.StudentOnlineResources((model.Client) student13);
        model.VirtualBook virtualBook17 = studentOnlineResources15.searchAccessibleBook("");
        model.VirtualItemContent virtualItemContent18 = virtualBook17.content;
        model.Student student19 = new model.Student();
        int int20 = student19.ID;
        model.StudentOnlineResources studentOnlineResources21 = new model.StudentOnlineResources((model.Client) student19);
        model.VirtualBook virtualBook23 = studentOnlineResources21.searchAccessibleBook("");
        model.CD cD25 = new model.CD("");
        model.Magazine magazine26 = null;
        model.Book book27 = null;
        model.CD cD28 = null;
        model.Magazine magazine29 = null;
        model.Book[] bookArray30 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList31 = new java.util.ArrayList<model.Book>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList31, bookArray30);
        model.CD[] cDArray33 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList34 = new java.util.ArrayList<model.CD>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList34, cDArray33);
        model.Magazine[] magazineArray36 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList37 = new java.util.ArrayList<model.Magazine>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList37, magazineArray36);
        model.ItemSearchResult itemSearchResult39 = new model.ItemSearchResult(book27, cD28, magazine29, (java.util.Collection<model.Book>) bookList31, (java.util.Collection<model.CD>) cDList34, (java.util.Collection<model.Magazine>) magazineList37);
        model.Book book40 = null;
        model.CD cD41 = null;
        model.Magazine magazine42 = null;
        model.Book[] bookArray43 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList44 = new java.util.ArrayList<model.Book>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList44, bookArray43);
        model.CD[] cDArray46 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList47 = new java.util.ArrayList<model.CD>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList47, cDArray46);
        model.Magazine[] magazineArray49 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList50 = new java.util.ArrayList<model.Magazine>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList50, magazineArray49);
        model.ItemSearchResult itemSearchResult52 = new model.ItemSearchResult(book40, cD41, magazine42, (java.util.Collection<model.Book>) bookList44, (java.util.Collection<model.CD>) cDList47, (java.util.Collection<model.Magazine>) magazineList50);
        model.CD[] cDArray53 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList54 = new java.util.ArrayList<model.CD>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList54, cDArray53);
        itemSearchResult52.similarCD = cDList54;
        model.Book book57 = null;
        model.CD cD58 = null;
        model.Magazine magazine59 = null;
        model.Book[] bookArray60 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList61 = new java.util.ArrayList<model.Book>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList61, bookArray60);
        model.CD[] cDArray63 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList64 = new java.util.ArrayList<model.CD>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList64, cDArray63);
        model.Magazine[] magazineArray66 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList67 = new java.util.ArrayList<model.Magazine>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList67, magazineArray66);
        model.ItemSearchResult itemSearchResult69 = new model.ItemSearchResult(book57, cD58, magazine59, (java.util.Collection<model.Book>) bookList61, (java.util.Collection<model.CD>) cDList64, (java.util.Collection<model.Magazine>) magazineList67);
        model.ItemSearchResult itemSearchResult70 = new model.ItemSearchResult((model.Book) virtualBook23, cD25, magazine26, (java.util.Collection<model.Book>) bookList31, (java.util.Collection<model.CD>) cDList54, (java.util.Collection<model.Magazine>) magazineList67);
        int int71 = virtualBook23.ID;
        int int72 = virtualBook23.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter73 = null;
        model.PaidNewsletter paidNewsletter74 = null;
        model.VirtualItemSearchResult virtualItemSearchResult75 = new model.VirtualItemSearchResult(virtualBook23, uniProvidedNewsletter73, paidNewsletter74);
        model.PaidNewsletter paidNewsletter76 = virtualItemSearchResult75.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter77 = new model.UniProvidedNewsletter();
        virtualItemSearchResult75.setUniNewsletter(uniProvidedNewsletter77);
        java.lang.String str79 = uniProvidedNewsletter77.title;
        model.PaidNewsletter paidNewsletter80 = null;
        model.VirtualItemSearchResult virtualItemSearchResult81 = new model.VirtualItemSearchResult(virtualBook17, uniProvidedNewsletter77, paidNewsletter80);
        model.VirtualBook virtualBook82 = virtualItemSearchResult81.virtualBook;
        model.PaidNewsletter paidNewsletter83 = new model.PaidNewsletter();
        virtualItemSearchResult81.setPaidNewsletter(paidNewsletter83);
        paidNewsletter83.subscriptionPrice = 'a';
        double double87 = paidNewsletter83.subscriptionPrice;
        newsletterSubscriptionManager3.cancelSubscription((model.Newsletter) paidNewsletter83);
        java.util.ArrayList<model.Newsletter> newsletterList89 = newsletterSubscriptionManager3.newsletterSubscribed;
        model.NewsletterSubscriptionManager newsletterSubscriptionManager90 = new model.NewsletterSubscriptionManager(newsletterList89);
        model.Client client91 = newsletterSubscriptionManager90.client;
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(newsletterList11);
        org.junit.Assert.assertNotNull(newsletterList12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(virtualBook17);
        org.junit.Assert.assertNull(virtualItemContent18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(virtualBook23);
        org.junit.Assert.assertNotNull(bookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(magazineArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(bookArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(cDArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(magazineArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(cDArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(bookArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(cDArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(magazineArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 20 + "'", int72 == 20);
        org.junit.Assert.assertNull(paidNewsletter76);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(virtualBook82);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 97.0d + "'", double87 == 97.0d);
        org.junit.Assert.assertNotNull(newsletterList89);
        org.junit.Assert.assertNull(client91);
    }

    @Test
    public void test2152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2152");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        model.RentedItem[] rentedItemArray4 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList5 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList5, rentedItemArray4);
        model.BorrowingManager borrowingManager7 = new model.BorrowingManager(rentedItemList5);
        model.RentedItem[] rentedItemArray8 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList9 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList9, rentedItemArray8);
        model.BorrowingManager borrowingManager11 = new model.BorrowingManager(rentedItemList9);
        borrowingManager7.physicalItemBorrowed = rentedItemList9;
        borrowingManager3.physicalItemBorrowed = rentedItemList9;
        int int14 = borrowingManager3.itemsBorrowedCount;
        float float15 = borrowingManager3.amountOwned;
        boolean boolean16 = borrowingManager3.canRent();
        int int17 = borrowingManager3.itemsBorrowedCount;
        boolean boolean18 = borrowingManager3.canRent();
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(rentedItemArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rentedItemArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + 0.0f + "'", float15 == 0.0f);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test2153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2153");
        model.BookRequestPriorityNotif bookRequestPriorityNotif0 = new model.BookRequestPriorityNotif();
        bookRequestPriorityNotif0.message = "src/CD.csv";
    }

    @Test
    public void test2154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2154");
        model.BuySpecialItems buySpecialItems0 = new model.BuySpecialItems();
        model.Book book1 = null;
        model.CD cD3 = new model.CD("");
        model.Magazine magazine4 = null;
        java.util.Collection<model.Book> bookCollection5 = null;
        model.Book book6 = null;
        model.CD cD7 = null;
        model.Magazine magazine8 = null;
        model.Book[] bookArray9 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList10 = new java.util.ArrayList<model.Book>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList10, bookArray9);
        model.CD[] cDArray12 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList13 = new java.util.ArrayList<model.CD>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList13, cDArray12);
        model.Magazine[] magazineArray15 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList16 = new java.util.ArrayList<model.Magazine>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList16, magazineArray15);
        model.ItemSearchResult itemSearchResult18 = new model.ItemSearchResult(book6, cD7, magazine8, (java.util.Collection<model.Book>) bookList10, (java.util.Collection<model.CD>) cDList13, (java.util.Collection<model.Magazine>) magazineList16);
        model.Book book19 = null;
        model.CD cD20 = null;
        model.Magazine magazine21 = null;
        model.Book[] bookArray22 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList23 = new java.util.ArrayList<model.Book>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList23, bookArray22);
        model.CD[] cDArray25 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList26 = new java.util.ArrayList<model.CD>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList26, cDArray25);
        model.Magazine[] magazineArray28 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList29 = new java.util.ArrayList<model.Magazine>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList29, magazineArray28);
        model.ItemSearchResult itemSearchResult31 = new model.ItemSearchResult(book19, cD20, magazine21, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList29);
        itemSearchResult18.similarCD = cDList26;
        model.Book book33 = null;
        model.CD cD34 = null;
        model.Magazine magazine35 = null;
        model.Book[] bookArray36 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList37 = new java.util.ArrayList<model.Book>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList37, bookArray36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        model.Magazine[] magazineArray42 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList43 = new java.util.ArrayList<model.Magazine>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList43, magazineArray42);
        model.ItemSearchResult itemSearchResult45 = new model.ItemSearchResult(book33, cD34, magazine35, (java.util.Collection<model.Book>) bookList37, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book1, cD3, magazine4, bookCollection5, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList43);
        cD3.ID = (short) 10;
        boolean boolean50 = buySpecialItems0.buyAnItem((model.Item) cD3, (double) 0);
        java.util.ArrayList<model.Item> itemList51 = buySpecialItems0.purchasedItems;
        java.util.ArrayList<model.Item> itemList52 = buySpecialItems0.purchasedItems;
        java.util.ArrayList<model.Item> itemList53 = buySpecialItems0.purchasedItems;
        model.Payment payment54 = null;
        buySpecialItems0.paymentAPI = payment54;
        org.junit.Assert.assertNotNull(bookArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(cDArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(magazineArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(bookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(magazineArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(bookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(magazineArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(itemList51);
        org.junit.Assert.assertNotNull(itemList52);
        org.junit.Assert.assertNotNull(itemList53);
    }

    @Test
    public void test2155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2155");
        model.Database database0 = null;
        model.Register register1 = model.Register.makeRegister(database0);
        model.Faculty faculty2 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection3 = faculty2.courses;
        boolean boolean6 = register1.registerAsStaff((model.Staff) faculty2, "src/Book.csv", "src/Book.csv");
        model.Faculty faculty7 = new model.Faculty();
        java.lang.String str8 = faculty7.faculty;
        java.lang.String str9 = faculty7.faculty;
        faculty7.viewMyOnlineResource();
        model.Course course11 = new model.Course();
        java.lang.String str12 = course11.subject;
        java.lang.String str13 = course11.subject;
        java.lang.String str14 = course11.code;
        java.lang.String str15 = course11.code;
        course11.subject = "";
        model.Course course18 = new model.Course();
        java.lang.String str19 = course18.code;
        model.Course course20 = new model.Course();
        java.lang.String str21 = course20.subject;
        course20.code = "";
        int int24 = course20.year;
        course20.subject = "src/CD.csv";
        model.Course course27 = new model.Course();
        java.lang.String str28 = course27.subject;
        java.lang.String str29 = course27.subject;
        java.lang.String str30 = course27.code;
        java.lang.String str31 = course27.code;
        model.Course course32 = new model.Course();
        model.Course course33 = new model.Course();
        java.lang.String str34 = course33.subject;
        course33.year = (byte) 10;
        model.Course course37 = new model.Course();
        model.Course course38 = new model.Course();
        java.lang.String str39 = course38.subject;
        java.lang.String str40 = course38.subject;
        java.lang.String str41 = course38.code;
        java.lang.String str42 = course38.code;
        course38.subject = "";
        model.Course course45 = new model.Course();
        java.lang.String str46 = course45.code;
        java.lang.String str47 = course45.subject;
        course45.subject = "model.RegistrationFailedException: ";
        course45.subject = "src/Magazine.csv";
        course45.subject = "model.RegistrationFailedException: ";
        model.Course course54 = new model.Course();
        java.lang.String str55 = course54.subject;
        java.lang.String str56 = course54.subject;
        model.Course course57 = new model.Course();
        java.lang.String str58 = course57.subject;
        course57.code = "";
        course57.subject = "src/Magazine.csv";
        model.Course course63 = new model.Course();
        java.lang.String str64 = course63.code;
        java.lang.String str65 = course63.subject;
        model.Course course66 = new model.Course();
        java.lang.String str67 = course66.subject;
        course66.code = "";
        int int70 = course66.year;
        course66.subject = "src/CD.csv";
        model.Course course73 = new model.Course();
        java.lang.String str74 = course73.subject;
        course73.code = "";
        int int77 = course73.year;
        course73.subject = "src/CD.csv";
        model.Course[] courseArray80 = new model.Course[] { course11, course18, course20, course27, course32, course33, course37, course38, course45, course54, course57, course63, course66, course73 };
        java.util.ArrayList<model.Course> courseList81 = new java.util.ArrayList<model.Course>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<model.Course>) courseList81, courseArray80);
        faculty7.courses = courseList81;
        faculty2.courses = courseList81;
        java.util.Collection<model.Course> courseCollection85 = faculty2.courses;
        java.lang.String str86 = faculty2.email;
        faculty2.username = "src/BorrowedItems.csv";
        org.junit.Assert.assertNotNull(register1);
        org.junit.Assert.assertNull(courseCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(courseArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(courseCollection85);
        org.junit.Assert.assertNull(str86);
    }

    @Test
    public void test2156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2156");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        model.RentedItem[] rentedItemArray4 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList5 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList5, rentedItemArray4);
        model.BorrowingManager borrowingManager7 = new model.BorrowingManager(rentedItemList5);
        model.RentedItem[] rentedItemArray8 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList9 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList9, rentedItemArray8);
        model.BorrowingManager borrowingManager11 = new model.BorrowingManager(rentedItemList9);
        borrowingManager7.physicalItemBorrowed = rentedItemList9;
        borrowingManager3.physicalItemBorrowed = rentedItemList9;
        model.Visitor visitor14 = new model.Visitor();
        model.VirtualBook[] virtualBookArray15 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList16 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList16, virtualBookArray15);
        visitor14.virtualBooksAvailable = virtualBookList16;
        borrowingManager3.client = visitor14;
        model.Faculty faculty20 = new model.Faculty();
        java.lang.String str21 = faculty20.faculty;
        borrowingManager3.client = faculty20;
        int int23 = borrowingManager3.itemsBorrowedCount;
        int int24 = borrowingManager3.itemsBorrowedCount;
        model.Student student25 = new model.Student();
        int int26 = student25.ID;
        model.StudentOnlineResources studentOnlineResources27 = new model.StudentOnlineResources((model.Client) student25);
        model.VirtualBook virtualBook29 = studentOnlineResources27.searchAccessibleBook("");
        borrowingManager3.removeRentedItem((model.Item) virtualBook29);
        virtualBook29.copiesAvailable = 0;
        java.lang.String str33 = virtualBook29.publisher;
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(rentedItemArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rentedItemArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(virtualBookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(virtualBook29);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test2157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2157");
        model.Request request0 = new model.Request();
        java.lang.String str1 = request0.type;
        model.ValidateRegistration validateRegistration2 = new model.ValidateRegistration();
        model.Student student3 = new model.Student();
        student3.viewMyOnlineResource();
        boolean boolean5 = validateRegistration2.validateStaffRegistration((model.Staff) student3);
        request0.requestee = student3;
        request0.title = "hi!";
        java.lang.String str9 = request0.type;
        request0.title = "model.RegistrationFailedException: src/VirtualBook.csv";
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test2158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2158");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        model.Client client9 = database7.getClient("");
        java.util.ArrayList<java.lang.String> strList10 = database7.getAllItems();
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(client9);
        org.junit.Assert.assertNotNull(strList10);
    }

    @Test
    public void test2159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2159");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.Request request1 = new model.Request();
        request1.title = "";
        java.lang.String str4 = requestForum0.makeARequest(request1);
        model.RequestForum requestForum5 = model.RequestForum.createRequestForum();
        model.RequestForum requestForum6 = model.RequestForum.createRequestForum();
        model.Request request7 = new model.Request();
        request7.title = "";
        java.lang.String str10 = requestForum6.makeARequest(request7);
        int int11 = requestForum5.assessBooksPriority(request7);
        java.lang.String str12 = request7.type;
        java.lang.String str13 = request7.type;
        java.lang.String str14 = requestForum0.makeARequest(request7);
        model.RequestForum requestForum15 = model.RequestForum.createRequestForum();
        model.Request request16 = new model.Request();
        request16.title = "";
        java.lang.String str19 = requestForum15.makeARequest(request16);
        model.LibraryManagementTeam libraryManagementTeam20 = new model.LibraryManagementTeam();
        int int21 = libraryManagementTeam20.ID;
        model.Magazine magazine23 = new model.Magazine("");
        java.util.Calendar calendar24 = magazine23.date;
        magazine23.author = "model.RegistrationFailedException: ";
        libraryManagementTeam20.disableAnItem((model.Item) magazine23);
        requestForum15.managementTeam = libraryManagementTeam20;
        model.RequestForum requestForum29 = model.RequestForum.createRequestForum();
        model.Request request30 = new model.Request();
        request30.title = "";
        java.lang.String str33 = requestForum29.makeARequest(request30);
        model.Client client34 = request30.requestee;
        java.lang.String str35 = requestForum15.makeARequest(request30);
        java.lang.String str36 = request30.type;
        int int37 = requestForum0.assessBooksPriority(request30);
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(requestForum5);
        org.junit.Assert.assertNotNull(requestForum6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(requestForum15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(calendar24);
        org.junit.Assert.assertNotNull(requestForum29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(client34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
    }

    @Test
    public void test2160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2160");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.BuySpecialItems buySpecialItems1 = new model.BuySpecialItems();
        model.PayDebit payDebit2 = new model.PayDebit();
        buySpecialItems1.paymentAPI = payDebit2;
        rentAndReturnSystem0.paymentAPI = payDebit2;
        model.PayMobileWallet payMobileWallet5 = new model.PayMobileWallet();
        payMobileWallet5.amountPay = 100.0f;
        rentAndReturnSystem0.paymentAPI = payMobileWallet5;
        model.BuySpecialItems buySpecialItems9 = new model.BuySpecialItems();
        model.Book book10 = null;
        model.CD cD12 = new model.CD("");
        model.Magazine magazine13 = null;
        java.util.Collection<model.Book> bookCollection14 = null;
        model.Book book15 = null;
        model.CD cD16 = null;
        model.Magazine magazine17 = null;
        model.Book[] bookArray18 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList19 = new java.util.ArrayList<model.Book>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList19, bookArray18);
        model.CD[] cDArray21 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList22 = new java.util.ArrayList<model.CD>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList22, cDArray21);
        model.Magazine[] magazineArray24 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList25 = new java.util.ArrayList<model.Magazine>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList25, magazineArray24);
        model.ItemSearchResult itemSearchResult27 = new model.ItemSearchResult(book15, cD16, magazine17, (java.util.Collection<model.Book>) bookList19, (java.util.Collection<model.CD>) cDList22, (java.util.Collection<model.Magazine>) magazineList25);
        model.Book book28 = null;
        model.CD cD29 = null;
        model.Magazine magazine30 = null;
        model.Book[] bookArray31 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList32 = new java.util.ArrayList<model.Book>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList32, bookArray31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        model.Magazine[] magazineArray37 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList38 = new java.util.ArrayList<model.Magazine>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList38, magazineArray37);
        model.ItemSearchResult itemSearchResult40 = new model.ItemSearchResult(book28, cD29, magazine30, (java.util.Collection<model.Book>) bookList32, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList38);
        itemSearchResult27.similarCD = cDList35;
        model.Book book42 = null;
        model.CD cD43 = null;
        model.Magazine magazine44 = null;
        model.Book[] bookArray45 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList46 = new java.util.ArrayList<model.Book>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList46, bookArray45);
        model.CD[] cDArray48 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList49 = new java.util.ArrayList<model.CD>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList49, cDArray48);
        model.Magazine[] magazineArray51 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList52 = new java.util.ArrayList<model.Magazine>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList52, magazineArray51);
        model.ItemSearchResult itemSearchResult54 = new model.ItemSearchResult(book42, cD43, magazine44, (java.util.Collection<model.Book>) bookList46, (java.util.Collection<model.CD>) cDList49, (java.util.Collection<model.Magazine>) magazineList52);
        model.ItemSearchResult itemSearchResult55 = new model.ItemSearchResult(book10, cD12, magazine13, bookCollection14, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList52);
        cD12.ID = (short) 10;
        boolean boolean59 = buySpecialItems9.buyAnItem((model.Item) cD12, (double) 0);
        model.PayDebit payDebit60 = new model.PayDebit();
        buySpecialItems9.paymentAPI = payDebit60;
        double double62 = payDebit60.amountPay;
        payDebit60.amountPay = (short) 1;
        payDebit60.pay((double) 97);
        rentAndReturnSystem0.paymentAPI = payDebit60;
        payDebit60.pay((double) 5248424);
        org.junit.Assert.assertNotNull(bookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(cDArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(magazineArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(bookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(magazineArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(bookArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(cDArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(magazineArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
    }

    @Test
    public void test2161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2161");
        model.Course course0 = new model.Course();
        java.lang.String str1 = course0.code;
        java.lang.String str2 = course0.subject;
        course0.subject = "model.RegistrationFailedException: ";
        course0.subject = "src/Magazine.csv";
        course0.code = "model.RentingNotAllowedException: ";
        java.lang.String str9 = course0.subject;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "src/Magazine.csv" + "'", str9, "src/Magazine.csv");
    }

    @Test
    public void test2162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2162");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.BuySpecialItems buySpecialItems1 = new model.BuySpecialItems();
        model.PayDebit payDebit2 = new model.PayDebit();
        buySpecialItems1.paymentAPI = payDebit2;
        rentAndReturnSystem0.paymentAPI = payDebit2;
        model.Payment payment5 = rentAndReturnSystem0.paymentAPI;
        model.ItemManagement itemManagement6 = new model.ItemManagement();
        model.Item item8 = itemManagement6.selectAnItemFromDatabase((int) (short) 0);
        model.Database database9 = itemManagement6.database;
        model.BuySpecialItems buySpecialItems10 = new model.BuySpecialItems();
        model.CD cD12 = new model.CD("");
        int int13 = cD12.ID;
        boolean boolean15 = buySpecialItems10.buyAnItem((model.Item) cD12, (double) (short) 0);
        itemManagement6.addAnItem((model.Item) cD12);
        model.Student student17 = new model.Student();
        int int18 = student17.ID;
        model.StudentOnlineResources studentOnlineResources19 = new model.StudentOnlineResources((model.Client) student17);
        model.VirtualBook virtualBook21 = studentOnlineResources19.searchAccessibleBook("");
        model.CD cD23 = new model.CD("");
        model.Magazine magazine24 = null;
        model.Book book25 = null;
        model.CD cD26 = null;
        model.Magazine magazine27 = null;
        model.Book[] bookArray28 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList29 = new java.util.ArrayList<model.Book>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList29, bookArray28);
        model.CD[] cDArray31 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList32 = new java.util.ArrayList<model.CD>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList32, cDArray31);
        model.Magazine[] magazineArray34 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList35 = new java.util.ArrayList<model.Magazine>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList35, magazineArray34);
        model.ItemSearchResult itemSearchResult37 = new model.ItemSearchResult(book25, cD26, magazine27, (java.util.Collection<model.Book>) bookList29, (java.util.Collection<model.CD>) cDList32, (java.util.Collection<model.Magazine>) magazineList35);
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.CD[] cDArray51 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList52 = new java.util.ArrayList<model.CD>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList52, cDArray51);
        itemSearchResult50.similarCD = cDList52;
        model.Book book55 = null;
        model.CD cD56 = null;
        model.Magazine magazine57 = null;
        model.Book[] bookArray58 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList59 = new java.util.ArrayList<model.Book>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList59, bookArray58);
        model.CD[] cDArray61 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList62 = new java.util.ArrayList<model.CD>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList62, cDArray61);
        model.Magazine[] magazineArray64 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList65 = new java.util.ArrayList<model.Magazine>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList65, magazineArray64);
        model.ItemSearchResult itemSearchResult67 = new model.ItemSearchResult(book55, cD56, magazine57, (java.util.Collection<model.Book>) bookList59, (java.util.Collection<model.CD>) cDList62, (java.util.Collection<model.Magazine>) magazineList65);
        model.ItemSearchResult itemSearchResult68 = new model.ItemSearchResult((model.Book) virtualBook21, cD23, magazine24, (java.util.Collection<model.Book>) bookList29, (java.util.Collection<model.CD>) cDList52, (java.util.Collection<model.Magazine>) magazineList65);
        int int69 = virtualBook21.ID;
        int int70 = virtualBook21.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter71 = null;
        model.PaidNewsletter paidNewsletter72 = null;
        model.VirtualItemSearchResult virtualItemSearchResult73 = new model.VirtualItemSearchResult(virtualBook21, uniProvidedNewsletter71, paidNewsletter72);
        model.PaidNewsletter paidNewsletter74 = virtualItemSearchResult73.getPaidNewsletter();
        model.PaidNewsletter paidNewsletter75 = virtualItemSearchResult73.getPaidNewsletter();
        model.VirtualBook virtualBook76 = virtualItemSearchResult73.getVirtualBook();
        itemManagement6.enableAnItem((model.Item) virtualBook76);
        model.Faculty faculty78 = new model.Faculty();
        java.lang.String str79 = faculty78.faculty;
        java.lang.String str80 = faculty78.faculty;
        faculty78.viewMyOnlineResource();
        java.util.Collection<model.Course> courseCollection82 = faculty78.courses;
        boolean boolean83 = rentAndReturnSystem0.returnAnItem((model.Item) virtualBook76, (model.Client) faculty78);
        model.PayCredit payCredit84 = new model.PayCredit();
        payCredit84.pay((double) (short) 100);
        payCredit84.amountPay = ' ';
        double double89 = payCredit84.amountPay;
        payCredit84.pay((double) 12);
        double double92 = payCredit84.amountPay;
        rentAndReturnSystem0.paymentAPI = payCredit84;
        payCredit84.amountPay = 7607424;
        double double96 = payCredit84.amountPay;
        org.junit.Assert.assertNotNull(payment5);
        org.junit.Assert.assertNull(item8);
        org.junit.Assert.assertNull(database9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(virtualBook21);
        org.junit.Assert.assertNotNull(bookArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(cDArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(magazineArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(cDArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(bookArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(cDArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(magazineArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 20 + "'", int70 == 20);
        org.junit.Assert.assertNull(paidNewsletter74);
        org.junit.Assert.assertNull(paidNewsletter75);
        org.junit.Assert.assertNotNull(virtualBook76);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNull(courseCollection82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 32.0d + "'", double89 == 32.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 44.0d + "'", double92 == 44.0d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 7607424.0d + "'", double96 == 7607424.0d);
    }

    @Test
    public void test2163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2163");
        model.Database database7 = model.Database.createDatabase("src/Client.csv", "src/Book.csv", "model.RegistrationFailedException: src/Book.csv", "src/VirtualBook.csv", "model.RegistrationFailedException: ", "model.RegistrationFailedException: src/Book.csv", "src/CD.csv");
        java.lang.String str8 = database7.getBorrowedItemFilePath();
        java.lang.String str9 = database7.getCDFilePath();
        model.Login login10 = model.Login.makeLogin(database7);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/BorrowedItems.csv" + "'", str8, "src/BorrowedItems.csv");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "src/CD.csv" + "'", str9, "src/CD.csv");
        org.junit.Assert.assertNotNull(login10);
    }

    @Test
    public void test2164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2164");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        model.Client client9 = database7.getClient("");
        java.lang.String str10 = database7.getClientFilePath();
        database7.virtualItemFilePath = "src/Newsletter.csv";
        java.lang.String str13 = database7.getVirtualBookFilePath();
        model.Register register14 = model.Register.makeRegister(database7);
        database7.itemPath = "model.RegistrationFailedException: ";
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(client9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "src/Client.csv" + "'", str10, "src/Client.csv");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "src/VirtualBook.csv" + "'", str13, "src/VirtualBook.csv");
        org.junit.Assert.assertNotNull(register14);
    }

    @Test
    public void test2165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2165");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter54 = null;
        model.PaidNewsletter paidNewsletter55 = null;
        model.VirtualItemSearchResult virtualItemSearchResult56 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter54, paidNewsletter55);
        virtualBook4.author = "hi!";
        java.lang.String str59 = virtualBook4.ISBN;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertNull(str59);
    }

    @Test
    public void test2166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2166");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter54 = null;
        model.PaidNewsletter paidNewsletter55 = null;
        model.VirtualItemSearchResult virtualItemSearchResult56 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter54, paidNewsletter55);
        boolean boolean57 = virtualBook4.isBookLost;
        model.VirtualItemContent virtualItemContent58 = virtualBook4.content;
        model.VirtualItemContent virtualItemContent60 = new model.VirtualItemContent("hi!");
        java.lang.String str61 = virtualItemContent60.link;
        java.lang.String str63 = virtualItemContent60.getContent("");
        java.lang.String str65 = virtualItemContent60.getContent("model.RegistrationFailedException: ");
        virtualBook4.content = virtualItemContent60;
        boolean boolean67 = virtualBook4.isBookLost;
        virtualBook4.ID = 7680716;
        java.lang.String str70 = virtualBook4.author;
        virtualBook4.location = "src/BorrowedItems.csv";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(virtualItemContent58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(str70);
    }

    @Test
    public void test2167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2167");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.SearchClient searchClient9 = model.SearchClient.makeSearchClient(database7);
        java.lang.String str10 = database7.getCDFilePath();
        model.Request request11 = new model.Request();
        java.lang.String str12 = request11.type;
        model.Database database20 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database20;
        model.SearchVirtualItem searchVirtualItem22 = new model.SearchVirtualItem(database20);
        model.RentAndReturnSystem rentAndReturnSystem23 = new model.RentAndReturnSystem();
        model.Book book24 = null;
        model.CD cD26 = new model.CD("");
        model.Magazine magazine27 = null;
        java.util.Collection<model.Book> bookCollection28 = null;
        model.Book book29 = null;
        model.CD cD30 = null;
        model.Magazine magazine31 = null;
        model.Book[] bookArray32 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList33 = new java.util.ArrayList<model.Book>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList33, bookArray32);
        model.CD[] cDArray35 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList36 = new java.util.ArrayList<model.CD>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList36, cDArray35);
        model.Magazine[] magazineArray38 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList39 = new java.util.ArrayList<model.Magazine>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList39, magazineArray38);
        model.ItemSearchResult itemSearchResult41 = new model.ItemSearchResult(book29, cD30, magazine31, (java.util.Collection<model.Book>) bookList33, (java.util.Collection<model.CD>) cDList36, (java.util.Collection<model.Magazine>) magazineList39);
        model.Book book42 = null;
        model.CD cD43 = null;
        model.Magazine magazine44 = null;
        model.Book[] bookArray45 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList46 = new java.util.ArrayList<model.Book>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList46, bookArray45);
        model.CD[] cDArray48 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList49 = new java.util.ArrayList<model.CD>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList49, cDArray48);
        model.Magazine[] magazineArray51 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList52 = new java.util.ArrayList<model.Magazine>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList52, magazineArray51);
        model.ItemSearchResult itemSearchResult54 = new model.ItemSearchResult(book42, cD43, magazine44, (java.util.Collection<model.Book>) bookList46, (java.util.Collection<model.CD>) cDList49, (java.util.Collection<model.Magazine>) magazineList52);
        itemSearchResult41.similarCD = cDList49;
        model.Book book56 = null;
        model.CD cD57 = null;
        model.Magazine magazine58 = null;
        model.Book[] bookArray59 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList60 = new java.util.ArrayList<model.Book>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList60, bookArray59);
        model.CD[] cDArray62 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList63 = new java.util.ArrayList<model.CD>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList63, cDArray62);
        model.Magazine[] magazineArray65 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList66 = new java.util.ArrayList<model.Magazine>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList66, magazineArray65);
        model.ItemSearchResult itemSearchResult68 = new model.ItemSearchResult(book56, cD57, magazine58, (java.util.Collection<model.Book>) bookList60, (java.util.Collection<model.CD>) cDList63, (java.util.Collection<model.Magazine>) magazineList66);
        model.ItemSearchResult itemSearchResult69 = new model.ItemSearchResult(book24, cD26, magazine27, bookCollection28, (java.util.Collection<model.CD>) cDList49, (java.util.Collection<model.Magazine>) magazineList66);
        cD26.ID = (short) 10;
        cD26.canBePurchased = false;
        boolean boolean74 = cD26.canBePurchased;
        model.Faculty faculty75 = new model.Faculty();
        boolean boolean76 = rentAndReturnSystem23.rentAnItem((model.Item) cD26, (model.Client) faculty75);
        java.lang.String str77 = faculty75.faculty;
        database20.addClient((model.Client) faculty75);
        request11.requestee = faculty75;
        database7.addClient((model.Client) faculty75);
        faculty75.viewMyOnlineResource();
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
        org.junit.Assert.assertNotNull(searchClient9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "src/CD.csv" + "'", str10, "src/CD.csv");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(bookArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(cDArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(magazineArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(bookArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(cDArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(magazineArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(bookArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(cDArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(magazineArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(str77);
    }

    @Test
    public void test2168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2168");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.RequestForum requestForum1 = model.RequestForum.createRequestForum();
        model.Request request2 = new model.Request();
        request2.title = "";
        java.lang.String str5 = requestForum1.makeARequest(request2);
        int int6 = requestForum0.assessBooksPriority(request2);
        model.LibraryManagementTeam libraryManagementTeam7 = new model.LibraryManagementTeam();
        int int8 = libraryManagementTeam7.ID;
        int int9 = libraryManagementTeam7.accessCode;
        model.Item item10 = null;
        libraryManagementTeam7.addAnItem(item10);
        java.util.ArrayList<model.Item> itemList12 = libraryManagementTeam7.items;
        requestForum0.managementTeam = libraryManagementTeam7;
        model.LibraryManagementTeam libraryManagementTeam14 = requestForum0.managementTeam;
        int int15 = libraryManagementTeam14.accessCode;
        int int16 = libraryManagementTeam14.ID;
        java.util.ArrayList<model.Item> itemList17 = libraryManagementTeam14.items;
        int int18 = libraryManagementTeam14.accessCode;
        libraryManagementTeam14.ID = 9809433;
        int int21 = libraryManagementTeam14.accessCode;
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertNotNull(requestForum1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(itemList12);
        org.junit.Assert.assertNotNull(libraryManagementTeam14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(itemList17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test2169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2169");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        java.util.ArrayList<model.Newsletter> newsletterList5 = newsletterSubscriptionManager3.newsletterSubscribed;
        model.BuySpecialItems buySpecialItems6 = new model.BuySpecialItems();
        model.Payment payment7 = null;
        buySpecialItems6.paymentAPI = payment7;
        model.PayMobileWallet payMobileWallet9 = new model.PayMobileWallet();
        buySpecialItems6.paymentAPI = payMobileWallet9;
        double double11 = payMobileWallet9.amountPay;
        newsletterSubscriptionManager3.paymentAPI = payMobileWallet9;
        payMobileWallet9.amountPay = 35.0f;
        payMobileWallet9.amountPay = 9844035;
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertNotNull(newsletterList5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    }

    @Test
    public void test2170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2170");
        model.Course course0 = new model.Course();
        java.lang.String str1 = course0.code;
        java.lang.String str2 = course0.subject;
        course0.subject = "model.RegistrationFailedException: ";
        course0.subject = "src/Magazine.csv";
        course0.subject = "model.RentingNotAllowedException: ";
        course0.year = 8273159;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test2171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2171");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.Request request1 = new model.Request();
        java.lang.String str2 = request1.type;
        request1.title = "model.RegistrationFailedException: src/Magazine.csv";
        request1.type = "model.RegistrationFailedException: src/Book.csv";
        java.lang.String str7 = request1.type;
        int int8 = requestForum0.assessBooksPriority(request1);
        model.RequestForum requestForum9 = model.RequestForum.createRequestForum();
        model.Request request10 = new model.Request();
        request10.title = "";
        java.lang.String str13 = requestForum9.makeARequest(request10);
        model.LibraryManagementTeam libraryManagementTeam14 = requestForum9.managementTeam;
        model.RequestForum requestForum15 = model.RequestForum.createRequestForum();
        model.Request request16 = new model.Request();
        request16.title = "";
        java.lang.String str19 = requestForum15.makeARequest(request16);
        model.Client client20 = request16.requestee;
        int int21 = requestForum9.assessBooksPriority(request16);
        java.lang.String str22 = request16.type;
        int int23 = requestForum0.assessBooksPriority(request16);
        model.Request request24 = new model.Request();
        java.lang.String str25 = request24.type;
        request24.title = "model.RegistrationFailedException: src/Magazine.csv";
        int int28 = requestForum0.assessBooksPriority(request24);
        model.Visitor visitor29 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList30 = visitor29.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources31 = new model.StudentOnlineResources((model.Client) visitor29);
        model.RentedItem[] rentedItemArray32 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList33 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList33, rentedItemArray32);
        model.BorrowingManager borrowingManager35 = new model.BorrowingManager(rentedItemList33);
        model.Visitor visitor36 = new model.Visitor();
        visitor36.email = "hi!";
        borrowingManager35.client = visitor36;
        studentOnlineResources31.client = visitor36;
        request24.requestee = visitor36;
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "model.RegistrationFailedException: src/Book.csv" + "'", str7, "model.RegistrationFailedException: src/Book.csv");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(requestForum9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(libraryManagementTeam14);
        org.junit.Assert.assertNotNull(requestForum15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNull(client20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNull(virtualBookList30);
        org.junit.Assert.assertNotNull(rentedItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test2172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2172");
        model.BuySpecialItems buySpecialItems0 = new model.BuySpecialItems();
        model.PayDebit payDebit1 = new model.PayDebit();
        buySpecialItems0.paymentAPI = payDebit1;
        model.BuySpecialItems buySpecialItems3 = new model.BuySpecialItems();
        model.Payment payment4 = null;
        buySpecialItems3.paymentAPI = payment4;
        model.PayMobileWallet payMobileWallet6 = new model.PayMobileWallet();
        buySpecialItems3.paymentAPI = payMobileWallet6;
        payMobileWallet6.amountPay = (-1L);
        payMobileWallet6.pay((double) (-1.0f));
        buySpecialItems0.paymentAPI = payMobileWallet6;
        model.BuySpecialItems buySpecialItems13 = new model.BuySpecialItems();
        model.Book book14 = null;
        model.CD cD16 = new model.CD("");
        model.Magazine magazine17 = null;
        java.util.Collection<model.Book> bookCollection18 = null;
        model.Book book19 = null;
        model.CD cD20 = null;
        model.Magazine magazine21 = null;
        model.Book[] bookArray22 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList23 = new java.util.ArrayList<model.Book>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList23, bookArray22);
        model.CD[] cDArray25 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList26 = new java.util.ArrayList<model.CD>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList26, cDArray25);
        model.Magazine[] magazineArray28 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList29 = new java.util.ArrayList<model.Magazine>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList29, magazineArray28);
        model.ItemSearchResult itemSearchResult31 = new model.ItemSearchResult(book19, cD20, magazine21, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList29);
        model.Book book32 = null;
        model.CD cD33 = null;
        model.Magazine magazine34 = null;
        model.Book[] bookArray35 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList36 = new java.util.ArrayList<model.Book>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList36, bookArray35);
        model.CD[] cDArray38 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList39 = new java.util.ArrayList<model.CD>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList39, cDArray38);
        model.Magazine[] magazineArray41 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList42 = new java.util.ArrayList<model.Magazine>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList42, magazineArray41);
        model.ItemSearchResult itemSearchResult44 = new model.ItemSearchResult(book32, cD33, magazine34, (java.util.Collection<model.Book>) bookList36, (java.util.Collection<model.CD>) cDList39, (java.util.Collection<model.Magazine>) magazineList42);
        itemSearchResult31.similarCD = cDList39;
        model.Book book46 = null;
        model.CD cD47 = null;
        model.Magazine magazine48 = null;
        model.Book[] bookArray49 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList50 = new java.util.ArrayList<model.Book>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList50, bookArray49);
        model.CD[] cDArray52 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList53 = new java.util.ArrayList<model.CD>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList53, cDArray52);
        model.Magazine[] magazineArray55 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList56 = new java.util.ArrayList<model.Magazine>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList56, magazineArray55);
        model.ItemSearchResult itemSearchResult58 = new model.ItemSearchResult(book46, cD47, magazine48, (java.util.Collection<model.Book>) bookList50, (java.util.Collection<model.CD>) cDList53, (java.util.Collection<model.Magazine>) magazineList56);
        model.ItemSearchResult itemSearchResult59 = new model.ItemSearchResult(book14, cD16, magazine17, bookCollection18, (java.util.Collection<model.CD>) cDList39, (java.util.Collection<model.Magazine>) magazineList56);
        cD16.ID = (short) 10;
        boolean boolean63 = buySpecialItems13.buyAnItem((model.Item) cD16, (double) 0);
        model.LibraryManagementTeam libraryManagementTeam64 = new model.LibraryManagementTeam();
        int int65 = libraryManagementTeam64.ID;
        int int66 = libraryManagementTeam64.accessCode;
        model.Item item67 = null;
        libraryManagementTeam64.addAnItem(item67);
        java.util.ArrayList<model.Item> itemList69 = libraryManagementTeam64.items;
        buySpecialItems13.purchasedItems = itemList69;
        model.LibraryManagementTeam libraryManagementTeam71 = new model.LibraryManagementTeam();
        libraryManagementTeam71.accessCode = (byte) 10;
        java.util.ArrayList<model.Item> itemList74 = libraryManagementTeam71.items;
        model.LibraryManagementTeam libraryManagementTeam75 = new model.LibraryManagementTeam();
        libraryManagementTeam75.accessCode = (byte) 10;
        java.util.ArrayList<model.Item> itemList78 = libraryManagementTeam75.items;
        libraryManagementTeam71.items = itemList78;
        buySpecialItems13.purchasedItems = itemList78;
        buySpecialItems0.purchasedItems = itemList78;
        model.BuySpecialItems buySpecialItems82 = new model.BuySpecialItems();
        model.Payment payment83 = null;
        buySpecialItems82.paymentAPI = payment83;
        model.PayMobileWallet payMobileWallet85 = new model.PayMobileWallet();
        buySpecialItems82.paymentAPI = payMobileWallet85;
        payMobileWallet85.pay((double) 'a');
        buySpecialItems0.paymentAPI = payMobileWallet85;
        double double90 = payMobileWallet85.amountPay;
        double double91 = payMobileWallet85.amountPay;
        org.junit.Assert.assertNotNull(bookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(magazineArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(bookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(cDArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(magazineArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(bookArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(cDArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(magazineArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(itemList69);
        org.junit.Assert.assertNotNull(itemList74);
        org.junit.Assert.assertNotNull(itemList78);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 97.0d + "'", double90 == 97.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 97.0d + "'", double91 == 97.0d);
    }

    @Test
    public void test2173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2173");
        model.RegistrationFailedException registrationFailedException1 = new model.RegistrationFailedException("src/VirtualBook.csv");
        registrationFailedException1.message = "model.RegistrationFailedException: model.RentingNotAllowedException: hi!";
    }

    @Test
    public void test2174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2174");
        model.Database database7 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database7;
        model.SearchVirtualItem searchVirtualItem9 = new model.SearchVirtualItem(database7);
        model.Database.database = database7;
        model.Login login11 = new model.Login(database7);
        model.Database database12 = login11.db;
        model.Database database13 = login11.db;
        model.Client client15 = database13.getClient("src/Newsletter.csv");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(client15);
    }

    @Test
    public void test2175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2175");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        java.util.ArrayList<model.Newsletter> newsletterList5 = newsletterSubscriptionManager3.newsletterSubscribed;
        model.Newsletter[] newsletterArray6 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList7 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList7, newsletterArray6);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager9 = new model.NewsletterSubscriptionManager(newsletterList7);
        newsletterSubscriptionManager3.newsletterSubscribed = newsletterList7;
        model.NewsletterSubscriptionManager newsletterSubscriptionManager11 = new model.NewsletterSubscriptionManager(newsletterList7);
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertNotNull(newsletterList5);
        org.junit.Assert.assertNotNull(newsletterArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test2176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2176");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter54 = null;
        model.PaidNewsletter paidNewsletter55 = null;
        model.VirtualItemSearchResult virtualItemSearchResult56 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter54, paidNewsletter55);
        boolean boolean57 = virtualBook4.isBookLost;
        model.VirtualItemContent virtualItemContent58 = virtualBook4.content;
        java.util.Calendar calendar59 = virtualBook4.date;
        virtualBook4.ID = 1052342;
        virtualBook4.showContent();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(virtualItemContent58);
        org.junit.Assert.assertNull(calendar59);
    }

    @Test
    public void test2177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2177");
        model.Book book0 = null;
        model.CD cD1 = null;
        model.Magazine magazine2 = null;
        model.Book[] bookArray3 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList4 = new java.util.ArrayList<model.Book>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList4, bookArray3);
        model.CD[] cDArray6 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList7 = new java.util.ArrayList<model.CD>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList7, cDArray6);
        model.Magazine[] magazineArray9 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList10 = new java.util.ArrayList<model.Magazine>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList10, magazineArray9);
        model.ItemSearchResult itemSearchResult12 = new model.ItemSearchResult(book0, cD1, magazine2, (java.util.Collection<model.Book>) bookList4, (java.util.Collection<model.CD>) cDList7, (java.util.Collection<model.Magazine>) magazineList10);
        model.CD[] cDArray13 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList14 = new java.util.ArrayList<model.CD>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList14, cDArray13);
        itemSearchResult12.similarCD = cDList14;
        model.Book book17 = null;
        itemSearchResult12.book = book17;
        model.Book book19 = null;
        model.CD cD20 = null;
        model.Magazine magazine21 = null;
        model.Book[] bookArray22 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList23 = new java.util.ArrayList<model.Book>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList23, bookArray22);
        model.CD[] cDArray25 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList26 = new java.util.ArrayList<model.CD>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList26, cDArray25);
        model.Magazine[] magazineArray28 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList29 = new java.util.ArrayList<model.Magazine>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList29, magazineArray28);
        model.ItemSearchResult itemSearchResult31 = new model.ItemSearchResult(book19, cD20, magazine21, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList29);
        itemSearchResult12.similarBooks = bookList23;
        model.Book book33 = itemSearchResult12.book;
        java.util.Collection<model.CD> cDCollection34 = itemSearchResult12.similarCD;
        model.Magazine magazine35 = itemSearchResult12.magazine;
        model.Student student36 = new model.Student();
        int int37 = student36.ID;
        model.StudentOnlineResources studentOnlineResources38 = new model.StudentOnlineResources((model.Client) student36);
        model.VirtualBook virtualBook40 = studentOnlineResources38.searchAccessibleBook("");
        java.lang.String str41 = virtualBook40.location;
        int int42 = virtualBook40.ID;
        virtualBook40.isBookLost = false;
        java.lang.String str45 = virtualBook40.author;
        virtualBook40.edition = 'a';
        itemSearchResult12.book = virtualBook40;
        model.ItemManagement itemManagement49 = new model.ItemManagement();
        model.Database database50 = null;
        itemManagement49.database = database50;
        model.Database database59 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        java.lang.String str60 = database59.itemPath;
        itemManagement49.database = database59;
        model.Database database69 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str70 = database69.getVirtualBookFilePath();
        model.Database.database = database69;
        java.lang.String str72 = database69.virtualItemFilePath;
        java.lang.String str73 = database69.getBookFilePath();
        database69.itemPath = "src/Magazine.csv";
        model.Login login76 = model.Login.makeLogin(database69);
        java.lang.String str77 = database69.getNewspaperFilePath();
        java.lang.String str78 = database69.getMagazineFilePath();
        itemManagement49.database = database69;
        boolean boolean80 = virtualBook40.equals((java.lang.Object) itemManagement49);
        org.junit.Assert.assertNotNull(bookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(cDArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(magazineArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(cDArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(bookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(magazineArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(book33);
        org.junit.Assert.assertNotNull(cDCollection34);
        org.junit.Assert.assertNull(magazine35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(virtualBook40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(database59);
// flaky:         org.junit.Assert.assertEquals("'" + str60 + "' != '" + "src/Magazine.csv" + "'", str60, "src/Magazine.csv");
        org.junit.Assert.assertNotNull(database69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "src/VirtualBook.csv" + "'", str70, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "src/Newsletter.csv" + "'", str72, "src/Newsletter.csv");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "src/Book.csv" + "'", str73, "src/Book.csv");
        org.junit.Assert.assertNotNull(login76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "src/Newsletter.csv" + "'", str77, "src/Newsletter.csv");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "src/Magazine.csv" + "'", str78, "src/Magazine.csv");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test2178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2178");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        model.LibraryManagementTeam libraryManagementTeam54 = new model.LibraryManagementTeam();
        libraryManagementTeam54.accessCode = (byte) 10;
        java.util.ArrayList<model.Item> itemList57 = libraryManagementTeam54.items;
        boolean boolean58 = virtualBook4.equals((java.lang.Object) libraryManagementTeam54);
        int int59 = virtualBook4.ID;
        model.VirtualItemContent virtualItemContent61 = new model.VirtualItemContent("src/Newsletter.csv");
        java.lang.String str62 = virtualItemContent61.link;
        virtualBook4.content = virtualItemContent61;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertNotNull(itemList57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "src/Newsletter.csv" + "'", str62, "src/Newsletter.csv");
    }

    @Test
    public void test2179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2179");
        model.SearchBorrowedItem searchBorrowedItem0 = model.SearchBorrowedItem.makeSearchBorrowedItem();
        model.Visitor visitor1 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList2 = visitor1.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources3 = new model.StudentOnlineResources((model.Client) visitor1);
        model.RentedItem[] rentedItemArray4 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList5 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList5, rentedItemArray4);
        model.BorrowingManager borrowingManager7 = new model.BorrowingManager(rentedItemList5);
        model.Visitor visitor8 = new model.Visitor();
        visitor8.email = "hi!";
        borrowingManager7.client = visitor8;
        studentOnlineResources3.client = visitor8;
        model.Student student13 = new model.Student();
        int int14 = student13.ID;
        model.StudentOnlineResources studentOnlineResources15 = new model.StudentOnlineResources((model.Client) student13);
        model.VirtualBook virtualBook17 = studentOnlineResources15.searchAccessibleBook("");
        model.CD cD19 = new model.CD("");
        model.Magazine magazine20 = null;
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.Book book34 = null;
        model.CD cD35 = null;
        model.Magazine magazine36 = null;
        model.Book[] bookArray37 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList38 = new java.util.ArrayList<model.Book>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList38, bookArray37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        model.Magazine[] magazineArray43 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList44 = new java.util.ArrayList<model.Magazine>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList44, magazineArray43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book34, cD35, magazine36, (java.util.Collection<model.Book>) bookList38, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList44);
        model.CD[] cDArray47 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList48 = new java.util.ArrayList<model.CD>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList48, cDArray47);
        itemSearchResult46.similarCD = cDList48;
        model.Book book51 = null;
        model.CD cD52 = null;
        model.Magazine magazine53 = null;
        model.Book[] bookArray54 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList55 = new java.util.ArrayList<model.Book>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList55, bookArray54);
        model.CD[] cDArray57 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList58 = new java.util.ArrayList<model.CD>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList58, cDArray57);
        model.Magazine[] magazineArray60 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList61 = new java.util.ArrayList<model.Magazine>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList61, magazineArray60);
        model.ItemSearchResult itemSearchResult63 = new model.ItemSearchResult(book51, cD52, magazine53, (java.util.Collection<model.Book>) bookList55, (java.util.Collection<model.CD>) cDList58, (java.util.Collection<model.Magazine>) magazineList61);
        model.ItemSearchResult itemSearchResult64 = new model.ItemSearchResult((model.Book) virtualBook17, cD19, magazine20, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList48, (java.util.Collection<model.Magazine>) magazineList61);
        java.lang.String str65 = studentOnlineResources3.readVirtualItem((model.VirtualItem) virtualBook17);
        model.Visitor visitor67 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList68 = visitor67.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources69 = new model.StudentOnlineResources((model.Client) visitor67);
        searchBorrowedItem0.addPhyscialItem((model.Item) virtualBook17, "", (model.Client) visitor67);
        java.util.ArrayList<model.VirtualItem> virtualItemList73 = searchBorrowedItem0.searchBorrowedVirtualItem("model.RegistrationFailedException: src/Magazine.csv", "src/Book.csv");
        java.util.ArrayList<model.VirtualItem> virtualItemList76 = searchBorrowedItem0.searchBorrowedVirtualItem("model.RegistrationFailedException: ", "model.RentingNotAllowedException: hi!");
// flaky:         searchBorrowedItem0.removeItem("hi!", "model.RentingNotAllowedException: hi!");
        model.SearchBorrowedItem.object = searchBorrowedItem0;
        org.junit.Assert.assertNotNull(searchBorrowedItem0);
        org.junit.Assert.assertNull(virtualBookList2);
        org.junit.Assert.assertNotNull(rentedItemArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(virtualBook17);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(bookArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(magazineArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(cDArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(bookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(cDArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(magazineArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(virtualBookList68);
        org.junit.Assert.assertNotNull(virtualItemList73);
        org.junit.Assert.assertNotNull(virtualItemList76);
    }

    @Test
    public void test2180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2180");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter54 = null;
        model.PaidNewsletter paidNewsletter55 = null;
        model.VirtualItemSearchResult virtualItemSearchResult56 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter54, paidNewsletter55);
        model.PaidNewsletter paidNewsletter57 = virtualItemSearchResult56.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter58 = virtualItemSearchResult56.getUniNewsletter();
        model.PaidNewsletter paidNewsletter59 = virtualItemSearchResult56.getPaidNewsletter();
        model.UniProvidedNewsletter uniProvidedNewsletter60 = virtualItemSearchResult56.getUniNewsletter();
        model.PaidNewsletter paidNewsletter61 = null;
        virtualItemSearchResult56.setPaidNewsletter(paidNewsletter61);
        model.UniProvidedNewsletter uniProvidedNewsletter63 = virtualItemSearchResult56.uniNewsletter;
        model.PaidNewsletter paidNewsletter64 = null;
        virtualItemSearchResult56.paidNewsletter = paidNewsletter64;
        model.PaidNewsletter paidNewsletter66 = virtualItemSearchResult56.paidNewsletter;
        model.PaidNewsletter paidNewsletter67 = virtualItemSearchResult56.paidNewsletter;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertNull(paidNewsletter57);
        org.junit.Assert.assertNull(uniProvidedNewsletter58);
        org.junit.Assert.assertNull(paidNewsletter59);
        org.junit.Assert.assertNull(uniProvidedNewsletter60);
        org.junit.Assert.assertNull(uniProvidedNewsletter63);
        org.junit.Assert.assertNull(paidNewsletter66);
        org.junit.Assert.assertNull(paidNewsletter67);
    }

    @Test
    public void test2181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2181");
        model.Student student0 = new model.Student();
        student0.viewMyOnlineResource();
        student0.viewMyOnlineResource();
        model.Visitor visitor3 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList4 = visitor3.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources5 = new model.StudentOnlineResources((model.Client) visitor3);
        model.RentedItem[] rentedItemArray6 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList7 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList7, rentedItemArray6);
        model.BorrowingManager borrowingManager9 = new model.BorrowingManager(rentedItemList7);
        model.Visitor visitor10 = new model.Visitor();
        visitor10.email = "hi!";
        borrowingManager9.client = visitor10;
        studentOnlineResources5.client = visitor10;
        model.NonFaculty nonFaculty15 = new model.NonFaculty();
        model.Visitor visitor16 = new model.Visitor();
        model.VirtualBook[] virtualBookArray17 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList18 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList18, virtualBookArray17);
        visitor16.virtualBooksAvailable = virtualBookList18;
        visitor16.username = "";
        model.Visitor visitor23 = new model.Visitor();
        model.VirtualBook[] virtualBookArray24 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList25 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList25, virtualBookArray24);
        visitor23.virtualBooksAvailable = virtualBookList25;
        visitor16.virtualBooksAvailable = virtualBookList25;
        nonFaculty15.virtualBooksAvailable = virtualBookList25;
        visitor10.virtualBooksAvailable = virtualBookList25;
        student0.virtualBooksAvailable = virtualBookList25;
        org.junit.Assert.assertNull(virtualBookList4);
        org.junit.Assert.assertNotNull(rentedItemArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(virtualBookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(virtualBookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test2182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2182");
        model.Database database0 = null;
        model.Register register1 = model.Register.makeRegister(database0);
        model.Faculty faculty2 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection3 = faculty2.courses;
        boolean boolean6 = register1.registerAsStaff((model.Staff) faculty2, "src/Book.csv", "src/Book.csv");
        model.Database database7 = model.Database.database;
        model.Student student8 = new model.Student();
        int int9 = student8.ID;
        model.StudentOnlineResources studentOnlineResources10 = new model.StudentOnlineResources((model.Client) student8);
        student8.ID = '#';
        database7.addClient((model.Client) student8);
        student8.email = "hi!";
        boolean boolean18 = register1.registerAsStaff((model.Staff) student8, "src/CD.csv", "src/Book.csv");
        model.Database database19 = register1.database;
        java.lang.Class<?> wildcardClass20 = register1.getClass();
        org.junit.Assert.assertNotNull(register1);
        org.junit.Assert.assertNull(courseCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test2183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2183");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.SearchClient searchClient9 = model.SearchClient.makeSearchClient(database7);
        java.lang.String str10 = database7.itemPath;
        java.lang.String str11 = database7.getCDFilePath();
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
        org.junit.Assert.assertNotNull(searchClient9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "src/CD.csv" + "'", str11, "src/CD.csv");
    }

    @Test
    public void test2184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2184");
        model.ItemManagement itemManagement0 = new model.ItemManagement();
        model.Item item2 = itemManagement0.selectAnItemFromDatabase((int) (short) 0);
        model.Database database3 = model.Database.database;
        model.Student student4 = new model.Student();
        int int5 = student4.ID;
        model.StudentOnlineResources studentOnlineResources6 = new model.StudentOnlineResources((model.Client) student4);
        student4.ID = '#';
        database3.addClient((model.Client) student4);
        itemManagement0.database = database3;
        model.Database database11 = itemManagement0.database;
        model.Database database12 = itemManagement0.database;
        model.VirtualBook virtualBook14 = new model.VirtualBook("src/Magazine.csv");
        model.VirtualItemContent virtualItemContent16 = new model.VirtualItemContent("hi!");
        java.lang.String str17 = virtualItemContent16.link;
        java.lang.String str19 = virtualItemContent16.getContent("");
        java.lang.String str21 = virtualItemContent16.getContent("model.RegistrationFailedException: ");
        java.lang.String str22 = virtualItemContent16.link;
        java.lang.String str24 = virtualItemContent16.getContent("hi!");
        virtualBook14.content = virtualItemContent16;
        itemManagement0.enableAnItem((model.Item) virtualBook14);
        model.Student student27 = new model.Student();
        int int28 = student27.ID;
        model.StudentOnlineResources studentOnlineResources29 = new model.StudentOnlineResources((model.Client) student27);
        model.VirtualBook virtualBook31 = studentOnlineResources29.searchAccessibleBook("");
        model.CD cD33 = new model.CD("");
        model.Magazine magazine34 = null;
        model.Book book35 = null;
        model.CD cD36 = null;
        model.Magazine magazine37 = null;
        model.Book[] bookArray38 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList39 = new java.util.ArrayList<model.Book>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList39, bookArray38);
        model.CD[] cDArray41 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList42 = new java.util.ArrayList<model.CD>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList42, cDArray41);
        model.Magazine[] magazineArray44 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList45 = new java.util.ArrayList<model.Magazine>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList45, magazineArray44);
        model.ItemSearchResult itemSearchResult47 = new model.ItemSearchResult(book35, cD36, magazine37, (java.util.Collection<model.Book>) bookList39, (java.util.Collection<model.CD>) cDList42, (java.util.Collection<model.Magazine>) magazineList45);
        model.Book book48 = null;
        model.CD cD49 = null;
        model.Magazine magazine50 = null;
        model.Book[] bookArray51 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList52 = new java.util.ArrayList<model.Book>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList52, bookArray51);
        model.CD[] cDArray54 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList55 = new java.util.ArrayList<model.CD>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList55, cDArray54);
        model.Magazine[] magazineArray57 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList58 = new java.util.ArrayList<model.Magazine>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList58, magazineArray57);
        model.ItemSearchResult itemSearchResult60 = new model.ItemSearchResult(book48, cD49, magazine50, (java.util.Collection<model.Book>) bookList52, (java.util.Collection<model.CD>) cDList55, (java.util.Collection<model.Magazine>) magazineList58);
        model.CD[] cDArray61 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList62 = new java.util.ArrayList<model.CD>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList62, cDArray61);
        itemSearchResult60.similarCD = cDList62;
        model.Book book65 = null;
        model.CD cD66 = null;
        model.Magazine magazine67 = null;
        model.Book[] bookArray68 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList69 = new java.util.ArrayList<model.Book>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList69, bookArray68);
        model.CD[] cDArray71 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList72 = new java.util.ArrayList<model.CD>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList72, cDArray71);
        model.Magazine[] magazineArray74 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList75 = new java.util.ArrayList<model.Magazine>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList75, magazineArray74);
        model.ItemSearchResult itemSearchResult77 = new model.ItemSearchResult(book65, cD66, magazine67, (java.util.Collection<model.Book>) bookList69, (java.util.Collection<model.CD>) cDList72, (java.util.Collection<model.Magazine>) magazineList75);
        model.ItemSearchResult itemSearchResult78 = new model.ItemSearchResult((model.Book) virtualBook31, cD33, magazine34, (java.util.Collection<model.Book>) bookList39, (java.util.Collection<model.CD>) cDList62, (java.util.Collection<model.Magazine>) magazineList75);
        int int79 = virtualBook31.ID;
        int int80 = virtualBook31.copiesAvailable;
        model.LibraryManagementTeam libraryManagementTeam81 = new model.LibraryManagementTeam();
        libraryManagementTeam81.accessCode = (byte) 10;
        java.util.ArrayList<model.Item> itemList84 = libraryManagementTeam81.items;
        boolean boolean85 = virtualBook31.equals((java.lang.Object) libraryManagementTeam81);
        java.lang.String str86 = virtualBook31.title;
        java.lang.String str87 = virtualBook31.publisher;
        java.lang.String str88 = virtualBook31.title;
        virtualBook31.ISBN = "src/Newsletter.csv";
        itemManagement0.disableAnItem((model.Item) virtualBook31);
        virtualBook31.ISBN = "model.LoginFailedException: hi!";
        org.junit.Assert.assertNull(item2);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(virtualBook31);
        org.junit.Assert.assertNotNull(bookArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(cDArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(magazineArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(bookArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(cDArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(magazineArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(cDArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(bookArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(cDArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(magazineArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 20 + "'", int80 == 20);
        org.junit.Assert.assertNotNull(itemList84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
    }

    @Test
    public void test2185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2185");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.VirtualItemContent virtualItemContent5 = virtualBook4.content;
        model.Newsletter[] newsletterArray6 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList7 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList7, newsletterArray6);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager9 = new model.NewsletterSubscriptionManager(newsletterList7);
        model.Client client10 = newsletterSubscriptionManager9.client;
        model.UniProvidedNewsletter uniProvidedNewsletter11 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter11.title = "";
        java.lang.String str14 = uniProvidedNewsletter11.title;
        newsletterSubscriptionManager9.subscribeToUniProvidedNewsletter(uniProvidedNewsletter11, "");
        model.Student student17 = new model.Student();
        int int18 = student17.ID;
        model.StudentOnlineResources studentOnlineResources19 = new model.StudentOnlineResources((model.Client) student17);
        model.VirtualBook virtualBook21 = studentOnlineResources19.searchAccessibleBook("");
        model.CD cD23 = new model.CD("");
        model.Magazine magazine24 = null;
        model.Book book25 = null;
        model.CD cD26 = null;
        model.Magazine magazine27 = null;
        model.Book[] bookArray28 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList29 = new java.util.ArrayList<model.Book>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList29, bookArray28);
        model.CD[] cDArray31 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList32 = new java.util.ArrayList<model.CD>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList32, cDArray31);
        model.Magazine[] magazineArray34 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList35 = new java.util.ArrayList<model.Magazine>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList35, magazineArray34);
        model.ItemSearchResult itemSearchResult37 = new model.ItemSearchResult(book25, cD26, magazine27, (java.util.Collection<model.Book>) bookList29, (java.util.Collection<model.CD>) cDList32, (java.util.Collection<model.Magazine>) magazineList35);
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.CD[] cDArray51 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList52 = new java.util.ArrayList<model.CD>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList52, cDArray51);
        itemSearchResult50.similarCD = cDList52;
        model.Book book55 = null;
        model.CD cD56 = null;
        model.Magazine magazine57 = null;
        model.Book[] bookArray58 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList59 = new java.util.ArrayList<model.Book>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList59, bookArray58);
        model.CD[] cDArray61 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList62 = new java.util.ArrayList<model.CD>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList62, cDArray61);
        model.Magazine[] magazineArray64 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList65 = new java.util.ArrayList<model.Magazine>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList65, magazineArray64);
        model.ItemSearchResult itemSearchResult67 = new model.ItemSearchResult(book55, cD56, magazine57, (java.util.Collection<model.Book>) bookList59, (java.util.Collection<model.CD>) cDList62, (java.util.Collection<model.Magazine>) magazineList65);
        model.ItemSearchResult itemSearchResult68 = new model.ItemSearchResult((model.Book) virtualBook21, cD23, magazine24, (java.util.Collection<model.Book>) bookList29, (java.util.Collection<model.CD>) cDList52, (java.util.Collection<model.Magazine>) magazineList65);
        int int69 = virtualBook21.ID;
        int int70 = virtualBook21.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter71 = null;
        model.PaidNewsletter paidNewsletter72 = null;
        model.VirtualItemSearchResult virtualItemSearchResult73 = new model.VirtualItemSearchResult(virtualBook21, uniProvidedNewsletter71, paidNewsletter72);
        model.PaidNewsletter paidNewsletter74 = virtualItemSearchResult73.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter75 = new model.UniProvidedNewsletter();
        virtualItemSearchResult73.setUniNewsletter(uniProvidedNewsletter75);
        java.lang.String str77 = uniProvidedNewsletter75.title;
        uniProvidedNewsletter75.cost = 0L;
        newsletterSubscriptionManager9.subscribeToUniProvidedNewsletter(uniProvidedNewsletter75, "");
        model.VirtualItemContent virtualItemContent83 = new model.VirtualItemContent("hi!");
        java.lang.String str84 = virtualItemContent83.link;
        java.lang.String str85 = virtualItemContent83.link;
        uniProvidedNewsletter75.content = virtualItemContent83;
        uniProvidedNewsletter75.showContent();
        model.VirtualItemContent virtualItemContent88 = uniProvidedNewsletter75.content;
        model.PaidNewsletter paidNewsletter89 = new model.PaidNewsletter();
        model.VirtualItemSearchResult virtualItemSearchResult90 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter75, paidNewsletter89);
        // The following exception was thrown during execution in test generation
        try {
            model.RentedItem rentedItem92 = new model.RentedItem((model.Item) virtualBook4, "model.RegistrationFailedException: ");
            org.junit.Assert.fail("Expected exception of type java.time.format.DateTimeParseException; message: Text 'model.RegistrationFailedException: ' could not be parsed at index 0");
        } catch (java.time.format.DateTimeParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNull(virtualItemContent5);
        org.junit.Assert.assertNotNull(newsletterArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(client10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(virtualBook21);
        org.junit.Assert.assertNotNull(bookArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(cDArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(magazineArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(cDArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(bookArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(cDArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(magazineArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 20 + "'", int70 == 20);
        org.junit.Assert.assertNull(paidNewsletter74);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "hi!" + "'", str84, "hi!");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "hi!" + "'", str85, "hi!");
        org.junit.Assert.assertNotNull(virtualItemContent88);
    }

    @Test
    public void test2186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2186");
        model.SearchBorrowedItem searchBorrowedItem0 = model.SearchBorrowedItem.makeSearchBorrowedItem();
        model.Visitor visitor1 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList2 = visitor1.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources3 = new model.StudentOnlineResources((model.Client) visitor1);
        model.RentedItem[] rentedItemArray4 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList5 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList5, rentedItemArray4);
        model.BorrowingManager borrowingManager7 = new model.BorrowingManager(rentedItemList5);
        model.Visitor visitor8 = new model.Visitor();
        visitor8.email = "hi!";
        borrowingManager7.client = visitor8;
        studentOnlineResources3.client = visitor8;
        model.Student student13 = new model.Student();
        int int14 = student13.ID;
        model.StudentOnlineResources studentOnlineResources15 = new model.StudentOnlineResources((model.Client) student13);
        model.VirtualBook virtualBook17 = studentOnlineResources15.searchAccessibleBook("");
        model.CD cD19 = new model.CD("");
        model.Magazine magazine20 = null;
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.Book book34 = null;
        model.CD cD35 = null;
        model.Magazine magazine36 = null;
        model.Book[] bookArray37 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList38 = new java.util.ArrayList<model.Book>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList38, bookArray37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        model.Magazine[] magazineArray43 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList44 = new java.util.ArrayList<model.Magazine>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList44, magazineArray43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book34, cD35, magazine36, (java.util.Collection<model.Book>) bookList38, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList44);
        model.CD[] cDArray47 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList48 = new java.util.ArrayList<model.CD>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList48, cDArray47);
        itemSearchResult46.similarCD = cDList48;
        model.Book book51 = null;
        model.CD cD52 = null;
        model.Magazine magazine53 = null;
        model.Book[] bookArray54 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList55 = new java.util.ArrayList<model.Book>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList55, bookArray54);
        model.CD[] cDArray57 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList58 = new java.util.ArrayList<model.CD>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList58, cDArray57);
        model.Magazine[] magazineArray60 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList61 = new java.util.ArrayList<model.Magazine>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList61, magazineArray60);
        model.ItemSearchResult itemSearchResult63 = new model.ItemSearchResult(book51, cD52, magazine53, (java.util.Collection<model.Book>) bookList55, (java.util.Collection<model.CD>) cDList58, (java.util.Collection<model.Magazine>) magazineList61);
        model.ItemSearchResult itemSearchResult64 = new model.ItemSearchResult((model.Book) virtualBook17, cD19, magazine20, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList48, (java.util.Collection<model.Magazine>) magazineList61);
        java.lang.String str65 = studentOnlineResources3.readVirtualItem((model.VirtualItem) virtualBook17);
        model.Visitor visitor67 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList68 = visitor67.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources69 = new model.StudentOnlineResources((model.Client) visitor67);
        searchBorrowedItem0.addPhyscialItem((model.Item) virtualBook17, "", (model.Client) visitor67);
        model.Student student71 = new model.Student();
        int int72 = student71.ID;
        model.StudentOnlineResources studentOnlineResources73 = new model.StudentOnlineResources((model.Client) student71);
        java.util.Iterator<model.VirtualItem> virtualItemItor74 = studentOnlineResources73.iterator();
        boolean boolean75 = virtualBook17.equals((java.lang.Object) virtualItemItor74);
        java.lang.String str76 = virtualBook17.title;
        virtualBook17.ID = 4786463;
        org.junit.Assert.assertNotNull(searchBorrowedItem0);
        org.junit.Assert.assertNull(virtualBookList2);
        org.junit.Assert.assertNotNull(rentedItemArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(virtualBook17);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(bookArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(magazineArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(cDArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(bookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(cDArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(magazineArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(virtualBookList68);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNull(virtualItemItor74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
    }

    @Test
    public void test2187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2187");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        virtualBook4.ID = (short) 10;
        int int54 = virtualBook4.ID;
        virtualBook4.showContent();
        virtualBook4.publisher = "src/Book.csv";
        boolean boolean58 = virtualBook4.isBookLost;
        int int59 = virtualBook4.ID;
        model.VirtualItemContent virtualItemContent60 = virtualBook4.content;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 10 + "'", int59 == 10);
        org.junit.Assert.assertNull(virtualItemContent60);
    }

    @Test
    public void test2188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2188");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.util.ArrayList<java.lang.String> strList8 = database7.getAllItems();
        java.util.ArrayList<java.lang.String> strList9 = database7.getAllItems();
        int int10 = database7.getRandomID();
        model.SearchVirtualItem searchVirtualItem11 = new model.SearchVirtualItem(database7);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2295232 + "'", int10 == 2295232);
    }

    @Test
    public void test2189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2189");
        model.Course course0 = new model.Course();
        java.lang.String str1 = course0.subject;
        java.lang.String str2 = course0.code;
        java.lang.String str3 = course0.subject;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test2190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2190");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.Student student1 = new model.Student();
        int int2 = student1.ID;
        model.StudentOnlineResources studentOnlineResources3 = new model.StudentOnlineResources((model.Client) student1);
        model.VirtualBook virtualBook5 = studentOnlineResources3.searchAccessibleBook("");
        model.CD cD7 = new model.CD("");
        model.Magazine magazine8 = null;
        model.Book book9 = null;
        model.CD cD10 = null;
        model.Magazine magazine11 = null;
        model.Book[] bookArray12 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList13 = new java.util.ArrayList<model.Book>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList13, bookArray12);
        model.CD[] cDArray15 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList16 = new java.util.ArrayList<model.CD>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList16, cDArray15);
        model.Magazine[] magazineArray18 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList19 = new java.util.ArrayList<model.Magazine>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList19, magazineArray18);
        model.ItemSearchResult itemSearchResult21 = new model.ItemSearchResult(book9, cD10, magazine11, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList16, (java.util.Collection<model.Magazine>) magazineList19);
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        model.CD[] cDArray35 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList36 = new java.util.ArrayList<model.CD>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList36, cDArray35);
        itemSearchResult34.similarCD = cDList36;
        model.Book book39 = null;
        model.CD cD40 = null;
        model.Magazine magazine41 = null;
        model.Book[] bookArray42 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList43 = new java.util.ArrayList<model.Book>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList43, bookArray42);
        model.CD[] cDArray45 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList46 = new java.util.ArrayList<model.CD>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList46, cDArray45);
        model.Magazine[] magazineArray48 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList49 = new java.util.ArrayList<model.Magazine>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList49, magazineArray48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult(book39, cD40, magazine41, (java.util.Collection<model.Book>) bookList43, (java.util.Collection<model.CD>) cDList46, (java.util.Collection<model.Magazine>) magazineList49);
        model.ItemSearchResult itemSearchResult52 = new model.ItemSearchResult((model.Book) virtualBook5, cD7, magazine8, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList36, (java.util.Collection<model.Magazine>) magazineList49);
        int int53 = virtualBook5.ID;
        virtualBook5.ISBN = "hi!";
        int int56 = virtualBook5.ID;
        model.LibraryManagementTeam libraryManagementTeam57 = new model.LibraryManagementTeam();
        libraryManagementTeam57.accessCode = (byte) 10;
        boolean boolean60 = virtualBook5.equals((java.lang.Object) libraryManagementTeam57);
        requestForum0.managementTeam = libraryManagementTeam57;
        int int62 = libraryManagementTeam57.ID;
        model.Database database70 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database70;
        model.SearchVirtualItem searchVirtualItem72 = new model.SearchVirtualItem(database70);
        model.VirtualItemSearchResult virtualItemSearchResult74 = searchVirtualItem72.searchVirtualItem("src/VirtualBook.csv");
        model.Student student75 = new model.Student();
        int int76 = student75.ID;
        model.StudentOnlineResources studentOnlineResources77 = new model.StudentOnlineResources((model.Client) student75);
        model.VirtualBook virtualBook79 = studentOnlineResources77.searchAccessibleBook("");
        java.lang.String str80 = virtualBook79.location;
        int int81 = virtualBook79.ID;
        virtualBook79.isBookLost = false;
        virtualItemSearchResult74.virtualBook = virtualBook79;
        model.VirtualBook virtualBook85 = virtualItemSearchResult74.getVirtualBook();
        libraryManagementTeam57.enableAnItem((model.Item) virtualBook85);
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(virtualBook5);
        org.junit.Assert.assertNotNull(bookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cDArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(magazineArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(cDArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(bookArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(cDArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(magazineArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(database70);
        org.junit.Assert.assertNotNull(virtualItemSearchResult74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(virtualBook79);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(virtualBook85);
    }

    @Test
    public void test2191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2191");
        model.BuySpecialItems buySpecialItems0 = new model.BuySpecialItems();
        model.Payment payment1 = buySpecialItems0.paymentAPI;
        model.Payment payment2 = buySpecialItems0.paymentAPI;
        model.Item item3 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean5 = buySpecialItems0.buyAnItem(item3, 100.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"canBePurchased\" because \"item\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(payment1);
        org.junit.Assert.assertNull(payment2);
    }

    @Test
    public void test2192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2192");
        model.ItemManagement itemManagement0 = new model.ItemManagement();
        model.Database database1 = null;
        itemManagement0.database = database1;
        model.BuySpecialItems buySpecialItems3 = new model.BuySpecialItems();
        model.Book book4 = null;
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        java.util.Collection<model.Book> bookCollection8 = null;
        model.Book book9 = null;
        model.CD cD10 = null;
        model.Magazine magazine11 = null;
        model.Book[] bookArray12 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList13 = new java.util.ArrayList<model.Book>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList13, bookArray12);
        model.CD[] cDArray15 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList16 = new java.util.ArrayList<model.CD>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList16, cDArray15);
        model.Magazine[] magazineArray18 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList19 = new java.util.ArrayList<model.Magazine>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList19, magazineArray18);
        model.ItemSearchResult itemSearchResult21 = new model.ItemSearchResult(book9, cD10, magazine11, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList16, (java.util.Collection<model.Magazine>) magazineList19);
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        itemSearchResult21.similarCD = cDList29;
        model.Book book36 = null;
        model.CD cD37 = null;
        model.Magazine magazine38 = null;
        model.Book[] bookArray39 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList40 = new java.util.ArrayList<model.Book>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList40, bookArray39);
        model.CD[] cDArray42 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList43 = new java.util.ArrayList<model.CD>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList43, cDArray42);
        model.Magazine[] magazineArray45 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList46 = new java.util.ArrayList<model.Magazine>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList46, magazineArray45);
        model.ItemSearchResult itemSearchResult48 = new model.ItemSearchResult(book36, cD37, magazine38, (java.util.Collection<model.Book>) bookList40, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList46);
        model.ItemSearchResult itemSearchResult49 = new model.ItemSearchResult(book4, cD6, magazine7, bookCollection8, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList46);
        cD6.ID = (short) 10;
        boolean boolean53 = buySpecialItems3.buyAnItem((model.Item) cD6, (double) 0);
        itemManagement0.enableAnItem((model.Item) cD6);
        model.CD cD56 = new model.CD("");
        boolean boolean57 = cD56.canBePurchased;
        itemManagement0.enableAnItem((model.Item) cD56);
        model.Database database66 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str67 = database66.getVirtualBookFilePath();
        model.Database.database = database66;
        java.lang.String str69 = database66.virtualItemFilePath;
        java.lang.String str70 = database66.getCDFilePath();
        itemManagement0.database = database66;
        org.junit.Assert.assertNotNull(bookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cDArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(magazineArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(bookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cDArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(magazineArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(database66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "src/VirtualBook.csv" + "'", str67, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "src/Newsletter.csv" + "'", str69, "src/Newsletter.csv");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "src/CD.csv" + "'", str70, "src/CD.csv");
    }

    @Test
    public void test2193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2193");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        model.RentedItem[] rentedItemArray4 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList5 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList5, rentedItemArray4);
        model.BorrowingManager borrowingManager7 = new model.BorrowingManager(rentedItemList5);
        model.RentedItem[] rentedItemArray8 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList9 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList9, rentedItemArray8);
        model.BorrowingManager borrowingManager11 = new model.BorrowingManager(rentedItemList9);
        borrowingManager7.physicalItemBorrowed = rentedItemList9;
        borrowingManager3.physicalItemBorrowed = rentedItemList9;
        model.Visitor visitor14 = new model.Visitor();
        model.VirtualBook[] virtualBookArray15 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList16 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList16, virtualBookArray15);
        visitor14.virtualBooksAvailable = virtualBookList16;
        borrowingManager3.client = visitor14;
        model.Faculty faculty20 = new model.Faculty();
        java.lang.String str21 = faculty20.faculty;
        borrowingManager3.client = faculty20;
        int int23 = borrowingManager3.itemsBorrowedCount;
        borrowingManager3.amountOwned = (short) 0;
        int int26 = borrowingManager3.itemsBorrowedCount;
        model.Student student27 = new model.Student();
        int int28 = student27.ID;
        model.StudentOnlineResources studentOnlineResources29 = new model.StudentOnlineResources((model.Client) student27);
        model.StudentOnlineResources studentOnlineResources30 = new model.StudentOnlineResources((model.Client) student27);
        model.VirtualBook virtualBook32 = studentOnlineResources30.searchAccessibleBook("src/Book.csv");
        int int33 = virtualBook32.ID;
        borrowingManager3.removeRentedItem((model.Item) virtualBook32);
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(rentedItemArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rentedItemArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(virtualBookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(virtualBook32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
    }

    @Test
    public void test2194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2194");
        model.VirtualBook virtualBook1 = new model.VirtualBook("");
        java.util.Calendar calendar2 = virtualBook1.date;
        int int3 = virtualBook1.ID;
        org.junit.Assert.assertNull(calendar2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test2195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2195");
        model.Visitor visitor0 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList1 = visitor0.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) visitor0);
        model.RentedItem[] rentedItemArray3 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList4 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList4, rentedItemArray3);
        model.BorrowingManager borrowingManager6 = new model.BorrowingManager(rentedItemList4);
        model.Visitor visitor7 = new model.Visitor();
        visitor7.email = "hi!";
        borrowingManager6.client = visitor7;
        studentOnlineResources2.client = visitor7;
        model.UniProvidedNewsletter uniProvidedNewsletter12 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter12.title = "";
        java.lang.String str15 = studentOnlineResources2.readVirtualItem((model.VirtualItem) uniProvidedNewsletter12);
        java.util.Iterator<model.VirtualItem> virtualItemItor16 = studentOnlineResources2.iterator();
        java.util.Iterator<model.VirtualItem> virtualItemItor17 = studentOnlineResources2.iterator();
        model.Database database25 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database25;
        model.SearchVirtualItem searchVirtualItem27 = new model.SearchVirtualItem(database25);
        model.RentAndReturnSystem rentAndReturnSystem28 = new model.RentAndReturnSystem();
        model.Book book29 = null;
        model.CD cD31 = new model.CD("");
        model.Magazine magazine32 = null;
        java.util.Collection<model.Book> bookCollection33 = null;
        model.Book book34 = null;
        model.CD cD35 = null;
        model.Magazine magazine36 = null;
        model.Book[] bookArray37 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList38 = new java.util.ArrayList<model.Book>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList38, bookArray37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        model.Magazine[] magazineArray43 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList44 = new java.util.ArrayList<model.Magazine>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList44, magazineArray43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book34, cD35, magazine36, (java.util.Collection<model.Book>) bookList38, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList44);
        model.Book book47 = null;
        model.CD cD48 = null;
        model.Magazine magazine49 = null;
        model.Book[] bookArray50 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList51 = new java.util.ArrayList<model.Book>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList51, bookArray50);
        model.CD[] cDArray53 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList54 = new java.util.ArrayList<model.CD>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList54, cDArray53);
        model.Magazine[] magazineArray56 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList57 = new java.util.ArrayList<model.Magazine>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList57, magazineArray56);
        model.ItemSearchResult itemSearchResult59 = new model.ItemSearchResult(book47, cD48, magazine49, (java.util.Collection<model.Book>) bookList51, (java.util.Collection<model.CD>) cDList54, (java.util.Collection<model.Magazine>) magazineList57);
        itemSearchResult46.similarCD = cDList54;
        model.Book book61 = null;
        model.CD cD62 = null;
        model.Magazine magazine63 = null;
        model.Book[] bookArray64 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList65 = new java.util.ArrayList<model.Book>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList65, bookArray64);
        model.CD[] cDArray67 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList68 = new java.util.ArrayList<model.CD>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList68, cDArray67);
        model.Magazine[] magazineArray70 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList71 = new java.util.ArrayList<model.Magazine>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList71, magazineArray70);
        model.ItemSearchResult itemSearchResult73 = new model.ItemSearchResult(book61, cD62, magazine63, (java.util.Collection<model.Book>) bookList65, (java.util.Collection<model.CD>) cDList68, (java.util.Collection<model.Magazine>) magazineList71);
        model.ItemSearchResult itemSearchResult74 = new model.ItemSearchResult(book29, cD31, magazine32, bookCollection33, (java.util.Collection<model.CD>) cDList54, (java.util.Collection<model.Magazine>) magazineList71);
        cD31.ID = (short) 10;
        cD31.canBePurchased = false;
        boolean boolean79 = cD31.canBePurchased;
        model.Faculty faculty80 = new model.Faculty();
        boolean boolean81 = rentAndReturnSystem28.rentAnItem((model.Item) cD31, (model.Client) faculty80);
        java.lang.String str82 = faculty80.faculty;
        database25.addClient((model.Client) faculty80);
        studentOnlineResources2.client = faculty80;
        org.junit.Assert.assertNull(virtualBookList1);
        org.junit.Assert.assertNotNull(rentedItemArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(virtualItemItor16);
        org.junit.Assert.assertNull(virtualItemItor17);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(bookArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(magazineArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(bookArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(cDArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(magazineArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(bookArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(cDArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(magazineArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(str82);
    }

    @Test
    public void test2196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2196");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        java.lang.String str5 = virtualBook4.location;
        int int6 = virtualBook4.ID;
        virtualBook4.isBookLost = false;
        java.lang.String str9 = virtualBook4.author;
        virtualBook4.isBookLost = true;
        virtualBook4.edition = (byte) 10;
        virtualBook4.ISBN = "";
        int int16 = virtualBook4.edition;
        boolean boolean17 = virtualBook4.isBookLost;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test2197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2197");
        model.Faculty faculty0 = new model.Faculty();
        faculty0.username = "hi!";
        java.lang.String str3 = faculty0.username;
        model.Book book4 = null;
        model.CD cD5 = null;
        model.Magazine magazine6 = null;
        model.Book[] bookArray7 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList8 = new java.util.ArrayList<model.Book>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList8, bookArray7);
        model.CD[] cDArray10 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList11 = new java.util.ArrayList<model.CD>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList11, cDArray10);
        model.Magazine[] magazineArray13 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList14 = new java.util.ArrayList<model.Magazine>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList14, magazineArray13);
        model.ItemSearchResult itemSearchResult16 = new model.ItemSearchResult(book4, cD5, magazine6, (java.util.Collection<model.Book>) bookList8, (java.util.Collection<model.CD>) cDList11, (java.util.Collection<model.Magazine>) magazineList14);
        faculty0.textbooks = bookList8;
        model.NewsletterSubscriptionManager newsletterSubscriptionManager18 = faculty0.newsletterManager;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(bookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(cDArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(magazineArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(newsletterSubscriptionManager18);
    }

    @Test
    public void test2198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2198");
        model.Visitor visitor0 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList1 = visitor0.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) visitor0);
        model.RentedItem[] rentedItemArray3 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList4 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList4, rentedItemArray3);
        model.BorrowingManager borrowingManager6 = new model.BorrowingManager(rentedItemList4);
        model.Visitor visitor7 = new model.Visitor();
        visitor7.email = "hi!";
        borrowingManager6.client = visitor7;
        studentOnlineResources2.client = visitor7;
        model.UniProvidedNewsletter uniProvidedNewsletter12 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter12.title = "";
        java.lang.String str15 = studentOnlineResources2.readVirtualItem((model.VirtualItem) uniProvidedNewsletter12);
        java.lang.Object obj16 = null;
        boolean boolean17 = uniProvidedNewsletter12.equals(obj16);
        model.VirtualItemContent virtualItemContent19 = new model.VirtualItemContent("hi!");
        java.lang.String str20 = virtualItemContent19.link;
        java.lang.String str22 = virtualItemContent19.getContent("");
        java.lang.String str24 = virtualItemContent19.getContent("model.RegistrationFailedException: ");
        virtualItemContent19.link = "";
        java.lang.String str27 = virtualItemContent19.link;
        uniProvidedNewsletter12.content = virtualItemContent19;
        org.junit.Assert.assertNull(virtualBookList1);
        org.junit.Assert.assertNotNull(rentedItemArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
    }

    @Test
    public void test2199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2199");
        model.ValidateRegistration validateRegistration0 = new model.ValidateRegistration();
        model.Student student1 = new model.Student();
        student1.viewMyOnlineResource();
        boolean boolean3 = validateRegistration0.validateStaffRegistration((model.Staff) student1);
        model.Faculty faculty4 = new model.Faculty();
        boolean boolean5 = validateRegistration0.validateStaffRegistration((model.Staff) faculty4);
        model.Faculty faculty6 = new model.Faculty();
        java.lang.String str7 = faculty6.faculty;
        faculty6.email = "src/BorrowedItems.csv";
        model.BorrowingManager borrowingManager10 = faculty6.borrowManager;
        faculty6.faculty = "model.RentingNotAllowedException: ";
        boolean boolean13 = validateRegistration0.validateStaffRegistration((model.Staff) faculty6);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(borrowingManager10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test2200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2200");
        model.ItemManagement itemManagement0 = new model.ItemManagement();
        model.Database database1 = null;
        itemManagement0.database = database1;
        model.Database database10 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        java.lang.String str11 = database10.itemPath;
        itemManagement0.database = database10;
        model.SearchVirtualItem searchVirtualItem13 = new model.SearchVirtualItem(database10);
        model.VirtualItemSearchResult virtualItemSearchResult15 = searchVirtualItem13.searchVirtualItem("src/Book.csv");
        org.junit.Assert.assertNotNull(database10);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(virtualItemSearchResult15);
    }

    @Test
    public void test2201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2201");
        model.Database database7 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database7;
        model.SearchVirtualItem searchVirtualItem9 = new model.SearchVirtualItem(database7);
        model.Login login10 = new model.Login(database7);
        model.SearchClient searchClient11 = model.SearchClient.makeSearchClient(database7);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(searchClient11);
    }

    @Test
    public void test2202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2202");
        model.Database database7 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.SearchClient searchClient8 = model.SearchClient.makeSearchClient(database7);
        java.lang.String str9 = database7.itemPath;
        java.lang.String str10 = database7.getCDFilePath();
        database7.itemPath = "src/Client.csv";
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(searchClient8);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "src/CD.csv" + "'", str10, "src/CD.csv");
    }

    @Test
    public void test2203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2203");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.Student student5 = new model.Student();
        int int6 = student5.ID;
        model.StudentOnlineResources studentOnlineResources7 = new model.StudentOnlineResources((model.Client) student5);
        student5.ID = '#';
        java.lang.String str10 = student5.email;
        newsletterSubscriptionManager3.client = student5;
        model.BuySpecialItems buySpecialItems12 = new model.BuySpecialItems();
        model.Book book13 = null;
        model.CD cD15 = new model.CD("");
        model.Magazine magazine16 = null;
        java.util.Collection<model.Book> bookCollection17 = null;
        model.Book book18 = null;
        model.CD cD19 = null;
        model.Magazine magazine20 = null;
        model.Book[] bookArray21 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList22 = new java.util.ArrayList<model.Book>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList22, bookArray21);
        model.CD[] cDArray24 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList25 = new java.util.ArrayList<model.CD>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList25, cDArray24);
        model.Magazine[] magazineArray27 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList28 = new java.util.ArrayList<model.Magazine>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList28, magazineArray27);
        model.ItemSearchResult itemSearchResult30 = new model.ItemSearchResult(book18, cD19, magazine20, (java.util.Collection<model.Book>) bookList22, (java.util.Collection<model.CD>) cDList25, (java.util.Collection<model.Magazine>) magazineList28);
        model.Book book31 = null;
        model.CD cD32 = null;
        model.Magazine magazine33 = null;
        model.Book[] bookArray34 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList35 = new java.util.ArrayList<model.Book>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList35, bookArray34);
        model.CD[] cDArray37 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList38 = new java.util.ArrayList<model.CD>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList38, cDArray37);
        model.Magazine[] magazineArray40 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList41 = new java.util.ArrayList<model.Magazine>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList41, magazineArray40);
        model.ItemSearchResult itemSearchResult43 = new model.ItemSearchResult(book31, cD32, magazine33, (java.util.Collection<model.Book>) bookList35, (java.util.Collection<model.CD>) cDList38, (java.util.Collection<model.Magazine>) magazineList41);
        itemSearchResult30.similarCD = cDList38;
        model.Book book45 = null;
        model.CD cD46 = null;
        model.Magazine magazine47 = null;
        model.Book[] bookArray48 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList49 = new java.util.ArrayList<model.Book>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList49, bookArray48);
        model.CD[] cDArray51 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList52 = new java.util.ArrayList<model.CD>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList52, cDArray51);
        model.Magazine[] magazineArray54 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList55 = new java.util.ArrayList<model.Magazine>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList55, magazineArray54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult(book45, cD46, magazine47, (java.util.Collection<model.Book>) bookList49, (java.util.Collection<model.CD>) cDList52, (java.util.Collection<model.Magazine>) magazineList55);
        model.ItemSearchResult itemSearchResult58 = new model.ItemSearchResult(book13, cD15, magazine16, bookCollection17, (java.util.Collection<model.CD>) cDList38, (java.util.Collection<model.Magazine>) magazineList55);
        cD15.ID = (short) 10;
        boolean boolean62 = buySpecialItems12.buyAnItem((model.Item) cD15, (double) 0);
        model.PayDebit payDebit63 = new model.PayDebit();
        buySpecialItems12.paymentAPI = payDebit63;
        newsletterSubscriptionManager3.paymentAPI = payDebit63;
        double double66 = payDebit63.amountPay;
        payDebit63.amountPay = (short) 1;
        payDebit63.pay(10.0d);
        payDebit63.pay((double) 20);
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(bookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(cDArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(magazineArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(bookArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(cDArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(magazineArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(bookArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(cDArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(magazineArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
    }

    @Test
    public void test2204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2204");
        model.Database database0 = null;
        model.Register register1 = model.Register.makeRegister(database0);
        model.Faculty faculty2 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection3 = faculty2.courses;
        boolean boolean6 = register1.registerAsStaff((model.Staff) faculty2, "src/Book.csv", "src/Book.csv");
        model.Database database7 = register1.database;
        model.Database database8 = model.Database.database;
        java.util.ArrayList<java.lang.String> strList9 = database8.getAllItems();
        model.Client client11 = database8.getClient("src/Magazine.csv");
        model.Register register12 = model.Register.makeRegister(database8);
        model.Register register13 = model.Register.makeRegister(database8);
        register1.database = database8;
        model.Database database15 = register1.database;
        org.junit.Assert.assertNotNull(register1);
        org.junit.Assert.assertNull(courseCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(client11);
        org.junit.Assert.assertNotNull(register12);
        org.junit.Assert.assertNotNull(register13);
        org.junit.Assert.assertNotNull(database15);
    }

    @Test
    public void test2205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2205");
        model.SearchBorrowedItem searchBorrowedItem0 = model.SearchBorrowedItem.makeSearchBorrowedItem();
        model.Visitor visitor1 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList2 = visitor1.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources3 = new model.StudentOnlineResources((model.Client) visitor1);
        model.RentedItem[] rentedItemArray4 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList5 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList5, rentedItemArray4);
        model.BorrowingManager borrowingManager7 = new model.BorrowingManager(rentedItemList5);
        model.Visitor visitor8 = new model.Visitor();
        visitor8.email = "hi!";
        borrowingManager7.client = visitor8;
        studentOnlineResources3.client = visitor8;
        model.Student student13 = new model.Student();
        int int14 = student13.ID;
        model.StudentOnlineResources studentOnlineResources15 = new model.StudentOnlineResources((model.Client) student13);
        model.VirtualBook virtualBook17 = studentOnlineResources15.searchAccessibleBook("");
        model.CD cD19 = new model.CD("");
        model.Magazine magazine20 = null;
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.Book book34 = null;
        model.CD cD35 = null;
        model.Magazine magazine36 = null;
        model.Book[] bookArray37 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList38 = new java.util.ArrayList<model.Book>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList38, bookArray37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        model.Magazine[] magazineArray43 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList44 = new java.util.ArrayList<model.Magazine>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList44, magazineArray43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book34, cD35, magazine36, (java.util.Collection<model.Book>) bookList38, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList44);
        model.CD[] cDArray47 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList48 = new java.util.ArrayList<model.CD>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList48, cDArray47);
        itemSearchResult46.similarCD = cDList48;
        model.Book book51 = null;
        model.CD cD52 = null;
        model.Magazine magazine53 = null;
        model.Book[] bookArray54 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList55 = new java.util.ArrayList<model.Book>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList55, bookArray54);
        model.CD[] cDArray57 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList58 = new java.util.ArrayList<model.CD>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList58, cDArray57);
        model.Magazine[] magazineArray60 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList61 = new java.util.ArrayList<model.Magazine>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList61, magazineArray60);
        model.ItemSearchResult itemSearchResult63 = new model.ItemSearchResult(book51, cD52, magazine53, (java.util.Collection<model.Book>) bookList55, (java.util.Collection<model.CD>) cDList58, (java.util.Collection<model.Magazine>) magazineList61);
        model.ItemSearchResult itemSearchResult64 = new model.ItemSearchResult((model.Book) virtualBook17, cD19, magazine20, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList48, (java.util.Collection<model.Magazine>) magazineList61);
        java.lang.String str65 = studentOnlineResources3.readVirtualItem((model.VirtualItem) virtualBook17);
        model.Visitor visitor67 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList68 = visitor67.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources69 = new model.StudentOnlineResources((model.Client) visitor67);
        searchBorrowedItem0.addPhyscialItem((model.Item) virtualBook17, "", (model.Client) visitor67);
        java.util.ArrayList<model.VirtualItem> virtualItemList73 = searchBorrowedItem0.searchBorrowedVirtualItem("model.RegistrationFailedException: src/Magazine.csv", "src/Book.csv");
        java.util.ArrayList<model.RentedItem> rentedItemList76 = null; // flaky: searchBorrowedItem0.searchBorrowedItem("model.RentingNotAllowedException: hi!", "src/Client.csv");
// flaky:         searchBorrowedItem0.removeItem("model.RegistrationFailedException: src/Book.csv", "src/Newsletter.csv");
        java.util.ArrayList<model.VirtualItem> virtualItemList82 = searchBorrowedItem0.searchBorrowedVirtualItem("", "src/Magazine.csv");
// flaky:         searchBorrowedItem0.removeItem("model.LoginFailedException: hi!", "model.RentingNotAllowedException: src/Magazine.csv");
// flaky:         searchBorrowedItem0.removeItem("model.RegistrationFailedException: src/Book.csv", "model.RegistrationFailedException: src/Book.csv");
        org.junit.Assert.assertNotNull(searchBorrowedItem0);
        org.junit.Assert.assertNull(virtualBookList2);
        org.junit.Assert.assertNotNull(rentedItemArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(virtualBook17);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(bookArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(magazineArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(cDArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(bookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(cDArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(magazineArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(virtualBookList68);
        org.junit.Assert.assertNotNull(virtualItemList73);
// flaky:         org.junit.Assert.assertNotNull(rentedItemList76);
        org.junit.Assert.assertNotNull(virtualItemList82);
    }

    @Test
    public void test2206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2206");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.Payment payment1 = rentAndReturnSystem0.paymentAPI;
        model.PayMobileWallet payMobileWallet2 = new model.PayMobileWallet();
        payMobileWallet2.amountPay = 100.0f;
        payMobileWallet2.amountPay = (byte) -1;
        rentAndReturnSystem0.paymentAPI = payMobileWallet2;
        model.Payment payment8 = rentAndReturnSystem0.paymentAPI;
        model.Payment payment9 = null;
        rentAndReturnSystem0.paymentAPI = payment9;
        model.Payment payment11 = null;
        rentAndReturnSystem0.paymentAPI = payment11;
        model.RentAndReturnSystem rentAndReturnSystem13 = new model.RentAndReturnSystem();
        model.Payment payment14 = rentAndReturnSystem13.paymentAPI;
        model.PayMobileWallet payMobileWallet15 = new model.PayMobileWallet();
        payMobileWallet15.amountPay = 100.0f;
        payMobileWallet15.amountPay = (byte) -1;
        rentAndReturnSystem13.paymentAPI = payMobileWallet15;
        payMobileWallet15.pay((double) 0);
        rentAndReturnSystem0.paymentAPI = payMobileWallet15;
        model.Student student24 = new model.Student();
        int int25 = student24.ID;
        model.StudentOnlineResources studentOnlineResources26 = new model.StudentOnlineResources((model.Client) student24);
        model.VirtualBook virtualBook28 = studentOnlineResources26.searchAccessibleBook("");
        java.lang.String str29 = virtualBook28.location;
        int int30 = virtualBook28.ID;
        virtualBook28.isBookLost = false;
        java.lang.String str33 = virtualBook28.author;
        virtualBook28.edition = 'a';
        int int36 = virtualBook28.edition;
        virtualBook28.edition = ' ';
        java.util.Calendar calendar39 = virtualBook28.date;
        int int40 = virtualBook28.copiesAvailable;
        model.Faculty faculty41 = new model.Faculty();
        faculty41.username = "hi!";
        java.util.Collection<model.Course> courseCollection44 = null;
        faculty41.courses = courseCollection44;
        java.util.Collection<model.Course> courseCollection46 = faculty41.courses;
        model.Database database54 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str55 = database54.getVirtualBookFilePath();
        model.Database.database = database54;
        java.lang.String str57 = database54.virtualItemFilePath;
        java.lang.String str58 = database54.getBookFilePath();
        database54.itemPath = "src/Magazine.csv";
        model.Login login61 = model.Login.makeLogin(database54);
        boolean boolean63 = database54.addItem("src/Client.csv");
        model.SearchItems searchItems64 = new model.SearchItems(database54);
        model.CD cD66 = searchItems64.getCD("src/Client.csv");
        java.util.Collection<model.Book> bookCollection68 = searchItems64.getSimilarBooks("src/Newsletter.csv");
        faculty41.textbooks = bookCollection68;
        boolean boolean70 = rentAndReturnSystem0.returnAnItem((model.Item) virtualBook28, (model.Client) faculty41);
        org.junit.Assert.assertNull(payment1);
        org.junit.Assert.assertNotNull(payment8);
        org.junit.Assert.assertNull(payment14);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(virtualBook28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 97 + "'", int36 == 97);
        org.junit.Assert.assertNull(calendar39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 20 + "'", int40 == 20);
        org.junit.Assert.assertNull(courseCollection46);
        org.junit.Assert.assertNotNull(database54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "src/VirtualBook.csv" + "'", str55, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "src/Newsletter.csv" + "'", str57, "src/Newsletter.csv");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "src/Book.csv" + "'", str58, "src/Book.csv");
        org.junit.Assert.assertNotNull(login61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(cD66);
        org.junit.Assert.assertNotNull(bookCollection68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    }

    @Test
    public void test2207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2207");
        model.Database database0 = null;
        model.Register register1 = model.Register.makeRegister(database0);
        model.Faculty faculty2 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection3 = faculty2.courses;
        boolean boolean6 = register1.registerAsStaff((model.Staff) faculty2, "src/Book.csv", "src/Book.csv");
        model.Faculty faculty7 = new model.Faculty();
        faculty7.username = "hi!";
        java.lang.String str10 = faculty7.username;
        boolean boolean13 = register1.registerAsStaff((model.Staff) faculty7, "src/CD.csv", "hi!");
        java.util.Collection<model.Course> courseCollection14 = faculty7.courses;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = faculty7.allowedToBorrow();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"model.BorrowingManager.canRent()\" because \"this.borrowManager\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(register1);
        org.junit.Assert.assertNull(courseCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(courseCollection14);
    }

    @Test
    public void test2208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2208");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.PaidNewsletter paidNewsletter4 = null;
        newsletterSubscriptionManager3.subscribeToPaidNewsletter(paidNewsletter4, "");
        model.Student student7 = new model.Student();
        student7.viewMyOnlineResource();
        newsletterSubscriptionManager3.client = student7;
        model.PaidNewsletter paidNewsletter10 = new model.PaidNewsletter();
        model.Student student11 = new model.Student();
        int int12 = student11.ID;
        model.StudentOnlineResources studentOnlineResources13 = new model.StudentOnlineResources((model.Client) student11);
        model.VirtualBook virtualBook15 = studentOnlineResources13.searchAccessibleBook("");
        model.CD cD17 = new model.CD("");
        model.Magazine magazine18 = null;
        model.Book book19 = null;
        model.CD cD20 = null;
        model.Magazine magazine21 = null;
        model.Book[] bookArray22 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList23 = new java.util.ArrayList<model.Book>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList23, bookArray22);
        model.CD[] cDArray25 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList26 = new java.util.ArrayList<model.CD>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList26, cDArray25);
        model.Magazine[] magazineArray28 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList29 = new java.util.ArrayList<model.Magazine>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList29, magazineArray28);
        model.ItemSearchResult itemSearchResult31 = new model.ItemSearchResult(book19, cD20, magazine21, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList29);
        model.Book book32 = null;
        model.CD cD33 = null;
        model.Magazine magazine34 = null;
        model.Book[] bookArray35 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList36 = new java.util.ArrayList<model.Book>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList36, bookArray35);
        model.CD[] cDArray38 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList39 = new java.util.ArrayList<model.CD>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList39, cDArray38);
        model.Magazine[] magazineArray41 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList42 = new java.util.ArrayList<model.Magazine>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList42, magazineArray41);
        model.ItemSearchResult itemSearchResult44 = new model.ItemSearchResult(book32, cD33, magazine34, (java.util.Collection<model.Book>) bookList36, (java.util.Collection<model.CD>) cDList39, (java.util.Collection<model.Magazine>) magazineList42);
        model.CD[] cDArray45 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList46 = new java.util.ArrayList<model.CD>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList46, cDArray45);
        itemSearchResult44.similarCD = cDList46;
        model.Book book49 = null;
        model.CD cD50 = null;
        model.Magazine magazine51 = null;
        model.Book[] bookArray52 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList53 = new java.util.ArrayList<model.Book>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList53, bookArray52);
        model.CD[] cDArray55 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList56 = new java.util.ArrayList<model.CD>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList56, cDArray55);
        model.Magazine[] magazineArray58 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList59 = new java.util.ArrayList<model.Magazine>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList59, magazineArray58);
        model.ItemSearchResult itemSearchResult61 = new model.ItemSearchResult(book49, cD50, magazine51, (java.util.Collection<model.Book>) bookList53, (java.util.Collection<model.CD>) cDList56, (java.util.Collection<model.Magazine>) magazineList59);
        model.ItemSearchResult itemSearchResult62 = new model.ItemSearchResult((model.Book) virtualBook15, cD17, magazine18, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList46, (java.util.Collection<model.Magazine>) magazineList59);
        int int63 = virtualBook15.ID;
        int int64 = virtualBook15.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter65 = null;
        model.PaidNewsletter paidNewsletter66 = null;
        model.VirtualItemSearchResult virtualItemSearchResult67 = new model.VirtualItemSearchResult(virtualBook15, uniProvidedNewsletter65, paidNewsletter66);
        virtualBook15.author = "hi!";
        virtualBook15.showContent();
        boolean boolean71 = paidNewsletter10.equals((java.lang.Object) virtualBook15);
        newsletterSubscriptionManager3.subscribeToPaidNewsletter(paidNewsletter10, "src/Book.csv");
        double double74 = paidNewsletter10.subscriptionPrice;
        double double75 = paidNewsletter10.subscriptionPrice;
        double double76 = paidNewsletter10.subscriptionPrice;
        float float77 = paidNewsletter10.cost;
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(virtualBook15);
        org.junit.Assert.assertNotNull(bookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(magazineArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(bookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(cDArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(magazineArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(bookArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(cDArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(magazineArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 20 + "'", int64 == 20);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + float77 + "' != '" + 0.0f + "'", float77 == 0.0f);
    }

    @Test
    public void test2209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2209");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.RequestForum requestForum1 = model.RequestForum.createRequestForum();
        model.Request request2 = new model.Request();
        request2.title = "";
        java.lang.String str5 = requestForum1.makeARequest(request2);
        model.RequestForum requestForum6 = model.RequestForum.createRequestForum();
        model.RequestForum requestForum7 = model.RequestForum.createRequestForum();
        model.Request request8 = new model.Request();
        request8.title = "";
        java.lang.String str11 = requestForum7.makeARequest(request8);
        int int12 = requestForum6.assessBooksPriority(request8);
        java.lang.String str13 = request8.type;
        java.lang.String str14 = request8.type;
        java.lang.String str15 = requestForum1.makeARequest(request8);
        int int16 = requestForum0.assessBooksPriority(request8);
        model.RequestForum requestForum17 = model.RequestForum.createRequestForum();
        model.RequestForum requestForum18 = model.RequestForum.createRequestForum();
        model.Request request19 = new model.Request();
        request19.title = "";
        java.lang.String str22 = requestForum18.makeARequest(request19);
        int int23 = requestForum17.assessBooksPriority(request19);
        model.LibraryManagementTeam libraryManagementTeam24 = new model.LibraryManagementTeam();
        int int25 = libraryManagementTeam24.ID;
        int int26 = libraryManagementTeam24.accessCode;
        model.Item item27 = null;
        libraryManagementTeam24.addAnItem(item27);
        java.util.ArrayList<model.Item> itemList29 = libraryManagementTeam24.items;
        requestForum17.managementTeam = libraryManagementTeam24;
        model.LibraryManagementTeam libraryManagementTeam31 = requestForum17.managementTeam;
        int int32 = libraryManagementTeam31.accessCode;
        requestForum0.managementTeam = libraryManagementTeam31;
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertNotNull(requestForum1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(requestForum6);
        org.junit.Assert.assertNotNull(requestForum7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(requestForum17);
        org.junit.Assert.assertNotNull(requestForum18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(itemList29);
        org.junit.Assert.assertNotNull(libraryManagementTeam31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
    }

    @Test
    public void test2210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2210");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        java.util.Iterator<model.VirtualItem> virtualItemItor3 = studentOnlineResources2.iterator();
        model.VirtualItem virtualItem4 = null;
        java.lang.String str5 = studentOnlineResources2.readVirtualItem(virtualItem4);
        model.Student student6 = new model.Student();
        int int7 = student6.ID;
        model.StudentOnlineResources studentOnlineResources8 = new model.StudentOnlineResources((model.Client) student6);
        model.VirtualBook virtualBook10 = studentOnlineResources8.searchAccessibleBook("");
        model.CD cD12 = new model.CD("");
        model.Magazine magazine13 = null;
        model.Book book14 = null;
        model.CD cD15 = null;
        model.Magazine magazine16 = null;
        model.Book[] bookArray17 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList18 = new java.util.ArrayList<model.Book>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList18, bookArray17);
        model.CD[] cDArray20 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList21 = new java.util.ArrayList<model.CD>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList21, cDArray20);
        model.Magazine[] magazineArray23 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList24 = new java.util.ArrayList<model.Magazine>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList24, magazineArray23);
        model.ItemSearchResult itemSearchResult26 = new model.ItemSearchResult(book14, cD15, magazine16, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList21, (java.util.Collection<model.Magazine>) magazineList24);
        model.Book book27 = null;
        model.CD cD28 = null;
        model.Magazine magazine29 = null;
        model.Book[] bookArray30 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList31 = new java.util.ArrayList<model.Book>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList31, bookArray30);
        model.CD[] cDArray33 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList34 = new java.util.ArrayList<model.CD>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList34, cDArray33);
        model.Magazine[] magazineArray36 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList37 = new java.util.ArrayList<model.Magazine>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList37, magazineArray36);
        model.ItemSearchResult itemSearchResult39 = new model.ItemSearchResult(book27, cD28, magazine29, (java.util.Collection<model.Book>) bookList31, (java.util.Collection<model.CD>) cDList34, (java.util.Collection<model.Magazine>) magazineList37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        itemSearchResult39.similarCD = cDList41;
        model.Book book44 = null;
        model.CD cD45 = null;
        model.Magazine magazine46 = null;
        model.Book[] bookArray47 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList48 = new java.util.ArrayList<model.Book>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList48, bookArray47);
        model.CD[] cDArray50 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList51 = new java.util.ArrayList<model.CD>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList51, cDArray50);
        model.Magazine[] magazineArray53 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList54 = new java.util.ArrayList<model.Magazine>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList54, magazineArray53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult(book44, cD45, magazine46, (java.util.Collection<model.Book>) bookList48, (java.util.Collection<model.CD>) cDList51, (java.util.Collection<model.Magazine>) magazineList54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult((model.Book) virtualBook10, cD12, magazine13, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList54);
        int int58 = virtualBook10.ID;
        int int59 = virtualBook10.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter60 = null;
        model.PaidNewsletter paidNewsletter61 = null;
        model.VirtualItemSearchResult virtualItemSearchResult62 = new model.VirtualItemSearchResult(virtualBook10, uniProvidedNewsletter60, paidNewsletter61);
        java.lang.String str63 = studentOnlineResources2.readVirtualItem((model.VirtualItem) paidNewsletter61);
        model.UniProvidedNewsletter uniProvidedNewsletter64 = new model.UniProvidedNewsletter();
        java.lang.String str65 = studentOnlineResources2.readVirtualItem((model.VirtualItem) uniProvidedNewsletter64);
        model.Client client66 = studentOnlineResources2.client;
        model.RentedItem[] rentedItemArray67 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList68 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList68, rentedItemArray67);
        model.BorrowingManager borrowingManager70 = new model.BorrowingManager(rentedItemList68);
        boolean boolean71 = borrowingManager70.canRent();
        model.Client client72 = borrowingManager70.client;
        model.Student student73 = new model.Student();
        int int74 = student73.ID;
        model.StudentOnlineResources studentOnlineResources75 = new model.StudentOnlineResources((model.Client) student73);
        model.StudentOnlineResources studentOnlineResources76 = new model.StudentOnlineResources((model.Client) student73);
        model.RentedItem[] rentedItemArray77 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList78 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList78, rentedItemArray77);
        model.BorrowingManager borrowingManager80 = new model.BorrowingManager(rentedItemList78);
        model.Visitor visitor81 = new model.Visitor();
        visitor81.email = "hi!";
        borrowingManager80.client = visitor81;
        studentOnlineResources76.client = visitor81;
        model.Client client86 = studentOnlineResources76.client;
        borrowingManager70.client = client86;
        client86.email = "src/CD.csv";
        studentOnlineResources2.client = client86;
        model.VirtualBook virtualBook92 = studentOnlineResources2.searchAccessibleBook("src/VirtualBook.csv");
        java.time.LocalDate localDate93 = null;
        // The following exception was thrown during execution in test generation
        try {
            model.RentedItem rentedItem94 = new model.RentedItem((model.Item) virtualBook92, localDate93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.format(java.time.format.DateTimeFormatter)\" because \"borrowDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(virtualItemItor3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(virtualBook10);
        org.junit.Assert.assertNotNull(bookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(cDArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(magazineArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(bookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(magazineArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(bookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(cDArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(magazineArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 20 + "'", int59 == 20);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(client66);
        org.junit.Assert.assertNotNull(rentedItemArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(client72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(rentedItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(client86);
        org.junit.Assert.assertNotNull(virtualBook92);
    }

    @Test
    public void test2211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2211");
        model.LibraryManagementTeam libraryManagementTeam0 = new model.LibraryManagementTeam();
        model.Student student1 = new model.Student();
        int int2 = student1.ID;
        model.StudentOnlineResources studentOnlineResources3 = new model.StudentOnlineResources((model.Client) student1);
        model.VirtualBook virtualBook5 = studentOnlineResources3.searchAccessibleBook("");
        model.CD cD7 = new model.CD("");
        model.Magazine magazine8 = null;
        model.Book book9 = null;
        model.CD cD10 = null;
        model.Magazine magazine11 = null;
        model.Book[] bookArray12 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList13 = new java.util.ArrayList<model.Book>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList13, bookArray12);
        model.CD[] cDArray15 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList16 = new java.util.ArrayList<model.CD>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList16, cDArray15);
        model.Magazine[] magazineArray18 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList19 = new java.util.ArrayList<model.Magazine>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList19, magazineArray18);
        model.ItemSearchResult itemSearchResult21 = new model.ItemSearchResult(book9, cD10, magazine11, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList16, (java.util.Collection<model.Magazine>) magazineList19);
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        model.CD[] cDArray35 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList36 = new java.util.ArrayList<model.CD>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList36, cDArray35);
        itemSearchResult34.similarCD = cDList36;
        model.Book book39 = null;
        model.CD cD40 = null;
        model.Magazine magazine41 = null;
        model.Book[] bookArray42 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList43 = new java.util.ArrayList<model.Book>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList43, bookArray42);
        model.CD[] cDArray45 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList46 = new java.util.ArrayList<model.CD>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList46, cDArray45);
        model.Magazine[] magazineArray48 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList49 = new java.util.ArrayList<model.Magazine>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList49, magazineArray48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult(book39, cD40, magazine41, (java.util.Collection<model.Book>) bookList43, (java.util.Collection<model.CD>) cDList46, (java.util.Collection<model.Magazine>) magazineList49);
        model.ItemSearchResult itemSearchResult52 = new model.ItemSearchResult((model.Book) virtualBook5, cD7, magazine8, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList36, (java.util.Collection<model.Magazine>) magazineList49);
        int int53 = virtualBook5.ID;
        virtualBook5.ISBN = "hi!";
        int int56 = virtualBook5.ID;
        model.VirtualItemContent virtualItemContent58 = new model.VirtualItemContent("hi!");
        virtualBook5.content = virtualItemContent58;
        java.lang.String str60 = virtualBook5.ISBN;
        virtualBook5.isBookLost = true;
        model.VirtualItemContent virtualItemContent63 = virtualBook5.content;
        libraryManagementTeam0.enableAnItem((model.Item) virtualBook5);
        model.Student student65 = new model.Student();
        int int66 = student65.ID;
        model.StudentOnlineResources studentOnlineResources67 = new model.StudentOnlineResources((model.Client) student65);
        model.VirtualBook virtualBook69 = studentOnlineResources67.searchAccessibleBook("");
        virtualBook69.ID = 20;
        virtualBook69.ID = (short) 100;
        boolean boolean74 = virtualBook69.canBePurchased;
        virtualBook69.isBookLost = false;
        virtualBook69.ISBN = "model.RegistrationFailedException: ";
        virtualBook69.ID = 0;
        libraryManagementTeam0.disableAnItem((model.Item) virtualBook69);
        virtualBook69.ISBN = "model.RentingNotAllowedException: ";
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(virtualBook5);
        org.junit.Assert.assertNotNull(bookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cDArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(magazineArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(cDArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(bookArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(cDArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(magazineArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertNotNull(virtualItemContent63);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(virtualBook69);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test2212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2212");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.Database.database = database7;
        java.lang.String str10 = database7.virtualItemFilePath;
        java.lang.String str11 = database7.getCDFilePath();
        java.lang.String str12 = database7.getBookFilePath();
        model.SearchVirtualItem searchVirtualItem13 = new model.SearchVirtualItem(database7);
        model.PaidNewsletter paidNewsletter15 = searchVirtualItem13.getPaidNewsletter("hi!");
        model.VirtualItemSearchResult virtualItemSearchResult17 = searchVirtualItem13.searchVirtualItem("hi!");
        model.PaidNewsletter paidNewsletter18 = virtualItemSearchResult17.paidNewsletter;
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "src/Newsletter.csv" + "'", str10, "src/Newsletter.csv");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "src/CD.csv" + "'", str11, "src/CD.csv");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "src/Book.csv" + "'", str12, "src/Book.csv");
        org.junit.Assert.assertNull(paidNewsletter15);
        org.junit.Assert.assertNotNull(virtualItemSearchResult17);
        org.junit.Assert.assertNull(paidNewsletter18);
    }

    @Test
    public void test2213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2213");
        model.Magazine magazine1 = new model.Magazine("model.LoginFailedException: hi!");
    }

    @Test
    public void test2214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2214");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        model.LibraryManagementTeam libraryManagementTeam54 = new model.LibraryManagementTeam();
        libraryManagementTeam54.accessCode = (byte) 10;
        java.util.ArrayList<model.Item> itemList57 = libraryManagementTeam54.items;
        boolean boolean58 = virtualBook4.equals((java.lang.Object) libraryManagementTeam54);
        java.lang.String str59 = virtualBook4.title;
        virtualBook4.edition = (-1);
        int int62 = virtualBook4.edition;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertNotNull(itemList57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
    }

    @Test
    public void test2215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2215");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        virtualBook4.ISBN = "hi!";
        int int55 = virtualBook4.ID;
        model.VirtualItemContent virtualItemContent57 = new model.VirtualItemContent("hi!");
        virtualBook4.content = virtualItemContent57;
        virtualBook4.ISBN = "src/Client.csv";
        virtualBook4.ID = (byte) 100;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
    }

    @Test
    public void test2216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2216");
        model.LibraryManagementTeam libraryManagementTeam0 = new model.LibraryManagementTeam();
        libraryManagementTeam0.accessCode = (short) 10;
        java.util.Collection<model.Request> requestCollection3 = libraryManagementTeam0.bookRequests;
        model.Student student4 = new model.Student();
        int int5 = student4.ID;
        model.StudentOnlineResources studentOnlineResources6 = new model.StudentOnlineResources((model.Client) student4);
        model.VirtualBook virtualBook8 = studentOnlineResources6.searchAccessibleBook("");
        model.VirtualItemContent virtualItemContent9 = virtualBook8.content;
        model.Student student10 = new model.Student();
        int int11 = student10.ID;
        model.StudentOnlineResources studentOnlineResources12 = new model.StudentOnlineResources((model.Client) student10);
        model.VirtualBook virtualBook14 = studentOnlineResources12.searchAccessibleBook("");
        model.CD cD16 = new model.CD("");
        model.Magazine magazine17 = null;
        model.Book book18 = null;
        model.CD cD19 = null;
        model.Magazine magazine20 = null;
        model.Book[] bookArray21 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList22 = new java.util.ArrayList<model.Book>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList22, bookArray21);
        model.CD[] cDArray24 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList25 = new java.util.ArrayList<model.CD>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList25, cDArray24);
        model.Magazine[] magazineArray27 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList28 = new java.util.ArrayList<model.Magazine>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList28, magazineArray27);
        model.ItemSearchResult itemSearchResult30 = new model.ItemSearchResult(book18, cD19, magazine20, (java.util.Collection<model.Book>) bookList22, (java.util.Collection<model.CD>) cDList25, (java.util.Collection<model.Magazine>) magazineList28);
        model.Book book31 = null;
        model.CD cD32 = null;
        model.Magazine magazine33 = null;
        model.Book[] bookArray34 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList35 = new java.util.ArrayList<model.Book>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList35, bookArray34);
        model.CD[] cDArray37 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList38 = new java.util.ArrayList<model.CD>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList38, cDArray37);
        model.Magazine[] magazineArray40 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList41 = new java.util.ArrayList<model.Magazine>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList41, magazineArray40);
        model.ItemSearchResult itemSearchResult43 = new model.ItemSearchResult(book31, cD32, magazine33, (java.util.Collection<model.Book>) bookList35, (java.util.Collection<model.CD>) cDList38, (java.util.Collection<model.Magazine>) magazineList41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        itemSearchResult43.similarCD = cDList45;
        model.Book book48 = null;
        model.CD cD49 = null;
        model.Magazine magazine50 = null;
        model.Book[] bookArray51 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList52 = new java.util.ArrayList<model.Book>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList52, bookArray51);
        model.CD[] cDArray54 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList55 = new java.util.ArrayList<model.CD>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList55, cDArray54);
        model.Magazine[] magazineArray57 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList58 = new java.util.ArrayList<model.Magazine>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList58, magazineArray57);
        model.ItemSearchResult itemSearchResult60 = new model.ItemSearchResult(book48, cD49, magazine50, (java.util.Collection<model.Book>) bookList52, (java.util.Collection<model.CD>) cDList55, (java.util.Collection<model.Magazine>) magazineList58);
        model.ItemSearchResult itemSearchResult61 = new model.ItemSearchResult((model.Book) virtualBook14, cD16, magazine17, (java.util.Collection<model.Book>) bookList22, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList58);
        int int62 = virtualBook14.ID;
        int int63 = virtualBook14.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter64 = null;
        model.PaidNewsletter paidNewsletter65 = null;
        model.VirtualItemSearchResult virtualItemSearchResult66 = new model.VirtualItemSearchResult(virtualBook14, uniProvidedNewsletter64, paidNewsletter65);
        model.PaidNewsletter paidNewsletter67 = virtualItemSearchResult66.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter68 = new model.UniProvidedNewsletter();
        virtualItemSearchResult66.setUniNewsletter(uniProvidedNewsletter68);
        java.lang.String str70 = uniProvidedNewsletter68.title;
        model.PaidNewsletter paidNewsletter71 = null;
        model.VirtualItemSearchResult virtualItemSearchResult72 = new model.VirtualItemSearchResult(virtualBook8, uniProvidedNewsletter68, paidNewsletter71);
        model.VirtualItemContent virtualItemContent74 = new model.VirtualItemContent("hi!");
        java.lang.String str75 = virtualItemContent74.link;
        java.lang.String str77 = virtualItemContent74.getContent("");
        java.lang.String str79 = virtualItemContent74.getContent("model.RegistrationFailedException: ");
        java.lang.String str80 = virtualItemContent74.link;
        virtualBook8.content = virtualItemContent74;
        java.lang.String str82 = virtualBook8.title;
        java.lang.String str83 = virtualBook8.location;
        java.lang.String str84 = virtualBook8.author;
        libraryManagementTeam0.disableAnItem((model.Item) virtualBook8);
        libraryManagementTeam0.accessCode = (short) 10;
        org.junit.Assert.assertNull(requestCollection3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(virtualBook8);
        org.junit.Assert.assertNull(virtualItemContent9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(virtualBook14);
        org.junit.Assert.assertNotNull(bookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(cDArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(magazineArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(bookArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(cDArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(magazineArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(bookArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(cDArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(magazineArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 20 + "'", int63 == 20);
        org.junit.Assert.assertNull(paidNewsletter67);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!" + "'", str77, "hi!");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNull(str84);
    }

    @Test
    public void test2217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2217");
        model.Database database0 = null;
        model.Register register1 = model.Register.makeRegister(database0);
        model.Faculty faculty2 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection3 = faculty2.courses;
        boolean boolean6 = register1.registerAsStaff((model.Staff) faculty2, "src/Book.csv", "src/Book.csv");
        model.Database database7 = model.Database.database;
        model.Student student8 = new model.Student();
        int int9 = student8.ID;
        model.StudentOnlineResources studentOnlineResources10 = new model.StudentOnlineResources((model.Client) student8);
        student8.ID = '#';
        database7.addClient((model.Client) student8);
        student8.email = "hi!";
        boolean boolean18 = register1.registerAsStaff((model.Staff) student8, "src/CD.csv", "src/Book.csv");
        model.Database database26 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str27 = database26.getVirtualBookFilePath();
        register1.database = database26;
        model.Database database36 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str37 = database36.getVirtualBookFilePath();
        model.Database.database = database36;
        register1.database = database36;
        model.Database database47 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.SearchVirtualItem searchVirtualItem48 = new model.SearchVirtualItem(database47);
        int int49 = database47.getRandomID();
        model.Database.database = database47;
        register1.database = database47;
        model.Login login52 = model.Login.makeLogin(database47);
        model.Database database53 = login52.db;
        model.Client client55 = database53.getClient("");
        org.junit.Assert.assertNotNull(register1);
        org.junit.Assert.assertNull(courseCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "src/VirtualBook.csv" + "'", str27, "src/VirtualBook.csv");
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "src/VirtualBook.csv" + "'", str37, "src/VirtualBook.csv");
        org.junit.Assert.assertNotNull(database47);
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 6167750 + "'", int49 == 6167750);
        org.junit.Assert.assertNotNull(login52);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(client55);
    }

    @Test
    public void test2218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2218");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getBookFilePath();
        model.SearchClient searchClient9 = model.SearchClient.makeSearchClient(database7);
        model.ValidateRegistration validateRegistration10 = new model.ValidateRegistration();
        model.Student student11 = new model.Student();
        student11.viewMyOnlineResource();
        boolean boolean13 = validateRegistration10.validateStaffRegistration((model.Staff) student11);
        model.RentAndReturnSystem rentAndReturnSystem14 = new model.RentAndReturnSystem();
        model.Book book15 = null;
        model.CD cD17 = new model.CD("");
        model.Magazine magazine18 = null;
        java.util.Collection<model.Book> bookCollection19 = null;
        model.Book book20 = null;
        model.CD cD21 = null;
        model.Magazine magazine22 = null;
        model.Book[] bookArray23 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList24 = new java.util.ArrayList<model.Book>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList24, bookArray23);
        model.CD[] cDArray26 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList27 = new java.util.ArrayList<model.CD>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList27, cDArray26);
        model.Magazine[] magazineArray29 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList30 = new java.util.ArrayList<model.Magazine>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList30, magazineArray29);
        model.ItemSearchResult itemSearchResult32 = new model.ItemSearchResult(book20, cD21, magazine22, (java.util.Collection<model.Book>) bookList24, (java.util.Collection<model.CD>) cDList27, (java.util.Collection<model.Magazine>) magazineList30);
        model.Book book33 = null;
        model.CD cD34 = null;
        model.Magazine magazine35 = null;
        model.Book[] bookArray36 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList37 = new java.util.ArrayList<model.Book>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList37, bookArray36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        model.Magazine[] magazineArray42 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList43 = new java.util.ArrayList<model.Magazine>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList43, magazineArray42);
        model.ItemSearchResult itemSearchResult45 = new model.ItemSearchResult(book33, cD34, magazine35, (java.util.Collection<model.Book>) bookList37, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList43);
        itemSearchResult32.similarCD = cDList40;
        model.Book book47 = null;
        model.CD cD48 = null;
        model.Magazine magazine49 = null;
        model.Book[] bookArray50 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList51 = new java.util.ArrayList<model.Book>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList51, bookArray50);
        model.CD[] cDArray53 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList54 = new java.util.ArrayList<model.CD>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList54, cDArray53);
        model.Magazine[] magazineArray56 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList57 = new java.util.ArrayList<model.Magazine>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList57, magazineArray56);
        model.ItemSearchResult itemSearchResult59 = new model.ItemSearchResult(book47, cD48, magazine49, (java.util.Collection<model.Book>) bookList51, (java.util.Collection<model.CD>) cDList54, (java.util.Collection<model.Magazine>) magazineList57);
        model.ItemSearchResult itemSearchResult60 = new model.ItemSearchResult(book15, cD17, magazine18, bookCollection19, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList57);
        cD17.ID = (short) 10;
        cD17.canBePurchased = false;
        boolean boolean65 = cD17.canBePurchased;
        model.Faculty faculty66 = new model.Faculty();
        boolean boolean67 = rentAndReturnSystem14.rentAnItem((model.Item) cD17, (model.Client) faculty66);
        java.lang.String str68 = faculty66.faculty;
        model.RentedItem[] rentedItemArray69 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList70 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList70, rentedItemArray69);
        model.BorrowingManager borrowingManager72 = new model.BorrowingManager(rentedItemList70);
        boolean boolean73 = borrowingManager72.canRent();
        model.Client client74 = borrowingManager72.client;
        faculty66.borrowManager = borrowingManager72;
        java.util.Collection<model.Course> courseCollection76 = faculty66.courses;
        model.NewsletterSubscriptionManager newsletterSubscriptionManager77 = faculty66.newsletterManager;
        boolean boolean78 = validateRegistration10.validateStaffRegistration((model.Staff) faculty66);
        database7.addClient((model.Client) faculty66);
        java.lang.String str80 = database7.getClientFilePath();
        int int81 = database7.getRandomID();
        java.lang.String str82 = database7.getMagazineFilePath();
        model.SearchItems searchItems83 = new model.SearchItems(database7);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/Book.csv" + "'", str8, "src/Book.csv");
        org.junit.Assert.assertNotNull(searchClient9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(bookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(cDArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(magazineArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(bookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(magazineArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(bookArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(cDArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(magazineArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(rentedItemArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(client74);
        org.junit.Assert.assertNull(courseCollection76);
        org.junit.Assert.assertNull(newsletterSubscriptionManager77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "src/Client.csv" + "'", str80, "src/Client.csv");
// flaky:         org.junit.Assert.assertTrue("'" + int81 + "' != '" + 5879187 + "'", int81 == 5879187);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "src/Magazine.csv" + "'", str82, "src/Magazine.csv");
    }

    @Test
    public void test2219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2219");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "src/Book.csv", "src/CD.csv" };
        model.Item item8 = model.ItemFactory.makeItem("", strArray7);
        model.Item item9 = model.ItemFactory.makeItem("model.RegistrationFailedException: src/Magazine.csv", strArray7);
        model.Item item10 = model.ItemFactory.makeItem("model.RegistrationFailedException: src/Magazine.csv", strArray7);
        model.Item item11 = model.ItemFactory.makeItem("model.LoginFailedException: hi!", strArray7);
        // The following exception was thrown during execution in test generation
        try {
            model.Client client12 = model.ClientFactory.makeClient(strArray7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNull(item8);
        org.junit.Assert.assertNull(item9);
        org.junit.Assert.assertNull(item10);
        org.junit.Assert.assertNull(item11);
    }

    @Test
    public void test2220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2220");
        model.Visitor visitor0 = new model.Visitor();
        model.StudentOnlineResources studentOnlineResources1 = new model.StudentOnlineResources((model.Client) visitor0);
        model.VirtualBook virtualBook3 = studentOnlineResources1.searchAccessibleBook("src/Book.csv");
        model.ItemManagement itemManagement4 = new model.ItemManagement();
        model.Database database5 = null;
        itemManagement4.database = database5;
        model.Student student7 = new model.Student();
        int int8 = student7.ID;
        model.StudentOnlineResources studentOnlineResources9 = new model.StudentOnlineResources((model.Client) student7);
        model.VirtualBook virtualBook11 = studentOnlineResources9.searchAccessibleBook("");
        itemManagement4.disableAnItem((model.Item) virtualBook11);
        model.Item item14 = itemManagement4.selectAnItemFromDatabase((int) '#');
        model.ItemManagement itemManagement15 = new model.ItemManagement();
        model.Database database16 = null;
        itemManagement15.database = database16;
        model.Student student18 = new model.Student();
        int int19 = student18.ID;
        model.StudentOnlineResources studentOnlineResources20 = new model.StudentOnlineResources((model.Client) student18);
        model.VirtualBook virtualBook22 = studentOnlineResources20.searchAccessibleBook("");
        itemManagement15.disableAnItem((model.Item) virtualBook22);
        itemManagement4.disableAnItem((model.Item) virtualBook22);
        model.Database database25 = itemManagement4.database;
        model.RentAndReturnSystem rentAndReturnSystem26 = new model.RentAndReturnSystem();
        model.Payment payment27 = rentAndReturnSystem26.paymentAPI;
        model.PayMobileWallet payMobileWallet28 = new model.PayMobileWallet();
        payMobileWallet28.amountPay = 100.0f;
        payMobileWallet28.amountPay = (byte) -1;
        rentAndReturnSystem26.paymentAPI = payMobileWallet28;
        model.ItemManagement itemManagement34 = new model.ItemManagement();
        model.Database database35 = null;
        itemManagement34.database = database35;
        model.Student student37 = new model.Student();
        int int38 = student37.ID;
        model.StudentOnlineResources studentOnlineResources39 = new model.StudentOnlineResources((model.Client) student37);
        model.VirtualBook virtualBook41 = studentOnlineResources39.searchAccessibleBook("");
        itemManagement34.disableAnItem((model.Item) virtualBook41);
        model.Item item44 = itemManagement34.selectAnItemFromDatabase((int) '#');
        model.ItemManagement itemManagement45 = new model.ItemManagement();
        model.Database database46 = null;
        itemManagement45.database = database46;
        model.Student student48 = new model.Student();
        int int49 = student48.ID;
        model.StudentOnlineResources studentOnlineResources50 = new model.StudentOnlineResources((model.Client) student48);
        model.VirtualBook virtualBook52 = studentOnlineResources50.searchAccessibleBook("");
        itemManagement45.disableAnItem((model.Item) virtualBook52);
        itemManagement34.disableAnItem((model.Item) virtualBook52);
        int int55 = virtualBook52.copiesAvailable;
        model.Visitor visitor56 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList57 = visitor56.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources58 = new model.StudentOnlineResources((model.Client) visitor56);
        model.RentedItem[] rentedItemArray59 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList60 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList60, rentedItemArray59);
        model.BorrowingManager borrowingManager62 = new model.BorrowingManager(rentedItemList60);
        model.Visitor visitor63 = new model.Visitor();
        visitor63.email = "hi!";
        borrowingManager62.client = visitor63;
        studentOnlineResources58.client = visitor63;
        visitor63.username = "hi!";
        boolean boolean70 = rentAndReturnSystem26.rentAnItem((model.Item) virtualBook52, (model.Client) visitor63);
        model.VirtualItemContent virtualItemContent71 = virtualBook52.content;
        itemManagement4.addAnItem((model.Item) virtualBook52);
        java.lang.String str73 = studentOnlineResources1.readVirtualItem((model.VirtualItem) virtualBook52);
        org.junit.Assert.assertNotNull(virtualBook3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(virtualBook11);
        org.junit.Assert.assertNull(item14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(virtualBook22);
        org.junit.Assert.assertNull(database25);
        org.junit.Assert.assertNull(payment27);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(virtualBook41);
        org.junit.Assert.assertNull(item44);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(virtualBook52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 20 + "'", int55 == 20);
        org.junit.Assert.assertNull(virtualBookList57);
        org.junit.Assert.assertNotNull(rentedItemArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(virtualItemContent71);
        org.junit.Assert.assertNull(str73);
    }

    @Test
    public void test2221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2221");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.VirtualItemContent virtualItemContent5 = virtualBook4.content;
        model.Student student6 = new model.Student();
        int int7 = student6.ID;
        model.StudentOnlineResources studentOnlineResources8 = new model.StudentOnlineResources((model.Client) student6);
        model.VirtualBook virtualBook10 = studentOnlineResources8.searchAccessibleBook("");
        model.CD cD12 = new model.CD("");
        model.Magazine magazine13 = null;
        model.Book book14 = null;
        model.CD cD15 = null;
        model.Magazine magazine16 = null;
        model.Book[] bookArray17 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList18 = new java.util.ArrayList<model.Book>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList18, bookArray17);
        model.CD[] cDArray20 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList21 = new java.util.ArrayList<model.CD>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList21, cDArray20);
        model.Magazine[] magazineArray23 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList24 = new java.util.ArrayList<model.Magazine>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList24, magazineArray23);
        model.ItemSearchResult itemSearchResult26 = new model.ItemSearchResult(book14, cD15, magazine16, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList21, (java.util.Collection<model.Magazine>) magazineList24);
        model.Book book27 = null;
        model.CD cD28 = null;
        model.Magazine magazine29 = null;
        model.Book[] bookArray30 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList31 = new java.util.ArrayList<model.Book>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList31, bookArray30);
        model.CD[] cDArray33 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList34 = new java.util.ArrayList<model.CD>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList34, cDArray33);
        model.Magazine[] magazineArray36 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList37 = new java.util.ArrayList<model.Magazine>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList37, magazineArray36);
        model.ItemSearchResult itemSearchResult39 = new model.ItemSearchResult(book27, cD28, magazine29, (java.util.Collection<model.Book>) bookList31, (java.util.Collection<model.CD>) cDList34, (java.util.Collection<model.Magazine>) magazineList37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        itemSearchResult39.similarCD = cDList41;
        model.Book book44 = null;
        model.CD cD45 = null;
        model.Magazine magazine46 = null;
        model.Book[] bookArray47 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList48 = new java.util.ArrayList<model.Book>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList48, bookArray47);
        model.CD[] cDArray50 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList51 = new java.util.ArrayList<model.CD>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList51, cDArray50);
        model.Magazine[] magazineArray53 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList54 = new java.util.ArrayList<model.Magazine>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList54, magazineArray53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult(book44, cD45, magazine46, (java.util.Collection<model.Book>) bookList48, (java.util.Collection<model.CD>) cDList51, (java.util.Collection<model.Magazine>) magazineList54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult((model.Book) virtualBook10, cD12, magazine13, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList54);
        int int58 = virtualBook10.ID;
        int int59 = virtualBook10.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter60 = null;
        model.PaidNewsletter paidNewsletter61 = null;
        model.VirtualItemSearchResult virtualItemSearchResult62 = new model.VirtualItemSearchResult(virtualBook10, uniProvidedNewsletter60, paidNewsletter61);
        model.PaidNewsletter paidNewsletter63 = virtualItemSearchResult62.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter64 = new model.UniProvidedNewsletter();
        virtualItemSearchResult62.setUniNewsletter(uniProvidedNewsletter64);
        java.lang.String str66 = uniProvidedNewsletter64.title;
        model.PaidNewsletter paidNewsletter67 = null;
        model.VirtualItemSearchResult virtualItemSearchResult68 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter64, paidNewsletter67);
        model.VirtualBook virtualBook69 = virtualItemSearchResult68.virtualBook;
        model.PaidNewsletter paidNewsletter70 = new model.PaidNewsletter();
        virtualItemSearchResult68.setPaidNewsletter(paidNewsletter70);
        paidNewsletter70.subscriptionPrice = (-1.0f);
        paidNewsletter70.cost = 0.0f;
        double double76 = paidNewsletter70.subscriptionPrice;
        paidNewsletter70.subscriptionPrice = 100.0f;
        double double79 = paidNewsletter70.subscriptionPrice;
        double double80 = paidNewsletter70.subscriptionPrice;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNull(virtualItemContent5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(virtualBook10);
        org.junit.Assert.assertNotNull(bookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(cDArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(magazineArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(bookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(magazineArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(bookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(cDArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(magazineArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 20 + "'", int59 == 20);
        org.junit.Assert.assertNull(paidNewsletter63);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(virtualBook69);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-1.0d) + "'", double76 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 100.0d + "'", double79 == 100.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 100.0d + "'", double80 == 100.0d);
    }

    @Test
    public void test2222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2222");
        model.Faculty faculty0 = new model.Faculty();
        java.lang.String str1 = faculty0.faculty;
        java.lang.String str2 = faculty0.faculty;
        model.Book book3 = null;
        model.CD cD4 = null;
        model.Magazine magazine5 = null;
        model.Book[] bookArray6 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList7 = new java.util.ArrayList<model.Book>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList7, bookArray6);
        model.CD[] cDArray9 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList10 = new java.util.ArrayList<model.CD>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList10, cDArray9);
        model.Magazine[] magazineArray12 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList13 = new java.util.ArrayList<model.Magazine>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList13, magazineArray12);
        model.ItemSearchResult itemSearchResult15 = new model.ItemSearchResult(book3, cD4, magazine5, (java.util.Collection<model.Book>) bookList7, (java.util.Collection<model.CD>) cDList10, (java.util.Collection<model.Magazine>) magazineList13);
        model.CD[] cDArray16 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList17 = new java.util.ArrayList<model.CD>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList17, cDArray16);
        itemSearchResult15.similarCD = cDList17;
        model.Book book20 = null;
        itemSearchResult15.book = book20;
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        itemSearchResult15.similarBooks = bookList26;
        faculty0.textbooks = bookList26;
        java.util.Collection<model.Course> courseCollection37 = faculty0.courses;
        java.util.ArrayList<model.VirtualBook> virtualBookList38 = faculty0.virtualBooksAvailable;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(bookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(cDArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(magazineArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cDArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(courseCollection37);
        org.junit.Assert.assertNull(virtualBookList38);
    }

    @Test
    public void test2223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2223");
        model.ItemManagement itemManagement0 = new model.ItemManagement();
        model.Item item2 = itemManagement0.selectAnItemFromDatabase((int) (short) 0);
        model.Database database3 = model.Database.database;
        model.Student student4 = new model.Student();
        int int5 = student4.ID;
        model.StudentOnlineResources studentOnlineResources6 = new model.StudentOnlineResources((model.Client) student4);
        student4.ID = '#';
        database3.addClient((model.Client) student4);
        itemManagement0.database = database3;
        model.Database database11 = itemManagement0.database;
        model.Database database12 = itemManagement0.database;
        model.VirtualBook virtualBook14 = new model.VirtualBook("src/Magazine.csv");
        model.VirtualItemContent virtualItemContent16 = new model.VirtualItemContent("hi!");
        java.lang.String str17 = virtualItemContent16.link;
        java.lang.String str19 = virtualItemContent16.getContent("");
        java.lang.String str21 = virtualItemContent16.getContent("model.RegistrationFailedException: ");
        java.lang.String str22 = virtualItemContent16.link;
        java.lang.String str24 = virtualItemContent16.getContent("hi!");
        virtualBook14.content = virtualItemContent16;
        itemManagement0.enableAnItem((model.Item) virtualBook14);
        model.LibraryManagementTeam libraryManagementTeam27 = new model.LibraryManagementTeam();
        int int28 = libraryManagementTeam27.ID;
        int int29 = libraryManagementTeam27.accessCode;
        model.ItemManagement itemManagement30 = new model.ItemManagement();
        libraryManagementTeam27.itemManagement = itemManagement30;
        model.Book book32 = null;
        model.CD cD34 = new model.CD("");
        model.Magazine magazine35 = null;
        java.util.Collection<model.Book> bookCollection36 = null;
        model.Book book37 = null;
        model.CD cD38 = null;
        model.Magazine magazine39 = null;
        model.Book[] bookArray40 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList41 = new java.util.ArrayList<model.Book>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList41, bookArray40);
        model.CD[] cDArray43 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList44 = new java.util.ArrayList<model.CD>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList44, cDArray43);
        model.Magazine[] magazineArray46 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList47 = new java.util.ArrayList<model.Magazine>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList47, magazineArray46);
        model.ItemSearchResult itemSearchResult49 = new model.ItemSearchResult(book37, cD38, magazine39, (java.util.Collection<model.Book>) bookList41, (java.util.Collection<model.CD>) cDList44, (java.util.Collection<model.Magazine>) magazineList47);
        model.Book book50 = null;
        model.CD cD51 = null;
        model.Magazine magazine52 = null;
        model.Book[] bookArray53 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList54 = new java.util.ArrayList<model.Book>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList54, bookArray53);
        model.CD[] cDArray56 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList57 = new java.util.ArrayList<model.CD>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList57, cDArray56);
        model.Magazine[] magazineArray59 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList60 = new java.util.ArrayList<model.Magazine>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList60, magazineArray59);
        model.ItemSearchResult itemSearchResult62 = new model.ItemSearchResult(book50, cD51, magazine52, (java.util.Collection<model.Book>) bookList54, (java.util.Collection<model.CD>) cDList57, (java.util.Collection<model.Magazine>) magazineList60);
        itemSearchResult49.similarCD = cDList57;
        model.Book book64 = null;
        model.CD cD65 = null;
        model.Magazine magazine66 = null;
        model.Book[] bookArray67 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList68 = new java.util.ArrayList<model.Book>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList68, bookArray67);
        model.CD[] cDArray70 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList71 = new java.util.ArrayList<model.CD>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList71, cDArray70);
        model.Magazine[] magazineArray73 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList74 = new java.util.ArrayList<model.Magazine>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList74, magazineArray73);
        model.ItemSearchResult itemSearchResult76 = new model.ItemSearchResult(book64, cD65, magazine66, (java.util.Collection<model.Book>) bookList68, (java.util.Collection<model.CD>) cDList71, (java.util.Collection<model.Magazine>) magazineList74);
        model.ItemSearchResult itemSearchResult77 = new model.ItemSearchResult(book32, cD34, magazine35, bookCollection36, (java.util.Collection<model.CD>) cDList57, (java.util.Collection<model.Magazine>) magazineList74);
        cD34.ID = (short) 10;
        cD34.canBePurchased = false;
        boolean boolean82 = cD34.canBePurchased;
        itemManagement30.addAnItem((model.Item) cD34);
        itemManagement0.disableAnItem((model.Item) cD34);
        model.Magazine magazine86 = new model.Magazine("");
        java.util.Calendar calendar87 = magazine86.date;
        itemManagement0.addAnItem((model.Item) magazine86);
        magazine86.author = "model.RentingNotAllowedException: hi!";
        org.junit.Assert.assertNull(item2);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(bookArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(cDArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(magazineArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(bookArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(cDArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(magazineArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(bookArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(cDArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(magazineArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(calendar87);
    }

    @Test
    public void test2224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2224");
        model.Database database7 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database7;
        model.SearchVirtualItem searchVirtualItem9 = new model.SearchVirtualItem(database7);
        model.UniProvidedNewsletter uniProvidedNewsletter11 = searchVirtualItem9.getUniNewsletter("");
        model.VirtualBook virtualBook13 = searchVirtualItem9.getVirtualBook("model.RegistrationFailedException: src/Book.csv");
        model.UniProvidedNewsletter uniProvidedNewsletter15 = searchVirtualItem9.getUniNewsletter("src/Book.csv");
        model.VirtualItemSearchResult virtualItemSearchResult17 = searchVirtualItem9.searchVirtualItem("model.RegistrationFailedException: src/Book.csv");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNull(uniProvidedNewsletter11);
        org.junit.Assert.assertNull(virtualBook13);
        org.junit.Assert.assertNull(uniProvidedNewsletter15);
        org.junit.Assert.assertNotNull(virtualItemSearchResult17);
    }

    @Test
    public void test2225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2225");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.RequestForum requestForum1 = model.RequestForum.createRequestForum();
        model.Request request2 = new model.Request();
        request2.title = "";
        java.lang.String str5 = requestForum1.makeARequest(request2);
        int int6 = requestForum0.assessBooksPriority(request2);
        model.LibraryManagementTeam libraryManagementTeam7 = new model.LibraryManagementTeam();
        int int8 = libraryManagementTeam7.ID;
        int int9 = libraryManagementTeam7.accessCode;
        model.Item item10 = null;
        libraryManagementTeam7.addAnItem(item10);
        java.util.ArrayList<model.Item> itemList12 = libraryManagementTeam7.items;
        requestForum0.managementTeam = libraryManagementTeam7;
        model.RequestForum requestForum14 = model.RequestForum.createRequestForum();
        model.LibraryManagementTeam libraryManagementTeam15 = new model.LibraryManagementTeam();
        int int16 = libraryManagementTeam15.ID;
        int int17 = libraryManagementTeam15.accessCode;
        model.Item item18 = null;
        libraryManagementTeam15.addAnItem(item18);
        requestForum14.managementTeam = libraryManagementTeam15;
        java.util.ArrayList<model.Item> itemList21 = libraryManagementTeam15.items;
        requestForum0.managementTeam = libraryManagementTeam15;
        model.LibraryManagementTeam libraryManagementTeam23 = new model.LibraryManagementTeam();
        int int24 = libraryManagementTeam23.ID;
        int int25 = libraryManagementTeam23.accessCode;
        model.ItemManagement itemManagement26 = new model.ItemManagement();
        model.Database database27 = null;
        itemManagement26.database = database27;
        model.Student student29 = new model.Student();
        int int30 = student29.ID;
        model.StudentOnlineResources studentOnlineResources31 = new model.StudentOnlineResources((model.Client) student29);
        model.VirtualBook virtualBook33 = studentOnlineResources31.searchAccessibleBook("");
        itemManagement26.disableAnItem((model.Item) virtualBook33);
        libraryManagementTeam23.itemManagement = itemManagement26;
        requestForum0.managementTeam = libraryManagementTeam23;
        model.ItemManagement itemManagement37 = new model.ItemManagement();
        model.Database database38 = null;
        itemManagement37.database = database38;
        model.Student student40 = new model.Student();
        int int41 = student40.ID;
        model.StudentOnlineResources studentOnlineResources42 = new model.StudentOnlineResources((model.Client) student40);
        model.VirtualBook virtualBook44 = studentOnlineResources42.searchAccessibleBook("");
        itemManagement37.disableAnItem((model.Item) virtualBook44);
        model.Item item47 = itemManagement37.selectAnItemFromDatabase((int) '#');
        model.ItemManagement itemManagement48 = new model.ItemManagement();
        model.Database database49 = null;
        itemManagement48.database = database49;
        model.Student student51 = new model.Student();
        int int52 = student51.ID;
        model.StudentOnlineResources studentOnlineResources53 = new model.StudentOnlineResources((model.Client) student51);
        model.VirtualBook virtualBook55 = studentOnlineResources53.searchAccessibleBook("");
        itemManagement48.disableAnItem((model.Item) virtualBook55);
        itemManagement37.disableAnItem((model.Item) virtualBook55);
        java.util.Calendar calendar58 = null;
        virtualBook55.date = calendar58;
        virtualBook55.title = "src/Newsletter.csv";
        model.VirtualItemContent virtualItemContent62 = virtualBook55.content;
        libraryManagementTeam23.addAnItem((model.Item) virtualBook55);
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertNotNull(requestForum1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(itemList12);
        org.junit.Assert.assertNotNull(requestForum14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(itemList21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(virtualBook33);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(virtualBook44);
        org.junit.Assert.assertNull(item47);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(virtualBook55);
        org.junit.Assert.assertNull(virtualItemContent62);
    }

    @Test
    public void test2226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2226");
        model.LibraryManagementTeam libraryManagementTeam0 = new model.LibraryManagementTeam();
        int int1 = libraryManagementTeam0.ID;
        libraryManagementTeam0.accessCode = (-1);
        model.Student student4 = new model.Student();
        int int5 = student4.ID;
        model.StudentOnlineResources studentOnlineResources6 = new model.StudentOnlineResources((model.Client) student4);
        model.VirtualBook virtualBook8 = studentOnlineResources6.searchAccessibleBook("");
        model.VirtualItemContent virtualItemContent9 = virtualBook8.content;
        model.Student student10 = new model.Student();
        int int11 = student10.ID;
        model.StudentOnlineResources studentOnlineResources12 = new model.StudentOnlineResources((model.Client) student10);
        model.VirtualBook virtualBook14 = studentOnlineResources12.searchAccessibleBook("");
        model.CD cD16 = new model.CD("");
        model.Magazine magazine17 = null;
        model.Book book18 = null;
        model.CD cD19 = null;
        model.Magazine magazine20 = null;
        model.Book[] bookArray21 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList22 = new java.util.ArrayList<model.Book>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList22, bookArray21);
        model.CD[] cDArray24 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList25 = new java.util.ArrayList<model.CD>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList25, cDArray24);
        model.Magazine[] magazineArray27 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList28 = new java.util.ArrayList<model.Magazine>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList28, magazineArray27);
        model.ItemSearchResult itemSearchResult30 = new model.ItemSearchResult(book18, cD19, magazine20, (java.util.Collection<model.Book>) bookList22, (java.util.Collection<model.CD>) cDList25, (java.util.Collection<model.Magazine>) magazineList28);
        model.Book book31 = null;
        model.CD cD32 = null;
        model.Magazine magazine33 = null;
        model.Book[] bookArray34 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList35 = new java.util.ArrayList<model.Book>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList35, bookArray34);
        model.CD[] cDArray37 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList38 = new java.util.ArrayList<model.CD>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList38, cDArray37);
        model.Magazine[] magazineArray40 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList41 = new java.util.ArrayList<model.Magazine>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList41, magazineArray40);
        model.ItemSearchResult itemSearchResult43 = new model.ItemSearchResult(book31, cD32, magazine33, (java.util.Collection<model.Book>) bookList35, (java.util.Collection<model.CD>) cDList38, (java.util.Collection<model.Magazine>) magazineList41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        itemSearchResult43.similarCD = cDList45;
        model.Book book48 = null;
        model.CD cD49 = null;
        model.Magazine magazine50 = null;
        model.Book[] bookArray51 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList52 = new java.util.ArrayList<model.Book>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList52, bookArray51);
        model.CD[] cDArray54 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList55 = new java.util.ArrayList<model.CD>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList55, cDArray54);
        model.Magazine[] magazineArray57 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList58 = new java.util.ArrayList<model.Magazine>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList58, magazineArray57);
        model.ItemSearchResult itemSearchResult60 = new model.ItemSearchResult(book48, cD49, magazine50, (java.util.Collection<model.Book>) bookList52, (java.util.Collection<model.CD>) cDList55, (java.util.Collection<model.Magazine>) magazineList58);
        model.ItemSearchResult itemSearchResult61 = new model.ItemSearchResult((model.Book) virtualBook14, cD16, magazine17, (java.util.Collection<model.Book>) bookList22, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList58);
        int int62 = virtualBook14.ID;
        int int63 = virtualBook14.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter64 = null;
        model.PaidNewsletter paidNewsletter65 = null;
        model.VirtualItemSearchResult virtualItemSearchResult66 = new model.VirtualItemSearchResult(virtualBook14, uniProvidedNewsletter64, paidNewsletter65);
        model.PaidNewsletter paidNewsletter67 = virtualItemSearchResult66.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter68 = new model.UniProvidedNewsletter();
        virtualItemSearchResult66.setUniNewsletter(uniProvidedNewsletter68);
        java.lang.String str70 = uniProvidedNewsletter68.title;
        model.PaidNewsletter paidNewsletter71 = null;
        model.VirtualItemSearchResult virtualItemSearchResult72 = new model.VirtualItemSearchResult(virtualBook8, uniProvidedNewsletter68, paidNewsletter71);
        model.VirtualItemContent virtualItemContent74 = new model.VirtualItemContent("hi!");
        java.lang.String str75 = virtualItemContent74.link;
        java.lang.String str77 = virtualItemContent74.getContent("");
        java.lang.String str79 = virtualItemContent74.getContent("model.RegistrationFailedException: ");
        java.lang.String str80 = virtualItemContent74.link;
        virtualBook8.content = virtualItemContent74;
        libraryManagementTeam0.enableAnItem((model.Item) virtualBook8);
        int int83 = libraryManagementTeam0.accessCode;
        model.ItemManagement itemManagement84 = libraryManagementTeam0.itemManagement;
        java.util.Collection<model.Request> requestCollection85 = libraryManagementTeam0.bookRequests;
        libraryManagementTeam0.accessCode = 'a';
        java.util.Collection<model.Request> requestCollection88 = libraryManagementTeam0.bookRequests;
        libraryManagementTeam0.ID = 0;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(virtualBook8);
        org.junit.Assert.assertNull(virtualItemContent9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(virtualBook14);
        org.junit.Assert.assertNotNull(bookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(cDArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(magazineArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(bookArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(cDArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(magazineArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(bookArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(cDArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(magazineArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 20 + "'", int63 == 20);
        org.junit.Assert.assertNull(paidNewsletter67);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!" + "'", str77, "hi!");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNull(itemManagement84);
        org.junit.Assert.assertNull(requestCollection85);
        org.junit.Assert.assertNull(requestCollection88);
    }

    @Test
    public void test2227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2227");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter54 = null;
        model.PaidNewsletter paidNewsletter55 = null;
        model.VirtualItemSearchResult virtualItemSearchResult56 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter54, paidNewsletter55);
        model.PaidNewsletter paidNewsletter57 = virtualItemSearchResult56.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter58 = new model.UniProvidedNewsletter();
        virtualItemSearchResult56.setUniNewsletter(uniProvidedNewsletter58);
        model.PaidNewsletter paidNewsletter60 = virtualItemSearchResult56.getPaidNewsletter();
        model.VirtualBook virtualBook61 = virtualItemSearchResult56.getVirtualBook();
        model.PaidNewsletter paidNewsletter62 = null;
        virtualItemSearchResult56.paidNewsletter = paidNewsletter62;
        model.Student student64 = new model.Student();
        int int65 = student64.ID;
        model.StudentOnlineResources studentOnlineResources66 = new model.StudentOnlineResources((model.Client) student64);
        model.VirtualBook virtualBook68 = studentOnlineResources66.searchAccessibleBook("");
        java.lang.String str69 = virtualBook68.location;
        int int70 = virtualBook68.ID;
        virtualBook68.isBookLost = false;
        java.lang.String str73 = virtualBook68.author;
        virtualBook68.isBookLost = true;
        virtualBook68.edition = (byte) 10;
        int int78 = virtualBook68.ID;
        virtualBook68.ISBN = "model.RegistrationFailedException: src/Book.csv";
        virtualItemSearchResult56.setVirtualBook(virtualBook68);
        model.UniProvidedNewsletter uniProvidedNewsletter82 = virtualItemSearchResult56.getUniNewsletter();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertNull(paidNewsletter57);
        org.junit.Assert.assertNull(paidNewsletter60);
        org.junit.Assert.assertNotNull(virtualBook61);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(virtualBook68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(uniProvidedNewsletter82);
    }

    @Test
    public void test2228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2228");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        model.RentedItem[] rentedItemArray4 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList5 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList5, rentedItemArray4);
        model.BorrowingManager borrowingManager7 = new model.BorrowingManager(rentedItemList5);
        model.RentedItem[] rentedItemArray8 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList9 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList9, rentedItemArray8);
        model.BorrowingManager borrowingManager11 = new model.BorrowingManager(rentedItemList9);
        borrowingManager7.physicalItemBorrowed = rentedItemList9;
        borrowingManager3.physicalItemBorrowed = rentedItemList9;
        model.Visitor visitor14 = new model.Visitor();
        model.VirtualBook[] virtualBookArray15 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList16 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList16, virtualBookArray15);
        visitor14.virtualBooksAvailable = virtualBookList16;
        borrowingManager3.client = visitor14;
        model.Faculty faculty20 = new model.Faculty();
        java.lang.String str21 = faculty20.faculty;
        borrowingManager3.client = faculty20;
        int int23 = borrowingManager3.itemsBorrowedCount;
        borrowingManager3.amountOwned = (short) 0;
        int int26 = borrowingManager3.itemsBorrowedCount;
        model.RentedItem rentedItem27 = null;
        // The following exception was thrown during execution in test generation
        try {
            borrowingManager3.removeRentedItem(rentedItem27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"item\" because \"item\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(rentedItemArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rentedItemArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(virtualBookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
    }

    @Test
    public void test2229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2229");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.Request request1 = new model.Request();
        request1.title = "";
        java.lang.String str4 = requestForum0.makeARequest(request1);
        request1.title = "hi!";
        model.RentAndReturnSystem rentAndReturnSystem7 = new model.RentAndReturnSystem();
        model.Book book8 = null;
        model.CD cD10 = new model.CD("");
        model.Magazine magazine11 = null;
        java.util.Collection<model.Book> bookCollection12 = null;
        model.Book book13 = null;
        model.CD cD14 = null;
        model.Magazine magazine15 = null;
        model.Book[] bookArray16 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList17 = new java.util.ArrayList<model.Book>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList17, bookArray16);
        model.CD[] cDArray19 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList20 = new java.util.ArrayList<model.CD>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList20, cDArray19);
        model.Magazine[] magazineArray22 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList23 = new java.util.ArrayList<model.Magazine>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList23, magazineArray22);
        model.ItemSearchResult itemSearchResult25 = new model.ItemSearchResult(book13, cD14, magazine15, (java.util.Collection<model.Book>) bookList17, (java.util.Collection<model.CD>) cDList20, (java.util.Collection<model.Magazine>) magazineList23);
        model.Book book26 = null;
        model.CD cD27 = null;
        model.Magazine magazine28 = null;
        model.Book[] bookArray29 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList30 = new java.util.ArrayList<model.Book>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList30, bookArray29);
        model.CD[] cDArray32 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList33 = new java.util.ArrayList<model.CD>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList33, cDArray32);
        model.Magazine[] magazineArray35 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList36 = new java.util.ArrayList<model.Magazine>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList36, magazineArray35);
        model.ItemSearchResult itemSearchResult38 = new model.ItemSearchResult(book26, cD27, magazine28, (java.util.Collection<model.Book>) bookList30, (java.util.Collection<model.CD>) cDList33, (java.util.Collection<model.Magazine>) magazineList36);
        itemSearchResult25.similarCD = cDList33;
        model.Book book40 = null;
        model.CD cD41 = null;
        model.Magazine magazine42 = null;
        model.Book[] bookArray43 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList44 = new java.util.ArrayList<model.Book>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList44, bookArray43);
        model.CD[] cDArray46 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList47 = new java.util.ArrayList<model.CD>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList47, cDArray46);
        model.Magazine[] magazineArray49 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList50 = new java.util.ArrayList<model.Magazine>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList50, magazineArray49);
        model.ItemSearchResult itemSearchResult52 = new model.ItemSearchResult(book40, cD41, magazine42, (java.util.Collection<model.Book>) bookList44, (java.util.Collection<model.CD>) cDList47, (java.util.Collection<model.Magazine>) magazineList50);
        model.ItemSearchResult itemSearchResult53 = new model.ItemSearchResult(book8, cD10, magazine11, bookCollection12, (java.util.Collection<model.CD>) cDList33, (java.util.Collection<model.Magazine>) magazineList50);
        cD10.ID = (short) 10;
        cD10.canBePurchased = false;
        boolean boolean58 = cD10.canBePurchased;
        model.Faculty faculty59 = new model.Faculty();
        boolean boolean60 = rentAndReturnSystem7.rentAnItem((model.Item) cD10, (model.Client) faculty59);
        java.lang.String str61 = faculty59.faculty;
        request1.requestee = faculty59;
        model.RentedItem[] rentedItemArray63 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList64 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList64, rentedItemArray63);
        model.BorrowingManager borrowingManager66 = new model.BorrowingManager(rentedItemList64);
        boolean boolean67 = borrowingManager66.canRent();
        model.Client client68 = borrowingManager66.client;
        model.Student student69 = new model.Student();
        int int70 = student69.ID;
        model.StudentOnlineResources studentOnlineResources71 = new model.StudentOnlineResources((model.Client) student69);
        model.StudentOnlineResources studentOnlineResources72 = new model.StudentOnlineResources((model.Client) student69);
        model.RentedItem[] rentedItemArray73 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList74 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList74, rentedItemArray73);
        model.BorrowingManager borrowingManager76 = new model.BorrowingManager(rentedItemList74);
        model.Visitor visitor77 = new model.Visitor();
        visitor77.email = "hi!";
        borrowingManager76.client = visitor77;
        studentOnlineResources72.client = visitor77;
        model.Client client82 = studentOnlineResources72.client;
        borrowingManager66.client = client82;
        java.lang.String str84 = client82.email;
        request1.requestee = client82;
        model.Client client86 = request1.requestee;
        request1.title = "model.RegistrationFailedException: src/VirtualBook.csv";
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(bookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(cDArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(magazineArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(bookArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(cDArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(magazineArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(bookArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(cDArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(magazineArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(rentedItemArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(client68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(rentedItemArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(client82);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "hi!" + "'", str84, "hi!");
        org.junit.Assert.assertNotNull(client86);
    }

    @Test
    public void test2230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2230");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.Database.database = database7;
        java.lang.String str10 = database7.virtualItemFilePath;
        java.lang.String str11 = database7.getBookFilePath();
        database7.itemPath = "src/Magazine.csv";
        model.Login login14 = model.Login.makeLogin(database7);
        boolean boolean16 = database7.addItem("src/Client.csv");
        model.SearchItems searchItems17 = new model.SearchItems(database7);
        model.CD cD19 = searchItems17.getCD("src/Client.csv");
        model.Book book21 = searchItems17.getBook("src/CD.csv");
        model.Magazine magazine23 = searchItems17.getMagazine("src/BorrowedItems.csv");
        model.Book book25 = searchItems17.getBook("model.RentingNotAllowedException: src/Magazine.csv");
        model.ItemSearchResult itemSearchResult27 = searchItems17.searchItem("model.RentingNotAllowedException: src/Magazine.csv");
        model.Book book29 = searchItems17.getBook("model.RegistrationFailedException: ");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "src/Newsletter.csv" + "'", str10, "src/Newsletter.csv");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "src/Book.csv" + "'", str11, "src/Book.csv");
        org.junit.Assert.assertNotNull(login14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(cD19);
        org.junit.Assert.assertNull(book21);
        org.junit.Assert.assertNull(magazine23);
        org.junit.Assert.assertNull(book25);
        org.junit.Assert.assertNotNull(itemSearchResult27);
        org.junit.Assert.assertNull(book29);
    }

    @Test
    public void test2231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2231");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Visitor visitor4 = new model.Visitor();
        model.VirtualBook[] virtualBookArray5 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList6 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList6, virtualBookArray5);
        visitor4.virtualBooksAvailable = virtualBookList6;
        newsletterSubscriptionManager3.client = visitor4;
        java.util.ArrayList<model.Newsletter> newsletterList10 = newsletterSubscriptionManager3.newsletterSubscribed;
        model.Client client11 = newsletterSubscriptionManager3.client;
        model.Newsletter[] newsletterArray12 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList13 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList13, newsletterArray12);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager15 = new model.NewsletterSubscriptionManager(newsletterList13);
        model.Client client16 = newsletterSubscriptionManager15.client;
        model.Client client17 = newsletterSubscriptionManager15.client;
        model.Student student18 = new model.Student();
        int int19 = student18.ID;
        model.StudentOnlineResources studentOnlineResources20 = new model.StudentOnlineResources((model.Client) student18);
        model.VirtualBook virtualBook22 = studentOnlineResources20.searchAccessibleBook("");
        model.CD cD24 = new model.CD("");
        model.Magazine magazine25 = null;
        model.Book book26 = null;
        model.CD cD27 = null;
        model.Magazine magazine28 = null;
        model.Book[] bookArray29 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList30 = new java.util.ArrayList<model.Book>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList30, bookArray29);
        model.CD[] cDArray32 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList33 = new java.util.ArrayList<model.CD>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList33, cDArray32);
        model.Magazine[] magazineArray35 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList36 = new java.util.ArrayList<model.Magazine>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList36, magazineArray35);
        model.ItemSearchResult itemSearchResult38 = new model.ItemSearchResult(book26, cD27, magazine28, (java.util.Collection<model.Book>) bookList30, (java.util.Collection<model.CD>) cDList33, (java.util.Collection<model.Magazine>) magazineList36);
        model.Book book39 = null;
        model.CD cD40 = null;
        model.Magazine magazine41 = null;
        model.Book[] bookArray42 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList43 = new java.util.ArrayList<model.Book>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList43, bookArray42);
        model.CD[] cDArray45 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList46 = new java.util.ArrayList<model.CD>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList46, cDArray45);
        model.Magazine[] magazineArray48 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList49 = new java.util.ArrayList<model.Magazine>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList49, magazineArray48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult(book39, cD40, magazine41, (java.util.Collection<model.Book>) bookList43, (java.util.Collection<model.CD>) cDList46, (java.util.Collection<model.Magazine>) magazineList49);
        model.CD[] cDArray52 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList53 = new java.util.ArrayList<model.CD>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList53, cDArray52);
        itemSearchResult51.similarCD = cDList53;
        model.Book book56 = null;
        model.CD cD57 = null;
        model.Magazine magazine58 = null;
        model.Book[] bookArray59 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList60 = new java.util.ArrayList<model.Book>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList60, bookArray59);
        model.CD[] cDArray62 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList63 = new java.util.ArrayList<model.CD>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList63, cDArray62);
        model.Magazine[] magazineArray65 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList66 = new java.util.ArrayList<model.Magazine>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList66, magazineArray65);
        model.ItemSearchResult itemSearchResult68 = new model.ItemSearchResult(book56, cD57, magazine58, (java.util.Collection<model.Book>) bookList60, (java.util.Collection<model.CD>) cDList63, (java.util.Collection<model.Magazine>) magazineList66);
        model.ItemSearchResult itemSearchResult69 = new model.ItemSearchResult((model.Book) virtualBook22, cD24, magazine25, (java.util.Collection<model.Book>) bookList30, (java.util.Collection<model.CD>) cDList53, (java.util.Collection<model.Magazine>) magazineList66);
        int int70 = virtualBook22.ID;
        int int71 = virtualBook22.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter72 = null;
        model.PaidNewsletter paidNewsletter73 = null;
        model.VirtualItemSearchResult virtualItemSearchResult74 = new model.VirtualItemSearchResult(virtualBook22, uniProvidedNewsletter72, paidNewsletter73);
        model.PaidNewsletter paidNewsletter75 = virtualItemSearchResult74.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter76 = new model.UniProvidedNewsletter();
        virtualItemSearchResult74.setUniNewsletter(uniProvidedNewsletter76);
        newsletterSubscriptionManager15.cancelSubscription((model.Newsletter) uniProvidedNewsletter76);
        java.util.ArrayList<model.Newsletter> newsletterList79 = newsletterSubscriptionManager15.newsletterSubscribed;
        java.util.ArrayList<model.Newsletter> newsletterList80 = newsletterSubscriptionManager15.newsletterSubscribed;
        model.Client client81 = newsletterSubscriptionManager15.client;
        client11.newsletterManager = newsletterSubscriptionManager15;
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(virtualBookArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(newsletterList10);
        org.junit.Assert.assertNotNull(client11);
        org.junit.Assert.assertNotNull(newsletterArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(client16);
        org.junit.Assert.assertNull(client17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(virtualBook22);
        org.junit.Assert.assertNotNull(bookArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(cDArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(magazineArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(bookArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(cDArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(magazineArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(cDArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(bookArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(cDArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(magazineArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 20 + "'", int71 == 20);
        org.junit.Assert.assertNull(paidNewsletter75);
        org.junit.Assert.assertNotNull(newsletterList79);
        org.junit.Assert.assertNotNull(newsletterList80);
        org.junit.Assert.assertNull(client81);
    }

    @Test
    public void test2232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2232");
        model.SearchBorrowedItem searchBorrowedItem0 = model.SearchBorrowedItem.makeSearchBorrowedItem();
        model.ItemManagement itemManagement1 = new model.ItemManagement();
        model.Student student2 = new model.Student();
        int int3 = student2.ID;
        model.StudentOnlineResources studentOnlineResources4 = new model.StudentOnlineResources((model.Client) student2);
        model.VirtualBook virtualBook6 = studentOnlineResources4.searchAccessibleBook("");
        model.VirtualItemContent virtualItemContent7 = virtualBook6.content;
        itemManagement1.disableAnItem((model.Item) virtualBook6);
        model.Visitor visitor10 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList11 = visitor10.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources12 = new model.StudentOnlineResources((model.Client) visitor10);
        searchBorrowedItem0.addVirtualItem((model.VirtualItem) virtualBook6, "model.RegistrationFailedException: src/Book.csv", (model.Client) visitor10);
        java.util.ArrayList<model.RentedItem> rentedItemList16 = null; // flaky: searchBorrowedItem0.searchBorrowedItem("src/Newsletter.csv", "model.RegistrationFailedException: src/Book.csv");
        org.junit.Assert.assertNotNull(searchBorrowedItem0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(virtualBook6);
        org.junit.Assert.assertNull(virtualItemContent7);
        org.junit.Assert.assertNull(virtualBookList11);
// flaky:         org.junit.Assert.assertNotNull(rentedItemList16);
    }

    @Test
    public void test2233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2233");
        model.Database database7 = model.Database.createDatabase("src/Client.csv", "src/Book.csv", "model.RegistrationFailedException: src/Book.csv", "src/VirtualBook.csv", "model.RegistrationFailedException: ", "model.RegistrationFailedException: src/Book.csv", "src/CD.csv");
        model.SearchClient searchClient8 = model.SearchClient.makeSearchClient(database7);
        model.Login login9 = model.Login.makeLogin(database7);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(searchClient8);
        org.junit.Assert.assertNotNull(login9);
    }

    @Test
    public void test2234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2234");
        model.Database database0 = null;
        model.Register register1 = model.Register.makeRegister(database0);
        model.Faculty faculty2 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection3 = faculty2.courses;
        boolean boolean6 = register1.registerAsStaff((model.Staff) faculty2, "src/Book.csv", "src/Book.csv");
        model.Faculty faculty7 = new model.Faculty();
        faculty7.username = "hi!";
        java.lang.String str10 = faculty7.username;
        boolean boolean13 = register1.registerAsStaff((model.Staff) faculty7, "src/CD.csv", "hi!");
        model.Database database21 = model.Database.createDatabase("src/Book.csv", "src/CD.csv", "hi!", "src/Client.csv", "hi!", "model.RegistrationFailedException: ", "");
        register1.database = database21;
        model.SearchVirtualItem searchVirtualItem23 = new model.SearchVirtualItem(database21);
        org.junit.Assert.assertNotNull(register1);
        org.junit.Assert.assertNull(courseCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(database21);
    }

    @Test
    public void test2235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2235");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        virtualBook4.ISBN = "hi!";
        int int55 = virtualBook4.ID;
        model.LibraryManagementTeam libraryManagementTeam56 = new model.LibraryManagementTeam();
        libraryManagementTeam56.accessCode = (byte) 10;
        boolean boolean59 = virtualBook4.equals((java.lang.Object) libraryManagementTeam56);
        model.UniProvidedNewsletter uniProvidedNewsletter60 = null;
        model.Newsletter[] newsletterArray61 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList62 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList62, newsletterArray61);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager64 = new model.NewsletterSubscriptionManager(newsletterList62);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager65 = new model.NewsletterSubscriptionManager(newsletterList62);
        java.util.ArrayList<model.Newsletter> newsletterList66 = newsletterSubscriptionManager65.newsletterSubscribed;
        model.PaidNewsletter paidNewsletter67 = new model.PaidNewsletter();
        newsletterSubscriptionManager65.subscribeToPaidNewsletter(paidNewsletter67, "src/Client.csv");
        double double70 = paidNewsletter67.subscriptionPrice;
        model.VirtualItemSearchResult virtualItemSearchResult71 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter60, paidNewsletter67);
        virtualBook4.canBePurchased = false;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(newsletterArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(newsletterList66);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
    }

    @Test
    public void test2236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2236");
        model.Book book1 = new model.Book("model.RegistrationFailedException: ");
        book1.publisher = "model.RegistrationFailedException: src/Magazine.csv";
        book1.publisher = "model.RegistrationFailedException: src/Magazine.csv";
    }

    @Test
    public void test2237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2237");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        borrowingManager3.itemsBorrowedCount = 2108587;
        borrowingManager3.itemsBorrowedCount = (byte) -1;
        float float8 = borrowingManager3.amountOwned;
        model.Faculty faculty9 = new model.Faculty();
        faculty9.username = "hi!";
        java.util.Collection<model.Course> courseCollection12 = null;
        faculty9.courses = courseCollection12;
        java.util.Collection<model.Course> courseCollection14 = faculty9.courses;
        model.Faculty faculty15 = new model.Faculty();
        java.lang.String str16 = faculty15.faculty;
        java.lang.String str17 = faculty15.faculty;
        model.Book book18 = null;
        model.CD cD19 = null;
        model.Magazine magazine20 = null;
        model.Book[] bookArray21 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList22 = new java.util.ArrayList<model.Book>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList22, bookArray21);
        model.CD[] cDArray24 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList25 = new java.util.ArrayList<model.CD>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList25, cDArray24);
        model.Magazine[] magazineArray27 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList28 = new java.util.ArrayList<model.Magazine>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList28, magazineArray27);
        model.ItemSearchResult itemSearchResult30 = new model.ItemSearchResult(book18, cD19, magazine20, (java.util.Collection<model.Book>) bookList22, (java.util.Collection<model.CD>) cDList25, (java.util.Collection<model.Magazine>) magazineList28);
        model.CD[] cDArray31 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList32 = new java.util.ArrayList<model.CD>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList32, cDArray31);
        itemSearchResult30.similarCD = cDList32;
        model.Book book35 = null;
        itemSearchResult30.book = book35;
        model.Book book37 = null;
        model.CD cD38 = null;
        model.Magazine magazine39 = null;
        model.Book[] bookArray40 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList41 = new java.util.ArrayList<model.Book>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList41, bookArray40);
        model.CD[] cDArray43 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList44 = new java.util.ArrayList<model.CD>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList44, cDArray43);
        model.Magazine[] magazineArray46 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList47 = new java.util.ArrayList<model.Magazine>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList47, magazineArray46);
        model.ItemSearchResult itemSearchResult49 = new model.ItemSearchResult(book37, cD38, magazine39, (java.util.Collection<model.Book>) bookList41, (java.util.Collection<model.CD>) cDList44, (java.util.Collection<model.Magazine>) magazineList47);
        itemSearchResult30.similarBooks = bookList41;
        faculty15.textbooks = bookList41;
        model.Faculty faculty52 = new model.Faculty();
        java.lang.String str53 = faculty52.faculty;
        java.lang.String str54 = faculty52.faculty;
        model.Book book55 = null;
        model.CD cD56 = null;
        model.Magazine magazine57 = null;
        model.Book[] bookArray58 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList59 = new java.util.ArrayList<model.Book>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList59, bookArray58);
        model.CD[] cDArray61 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList62 = new java.util.ArrayList<model.CD>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList62, cDArray61);
        model.Magazine[] magazineArray64 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList65 = new java.util.ArrayList<model.Magazine>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList65, magazineArray64);
        model.ItemSearchResult itemSearchResult67 = new model.ItemSearchResult(book55, cD56, magazine57, (java.util.Collection<model.Book>) bookList59, (java.util.Collection<model.CD>) cDList62, (java.util.Collection<model.Magazine>) magazineList65);
        model.CD[] cDArray68 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList69 = new java.util.ArrayList<model.CD>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList69, cDArray68);
        itemSearchResult67.similarCD = cDList69;
        model.Book book72 = null;
        itemSearchResult67.book = book72;
        model.Book book74 = null;
        model.CD cD75 = null;
        model.Magazine magazine76 = null;
        model.Book[] bookArray77 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList78 = new java.util.ArrayList<model.Book>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList78, bookArray77);
        model.CD[] cDArray80 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList81 = new java.util.ArrayList<model.CD>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList81, cDArray80);
        model.Magazine[] magazineArray83 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList84 = new java.util.ArrayList<model.Magazine>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList84, magazineArray83);
        model.ItemSearchResult itemSearchResult86 = new model.ItemSearchResult(book74, cD75, magazine76, (java.util.Collection<model.Book>) bookList78, (java.util.Collection<model.CD>) cDList81, (java.util.Collection<model.Magazine>) magazineList84);
        itemSearchResult67.similarBooks = bookList78;
        faculty52.textbooks = bookList78;
        faculty15.textbooks = bookList78;
        faculty9.textbooks = bookList78;
        faculty9.email = "model.RegistrationFailedException: src/Book.csv";
        model.StudentOnlineResources studentOnlineResources93 = new model.StudentOnlineResources((model.Client) faculty9);
        borrowingManager3.client = faculty9;
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNull(courseCollection14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(bookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(cDArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(magazineArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(cDArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(bookArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(cDArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(magazineArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(bookArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(cDArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(magazineArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(cDArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(bookArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(cDArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(magazineArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test2238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2238");
        model.Database database0 = null;
        model.Register register1 = model.Register.makeRegister(database0);
        model.Faculty faculty2 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection3 = faculty2.courses;
        boolean boolean6 = register1.registerAsStaff((model.Staff) faculty2, "src/Book.csv", "src/Book.csv");
        model.Database database7 = model.Database.database;
        model.Student student8 = new model.Student();
        int int9 = student8.ID;
        model.StudentOnlineResources studentOnlineResources10 = new model.StudentOnlineResources((model.Client) student8);
        student8.ID = '#';
        database7.addClient((model.Client) student8);
        student8.email = "hi!";
        boolean boolean18 = register1.registerAsStaff((model.Staff) student8, "src/CD.csv", "src/Book.csv");
        model.Database database26 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str27 = database26.getVirtualBookFilePath();
        register1.database = database26;
        model.Database database29 = model.Database.database;
        register1.database = database29;
        model.Database database31 = register1.database;
        model.ItemManagement itemManagement32 = new model.ItemManagement();
        model.Database database33 = null;
        itemManagement32.database = database33;
        model.BuySpecialItems buySpecialItems35 = new model.BuySpecialItems();
        model.Book book36 = null;
        model.CD cD38 = new model.CD("");
        model.Magazine magazine39 = null;
        java.util.Collection<model.Book> bookCollection40 = null;
        model.Book book41 = null;
        model.CD cD42 = null;
        model.Magazine magazine43 = null;
        model.Book[] bookArray44 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList45 = new java.util.ArrayList<model.Book>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList45, bookArray44);
        model.CD[] cDArray47 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList48 = new java.util.ArrayList<model.CD>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList48, cDArray47);
        model.Magazine[] magazineArray50 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList51 = new java.util.ArrayList<model.Magazine>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList51, magazineArray50);
        model.ItemSearchResult itemSearchResult53 = new model.ItemSearchResult(book41, cD42, magazine43, (java.util.Collection<model.Book>) bookList45, (java.util.Collection<model.CD>) cDList48, (java.util.Collection<model.Magazine>) magazineList51);
        model.Book book54 = null;
        model.CD cD55 = null;
        model.Magazine magazine56 = null;
        model.Book[] bookArray57 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList58 = new java.util.ArrayList<model.Book>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList58, bookArray57);
        model.CD[] cDArray60 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList61 = new java.util.ArrayList<model.CD>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList61, cDArray60);
        model.Magazine[] magazineArray63 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList64 = new java.util.ArrayList<model.Magazine>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList64, magazineArray63);
        model.ItemSearchResult itemSearchResult66 = new model.ItemSearchResult(book54, cD55, magazine56, (java.util.Collection<model.Book>) bookList58, (java.util.Collection<model.CD>) cDList61, (java.util.Collection<model.Magazine>) magazineList64);
        itemSearchResult53.similarCD = cDList61;
        model.Book book68 = null;
        model.CD cD69 = null;
        model.Magazine magazine70 = null;
        model.Book[] bookArray71 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList72 = new java.util.ArrayList<model.Book>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList72, bookArray71);
        model.CD[] cDArray74 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList75 = new java.util.ArrayList<model.CD>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList75, cDArray74);
        model.Magazine[] magazineArray77 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList78 = new java.util.ArrayList<model.Magazine>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList78, magazineArray77);
        model.ItemSearchResult itemSearchResult80 = new model.ItemSearchResult(book68, cD69, magazine70, (java.util.Collection<model.Book>) bookList72, (java.util.Collection<model.CD>) cDList75, (java.util.Collection<model.Magazine>) magazineList78);
        model.ItemSearchResult itemSearchResult81 = new model.ItemSearchResult(book36, cD38, magazine39, bookCollection40, (java.util.Collection<model.CD>) cDList61, (java.util.Collection<model.Magazine>) magazineList78);
        cD38.ID = (short) 10;
        boolean boolean85 = buySpecialItems35.buyAnItem((model.Item) cD38, (double) 0);
        itemManagement32.enableAnItem((model.Item) cD38);
        model.Database database87 = model.Database.database;
        model.Student student88 = new model.Student();
        int int89 = student88.ID;
        model.StudentOnlineResources studentOnlineResources90 = new model.StudentOnlineResources((model.Client) student88);
        student88.ID = '#';
        database87.addClient((model.Client) student88);
        itemManagement32.database = database87;
        model.SearchItems searchItems95 = new model.SearchItems(database87);
        register1.database = database87;
        org.junit.Assert.assertNotNull(register1);
        org.junit.Assert.assertNull(courseCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "src/VirtualBook.csv" + "'", str27, "src/VirtualBook.csv");
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(bookArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(cDArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(magazineArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(bookArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(cDArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(magazineArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(bookArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(cDArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(magazineArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(database87);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
    }

    @Test
    public void test2239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2239");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.LibraryManagementTeam libraryManagementTeam3 = new model.LibraryManagementTeam();
        int int4 = libraryManagementTeam3.ID;
        model.Student student5 = new model.Student();
        int int6 = student5.ID;
        model.StudentOnlineResources studentOnlineResources7 = new model.StudentOnlineResources((model.Client) student5);
        model.VirtualBook virtualBook9 = studentOnlineResources7.searchAccessibleBook("");
        model.VirtualItemContent virtualItemContent10 = virtualBook9.content;
        libraryManagementTeam3.enableAnItem((model.Item) virtualBook9);
        java.lang.String str12 = studentOnlineResources2.readVirtualItem((model.VirtualItem) virtualBook9);
        model.Client client13 = studentOnlineResources2.client;
        model.Newsletter newsletter15 = studentOnlineResources2.searchSubscribedNewsletter("");
        model.VirtualBook virtualBook17 = studentOnlineResources2.searchAccessibleBook("src/Newsletter.csv");
        virtualBook17.ID = 19;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(virtualBook9);
        org.junit.Assert.assertNull(virtualItemContent10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(client13);
        org.junit.Assert.assertNull(newsletter15);
        org.junit.Assert.assertNotNull(virtualBook17);
    }

    @Test
    public void test2240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2240");
        model.Database database0 = null;
        model.Register register1 = model.Register.makeRegister(database0);
        model.Faculty faculty2 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection3 = faculty2.courses;
        boolean boolean6 = register1.registerAsStaff((model.Staff) faculty2, "src/Book.csv", "src/Book.csv");
        model.Database database7 = model.Database.database;
        model.Student student8 = new model.Student();
        int int9 = student8.ID;
        model.StudentOnlineResources studentOnlineResources10 = new model.StudentOnlineResources((model.Client) student8);
        student8.ID = '#';
        database7.addClient((model.Client) student8);
        student8.email = "hi!";
        boolean boolean18 = register1.registerAsStaff((model.Staff) student8, "src/CD.csv", "src/Book.csv");
        model.Database database26 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str27 = database26.getVirtualBookFilePath();
        register1.database = database26;
        model.Database database36 = model.Database.createDatabase("", "src/CD.csv", "model.RegistrationFailedException: src/Magazine.csv", "model.RegistrationFailedException: src/Magazine.csv", "model.RegistrationFailedException: ", "src/Magazine.csv", "hi!");
        register1.database = database36;
        model.Database database38 = null;
        register1.database = database38;
        model.Database database40 = register1.database;
        model.Faculty faculty41 = new model.Faculty();
        faculty41.username = "hi!";
        java.lang.String str44 = faculty41.username;
        model.Book book45 = null;
        model.CD cD46 = null;
        model.Magazine magazine47 = null;
        model.Book[] bookArray48 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList49 = new java.util.ArrayList<model.Book>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList49, bookArray48);
        model.CD[] cDArray51 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList52 = new java.util.ArrayList<model.CD>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList52, cDArray51);
        model.Magazine[] magazineArray54 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList55 = new java.util.ArrayList<model.Magazine>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList55, magazineArray54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult(book45, cD46, magazine47, (java.util.Collection<model.Book>) bookList49, (java.util.Collection<model.CD>) cDList52, (java.util.Collection<model.Magazine>) magazineList55);
        faculty41.textbooks = bookList49;
        faculty41.viewMyOnlineResource();
        boolean boolean62 = register1.registerAsStaff((model.Staff) faculty41, "model.RegistrationFailedException: model.RentingNotAllowedException: hi!", "src/Book.csv");
        java.util.Collection<model.Book> bookCollection63 = faculty41.textbooks;
        org.junit.Assert.assertNotNull(register1);
        org.junit.Assert.assertNull(courseCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "src/VirtualBook.csv" + "'", str27, "src/VirtualBook.csv");
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNull(database40);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNotNull(bookArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(cDArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(magazineArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(bookCollection63);
    }

    @Test
    public void test2241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2241");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.VirtualItemContent virtualItemContent5 = virtualBook4.content;
        model.Student student6 = new model.Student();
        int int7 = student6.ID;
        model.StudentOnlineResources studentOnlineResources8 = new model.StudentOnlineResources((model.Client) student6);
        model.VirtualBook virtualBook10 = studentOnlineResources8.searchAccessibleBook("");
        model.CD cD12 = new model.CD("");
        model.Magazine magazine13 = null;
        model.Book book14 = null;
        model.CD cD15 = null;
        model.Magazine magazine16 = null;
        model.Book[] bookArray17 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList18 = new java.util.ArrayList<model.Book>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList18, bookArray17);
        model.CD[] cDArray20 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList21 = new java.util.ArrayList<model.CD>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList21, cDArray20);
        model.Magazine[] magazineArray23 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList24 = new java.util.ArrayList<model.Magazine>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList24, magazineArray23);
        model.ItemSearchResult itemSearchResult26 = new model.ItemSearchResult(book14, cD15, magazine16, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList21, (java.util.Collection<model.Magazine>) magazineList24);
        model.Book book27 = null;
        model.CD cD28 = null;
        model.Magazine magazine29 = null;
        model.Book[] bookArray30 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList31 = new java.util.ArrayList<model.Book>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList31, bookArray30);
        model.CD[] cDArray33 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList34 = new java.util.ArrayList<model.CD>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList34, cDArray33);
        model.Magazine[] magazineArray36 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList37 = new java.util.ArrayList<model.Magazine>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList37, magazineArray36);
        model.ItemSearchResult itemSearchResult39 = new model.ItemSearchResult(book27, cD28, magazine29, (java.util.Collection<model.Book>) bookList31, (java.util.Collection<model.CD>) cDList34, (java.util.Collection<model.Magazine>) magazineList37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        itemSearchResult39.similarCD = cDList41;
        model.Book book44 = null;
        model.CD cD45 = null;
        model.Magazine magazine46 = null;
        model.Book[] bookArray47 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList48 = new java.util.ArrayList<model.Book>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList48, bookArray47);
        model.CD[] cDArray50 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList51 = new java.util.ArrayList<model.CD>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList51, cDArray50);
        model.Magazine[] magazineArray53 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList54 = new java.util.ArrayList<model.Magazine>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList54, magazineArray53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult(book44, cD45, magazine46, (java.util.Collection<model.Book>) bookList48, (java.util.Collection<model.CD>) cDList51, (java.util.Collection<model.Magazine>) magazineList54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult((model.Book) virtualBook10, cD12, magazine13, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList54);
        int int58 = virtualBook10.ID;
        int int59 = virtualBook10.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter60 = null;
        model.PaidNewsletter paidNewsletter61 = null;
        model.VirtualItemSearchResult virtualItemSearchResult62 = new model.VirtualItemSearchResult(virtualBook10, uniProvidedNewsletter60, paidNewsletter61);
        model.PaidNewsletter paidNewsletter63 = virtualItemSearchResult62.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter64 = new model.UniProvidedNewsletter();
        virtualItemSearchResult62.setUniNewsletter(uniProvidedNewsletter64);
        java.lang.String str66 = uniProvidedNewsletter64.title;
        model.PaidNewsletter paidNewsletter67 = null;
        model.VirtualItemSearchResult virtualItemSearchResult68 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter64, paidNewsletter67);
        model.VirtualBook virtualBook69 = virtualItemSearchResult68.virtualBook;
        model.PaidNewsletter paidNewsletter70 = new model.PaidNewsletter();
        virtualItemSearchResult68.setPaidNewsletter(paidNewsletter70);
        paidNewsletter70.subscriptionPrice = 'a';
        int int74 = paidNewsletter70.ID;
        model.VirtualItemContent virtualItemContent75 = null;
        paidNewsletter70.content = virtualItemContent75;
        model.Faculty faculty77 = new model.Faculty();
        java.lang.String str78 = faculty77.email;
        faculty77.faculty = "src/Newsletter.csv";
        boolean boolean81 = paidNewsletter70.equals((java.lang.Object) faculty77);
        faculty77.faculty = "";
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean84 = faculty77.allowedToBorrow();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"model.BorrowingManager.canRent()\" because \"this.borrowManager\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNull(virtualItemContent5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(virtualBook10);
        org.junit.Assert.assertNotNull(bookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(cDArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(magazineArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(bookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(magazineArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(bookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(cDArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(magazineArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 20 + "'", int59 == 20);
        org.junit.Assert.assertNull(paidNewsletter63);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(virtualBook69);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test2242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2242");
        model.NonFaculty nonFaculty0 = new model.NonFaculty();
        model.Visitor visitor1 = new model.Visitor();
        model.VirtualBook[] virtualBookArray2 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList3 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList3, virtualBookArray2);
        visitor1.virtualBooksAvailable = virtualBookList3;
        visitor1.username = "";
        model.Visitor visitor8 = new model.Visitor();
        model.VirtualBook[] virtualBookArray9 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList10 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList10, virtualBookArray9);
        visitor8.virtualBooksAvailable = virtualBookList10;
        visitor1.virtualBooksAvailable = virtualBookList10;
        nonFaculty0.virtualBooksAvailable = virtualBookList10;
        java.lang.String str15 = nonFaculty0.email;
        model.Newsletter[] newsletterArray16 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList17 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList17, newsletterArray16);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager19 = new model.NewsletterSubscriptionManager(newsletterList17);
        model.PaidNewsletter paidNewsletter20 = null;
        newsletterSubscriptionManager19.subscribeToPaidNewsletter(paidNewsletter20, "");
        model.Student student23 = new model.Student();
        student23.viewMyOnlineResource();
        newsletterSubscriptionManager19.client = student23;
        model.PaidNewsletter paidNewsletter26 = new model.PaidNewsletter();
        model.Student student27 = new model.Student();
        int int28 = student27.ID;
        model.StudentOnlineResources studentOnlineResources29 = new model.StudentOnlineResources((model.Client) student27);
        model.VirtualBook virtualBook31 = studentOnlineResources29.searchAccessibleBook("");
        model.CD cD33 = new model.CD("");
        model.Magazine magazine34 = null;
        model.Book book35 = null;
        model.CD cD36 = null;
        model.Magazine magazine37 = null;
        model.Book[] bookArray38 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList39 = new java.util.ArrayList<model.Book>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList39, bookArray38);
        model.CD[] cDArray41 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList42 = new java.util.ArrayList<model.CD>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList42, cDArray41);
        model.Magazine[] magazineArray44 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList45 = new java.util.ArrayList<model.Magazine>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList45, magazineArray44);
        model.ItemSearchResult itemSearchResult47 = new model.ItemSearchResult(book35, cD36, magazine37, (java.util.Collection<model.Book>) bookList39, (java.util.Collection<model.CD>) cDList42, (java.util.Collection<model.Magazine>) magazineList45);
        model.Book book48 = null;
        model.CD cD49 = null;
        model.Magazine magazine50 = null;
        model.Book[] bookArray51 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList52 = new java.util.ArrayList<model.Book>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList52, bookArray51);
        model.CD[] cDArray54 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList55 = new java.util.ArrayList<model.CD>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList55, cDArray54);
        model.Magazine[] magazineArray57 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList58 = new java.util.ArrayList<model.Magazine>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList58, magazineArray57);
        model.ItemSearchResult itemSearchResult60 = new model.ItemSearchResult(book48, cD49, magazine50, (java.util.Collection<model.Book>) bookList52, (java.util.Collection<model.CD>) cDList55, (java.util.Collection<model.Magazine>) magazineList58);
        model.CD[] cDArray61 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList62 = new java.util.ArrayList<model.CD>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList62, cDArray61);
        itemSearchResult60.similarCD = cDList62;
        model.Book book65 = null;
        model.CD cD66 = null;
        model.Magazine magazine67 = null;
        model.Book[] bookArray68 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList69 = new java.util.ArrayList<model.Book>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList69, bookArray68);
        model.CD[] cDArray71 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList72 = new java.util.ArrayList<model.CD>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList72, cDArray71);
        model.Magazine[] magazineArray74 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList75 = new java.util.ArrayList<model.Magazine>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList75, magazineArray74);
        model.ItemSearchResult itemSearchResult77 = new model.ItemSearchResult(book65, cD66, magazine67, (java.util.Collection<model.Book>) bookList69, (java.util.Collection<model.CD>) cDList72, (java.util.Collection<model.Magazine>) magazineList75);
        model.ItemSearchResult itemSearchResult78 = new model.ItemSearchResult((model.Book) virtualBook31, cD33, magazine34, (java.util.Collection<model.Book>) bookList39, (java.util.Collection<model.CD>) cDList62, (java.util.Collection<model.Magazine>) magazineList75);
        int int79 = virtualBook31.ID;
        int int80 = virtualBook31.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter81 = null;
        model.PaidNewsletter paidNewsletter82 = null;
        model.VirtualItemSearchResult virtualItemSearchResult83 = new model.VirtualItemSearchResult(virtualBook31, uniProvidedNewsletter81, paidNewsletter82);
        virtualBook31.author = "hi!";
        virtualBook31.showContent();
        boolean boolean87 = paidNewsletter26.equals((java.lang.Object) virtualBook31);
        newsletterSubscriptionManager19.subscribeToPaidNewsletter(paidNewsletter26, "src/Book.csv");
        model.Client client90 = newsletterSubscriptionManager19.client;
        nonFaculty0.newsletterManager = newsletterSubscriptionManager19;
        org.junit.Assert.assertNotNull(virtualBookArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(virtualBookArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(newsletterArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(virtualBook31);
        org.junit.Assert.assertNotNull(bookArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(cDArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(magazineArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(bookArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(cDArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(magazineArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(cDArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(bookArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(cDArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(magazineArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 20 + "'", int80 == 20);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(client90);
    }

    @Test
    public void test2243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2243");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter54 = null;
        model.PaidNewsletter paidNewsletter55 = null;
        model.VirtualItemSearchResult virtualItemSearchResult56 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter54, paidNewsletter55);
        model.PaidNewsletter paidNewsletter57 = virtualItemSearchResult56.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter58 = new model.UniProvidedNewsletter();
        virtualItemSearchResult56.setUniNewsletter(uniProvidedNewsletter58);
        model.PaidNewsletter paidNewsletter60 = virtualItemSearchResult56.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter61 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter61.title = "hi!";
        virtualItemSearchResult56.uniNewsletter = uniProvidedNewsletter61;
        model.PaidNewsletter paidNewsletter65 = virtualItemSearchResult56.getPaidNewsletter();
        model.UniProvidedNewsletter uniProvidedNewsletter66 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter66.title = "hi!";
        virtualItemSearchResult56.setUniNewsletter(uniProvidedNewsletter66);
        model.VirtualBook virtualBook70 = virtualItemSearchResult56.virtualBook;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertNull(paidNewsletter57);
        org.junit.Assert.assertNull(paidNewsletter60);
        org.junit.Assert.assertNull(paidNewsletter65);
        org.junit.Assert.assertNotNull(virtualBook70);
    }

    @Test
    public void test2244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2244");
        model.Database database7 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database7;
        database7.virtualItemFilePath = "model.RegistrationFailedException: ";
        database7.virtualItemFilePath = "model.RegistrationFailedException: src/Magazine.csv";
        org.junit.Assert.assertNotNull(database7);
    }

    @Test
    public void test2245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2245");
        model.Database database0 = null;
        model.Register register1 = model.Register.makeRegister(database0);
        model.Faculty faculty2 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection3 = faculty2.courses;
        boolean boolean6 = register1.registerAsStaff((model.Staff) faculty2, "src/Book.csv", "src/Book.csv");
        model.Faculty faculty7 = new model.Faculty();
        faculty7.username = "hi!";
        java.lang.String str10 = faculty7.username;
        boolean boolean13 = register1.registerAsStaff((model.Staff) faculty7, "src/CD.csv", "hi!");
        model.Database database21 = model.Database.createDatabase("src/Book.csv", "src/CD.csv", "hi!", "src/Client.csv", "hi!", "model.RegistrationFailedException: ", "");
        register1.database = database21;
        model.SearchItems searchItems23 = new model.SearchItems(database21);
        model.SearchClient searchClient24 = model.SearchClient.makeSearchClient(database21);
        // The following exception was thrown during execution in test generation
        try {
            model.Client client26 = searchClient24.getClient("model.RentingNotAllowedException: ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"model.Database.getClientFilePath()\" because \"this.db\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(register1);
        org.junit.Assert.assertNull(courseCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(searchClient24);
    }

    @Test
    public void test2246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2246");
        model.Course course0 = new model.Course();
        java.lang.String str1 = course0.subject;
        course0.year = (byte) 10;
        java.lang.String str4 = course0.code;
        course0.code = "hi!";
        course0.year = 8981991;
        java.lang.String str9 = course0.subject;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test2247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2247");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.PaidNewsletter paidNewsletter4 = null;
        newsletterSubscriptionManager3.subscribeToPaidNewsletter(paidNewsletter4, "");
        model.Student student7 = new model.Student();
        student7.viewMyOnlineResource();
        newsletterSubscriptionManager3.client = student7;
        model.BuySpecialItems buySpecialItems10 = new model.BuySpecialItems();
        model.Payment payment11 = null;
        buySpecialItems10.paymentAPI = payment11;
        model.RequestForum requestForum13 = model.RequestForum.createRequestForum();
        model.LibraryManagementTeam libraryManagementTeam14 = new model.LibraryManagementTeam();
        int int15 = libraryManagementTeam14.ID;
        int int16 = libraryManagementTeam14.accessCode;
        model.Item item17 = null;
        libraryManagementTeam14.addAnItem(item17);
        requestForum13.managementTeam = libraryManagementTeam14;
        java.util.ArrayList<model.Item> itemList20 = libraryManagementTeam14.items;
        buySpecialItems10.purchasedItems = itemList20;
        model.Payment payment22 = buySpecialItems10.paymentAPI;
        model.PayCredit payCredit23 = new model.PayCredit();
        payCredit23.amountPay = 10;
        payCredit23.pay((double) (-1.0f));
        payCredit23.pay((double) ' ');
        payCredit23.pay(0.0d);
        double double32 = payCredit23.amountPay;
        payCredit23.pay((double) (short) 100);
        buySpecialItems10.paymentAPI = payCredit23;
        newsletterSubscriptionManager3.paymentAPI = payCredit23;
        payCredit23.amountPay = 6461584;
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(requestForum13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(itemList20);
        org.junit.Assert.assertNull(payment22);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 41.0d + "'", double32 == 41.0d);
    }

    @Test
    public void test2248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2248");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "src/Book.csv", "src/CD.csv" };
        model.Item item7 = model.ItemFactory.makeItem("", strArray6);
        model.Item item8 = model.ItemFactory.makeItem("model.RegistrationFailedException: src/Magazine.csv", strArray6);
        model.Item item9 = model.ItemFactory.makeItem("src/Newsletter.csv", strArray6);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNull(item7);
        org.junit.Assert.assertNull(item8);
        org.junit.Assert.assertNull(item9);
    }

    @Test
    public void test2249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2249");
        model.CD cD1 = new model.CD("src/VirtualBook.csv");
    }

    @Test
    public void test2250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2250");
        model.Client client0 = null;
        model.StudentOnlineResources studentOnlineResources1 = new model.StudentOnlineResources(client0);
        model.Client client2 = studentOnlineResources1.client;
        org.junit.Assert.assertNull(client2);
    }

    @Test
    public void test2251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2251");
        model.Database database0 = null;
        model.Login login1 = new model.Login(database0);
        model.Database database9 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str10 = database9.getVirtualBookFilePath();
        model.Database.database = database9;
        java.lang.String str12 = database9.virtualItemFilePath;
        java.lang.String str13 = database9.getBookFilePath();
        database9.itemPath = "src/Magazine.csv";
        model.Login login16 = model.Login.makeLogin(database9);
        java.lang.String str17 = database9.getNewspaperFilePath();
        java.lang.String str18 = database9.getMagazineFilePath();
        boolean boolean20 = database9.addItem("src/Book.csv");
        model.Login login21 = model.Login.makeLogin(database9);
        login1.db = database9;
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "src/VirtualBook.csv" + "'", str10, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "model.RegistrationFailedException: src/Magazine.csv" + "'", str12, "model.RegistrationFailedException: src/Magazine.csv");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "src/Book.csv" + "'", str13, "src/Book.csv");
        org.junit.Assert.assertNotNull(login16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "src/Newsletter.csv" + "'", str17, "src/Newsletter.csv");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "src/Magazine.csv" + "'", str18, "src/Magazine.csv");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(login21);
    }

    @Test
    public void test2252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2252");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.Request request1 = new model.Request();
        request1.title = "";
        java.lang.String str4 = requestForum0.makeARequest(request1);
        model.RequestForum requestForum5 = model.RequestForum.createRequestForum();
        model.RequestForum requestForum6 = model.RequestForum.createRequestForum();
        model.Request request7 = new model.Request();
        request7.title = "";
        java.lang.String str10 = requestForum6.makeARequest(request7);
        int int11 = requestForum5.assessBooksPriority(request7);
        java.lang.String str12 = request7.type;
        java.lang.String str13 = request7.type;
        java.lang.String str14 = requestForum0.makeARequest(request7);
        model.RentedItem[] rentedItemArray15 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList16 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList16, rentedItemArray15);
        model.BorrowingManager borrowingManager18 = new model.BorrowingManager(rentedItemList16);
        model.Book book19 = null;
        model.CD cD21 = new model.CD("");
        model.Magazine magazine22 = null;
        java.util.Collection<model.Book> bookCollection23 = null;
        model.Book book24 = null;
        model.CD cD25 = null;
        model.Magazine magazine26 = null;
        model.Book[] bookArray27 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList28 = new java.util.ArrayList<model.Book>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList28, bookArray27);
        model.CD[] cDArray30 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList31 = new java.util.ArrayList<model.CD>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList31, cDArray30);
        model.Magazine[] magazineArray33 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList34 = new java.util.ArrayList<model.Magazine>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList34, magazineArray33);
        model.ItemSearchResult itemSearchResult36 = new model.ItemSearchResult(book24, cD25, magazine26, (java.util.Collection<model.Book>) bookList28, (java.util.Collection<model.CD>) cDList31, (java.util.Collection<model.Magazine>) magazineList34);
        model.Book book37 = null;
        model.CD cD38 = null;
        model.Magazine magazine39 = null;
        model.Book[] bookArray40 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList41 = new java.util.ArrayList<model.Book>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList41, bookArray40);
        model.CD[] cDArray43 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList44 = new java.util.ArrayList<model.CD>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList44, cDArray43);
        model.Magazine[] magazineArray46 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList47 = new java.util.ArrayList<model.Magazine>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList47, magazineArray46);
        model.ItemSearchResult itemSearchResult49 = new model.ItemSearchResult(book37, cD38, magazine39, (java.util.Collection<model.Book>) bookList41, (java.util.Collection<model.CD>) cDList44, (java.util.Collection<model.Magazine>) magazineList47);
        itemSearchResult36.similarCD = cDList44;
        model.Book book51 = null;
        model.CD cD52 = null;
        model.Magazine magazine53 = null;
        model.Book[] bookArray54 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList55 = new java.util.ArrayList<model.Book>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList55, bookArray54);
        model.CD[] cDArray57 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList58 = new java.util.ArrayList<model.CD>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList58, cDArray57);
        model.Magazine[] magazineArray60 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList61 = new java.util.ArrayList<model.Magazine>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList61, magazineArray60);
        model.ItemSearchResult itemSearchResult63 = new model.ItemSearchResult(book51, cD52, magazine53, (java.util.Collection<model.Book>) bookList55, (java.util.Collection<model.CD>) cDList58, (java.util.Collection<model.Magazine>) magazineList61);
        model.ItemSearchResult itemSearchResult64 = new model.ItemSearchResult(book19, cD21, magazine22, bookCollection23, (java.util.Collection<model.CD>) cDList44, (java.util.Collection<model.Magazine>) magazineList61);
        cD21.ID = (short) 10;
        borrowingManager18.removeRentedItem((model.Item) cD21);
        float float68 = borrowingManager18.amountOwned;
        model.Database database69 = null;
        model.Register register70 = model.Register.makeRegister(database69);
        model.Faculty faculty71 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection72 = faculty71.courses;
        boolean boolean75 = register70.registerAsStaff((model.Staff) faculty71, "src/Book.csv", "src/Book.csv");
        faculty71.faculty = "src/Magazine.csv";
        borrowingManager18.client = faculty71;
        request7.requestee = faculty71;
        java.lang.String str80 = request7.title;
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(requestForum5);
        org.junit.Assert.assertNotNull(requestForum6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(rentedItemArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(bookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(cDArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(magazineArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(bookArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(cDArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(magazineArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(bookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(cDArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(magazineArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + float68 + "' != '" + 0.0f + "'", float68 == 0.0f);
        org.junit.Assert.assertNotNull(register70);
        org.junit.Assert.assertNull(courseCollection72);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
    }

    @Test
    public void test2253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2253");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        model.Client client9 = database7.getClient("");
        model.RentedItem[] rentedItemArray10 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList11 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList11, rentedItemArray10);
        model.BorrowingManager borrowingManager13 = new model.BorrowingManager(rentedItemList11);
        model.Book book14 = null;
        model.CD cD16 = new model.CD("");
        model.Magazine magazine17 = null;
        java.util.Collection<model.Book> bookCollection18 = null;
        model.Book book19 = null;
        model.CD cD20 = null;
        model.Magazine magazine21 = null;
        model.Book[] bookArray22 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList23 = new java.util.ArrayList<model.Book>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList23, bookArray22);
        model.CD[] cDArray25 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList26 = new java.util.ArrayList<model.CD>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList26, cDArray25);
        model.Magazine[] magazineArray28 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList29 = new java.util.ArrayList<model.Magazine>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList29, magazineArray28);
        model.ItemSearchResult itemSearchResult31 = new model.ItemSearchResult(book19, cD20, magazine21, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList29);
        model.Book book32 = null;
        model.CD cD33 = null;
        model.Magazine magazine34 = null;
        model.Book[] bookArray35 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList36 = new java.util.ArrayList<model.Book>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList36, bookArray35);
        model.CD[] cDArray38 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList39 = new java.util.ArrayList<model.CD>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList39, cDArray38);
        model.Magazine[] magazineArray41 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList42 = new java.util.ArrayList<model.Magazine>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList42, magazineArray41);
        model.ItemSearchResult itemSearchResult44 = new model.ItemSearchResult(book32, cD33, magazine34, (java.util.Collection<model.Book>) bookList36, (java.util.Collection<model.CD>) cDList39, (java.util.Collection<model.Magazine>) magazineList42);
        itemSearchResult31.similarCD = cDList39;
        model.Book book46 = null;
        model.CD cD47 = null;
        model.Magazine magazine48 = null;
        model.Book[] bookArray49 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList50 = new java.util.ArrayList<model.Book>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList50, bookArray49);
        model.CD[] cDArray52 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList53 = new java.util.ArrayList<model.CD>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList53, cDArray52);
        model.Magazine[] magazineArray55 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList56 = new java.util.ArrayList<model.Magazine>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList56, magazineArray55);
        model.ItemSearchResult itemSearchResult58 = new model.ItemSearchResult(book46, cD47, magazine48, (java.util.Collection<model.Book>) bookList50, (java.util.Collection<model.CD>) cDList53, (java.util.Collection<model.Magazine>) magazineList56);
        model.ItemSearchResult itemSearchResult59 = new model.ItemSearchResult(book14, cD16, magazine17, bookCollection18, (java.util.Collection<model.CD>) cDList39, (java.util.Collection<model.Magazine>) magazineList56);
        cD16.ID = (short) 10;
        borrowingManager13.removeRentedItem((model.Item) cD16);
        float float63 = borrowingManager13.amountOwned;
        float float64 = borrowingManager13.amountOwned;
        float float65 = borrowingManager13.amountOwned;
        client9.borrowManager = borrowingManager13;
        model.RentedItem[] rentedItemArray67 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList68 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList68, rentedItemArray67);
        model.BorrowingManager borrowingManager70 = new model.BorrowingManager(rentedItemList68);
        boolean boolean71 = borrowingManager70.canRent();
        borrowingManager70.updateBorrowingPrivilages();
        java.util.ArrayList<model.RentedItem> rentedItemList73 = borrowingManager70.physicalItemBorrowed;
        borrowingManager13.physicalItemBorrowed = rentedItemList73;
        model.BorrowingManager borrowingManager75 = new model.BorrowingManager(rentedItemList73);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(client9);
        org.junit.Assert.assertNotNull(rentedItemArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(bookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(magazineArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(bookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(cDArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(magazineArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(bookArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(cDArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(magazineArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + 0.0f + "'", float63 == 0.0f);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + 0.0f + "'", float64 == 0.0f);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + 0.0f + "'", float65 == 0.0f);
        org.junit.Assert.assertNotNull(rentedItemArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(rentedItemList73);
    }

    @Test
    public void test2254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2254");
        model.Course course0 = new model.Course();
        java.lang.String str1 = course0.code;
        java.lang.String str2 = course0.subject;
        course0.subject = "model.RegistrationFailedException: ";
        course0.subject = "src/Magazine.csv";
        course0.code = "src/CD.csv";
        course0.subject = "src/Newsletter.csv";
        java.lang.String str11 = course0.code;
        java.lang.String str12 = course0.code;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "src/CD.csv" + "'", str11, "src/CD.csv");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "src/CD.csv" + "'", str12, "src/CD.csv");
    }

    @Test
    public void test2255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2255");
        model.SearchBorrowedItem searchBorrowedItem0 = model.SearchBorrowedItem.makeSearchBorrowedItem();
        model.Visitor visitor1 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList2 = visitor1.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources3 = new model.StudentOnlineResources((model.Client) visitor1);
        model.RentedItem[] rentedItemArray4 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList5 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList5, rentedItemArray4);
        model.BorrowingManager borrowingManager7 = new model.BorrowingManager(rentedItemList5);
        model.Visitor visitor8 = new model.Visitor();
        visitor8.email = "hi!";
        borrowingManager7.client = visitor8;
        studentOnlineResources3.client = visitor8;
        model.Student student13 = new model.Student();
        int int14 = student13.ID;
        model.StudentOnlineResources studentOnlineResources15 = new model.StudentOnlineResources((model.Client) student13);
        model.VirtualBook virtualBook17 = studentOnlineResources15.searchAccessibleBook("");
        model.CD cD19 = new model.CD("");
        model.Magazine magazine20 = null;
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.Book book34 = null;
        model.CD cD35 = null;
        model.Magazine magazine36 = null;
        model.Book[] bookArray37 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList38 = new java.util.ArrayList<model.Book>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList38, bookArray37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        model.Magazine[] magazineArray43 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList44 = new java.util.ArrayList<model.Magazine>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList44, magazineArray43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book34, cD35, magazine36, (java.util.Collection<model.Book>) bookList38, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList44);
        model.CD[] cDArray47 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList48 = new java.util.ArrayList<model.CD>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList48, cDArray47);
        itemSearchResult46.similarCD = cDList48;
        model.Book book51 = null;
        model.CD cD52 = null;
        model.Magazine magazine53 = null;
        model.Book[] bookArray54 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList55 = new java.util.ArrayList<model.Book>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList55, bookArray54);
        model.CD[] cDArray57 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList58 = new java.util.ArrayList<model.CD>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList58, cDArray57);
        model.Magazine[] magazineArray60 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList61 = new java.util.ArrayList<model.Magazine>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList61, magazineArray60);
        model.ItemSearchResult itemSearchResult63 = new model.ItemSearchResult(book51, cD52, magazine53, (java.util.Collection<model.Book>) bookList55, (java.util.Collection<model.CD>) cDList58, (java.util.Collection<model.Magazine>) magazineList61);
        model.ItemSearchResult itemSearchResult64 = new model.ItemSearchResult((model.Book) virtualBook17, cD19, magazine20, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList48, (java.util.Collection<model.Magazine>) magazineList61);
        java.lang.String str65 = studentOnlineResources3.readVirtualItem((model.VirtualItem) virtualBook17);
        model.Visitor visitor67 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList68 = visitor67.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources69 = new model.StudentOnlineResources((model.Client) visitor67);
        searchBorrowedItem0.addPhyscialItem((model.Item) virtualBook17, "", (model.Client) visitor67);
        java.util.ArrayList<model.VirtualItem> virtualItemList73 = searchBorrowedItem0.searchBorrowedVirtualItem("model.RegistrationFailedException: src/Magazine.csv", "src/Book.csv");
        java.util.ArrayList<model.RentedItem> rentedItemList76 = null; // flaky: searchBorrowedItem0.searchBorrowedItem("model.RentingNotAllowedException: hi!", "src/Client.csv");
// flaky:         searchBorrowedItem0.removeItem("model.RegistrationFailedException: src/Book.csv", "src/Newsletter.csv");
        model.SearchBorrowedItem.object = searchBorrowedItem0;
        org.junit.Assert.assertNotNull(searchBorrowedItem0);
        org.junit.Assert.assertNull(virtualBookList2);
        org.junit.Assert.assertNotNull(rentedItemArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(virtualBook17);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(bookArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(magazineArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(cDArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(bookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(cDArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(magazineArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(virtualBookList68);
        org.junit.Assert.assertNotNull(virtualItemList73);
// flaky:         org.junit.Assert.assertNotNull(rentedItemList76);
    }

    @Test
    public void test2256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2256");
        model.ItemManagement itemManagement0 = new model.ItemManagement();
        model.Item item2 = itemManagement0.selectAnItemFromDatabase((int) (short) 0);
        model.Database database3 = itemManagement0.database;
        model.BuySpecialItems buySpecialItems4 = new model.BuySpecialItems();
        model.CD cD6 = new model.CD("");
        int int7 = cD6.ID;
        boolean boolean9 = buySpecialItems4.buyAnItem((model.Item) cD6, (double) (short) 0);
        itemManagement0.addAnItem((model.Item) cD6);
        model.Student student11 = new model.Student();
        int int12 = student11.ID;
        model.StudentOnlineResources studentOnlineResources13 = new model.StudentOnlineResources((model.Client) student11);
        model.VirtualBook virtualBook15 = studentOnlineResources13.searchAccessibleBook("");
        model.CD cD17 = new model.CD("");
        model.Magazine magazine18 = null;
        model.Book book19 = null;
        model.CD cD20 = null;
        model.Magazine magazine21 = null;
        model.Book[] bookArray22 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList23 = new java.util.ArrayList<model.Book>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList23, bookArray22);
        model.CD[] cDArray25 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList26 = new java.util.ArrayList<model.CD>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList26, cDArray25);
        model.Magazine[] magazineArray28 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList29 = new java.util.ArrayList<model.Magazine>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList29, magazineArray28);
        model.ItemSearchResult itemSearchResult31 = new model.ItemSearchResult(book19, cD20, magazine21, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList29);
        model.Book book32 = null;
        model.CD cD33 = null;
        model.Magazine magazine34 = null;
        model.Book[] bookArray35 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList36 = new java.util.ArrayList<model.Book>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList36, bookArray35);
        model.CD[] cDArray38 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList39 = new java.util.ArrayList<model.CD>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList39, cDArray38);
        model.Magazine[] magazineArray41 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList42 = new java.util.ArrayList<model.Magazine>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList42, magazineArray41);
        model.ItemSearchResult itemSearchResult44 = new model.ItemSearchResult(book32, cD33, magazine34, (java.util.Collection<model.Book>) bookList36, (java.util.Collection<model.CD>) cDList39, (java.util.Collection<model.Magazine>) magazineList42);
        model.CD[] cDArray45 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList46 = new java.util.ArrayList<model.CD>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList46, cDArray45);
        itemSearchResult44.similarCD = cDList46;
        model.Book book49 = null;
        model.CD cD50 = null;
        model.Magazine magazine51 = null;
        model.Book[] bookArray52 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList53 = new java.util.ArrayList<model.Book>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList53, bookArray52);
        model.CD[] cDArray55 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList56 = new java.util.ArrayList<model.CD>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList56, cDArray55);
        model.Magazine[] magazineArray58 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList59 = new java.util.ArrayList<model.Magazine>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList59, magazineArray58);
        model.ItemSearchResult itemSearchResult61 = new model.ItemSearchResult(book49, cD50, magazine51, (java.util.Collection<model.Book>) bookList53, (java.util.Collection<model.CD>) cDList56, (java.util.Collection<model.Magazine>) magazineList59);
        model.ItemSearchResult itemSearchResult62 = new model.ItemSearchResult((model.Book) virtualBook15, cD17, magazine18, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList46, (java.util.Collection<model.Magazine>) magazineList59);
        int int63 = virtualBook15.ID;
        int int64 = virtualBook15.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter65 = null;
        model.PaidNewsletter paidNewsletter66 = null;
        model.VirtualItemSearchResult virtualItemSearchResult67 = new model.VirtualItemSearchResult(virtualBook15, uniProvidedNewsletter65, paidNewsletter66);
        model.PaidNewsletter paidNewsletter68 = virtualItemSearchResult67.getPaidNewsletter();
        model.PaidNewsletter paidNewsletter69 = virtualItemSearchResult67.getPaidNewsletter();
        model.VirtualBook virtualBook70 = virtualItemSearchResult67.getVirtualBook();
        itemManagement0.enableAnItem((model.Item) virtualBook70);
        model.Database database72 = itemManagement0.database;
        model.Item item73 = null;
        itemManagement0.addAnItem(item73);
        model.Database database75 = itemManagement0.database;
        org.junit.Assert.assertNull(item2);
        org.junit.Assert.assertNull(database3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(virtualBook15);
        org.junit.Assert.assertNotNull(bookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(magazineArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(bookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(cDArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(magazineArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(bookArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(cDArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(magazineArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 20 + "'", int64 == 20);
        org.junit.Assert.assertNull(paidNewsletter68);
        org.junit.Assert.assertNull(paidNewsletter69);
        org.junit.Assert.assertNotNull(virtualBook70);
        org.junit.Assert.assertNull(database72);
        org.junit.Assert.assertNull(database75);
    }

    @Test
    public void test2257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2257");
        model.Database database7 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database7;
        java.lang.String str9 = database7.getBorrowedItemFilePath();
        model.SearchVirtualItem searchVirtualItem10 = new model.SearchVirtualItem(database7);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "src/BorrowedItems.csv" + "'", str9, "src/BorrowedItems.csv");
    }

    @Test
    public void test2258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2258");
        model.RegistrationFailedException registrationFailedException1 = new model.RegistrationFailedException("src/BorrowedItems.csv");
        model.LoginFailedException loginFailedException3 = new model.LoginFailedException("model.RegistrationFailedException: ");
        model.RegistrationFailedException registrationFailedException5 = new model.RegistrationFailedException("src/VirtualBook.csv");
        loginFailedException3.addSuppressed((java.lang.Throwable) registrationFailedException5);
        java.lang.Throwable[] throwableArray7 = registrationFailedException5.getSuppressed();
        registrationFailedException5.message = "src/VirtualBook.csv";
        registrationFailedException1.addSuppressed((java.lang.Throwable) registrationFailedException5);
        org.junit.Assert.assertNotNull(throwableArray7);
    }

    @Test
    public void test2259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2259");
        model.Visitor visitor0 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList1 = visitor0.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) visitor0);
        model.RentedItem[] rentedItemArray3 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList4 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList4, rentedItemArray3);
        model.BorrowingManager borrowingManager6 = new model.BorrowingManager(rentedItemList4);
        model.Visitor visitor7 = new model.Visitor();
        visitor7.email = "hi!";
        borrowingManager6.client = visitor7;
        studentOnlineResources2.client = visitor7;
        model.Student student12 = new model.Student();
        int int13 = student12.ID;
        model.StudentOnlineResources studentOnlineResources14 = new model.StudentOnlineResources((model.Client) student12);
        model.VirtualBook virtualBook16 = studentOnlineResources14.searchAccessibleBook("");
        model.CD cD18 = new model.CD("");
        model.Magazine magazine19 = null;
        model.Book book20 = null;
        model.CD cD21 = null;
        model.Magazine magazine22 = null;
        model.Book[] bookArray23 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList24 = new java.util.ArrayList<model.Book>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList24, bookArray23);
        model.CD[] cDArray26 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList27 = new java.util.ArrayList<model.CD>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList27, cDArray26);
        model.Magazine[] magazineArray29 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList30 = new java.util.ArrayList<model.Magazine>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList30, magazineArray29);
        model.ItemSearchResult itemSearchResult32 = new model.ItemSearchResult(book20, cD21, magazine22, (java.util.Collection<model.Book>) bookList24, (java.util.Collection<model.CD>) cDList27, (java.util.Collection<model.Magazine>) magazineList30);
        model.Book book33 = null;
        model.CD cD34 = null;
        model.Magazine magazine35 = null;
        model.Book[] bookArray36 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList37 = new java.util.ArrayList<model.Book>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList37, bookArray36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        model.Magazine[] magazineArray42 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList43 = new java.util.ArrayList<model.Magazine>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList43, magazineArray42);
        model.ItemSearchResult itemSearchResult45 = new model.ItemSearchResult(book33, cD34, magazine35, (java.util.Collection<model.Book>) bookList37, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList43);
        model.CD[] cDArray46 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList47 = new java.util.ArrayList<model.CD>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList47, cDArray46);
        itemSearchResult45.similarCD = cDList47;
        model.Book book50 = null;
        model.CD cD51 = null;
        model.Magazine magazine52 = null;
        model.Book[] bookArray53 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList54 = new java.util.ArrayList<model.Book>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList54, bookArray53);
        model.CD[] cDArray56 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList57 = new java.util.ArrayList<model.CD>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList57, cDArray56);
        model.Magazine[] magazineArray59 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList60 = new java.util.ArrayList<model.Magazine>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList60, magazineArray59);
        model.ItemSearchResult itemSearchResult62 = new model.ItemSearchResult(book50, cD51, magazine52, (java.util.Collection<model.Book>) bookList54, (java.util.Collection<model.CD>) cDList57, (java.util.Collection<model.Magazine>) magazineList60);
        model.ItemSearchResult itemSearchResult63 = new model.ItemSearchResult((model.Book) virtualBook16, cD18, magazine19, (java.util.Collection<model.Book>) bookList24, (java.util.Collection<model.CD>) cDList47, (java.util.Collection<model.Magazine>) magazineList60);
        java.lang.String str64 = studentOnlineResources2.readVirtualItem((model.VirtualItem) virtualBook16);
        model.VirtualItem virtualItem65 = null;
        java.lang.String str66 = studentOnlineResources2.readVirtualItem(virtualItem65);
        model.VirtualBook virtualBook68 = new model.VirtualBook("");
        java.lang.String str69 = studentOnlineResources2.readVirtualItem((model.VirtualItem) virtualBook68);
        java.util.Calendar calendar70 = null;
        virtualBook68.date = calendar70;
        java.util.Calendar calendar72 = null;
        virtualBook68.date = calendar72;
        org.junit.Assert.assertNull(virtualBookList1);
        org.junit.Assert.assertNotNull(rentedItemArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(virtualBook16);
        org.junit.Assert.assertNotNull(bookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(cDArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(magazineArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(bookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(magazineArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(cDArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(bookArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(cDArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(magazineArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(str69);
    }

    @Test
    public void test2260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2260");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.Visitor visitor5 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList6 = visitor5.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources7 = new model.StudentOnlineResources((model.Client) visitor5);
        model.RentedItem[] rentedItemArray8 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList9 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList9, rentedItemArray8);
        model.BorrowingManager borrowingManager11 = new model.BorrowingManager(rentedItemList9);
        model.Visitor visitor12 = new model.Visitor();
        visitor12.email = "hi!";
        borrowingManager11.client = visitor12;
        studentOnlineResources7.client = visitor12;
        model.UniProvidedNewsletter uniProvidedNewsletter17 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter17.title = "";
        java.lang.String str20 = studentOnlineResources7.readVirtualItem((model.VirtualItem) uniProvidedNewsletter17);
        newsletterSubscriptionManager3.cancelSubscription((model.Newsletter) uniProvidedNewsletter17);
        uniProvidedNewsletter17.cost = 0;
        model.VirtualItemContent virtualItemContent25 = new model.VirtualItemContent("hi!");
        java.lang.String str26 = virtualItemContent25.link;
        java.lang.String str28 = virtualItemContent25.getContent("");
        java.lang.String str30 = virtualItemContent25.getContent("model.RegistrationFailedException: ");
        uniProvidedNewsletter17.content = virtualItemContent25;
        model.UniProvidedNewsletter uniProvidedNewsletter32 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter32.title = "hi!";
        model.VirtualItemContent virtualItemContent36 = new model.VirtualItemContent("hi!");
        java.lang.String str37 = virtualItemContent36.link;
        uniProvidedNewsletter32.content = virtualItemContent36;
        uniProvidedNewsletter17.content = virtualItemContent36;
        java.lang.String str40 = uniProvidedNewsletter17.title;
        model.VirtualItemContent virtualItemContent42 = new model.VirtualItemContent("hi!");
        java.lang.String str43 = virtualItemContent42.link;
        java.lang.String str44 = virtualItemContent42.link;
        java.lang.String str46 = virtualItemContent42.getContent("");
        uniProvidedNewsletter17.content = virtualItemContent42;
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertNull(virtualBookList6);
        org.junit.Assert.assertNotNull(rentedItemArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
    }

    @Test
    public void test2261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2261");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.Student student5 = new model.Student();
        int int6 = student5.ID;
        model.StudentOnlineResources studentOnlineResources7 = new model.StudentOnlineResources((model.Client) student5);
        student5.ID = '#';
        java.lang.String str10 = student5.email;
        newsletterSubscriptionManager3.client = student5;
        model.BuySpecialItems buySpecialItems12 = new model.BuySpecialItems();
        model.Book book13 = null;
        model.CD cD15 = new model.CD("");
        model.Magazine magazine16 = null;
        java.util.Collection<model.Book> bookCollection17 = null;
        model.Book book18 = null;
        model.CD cD19 = null;
        model.Magazine magazine20 = null;
        model.Book[] bookArray21 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList22 = new java.util.ArrayList<model.Book>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList22, bookArray21);
        model.CD[] cDArray24 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList25 = new java.util.ArrayList<model.CD>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList25, cDArray24);
        model.Magazine[] magazineArray27 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList28 = new java.util.ArrayList<model.Magazine>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList28, magazineArray27);
        model.ItemSearchResult itemSearchResult30 = new model.ItemSearchResult(book18, cD19, magazine20, (java.util.Collection<model.Book>) bookList22, (java.util.Collection<model.CD>) cDList25, (java.util.Collection<model.Magazine>) magazineList28);
        model.Book book31 = null;
        model.CD cD32 = null;
        model.Magazine magazine33 = null;
        model.Book[] bookArray34 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList35 = new java.util.ArrayList<model.Book>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList35, bookArray34);
        model.CD[] cDArray37 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList38 = new java.util.ArrayList<model.CD>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList38, cDArray37);
        model.Magazine[] magazineArray40 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList41 = new java.util.ArrayList<model.Magazine>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList41, magazineArray40);
        model.ItemSearchResult itemSearchResult43 = new model.ItemSearchResult(book31, cD32, magazine33, (java.util.Collection<model.Book>) bookList35, (java.util.Collection<model.CD>) cDList38, (java.util.Collection<model.Magazine>) magazineList41);
        itemSearchResult30.similarCD = cDList38;
        model.Book book45 = null;
        model.CD cD46 = null;
        model.Magazine magazine47 = null;
        model.Book[] bookArray48 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList49 = new java.util.ArrayList<model.Book>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList49, bookArray48);
        model.CD[] cDArray51 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList52 = new java.util.ArrayList<model.CD>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList52, cDArray51);
        model.Magazine[] magazineArray54 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList55 = new java.util.ArrayList<model.Magazine>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList55, magazineArray54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult(book45, cD46, magazine47, (java.util.Collection<model.Book>) bookList49, (java.util.Collection<model.CD>) cDList52, (java.util.Collection<model.Magazine>) magazineList55);
        model.ItemSearchResult itemSearchResult58 = new model.ItemSearchResult(book13, cD15, magazine16, bookCollection17, (java.util.Collection<model.CD>) cDList38, (java.util.Collection<model.Magazine>) magazineList55);
        cD15.ID = (short) 10;
        boolean boolean62 = buySpecialItems12.buyAnItem((model.Item) cD15, (double) 0);
        model.PayDebit payDebit63 = new model.PayDebit();
        buySpecialItems12.paymentAPI = payDebit63;
        newsletterSubscriptionManager3.paymentAPI = payDebit63;
        payDebit63.pay((double) 7437457);
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(bookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(cDArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(magazineArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(bookArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(cDArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(magazineArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(bookArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(cDArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(magazineArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test2262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2262");
        model.Course course0 = new model.Course();
        java.lang.String str1 = course0.code;
        java.lang.String str2 = course0.subject;
        course0.code = "model.RegistrationFailedException: src/Magazine.csv";
        course0.code = "";
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test2263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2263");
        model.PaidNewsletter paidNewsletter0 = new model.PaidNewsletter();
        model.LibraryManagementTeam libraryManagementTeam1 = new model.LibraryManagementTeam();
        int int2 = libraryManagementTeam1.ID;
        int int3 = libraryManagementTeam1.accessCode;
        model.ItemManagement itemManagement4 = new model.ItemManagement();
        libraryManagementTeam1.itemManagement = itemManagement4;
        model.Book book6 = null;
        model.CD cD8 = new model.CD("");
        model.Magazine magazine9 = null;
        java.util.Collection<model.Book> bookCollection10 = null;
        model.Book book11 = null;
        model.CD cD12 = null;
        model.Magazine magazine13 = null;
        model.Book[] bookArray14 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList15 = new java.util.ArrayList<model.Book>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList15, bookArray14);
        model.CD[] cDArray17 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList18 = new java.util.ArrayList<model.CD>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList18, cDArray17);
        model.Magazine[] magazineArray20 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList21 = new java.util.ArrayList<model.Magazine>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList21, magazineArray20);
        model.ItemSearchResult itemSearchResult23 = new model.ItemSearchResult(book11, cD12, magazine13, (java.util.Collection<model.Book>) bookList15, (java.util.Collection<model.CD>) cDList18, (java.util.Collection<model.Magazine>) magazineList21);
        model.Book book24 = null;
        model.CD cD25 = null;
        model.Magazine magazine26 = null;
        model.Book[] bookArray27 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList28 = new java.util.ArrayList<model.Book>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList28, bookArray27);
        model.CD[] cDArray30 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList31 = new java.util.ArrayList<model.CD>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList31, cDArray30);
        model.Magazine[] magazineArray33 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList34 = new java.util.ArrayList<model.Magazine>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList34, magazineArray33);
        model.ItemSearchResult itemSearchResult36 = new model.ItemSearchResult(book24, cD25, magazine26, (java.util.Collection<model.Book>) bookList28, (java.util.Collection<model.CD>) cDList31, (java.util.Collection<model.Magazine>) magazineList34);
        itemSearchResult23.similarCD = cDList31;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult(book6, cD8, magazine9, bookCollection10, (java.util.Collection<model.CD>) cDList31, (java.util.Collection<model.Magazine>) magazineList48);
        cD8.ID = (short) 10;
        cD8.canBePurchased = false;
        boolean boolean56 = cD8.canBePurchased;
        itemManagement4.addAnItem((model.Item) cD8);
        model.Student student58 = new model.Student();
        int int59 = student58.ID;
        model.StudentOnlineResources studentOnlineResources60 = new model.StudentOnlineResources((model.Client) student58);
        model.LibraryManagementTeam libraryManagementTeam61 = new model.LibraryManagementTeam();
        int int62 = libraryManagementTeam61.ID;
        model.Student student63 = new model.Student();
        int int64 = student63.ID;
        model.StudentOnlineResources studentOnlineResources65 = new model.StudentOnlineResources((model.Client) student63);
        model.VirtualBook virtualBook67 = studentOnlineResources65.searchAccessibleBook("");
        model.VirtualItemContent virtualItemContent68 = virtualBook67.content;
        libraryManagementTeam61.enableAnItem((model.Item) virtualBook67);
        java.lang.String str70 = studentOnlineResources60.readVirtualItem((model.VirtualItem) virtualBook67);
        itemManagement4.disableAnItem((model.Item) virtualBook67);
        boolean boolean72 = paidNewsletter0.equals((java.lang.Object) virtualBook67);
        virtualBook67.ID = 7822095;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(bookArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(cDArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(magazineArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(bookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(cDArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(magazineArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(virtualBook67);
        org.junit.Assert.assertNull(virtualItemContent68);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test2264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2264");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.RequestForum requestForum1 = model.RequestForum.createRequestForum();
        model.Request request2 = new model.Request();
        request2.title = "";
        java.lang.String str5 = requestForum1.makeARequest(request2);
        int int6 = requestForum0.assessBooksPriority(request2);
        model.LibraryManagementTeam libraryManagementTeam7 = new model.LibraryManagementTeam();
        int int8 = libraryManagementTeam7.ID;
        int int9 = libraryManagementTeam7.accessCode;
        model.Item item10 = null;
        libraryManagementTeam7.addAnItem(item10);
        java.util.ArrayList<model.Item> itemList12 = libraryManagementTeam7.items;
        requestForum0.managementTeam = libraryManagementTeam7;
        java.util.Collection<model.Request> requestCollection14 = libraryManagementTeam7.bookRequests;
        int int15 = libraryManagementTeam7.ID;
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertNotNull(requestForum1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(itemList12);
        org.junit.Assert.assertNull(requestCollection14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test2265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2265");
        model.Database database0 = null;
        model.Login login1 = new model.Login(database0);
        model.Database database9 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str10 = database9.getBookFilePath();
        database9.itemPath = "hi!";
        model.Database.database = database9;
        java.lang.String str14 = database9.getNewspaperFilePath();
        login1.db = database9;
        boolean boolean17 = database9.addItem("model.RegistrationFailedException: src/Magazine.csv");
        java.lang.String str18 = database9.getCDFilePath();
        model.Login login19 = model.Login.makeLogin(database9);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "src/Book.csv" + "'", str10, "src/Book.csv");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "src/Newsletter.csv" + "'", str14, "src/Newsletter.csv");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "src/CD.csv" + "'", str18, "src/CD.csv");
        org.junit.Assert.assertNotNull(login19);
    }

    @Test
    public void test2266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2266");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.Student student5 = new model.Student();
        int int6 = student5.ID;
        model.StudentOnlineResources studentOnlineResources7 = new model.StudentOnlineResources((model.Client) student5);
        student5.ID = '#';
        java.lang.String str10 = student5.email;
        newsletterSubscriptionManager3.client = student5;
        model.Newsletter[] newsletterArray12 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList13 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList13, newsletterArray12);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager15 = new model.NewsletterSubscriptionManager(newsletterList13);
        newsletterSubscriptionManager3.newsletterSubscribed = newsletterList13;
        java.util.ArrayList<model.Newsletter> newsletterList17 = newsletterSubscriptionManager3.newsletterSubscribed;
        model.Newsletter[] newsletterArray18 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList19 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList19, newsletterArray18);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager21 = new model.NewsletterSubscriptionManager(newsletterList19);
        model.Client client22 = newsletterSubscriptionManager21.client;
        model.Student student23 = new model.Student();
        int int24 = student23.ID;
        model.StudentOnlineResources studentOnlineResources25 = new model.StudentOnlineResources((model.Client) student23);
        student23.ID = '#';
        java.lang.String str28 = student23.email;
        newsletterSubscriptionManager21.client = student23;
        model.Newsletter[] newsletterArray30 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList31 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList31, newsletterArray30);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager33 = new model.NewsletterSubscriptionManager(newsletterList31);
        newsletterSubscriptionManager21.newsletterSubscribed = newsletterList31;
        newsletterSubscriptionManager3.newsletterSubscribed = newsletterList31;
        model.RentAndReturnSystem rentAndReturnSystem36 = new model.RentAndReturnSystem();
        model.Payment payment37 = rentAndReturnSystem36.paymentAPI;
        model.PayMobileWallet payMobileWallet38 = new model.PayMobileWallet();
        payMobileWallet38.amountPay = 100.0f;
        payMobileWallet38.amountPay = (byte) -1;
        rentAndReturnSystem36.paymentAPI = payMobileWallet38;
        newsletterSubscriptionManager3.paymentAPI = payMobileWallet38;
        payMobileWallet38.pay((double) 8547594);
        payMobileWallet38.amountPay = 4869542;
        payMobileWallet38.amountPay = 2174094;
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(newsletterArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(newsletterList17);
        org.junit.Assert.assertNotNull(newsletterArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(client22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(newsletterArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(payment37);
    }

    @Test
    public void test2267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2267");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.Request request1 = new model.Request();
        request1.title = "";
        java.lang.String str4 = requestForum0.makeARequest(request1);
        model.LibraryManagementTeam libraryManagementTeam5 = requestForum0.managementTeam;
        model.RequestForum requestForum6 = model.RequestForum.createRequestForum();
        model.Request request7 = new model.Request();
        request7.title = "";
        java.lang.String str10 = requestForum6.makeARequest(request7);
        model.LibraryManagementTeam libraryManagementTeam11 = new model.LibraryManagementTeam();
        int int12 = libraryManagementTeam11.ID;
        model.Magazine magazine14 = new model.Magazine("");
        java.util.Calendar calendar15 = magazine14.date;
        magazine14.author = "model.RegistrationFailedException: ";
        libraryManagementTeam11.disableAnItem((model.Item) magazine14);
        requestForum6.managementTeam = libraryManagementTeam11;
        model.Request request20 = new model.Request();
        request20.title = "src/Client.csv";
        java.lang.String str23 = requestForum6.makeARequest(request20);
        model.Client client24 = request20.requestee;
        java.lang.String str25 = requestForum0.makeARequest(request20);
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(libraryManagementTeam5);
        org.junit.Assert.assertNotNull(requestForum6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(calendar15);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(client24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
    }

    @Test
    public void test2268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2268");
        model.Database database7 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database7;
        model.SearchVirtualItem searchVirtualItem9 = new model.SearchVirtualItem(database7);
        model.UniProvidedNewsletter uniProvidedNewsletter11 = searchVirtualItem9.getUniNewsletter("");
        model.VirtualBook virtualBook13 = searchVirtualItem9.getVirtualBook("src/VirtualBook.csv");
        model.VirtualBook virtualBook15 = searchVirtualItem9.getVirtualBook("hi!");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNull(uniProvidedNewsletter11);
        org.junit.Assert.assertNull(virtualBook13);
        org.junit.Assert.assertNull(virtualBook15);
    }

    @Test
    public void test2269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2269");
        model.ItemManagement itemManagement0 = new model.ItemManagement();
        model.Item item2 = itemManagement0.selectAnItemFromDatabase((int) (short) 0);
        model.Database database3 = model.Database.database;
        model.Student student4 = new model.Student();
        int int5 = student4.ID;
        model.StudentOnlineResources studentOnlineResources6 = new model.StudentOnlineResources((model.Client) student4);
        student4.ID = '#';
        database3.addClient((model.Client) student4);
        itemManagement0.database = database3;
        model.Database database11 = itemManagement0.database;
        model.Register register12 = model.Register.makeRegister(database11);
        model.Database database20 = model.Database.createDatabase("model.RegistrationFailedException: ", "", "src/CD.csv", "model.RegistrationFailedException: src/Magazine.csv", "model.RegistrationFailedException: src/Book.csv", "model.RegistrationFailedException: ", "model.RegistrationFailedException: src/Book.csv");
        model.Database.database = database20;
        register12.database = database20;
        org.junit.Assert.assertNull(item2);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(register12);
        org.junit.Assert.assertNotNull(database20);
    }

    @Test
    public void test2270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2270");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.Database.database = database7;
        java.lang.String str10 = database7.virtualItemFilePath;
        model.Login login11 = new model.Login(database7);
        model.Database database12 = login11.db;
        model.Login login13 = new model.Login(database12);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "model.RegistrationFailedException: src/Magazine.csv" + "'", str10, "model.RegistrationFailedException: src/Magazine.csv");
        org.junit.Assert.assertNotNull(database12);
    }

    @Test
    public void test2271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2271");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getBookFilePath();
        database7.itemPath = "hi!";
        model.Database.database = database7;
        model.Client client13 = database7.getClient("src/Magazine.csv");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/Book.csv" + "'", str8, "src/Book.csv");
        org.junit.Assert.assertNotNull(client13);
    }

    @Test
    public void test2272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2272");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.PayCredit payCredit5 = new model.PayCredit();
        payCredit5.amountPay = 10;
        newsletterSubscriptionManager3.paymentAPI = payCredit5;
        payCredit5.amountPay = 1;
        payCredit5.amountPay = 20;
        payCredit5.pay((double) 7694375);
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
    }

    @Test
    public void test2273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2273");
        model.BuySpecialItems buySpecialItems0 = new model.BuySpecialItems();
        model.Payment payment1 = null;
        buySpecialItems0.paymentAPI = payment1;
        model.PayMobileWallet payMobileWallet3 = new model.PayMobileWallet();
        buySpecialItems0.paymentAPI = payMobileWallet3;
        payMobileWallet3.pay((double) 'a');
        payMobileWallet3.pay((double) 'a');
        payMobileWallet3.pay((double) (byte) 10);
    }

    @Test
    public void test2274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2274");
        model.ItemManagement itemManagement0 = new model.ItemManagement();
        model.Database database1 = null;
        itemManagement0.database = database1;
        model.BuySpecialItems buySpecialItems3 = new model.BuySpecialItems();
        model.Book book4 = null;
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        java.util.Collection<model.Book> bookCollection8 = null;
        model.Book book9 = null;
        model.CD cD10 = null;
        model.Magazine magazine11 = null;
        model.Book[] bookArray12 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList13 = new java.util.ArrayList<model.Book>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList13, bookArray12);
        model.CD[] cDArray15 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList16 = new java.util.ArrayList<model.CD>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList16, cDArray15);
        model.Magazine[] magazineArray18 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList19 = new java.util.ArrayList<model.Magazine>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList19, magazineArray18);
        model.ItemSearchResult itemSearchResult21 = new model.ItemSearchResult(book9, cD10, magazine11, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList16, (java.util.Collection<model.Magazine>) magazineList19);
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        itemSearchResult21.similarCD = cDList29;
        model.Book book36 = null;
        model.CD cD37 = null;
        model.Magazine magazine38 = null;
        model.Book[] bookArray39 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList40 = new java.util.ArrayList<model.Book>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList40, bookArray39);
        model.CD[] cDArray42 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList43 = new java.util.ArrayList<model.CD>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList43, cDArray42);
        model.Magazine[] magazineArray45 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList46 = new java.util.ArrayList<model.Magazine>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList46, magazineArray45);
        model.ItemSearchResult itemSearchResult48 = new model.ItemSearchResult(book36, cD37, magazine38, (java.util.Collection<model.Book>) bookList40, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList46);
        model.ItemSearchResult itemSearchResult49 = new model.ItemSearchResult(book4, cD6, magazine7, bookCollection8, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList46);
        cD6.ID = (short) 10;
        boolean boolean53 = buySpecialItems3.buyAnItem((model.Item) cD6, (double) 0);
        itemManagement0.enableAnItem((model.Item) cD6);
        model.Database database55 = model.Database.database;
        model.Student student56 = new model.Student();
        int int57 = student56.ID;
        model.StudentOnlineResources studentOnlineResources58 = new model.StudentOnlineResources((model.Client) student56);
        student56.ID = '#';
        database55.addClient((model.Client) student56);
        itemManagement0.database = database55;
        model.Login login63 = model.Login.makeLogin(database55);
        model.Login login64 = new model.Login(database55);
        // The following exception was thrown during execution in test generation
        try {
            model.Client client67 = login64.login("src/CD.csv", "hi!");
            org.junit.Assert.fail("Expected exception of type model.LoginFailedException; message: Login Failed.");
        } catch (model.LoginFailedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(bookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cDArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(magazineArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(bookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cDArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(magazineArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(login63);
    }

    @Test
    public void test2275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2275");
        model.Faculty faculty0 = new model.Faculty();
        faculty0.username = "hi!";
        java.util.Collection<model.Course> courseCollection3 = null;
        faculty0.courses = courseCollection3;
        java.util.Collection<model.Course> courseCollection5 = faculty0.courses;
        model.Newsletter[] newsletterArray6 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList7 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList7, newsletterArray6);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager9 = new model.NewsletterSubscriptionManager(newsletterList7);
        model.Client client10 = newsletterSubscriptionManager9.client;
        model.Student student11 = new model.Student();
        int int12 = student11.ID;
        model.StudentOnlineResources studentOnlineResources13 = new model.StudentOnlineResources((model.Client) student11);
        student11.ID = '#';
        java.lang.String str16 = student11.email;
        newsletterSubscriptionManager9.client = student11;
        model.Newsletter[] newsletterArray18 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList19 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList19, newsletterArray18);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager21 = new model.NewsletterSubscriptionManager(newsletterList19);
        newsletterSubscriptionManager9.newsletterSubscribed = newsletterList19;
        faculty0.newsletterManager = newsletterSubscriptionManager9;
        model.StudentOnlineResources studentOnlineResources24 = new model.StudentOnlineResources((model.Client) faculty0);
        model.VirtualBook virtualBook26 = studentOnlineResources24.searchAccessibleBook("model.RegistrationFailedException: src/Book.csv");
        org.junit.Assert.assertNull(courseCollection5);
        org.junit.Assert.assertNotNull(newsletterArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(client10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(newsletterArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(virtualBook26);
    }

    @Test
    public void test2276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2276");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        model.RentedItem[] rentedItemArray4 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList5 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList5, rentedItemArray4);
        model.BorrowingManager borrowingManager7 = new model.BorrowingManager(rentedItemList5);
        borrowingManager3.physicalItemBorrowed = rentedItemList5;
        model.BorrowingManager borrowingManager9 = new model.BorrowingManager(rentedItemList5);
        model.BorrowingManager borrowingManager10 = new model.BorrowingManager(rentedItemList5);
        model.Client client11 = borrowingManager10.client;
        model.Student student12 = new model.Student();
        int int13 = student12.ID;
        model.StudentOnlineResources studentOnlineResources14 = new model.StudentOnlineResources((model.Client) student12);
        model.VirtualBook virtualBook16 = studentOnlineResources14.searchAccessibleBook("");
        java.lang.String str17 = virtualBook16.location;
        int int18 = virtualBook16.ID;
        virtualBook16.isBookLost = false;
        java.lang.String str21 = virtualBook16.author;
        borrowingManager10.removeRentedItem((model.Item) virtualBook16);
        model.ItemManagement itemManagement23 = new model.ItemManagement();
        model.Item item25 = itemManagement23.selectAnItemFromDatabase((int) (short) 0);
        model.Database database26 = model.Database.database;
        model.Student student27 = new model.Student();
        int int28 = student27.ID;
        model.StudentOnlineResources studentOnlineResources29 = new model.StudentOnlineResources((model.Client) student27);
        student27.ID = '#';
        database26.addClient((model.Client) student27);
        itemManagement23.database = database26;
        model.Database database34 = itemManagement23.database;
        model.Database database35 = itemManagement23.database;
        model.VirtualBook virtualBook37 = new model.VirtualBook("src/Magazine.csv");
        model.VirtualItemContent virtualItemContent39 = new model.VirtualItemContent("hi!");
        java.lang.String str40 = virtualItemContent39.link;
        java.lang.String str42 = virtualItemContent39.getContent("");
        java.lang.String str44 = virtualItemContent39.getContent("model.RegistrationFailedException: ");
        java.lang.String str45 = virtualItemContent39.link;
        java.lang.String str47 = virtualItemContent39.getContent("hi!");
        virtualBook37.content = virtualItemContent39;
        itemManagement23.enableAnItem((model.Item) virtualBook37);
        virtualBook37.canBePurchased = true;
        java.time.LocalDate localDate52 = null;
        // The following exception was thrown during execution in test generation
        try {
            borrowingManager10.rentAnItem((model.Item) virtualBook37, localDate52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.toString()\" because \"date\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(rentedItemArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(client11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(virtualBook16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(item25);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
    }

    @Test
    public void test2277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2277");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "src/Book.csv", "src/CD.csv" };
        model.Item item8 = model.ItemFactory.makeItem("", strArray7);
        model.Item item9 = model.ItemFactory.makeItem("model.RegistrationFailedException: src/Magazine.csv", strArray7);
        model.Item item10 = model.ItemFactory.makeItem("model.RegistrationFailedException: model.RentingNotAllowedException: hi!", strArray7);
        model.Item item11 = model.ItemFactory.makeItem("model.RentingNotAllowedException: src/Magazine.csv", strArray7);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNull(item8);
        org.junit.Assert.assertNull(item9);
        org.junit.Assert.assertNull(item10);
        org.junit.Assert.assertNull(item11);
    }

    @Test
    public void test2278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2278");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter54 = null;
        model.PaidNewsletter paidNewsletter55 = null;
        model.VirtualItemSearchResult virtualItemSearchResult56 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter54, paidNewsletter55);
        model.PaidNewsletter paidNewsletter57 = virtualItemSearchResult56.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter58 = virtualItemSearchResult56.getUniNewsletter();
        model.PaidNewsletter paidNewsletter59 = virtualItemSearchResult56.getPaidNewsletter();
        model.UniProvidedNewsletter uniProvidedNewsletter60 = virtualItemSearchResult56.getUniNewsletter();
        model.PaidNewsletter paidNewsletter61 = null;
        virtualItemSearchResult56.setPaidNewsletter(paidNewsletter61);
        model.VirtualBook virtualBook63 = virtualItemSearchResult56.virtualBook;
        virtualBook63.location = "src/Book.csv";
        int int66 = virtualBook63.ID;
        boolean boolean67 = virtualBook63.isBookLost;
        int int68 = virtualBook63.edition;
        virtualBook63.edition = 8213253;
        boolean boolean71 = virtualBook63.canBePurchased;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertNull(paidNewsletter57);
        org.junit.Assert.assertNull(uniProvidedNewsletter58);
        org.junit.Assert.assertNull(paidNewsletter59);
        org.junit.Assert.assertNull(uniProvidedNewsletter60);
        org.junit.Assert.assertNotNull(virtualBook63);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test2279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2279");
        model.Faculty faculty0 = new model.Faculty();
        java.lang.String str1 = faculty0.faculty;
        java.lang.String str2 = faculty0.faculty;
        faculty0.viewMyOnlineResource();
        java.util.Collection<model.Course> courseCollection4 = faculty0.courses;
        model.Faculty faculty5 = new model.Faculty();
        faculty5.username = "hi!";
        java.lang.String str8 = faculty5.username;
        model.Course course9 = new model.Course();
        java.lang.String str10 = course9.subject;
        course9.code = "";
        course9.subject = "src/Magazine.csv";
        model.Course course15 = new model.Course();
        java.lang.String str16 = course15.code;
        model.Course course17 = new model.Course();
        java.lang.String str18 = course17.subject;
        java.lang.String str19 = course17.subject;
        java.lang.String str20 = course17.code;
        java.lang.String str21 = course17.code;
        model.Course course22 = new model.Course();
        java.lang.String str23 = course22.code;
        model.Course course24 = new model.Course();
        java.lang.String str25 = course24.subject;
        java.lang.String str26 = course24.subject;
        java.lang.String str27 = course24.code;
        course24.code = "src/VirtualBook.csv";
        model.Course course30 = new model.Course();
        model.Course course31 = new model.Course();
        java.lang.String str32 = course31.subject;
        course31.code = "";
        course31.subject = "src/Magazine.csv";
        int int37 = course31.year;
        model.Course course38 = new model.Course();
        java.lang.String str39 = course38.code;
        java.lang.String str40 = course38.subject;
        course38.subject = "model.RegistrationFailedException: ";
        course38.subject = "src/Magazine.csv";
        model.Course[] courseArray45 = new model.Course[] { course9, course15, course17, course22, course24, course30, course31, course38 };
        java.util.ArrayList<model.Course> courseList46 = new java.util.ArrayList<model.Course>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Course>) courseList46, courseArray45);
        faculty5.courses = courseList46;
        faculty0.courses = courseList46;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(courseCollection4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(courseArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test2280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2280");
        model.Faculty faculty0 = new model.Faculty();
        faculty0.username = "hi!";
        java.util.Collection<model.Course> courseCollection3 = faculty0.courses;
        java.lang.String str4 = faculty0.username;
        faculty0.faculty = "src/Newsletter.csv";
        java.util.Collection<model.Book> bookCollection7 = faculty0.textbooks;
        org.junit.Assert.assertNull(courseCollection3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNull(bookCollection7);
    }

    @Test
    public void test2281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2281");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        virtualBook4.ID = (short) 10;
        int int54 = virtualBook4.ID;
        virtualBook4.showContent();
        virtualBook4.location = "src/CD.csv";
        model.VirtualItemContent virtualItemContent58 = virtualBook4.content;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNull(virtualItemContent58);
    }

    @Test
    public void test2282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2282");
        model.Database database0 = null;
        model.Register register1 = model.Register.makeRegister(database0);
        model.Faculty faculty2 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection3 = faculty2.courses;
        boolean boolean6 = register1.registerAsStaff((model.Staff) faculty2, "src/Book.csv", "src/Book.csv");
        model.Database database7 = model.Database.database;
        model.Student student8 = new model.Student();
        int int9 = student8.ID;
        model.StudentOnlineResources studentOnlineResources10 = new model.StudentOnlineResources((model.Client) student8);
        student8.ID = '#';
        database7.addClient((model.Client) student8);
        student8.email = "hi!";
        boolean boolean18 = register1.registerAsStaff((model.Staff) student8, "src/CD.csv", "src/Book.csv");
        model.Database database26 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str27 = database26.getVirtualBookFilePath();
        register1.database = database26;
        model.Database database36 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str37 = database36.getVirtualBookFilePath();
        model.Database.database = database36;
        register1.database = database36;
        model.Database database47 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.SearchVirtualItem searchVirtualItem48 = new model.SearchVirtualItem(database47);
        int int49 = database47.getRandomID();
        model.Database.database = database47;
        register1.database = database47;
        model.Database database52 = model.Database.database;
        java.util.ArrayList<java.lang.String> strList53 = database52.getAllItems();
        model.Client client55 = database52.getClient("src/Magazine.csv");
        client55.email = "src/Newsletter.csv";
        client55.username = "model.RegistrationFailedException: src/Book.csv";
        database47.addClient(client55);
        int int61 = database47.getRandomID();
        org.junit.Assert.assertNotNull(register1);
        org.junit.Assert.assertNull(courseCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "src/VirtualBook.csv" + "'", str27, "src/VirtualBook.csv");
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "src/VirtualBook.csv" + "'", str37, "src/VirtualBook.csv");
        org.junit.Assert.assertNotNull(database47);
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 6410860 + "'", int49 == 6410860);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(client55);
// flaky:         org.junit.Assert.assertTrue("'" + int61 + "' != '" + 6125525 + "'", int61 == 6125525);
    }

    @Test
    public void test2283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2283");
        model.Database database7 = model.Database.createDatabase("src/Client.csv", "model.RegistrationFailedException: src/Book.csv", "model.RegistrationFailedException: src/VirtualBook.csv", "model.RegistrationFailedException: src/VirtualBook.csv", "src/VirtualBook.csv", "src/Newsletter.csv", "src/Newsletter.csv");
        org.junit.Assert.assertNotNull(database7);
    }

    @Test
    public void test2284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2284");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter54 = null;
        model.PaidNewsletter paidNewsletter55 = null;
        model.VirtualItemSearchResult virtualItemSearchResult56 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter54, paidNewsletter55);
        model.UniProvidedNewsletter uniProvidedNewsletter57 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter57.title = "hi!";
        uniProvidedNewsletter57.title = "";
        virtualItemSearchResult56.uniNewsletter = uniProvidedNewsletter57;
        model.UniProvidedNewsletter uniProvidedNewsletter63 = virtualItemSearchResult56.uniNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter64 = virtualItemSearchResult56.getUniNewsletter();
        model.VirtualBook virtualBook65 = virtualItemSearchResult56.virtualBook;
        model.PaidNewsletter paidNewsletter66 = new model.PaidNewsletter();
        virtualItemSearchResult56.setPaidNewsletter(paidNewsletter66);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertNotNull(uniProvidedNewsletter63);
        org.junit.Assert.assertNotNull(uniProvidedNewsletter64);
        org.junit.Assert.assertNotNull(virtualBook65);
    }

    @Test
    public void test2285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2285");
        model.Database database0 = model.Database.database;
        java.util.ArrayList<java.lang.String> strList1 = database0.getAllItems();
        model.Client client3 = database0.getClient("src/Magazine.csv");
        java.lang.String str4 = database0.getCDFilePath();
        model.SearchVirtualItem searchVirtualItem5 = new model.SearchVirtualItem(database0);
        org.junit.Assert.assertNotNull(database0);
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(client3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "src/CD.csv" + "'", str4, "src/CD.csv");
    }

    @Test
    public void test2286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2286");
        model.LoginFailedException loginFailedException1 = new model.LoginFailedException("model.RegistrationFailedException: model.RentingNotAllowedException: hi!");
    }

    @Test
    public void test2287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2287");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.RequestForum requestForum1 = model.RequestForum.createRequestForum();
        model.Request request2 = new model.Request();
        request2.title = "";
        java.lang.String str5 = requestForum1.makeARequest(request2);
        int int6 = requestForum0.assessBooksPriority(request2);
        model.LibraryManagementTeam libraryManagementTeam7 = new model.LibraryManagementTeam();
        int int8 = libraryManagementTeam7.ID;
        int int9 = libraryManagementTeam7.accessCode;
        model.Item item10 = null;
        libraryManagementTeam7.addAnItem(item10);
        java.util.ArrayList<model.Item> itemList12 = libraryManagementTeam7.items;
        requestForum0.managementTeam = libraryManagementTeam7;
        model.RequestForum requestForum14 = model.RequestForum.createRequestForum();
        model.LibraryManagementTeam libraryManagementTeam15 = new model.LibraryManagementTeam();
        int int16 = libraryManagementTeam15.ID;
        int int17 = libraryManagementTeam15.accessCode;
        model.Item item18 = null;
        libraryManagementTeam15.addAnItem(item18);
        requestForum14.managementTeam = libraryManagementTeam15;
        java.util.ArrayList<model.Item> itemList21 = libraryManagementTeam15.items;
        requestForum0.managementTeam = libraryManagementTeam15;
        model.LibraryManagementTeam libraryManagementTeam23 = new model.LibraryManagementTeam();
        int int24 = libraryManagementTeam23.ID;
        int int25 = libraryManagementTeam23.accessCode;
        model.ItemManagement itemManagement26 = new model.ItemManagement();
        model.Database database27 = null;
        itemManagement26.database = database27;
        model.Student student29 = new model.Student();
        int int30 = student29.ID;
        model.StudentOnlineResources studentOnlineResources31 = new model.StudentOnlineResources((model.Client) student29);
        model.VirtualBook virtualBook33 = studentOnlineResources31.searchAccessibleBook("");
        itemManagement26.disableAnItem((model.Item) virtualBook33);
        libraryManagementTeam23.itemManagement = itemManagement26;
        requestForum0.managementTeam = libraryManagementTeam23;
        java.util.Collection<model.Request> requestCollection37 = libraryManagementTeam23.bookRequests;
        java.util.ArrayList<model.Item> itemList38 = libraryManagementTeam23.items;
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertNotNull(requestForum1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(itemList12);
        org.junit.Assert.assertNotNull(requestForum14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(itemList21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(virtualBook33);
        org.junit.Assert.assertNull(requestCollection37);
        org.junit.Assert.assertNotNull(itemList38);
    }

    @Test
    public void test2288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2288");
        model.BuySpecialItems buySpecialItems0 = new model.BuySpecialItems();
        model.PayDebit payDebit1 = new model.PayDebit();
        buySpecialItems0.paymentAPI = payDebit1;
        model.BuySpecialItems buySpecialItems3 = new model.BuySpecialItems();
        model.Payment payment4 = null;
        buySpecialItems3.paymentAPI = payment4;
        model.PayMobileWallet payMobileWallet6 = new model.PayMobileWallet();
        buySpecialItems3.paymentAPI = payMobileWallet6;
        payMobileWallet6.amountPay = (-1L);
        payMobileWallet6.pay((double) (-1.0f));
        buySpecialItems0.paymentAPI = payMobileWallet6;
        model.BuySpecialItems buySpecialItems13 = new model.BuySpecialItems();
        model.Book book14 = null;
        model.CD cD16 = new model.CD("");
        model.Magazine magazine17 = null;
        java.util.Collection<model.Book> bookCollection18 = null;
        model.Book book19 = null;
        model.CD cD20 = null;
        model.Magazine magazine21 = null;
        model.Book[] bookArray22 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList23 = new java.util.ArrayList<model.Book>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList23, bookArray22);
        model.CD[] cDArray25 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList26 = new java.util.ArrayList<model.CD>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList26, cDArray25);
        model.Magazine[] magazineArray28 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList29 = new java.util.ArrayList<model.Magazine>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList29, magazineArray28);
        model.ItemSearchResult itemSearchResult31 = new model.ItemSearchResult(book19, cD20, magazine21, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList29);
        model.Book book32 = null;
        model.CD cD33 = null;
        model.Magazine magazine34 = null;
        model.Book[] bookArray35 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList36 = new java.util.ArrayList<model.Book>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList36, bookArray35);
        model.CD[] cDArray38 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList39 = new java.util.ArrayList<model.CD>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList39, cDArray38);
        model.Magazine[] magazineArray41 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList42 = new java.util.ArrayList<model.Magazine>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList42, magazineArray41);
        model.ItemSearchResult itemSearchResult44 = new model.ItemSearchResult(book32, cD33, magazine34, (java.util.Collection<model.Book>) bookList36, (java.util.Collection<model.CD>) cDList39, (java.util.Collection<model.Magazine>) magazineList42);
        itemSearchResult31.similarCD = cDList39;
        model.Book book46 = null;
        model.CD cD47 = null;
        model.Magazine magazine48 = null;
        model.Book[] bookArray49 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList50 = new java.util.ArrayList<model.Book>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList50, bookArray49);
        model.CD[] cDArray52 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList53 = new java.util.ArrayList<model.CD>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList53, cDArray52);
        model.Magazine[] magazineArray55 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList56 = new java.util.ArrayList<model.Magazine>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList56, magazineArray55);
        model.ItemSearchResult itemSearchResult58 = new model.ItemSearchResult(book46, cD47, magazine48, (java.util.Collection<model.Book>) bookList50, (java.util.Collection<model.CD>) cDList53, (java.util.Collection<model.Magazine>) magazineList56);
        model.ItemSearchResult itemSearchResult59 = new model.ItemSearchResult(book14, cD16, magazine17, bookCollection18, (java.util.Collection<model.CD>) cDList39, (java.util.Collection<model.Magazine>) magazineList56);
        cD16.ID = (short) 10;
        boolean boolean63 = buySpecialItems13.buyAnItem((model.Item) cD16, (double) 0);
        model.LibraryManagementTeam libraryManagementTeam64 = new model.LibraryManagementTeam();
        int int65 = libraryManagementTeam64.ID;
        int int66 = libraryManagementTeam64.accessCode;
        model.Item item67 = null;
        libraryManagementTeam64.addAnItem(item67);
        java.util.ArrayList<model.Item> itemList69 = libraryManagementTeam64.items;
        buySpecialItems13.purchasedItems = itemList69;
        model.LibraryManagementTeam libraryManagementTeam71 = new model.LibraryManagementTeam();
        libraryManagementTeam71.accessCode = (byte) 10;
        java.util.ArrayList<model.Item> itemList74 = libraryManagementTeam71.items;
        model.LibraryManagementTeam libraryManagementTeam75 = new model.LibraryManagementTeam();
        libraryManagementTeam75.accessCode = (byte) 10;
        java.util.ArrayList<model.Item> itemList78 = libraryManagementTeam75.items;
        libraryManagementTeam71.items = itemList78;
        buySpecialItems13.purchasedItems = itemList78;
        buySpecialItems0.purchasedItems = itemList78;
        model.BuySpecialItems buySpecialItems82 = new model.BuySpecialItems();
        model.Payment payment83 = null;
        buySpecialItems82.paymentAPI = payment83;
        model.PayMobileWallet payMobileWallet85 = new model.PayMobileWallet();
        buySpecialItems82.paymentAPI = payMobileWallet85;
        payMobileWallet85.pay((double) 'a');
        buySpecialItems0.paymentAPI = payMobileWallet85;
        double double90 = payMobileWallet85.amountPay;
        payMobileWallet85.pay((double) 2648933);
        payMobileWallet85.pay((double) 6924365);
        org.junit.Assert.assertNotNull(bookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(magazineArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(bookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(cDArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(magazineArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(bookArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(cDArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(magazineArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(itemList69);
        org.junit.Assert.assertNotNull(itemList74);
        org.junit.Assert.assertNotNull(itemList78);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 97.0d + "'", double90 == 97.0d);
    }

    @Test
    public void test2289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2289");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        java.util.Iterator<model.VirtualItem> virtualItemItor3 = studentOnlineResources2.iterator();
        model.VirtualItem virtualItem4 = null;
        java.lang.String str5 = studentOnlineResources2.readVirtualItem(virtualItem4);
        model.Student student6 = new model.Student();
        int int7 = student6.ID;
        model.StudentOnlineResources studentOnlineResources8 = new model.StudentOnlineResources((model.Client) student6);
        model.VirtualBook virtualBook10 = studentOnlineResources8.searchAccessibleBook("");
        model.CD cD12 = new model.CD("");
        model.Magazine magazine13 = null;
        model.Book book14 = null;
        model.CD cD15 = null;
        model.Magazine magazine16 = null;
        model.Book[] bookArray17 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList18 = new java.util.ArrayList<model.Book>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList18, bookArray17);
        model.CD[] cDArray20 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList21 = new java.util.ArrayList<model.CD>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList21, cDArray20);
        model.Magazine[] magazineArray23 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList24 = new java.util.ArrayList<model.Magazine>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList24, magazineArray23);
        model.ItemSearchResult itemSearchResult26 = new model.ItemSearchResult(book14, cD15, magazine16, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList21, (java.util.Collection<model.Magazine>) magazineList24);
        model.Book book27 = null;
        model.CD cD28 = null;
        model.Magazine magazine29 = null;
        model.Book[] bookArray30 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList31 = new java.util.ArrayList<model.Book>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList31, bookArray30);
        model.CD[] cDArray33 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList34 = new java.util.ArrayList<model.CD>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList34, cDArray33);
        model.Magazine[] magazineArray36 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList37 = new java.util.ArrayList<model.Magazine>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList37, magazineArray36);
        model.ItemSearchResult itemSearchResult39 = new model.ItemSearchResult(book27, cD28, magazine29, (java.util.Collection<model.Book>) bookList31, (java.util.Collection<model.CD>) cDList34, (java.util.Collection<model.Magazine>) magazineList37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        itemSearchResult39.similarCD = cDList41;
        model.Book book44 = null;
        model.CD cD45 = null;
        model.Magazine magazine46 = null;
        model.Book[] bookArray47 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList48 = new java.util.ArrayList<model.Book>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList48, bookArray47);
        model.CD[] cDArray50 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList51 = new java.util.ArrayList<model.CD>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList51, cDArray50);
        model.Magazine[] magazineArray53 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList54 = new java.util.ArrayList<model.Magazine>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList54, magazineArray53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult(book44, cD45, magazine46, (java.util.Collection<model.Book>) bookList48, (java.util.Collection<model.CD>) cDList51, (java.util.Collection<model.Magazine>) magazineList54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult((model.Book) virtualBook10, cD12, magazine13, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList54);
        int int58 = virtualBook10.ID;
        int int59 = virtualBook10.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter60 = null;
        model.PaidNewsletter paidNewsletter61 = null;
        model.VirtualItemSearchResult virtualItemSearchResult62 = new model.VirtualItemSearchResult(virtualBook10, uniProvidedNewsletter60, paidNewsletter61);
        java.lang.String str63 = studentOnlineResources2.readVirtualItem((model.VirtualItem) paidNewsletter61);
        model.UniProvidedNewsletter uniProvidedNewsletter64 = new model.UniProvidedNewsletter();
        java.lang.String str65 = studentOnlineResources2.readVirtualItem((model.VirtualItem) uniProvidedNewsletter64);
        model.VirtualBook virtualBook67 = studentOnlineResources2.searchAccessibleBook("model.LoginFailedException: hi!");
        java.lang.String str68 = virtualBook67.ISBN;
        java.lang.String str69 = virtualBook67.location;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(virtualItemItor3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(virtualBook10);
        org.junit.Assert.assertNotNull(bookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(cDArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(magazineArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(bookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(magazineArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(bookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(cDArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(magazineArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 20 + "'", int59 == 20);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(virtualBook67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(str69);
    }

    @Test
    public void test2290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2290");
        model.Database database0 = null;
        model.Register register1 = model.Register.makeRegister(database0);
        model.Faculty faculty2 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection3 = faculty2.courses;
        boolean boolean6 = register1.registerAsStaff((model.Staff) faculty2, "src/Book.csv", "src/Book.csv");
        model.Database database7 = model.Database.database;
        model.Student student8 = new model.Student();
        int int9 = student8.ID;
        model.StudentOnlineResources studentOnlineResources10 = new model.StudentOnlineResources((model.Client) student8);
        student8.ID = '#';
        database7.addClient((model.Client) student8);
        student8.email = "hi!";
        boolean boolean18 = register1.registerAsStaff((model.Staff) student8, "src/CD.csv", "src/Book.csv");
        model.Database database26 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str27 = database26.getVirtualBookFilePath();
        register1.database = database26;
        database26.itemPath = "src/VirtualBook.csv";
        java.lang.String str31 = database26.getMagazineFilePath();
        org.junit.Assert.assertNotNull(register1);
        org.junit.Assert.assertNull(courseCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "src/VirtualBook.csv" + "'", str27, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "src/Magazine.csv" + "'", str31, "src/Magazine.csv");
    }

    @Test
    public void test2291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2291");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.VirtualItemContent virtualItemContent5 = virtualBook4.content;
        java.lang.String str6 = virtualBook4.location;
        virtualBook4.title = "";
        java.lang.String str9 = virtualBook4.author;
        java.lang.String str10 = virtualBook4.title;
        virtualBook4.edition = 0;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNull(virtualItemContent5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test2292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2292");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.Book book1 = null;
        model.CD cD3 = new model.CD("");
        model.Magazine magazine4 = null;
        java.util.Collection<model.Book> bookCollection5 = null;
        model.Book book6 = null;
        model.CD cD7 = null;
        model.Magazine magazine8 = null;
        model.Book[] bookArray9 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList10 = new java.util.ArrayList<model.Book>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList10, bookArray9);
        model.CD[] cDArray12 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList13 = new java.util.ArrayList<model.CD>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList13, cDArray12);
        model.Magazine[] magazineArray15 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList16 = new java.util.ArrayList<model.Magazine>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList16, magazineArray15);
        model.ItemSearchResult itemSearchResult18 = new model.ItemSearchResult(book6, cD7, magazine8, (java.util.Collection<model.Book>) bookList10, (java.util.Collection<model.CD>) cDList13, (java.util.Collection<model.Magazine>) magazineList16);
        model.Book book19 = null;
        model.CD cD20 = null;
        model.Magazine magazine21 = null;
        model.Book[] bookArray22 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList23 = new java.util.ArrayList<model.Book>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList23, bookArray22);
        model.CD[] cDArray25 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList26 = new java.util.ArrayList<model.CD>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList26, cDArray25);
        model.Magazine[] magazineArray28 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList29 = new java.util.ArrayList<model.Magazine>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList29, magazineArray28);
        model.ItemSearchResult itemSearchResult31 = new model.ItemSearchResult(book19, cD20, magazine21, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList29);
        itemSearchResult18.similarCD = cDList26;
        model.Book book33 = null;
        model.CD cD34 = null;
        model.Magazine magazine35 = null;
        model.Book[] bookArray36 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList37 = new java.util.ArrayList<model.Book>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList37, bookArray36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        model.Magazine[] magazineArray42 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList43 = new java.util.ArrayList<model.Magazine>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList43, magazineArray42);
        model.ItemSearchResult itemSearchResult45 = new model.ItemSearchResult(book33, cD34, magazine35, (java.util.Collection<model.Book>) bookList37, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book1, cD3, magazine4, bookCollection5, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList43);
        cD3.ID = (short) 10;
        cD3.canBePurchased = false;
        boolean boolean51 = cD3.canBePurchased;
        model.Faculty faculty52 = new model.Faculty();
        boolean boolean53 = rentAndReturnSystem0.rentAnItem((model.Item) cD3, (model.Client) faculty52);
        java.lang.String str54 = faculty52.faculty;
        model.RentedItem[] rentedItemArray55 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList56 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList56, rentedItemArray55);
        model.BorrowingManager borrowingManager58 = new model.BorrowingManager(rentedItemList56);
        boolean boolean59 = borrowingManager58.canRent();
        model.Client client60 = borrowingManager58.client;
        faculty52.borrowManager = borrowingManager58;
        java.util.Collection<model.Course> courseCollection62 = faculty52.courses;
        model.NewsletterSubscriptionManager newsletterSubscriptionManager63 = faculty52.newsletterManager;
        java.util.Collection<model.Book> bookCollection64 = null;
        faculty52.textbooks = bookCollection64;
        faculty52.ID = 100;
        faculty52.ID = 8273159;
        java.util.ArrayList<model.VirtualBook> virtualBookList70 = faculty52.virtualBooksAvailable;
        org.junit.Assert.assertNotNull(bookArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(cDArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(magazineArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(bookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(magazineArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(bookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(magazineArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(rentedItemArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(client60);
        org.junit.Assert.assertNull(courseCollection62);
        org.junit.Assert.assertNull(newsletterSubscriptionManager63);
        org.junit.Assert.assertNull(virtualBookList70);
    }

    @Test
    public void test2293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2293");
        model.ItemManagement itemManagement0 = new model.ItemManagement();
        model.Item item2 = itemManagement0.selectAnItemFromDatabase((int) (short) 0);
        model.Database database3 = model.Database.database;
        model.Student student4 = new model.Student();
        int int5 = student4.ID;
        model.StudentOnlineResources studentOnlineResources6 = new model.StudentOnlineResources((model.Client) student4);
        student4.ID = '#';
        database3.addClient((model.Client) student4);
        itemManagement0.database = database3;
        model.Database database11 = itemManagement0.database;
        int int12 = database11.getRandomID();
        model.Client client14 = database11.getClient("");
        java.lang.String str15 = database11.getBookFilePath();
        org.junit.Assert.assertNull(item2);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(database11);
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3132152 + "'", int12 == 3132152);
        org.junit.Assert.assertNotNull(client14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "src/Book.csv" + "'", str15, "src/Book.csv");
    }

    @Test
    public void test2294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2294");
        model.Database database0 = null;
        model.Register register1 = model.Register.makeRegister(database0);
        model.Faculty faculty2 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection3 = faculty2.courses;
        boolean boolean6 = register1.registerAsStaff((model.Staff) faculty2, "src/Book.csv", "src/Book.csv");
        model.Database database7 = model.Database.database;
        model.Student student8 = new model.Student();
        int int9 = student8.ID;
        model.StudentOnlineResources studentOnlineResources10 = new model.StudentOnlineResources((model.Client) student8);
        student8.ID = '#';
        database7.addClient((model.Client) student8);
        student8.email = "hi!";
        boolean boolean18 = register1.registerAsStaff((model.Staff) student8, "src/CD.csv", "src/Book.csv");
        model.Database database19 = register1.database;
        model.Database database20 = register1.database;
        org.junit.Assert.assertNotNull(register1);
        org.junit.Assert.assertNull(courseCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(database20);
    }

    @Test
    public void test2295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2295");
        model.ValidateRegistration validateRegistration0 = new model.ValidateRegistration();
        model.Student student1 = new model.Student();
        student1.viewMyOnlineResource();
        boolean boolean3 = validateRegistration0.validateStaffRegistration((model.Staff) student1);
        model.Faculty faculty4 = new model.Faculty();
        boolean boolean5 = validateRegistration0.validateStaffRegistration((model.Staff) faculty4);
        model.Student student6 = new model.Student();
        int int7 = student6.ID;
        model.StudentOnlineResources studentOnlineResources8 = new model.StudentOnlineResources((model.Client) student6);
        model.BorrowingManager borrowingManager9 = student6.borrowManager;
        student6.username = "hi!";
        model.BorrowingManager borrowingManager12 = null;
        student6.borrowManager = borrowingManager12;
        boolean boolean14 = validateRegistration0.validateStaffRegistration((model.Staff) student6);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(borrowingManager9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test2296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2296");
        model.VirtualItemContent virtualItemContent1 = new model.VirtualItemContent("hi!");
        java.lang.String str2 = virtualItemContent1.link;
        java.lang.String str4 = virtualItemContent1.getContent("");
        java.lang.String str5 = virtualItemContent1.link;
        java.lang.String str7 = virtualItemContent1.getContent("src/Newsletter.csv");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
    }

    @Test
    public void test2297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2297");
        model.Faculty faculty0 = new model.Faculty();
        faculty0.username = "hi!";
        java.lang.String str3 = faculty0.username;
        model.Book book4 = null;
        model.CD cD5 = null;
        model.Magazine magazine6 = null;
        model.Book[] bookArray7 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList8 = new java.util.ArrayList<model.Book>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList8, bookArray7);
        model.CD[] cDArray10 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList11 = new java.util.ArrayList<model.CD>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList11, cDArray10);
        model.Magazine[] magazineArray13 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList14 = new java.util.ArrayList<model.Magazine>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList14, magazineArray13);
        model.ItemSearchResult itemSearchResult16 = new model.ItemSearchResult(book4, cD5, magazine6, (java.util.Collection<model.Book>) bookList8, (java.util.Collection<model.CD>) cDList11, (java.util.Collection<model.Magazine>) magazineList14);
        faculty0.textbooks = bookList8;
        faculty0.email = "src/VirtualBook.csv";
        faculty0.faculty = "model.RegistrationFailedException: src/Book.csv";
        model.Database database29 = model.Database.createDatabase("model.RegistrationFailedException: ", "", "src/CD.csv", "model.RegistrationFailedException: src/Magazine.csv", "model.RegistrationFailedException: src/Book.csv", "model.RegistrationFailedException: ", "model.RegistrationFailedException: src/Book.csv");
        java.lang.String str30 = database29.getNewspaperFilePath();
        model.Login login31 = model.Login.makeLogin(database29);
        model.SearchItems searchItems32 = new model.SearchItems(database29);
        model.CD cD34 = searchItems32.getCD("model.RegistrationFailedException: ");
        java.util.Collection<model.Book> bookCollection36 = searchItems32.getSimilarBooks("model.RentingNotAllowedException: hi!");
        faculty0.textbooks = bookCollection36;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(bookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(cDArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(magazineArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "src/Newsletter.csv" + "'", str30, "src/Newsletter.csv");
        org.junit.Assert.assertNotNull(login31);
        org.junit.Assert.assertNull(cD34);
        org.junit.Assert.assertNotNull(bookCollection36);
    }

    @Test
    public void test2298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2298");
        model.BuySpecialItems buySpecialItems0 = new model.BuySpecialItems();
        model.Payment payment1 = null;
        buySpecialItems0.paymentAPI = payment1;
        model.PayMobileWallet payMobileWallet3 = new model.PayMobileWallet();
        buySpecialItems0.paymentAPI = payMobileWallet3;
        payMobileWallet3.amountPay = 1.0d;
        double double7 = payMobileWallet3.amountPay;
        payMobileWallet3.pay((double) 8565250);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
    }

    @Test
    public void test2299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2299");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.Book book1 = null;
        model.CD cD3 = new model.CD("");
        model.Magazine magazine4 = null;
        java.util.Collection<model.Book> bookCollection5 = null;
        model.Book book6 = null;
        model.CD cD7 = null;
        model.Magazine magazine8 = null;
        model.Book[] bookArray9 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList10 = new java.util.ArrayList<model.Book>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList10, bookArray9);
        model.CD[] cDArray12 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList13 = new java.util.ArrayList<model.CD>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList13, cDArray12);
        model.Magazine[] magazineArray15 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList16 = new java.util.ArrayList<model.Magazine>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList16, magazineArray15);
        model.ItemSearchResult itemSearchResult18 = new model.ItemSearchResult(book6, cD7, magazine8, (java.util.Collection<model.Book>) bookList10, (java.util.Collection<model.CD>) cDList13, (java.util.Collection<model.Magazine>) magazineList16);
        model.Book book19 = null;
        model.CD cD20 = null;
        model.Magazine magazine21 = null;
        model.Book[] bookArray22 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList23 = new java.util.ArrayList<model.Book>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList23, bookArray22);
        model.CD[] cDArray25 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList26 = new java.util.ArrayList<model.CD>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList26, cDArray25);
        model.Magazine[] magazineArray28 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList29 = new java.util.ArrayList<model.Magazine>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList29, magazineArray28);
        model.ItemSearchResult itemSearchResult31 = new model.ItemSearchResult(book19, cD20, magazine21, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList29);
        itemSearchResult18.similarCD = cDList26;
        model.Book book33 = null;
        model.CD cD34 = null;
        model.Magazine magazine35 = null;
        model.Book[] bookArray36 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList37 = new java.util.ArrayList<model.Book>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList37, bookArray36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        model.Magazine[] magazineArray42 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList43 = new java.util.ArrayList<model.Magazine>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList43, magazineArray42);
        model.ItemSearchResult itemSearchResult45 = new model.ItemSearchResult(book33, cD34, magazine35, (java.util.Collection<model.Book>) bookList37, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book1, cD3, magazine4, bookCollection5, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList43);
        cD3.ID = (short) 10;
        cD3.canBePurchased = false;
        boolean boolean51 = cD3.canBePurchased;
        model.Faculty faculty52 = new model.Faculty();
        boolean boolean53 = rentAndReturnSystem0.rentAnItem((model.Item) cD3, (model.Client) faculty52);
        java.lang.String str54 = faculty52.faculty;
        model.RentedItem[] rentedItemArray55 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList56 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList56, rentedItemArray55);
        model.BorrowingManager borrowingManager58 = new model.BorrowingManager(rentedItemList56);
        boolean boolean59 = borrowingManager58.canRent();
        model.Client client60 = borrowingManager58.client;
        faculty52.borrowManager = borrowingManager58;
        model.RentedItem[] rentedItemArray62 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList63 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList63, rentedItemArray62);
        model.BorrowingManager borrowingManager65 = new model.BorrowingManager(rentedItemList63);
        borrowingManager58.physicalItemBorrowed = rentedItemList63;
        borrowingManager58.itemsBorrowedCount = (byte) 0;
        model.Client client69 = borrowingManager58.client;
        borrowingManager58.updateBorrowingPrivilages();
        borrowingManager58.amountOwned = 12;
        org.junit.Assert.assertNotNull(bookArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(cDArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(magazineArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(bookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(magazineArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(bookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(magazineArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(rentedItemArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(client60);
        org.junit.Assert.assertNotNull(rentedItemArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(client69);
    }

    @Test
    public void test2300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2300");
        model.VirtualItemContent virtualItemContent1 = new model.VirtualItemContent("hi!");
        java.lang.String str2 = virtualItemContent1.link;
        java.lang.String str4 = virtualItemContent1.getContent("");
        java.lang.String str6 = virtualItemContent1.getContent("model.RegistrationFailedException: ");
        java.lang.String str7 = virtualItemContent1.link;
        java.lang.String str9 = virtualItemContent1.getContent("hi!");
        java.lang.String str11 = virtualItemContent1.getContent("model.RentingNotAllowedException: hi!");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test2301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2301");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        boolean boolean4 = borrowingManager3.canRent();
        borrowingManager3.updateBorrowingPrivilages();
        float float6 = borrowingManager3.amountOwned;
        java.util.ArrayList<model.RentedItem> rentedItemList7 = borrowingManager3.physicalItemBorrowed;
        model.Client client8 = borrowingManager3.client;
        model.Client client9 = borrowingManager3.client;
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + float6 + "' != '" + 0.0f + "'", float6 == 0.0f);
        org.junit.Assert.assertNotNull(rentedItemList7);
        org.junit.Assert.assertNull(client8);
        org.junit.Assert.assertNull(client9);
    }

    @Test
    public void test2302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2302");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        model.RentedItem[] rentedItemArray4 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList5 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList5, rentedItemArray4);
        model.BorrowingManager borrowingManager7 = new model.BorrowingManager(rentedItemList5);
        model.RentedItem[] rentedItemArray8 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList9 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList9, rentedItemArray8);
        model.BorrowingManager borrowingManager11 = new model.BorrowingManager(rentedItemList9);
        borrowingManager7.physicalItemBorrowed = rentedItemList9;
        borrowingManager3.physicalItemBorrowed = rentedItemList9;
        model.Visitor visitor14 = new model.Visitor();
        model.VirtualBook[] virtualBookArray15 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList16 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList16, virtualBookArray15);
        visitor14.virtualBooksAvailable = virtualBookList16;
        borrowingManager3.client = visitor14;
        model.Faculty faculty20 = new model.Faculty();
        java.lang.String str21 = faculty20.faculty;
        borrowingManager3.client = faculty20;
        model.RentedItem[] rentedItemArray23 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList24 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList24, rentedItemArray23);
        model.BorrowingManager borrowingManager26 = new model.BorrowingManager(rentedItemList24);
        model.RentedItem[] rentedItemArray27 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList28 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList28, rentedItemArray27);
        model.BorrowingManager borrowingManager30 = new model.BorrowingManager(rentedItemList28);
        model.RentedItem[] rentedItemArray31 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList32 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList32, rentedItemArray31);
        model.BorrowingManager borrowingManager34 = new model.BorrowingManager(rentedItemList32);
        borrowingManager30.physicalItemBorrowed = rentedItemList32;
        borrowingManager26.physicalItemBorrowed = rentedItemList32;
        borrowingManager3.physicalItemBorrowed = rentedItemList32;
        java.util.ArrayList<model.RentedItem> rentedItemList38 = borrowingManager3.physicalItemBorrowed;
        float float39 = borrowingManager3.amountOwned;
        int int40 = borrowingManager3.itemsBorrowedCount;
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(rentedItemArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rentedItemArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(virtualBookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(rentedItemArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(rentedItemArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(rentedItemArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(rentedItemList38);
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + 0.0f + "'", float39 == 0.0f);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
    }

    @Test
    public void test2303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2303");
        model.Course course0 = new model.Course();
        java.lang.String str1 = course0.code;
        java.lang.String str2 = course0.subject;
        course0.subject = "model.RegistrationFailedException: ";
        course0.subject = "src/Magazine.csv";
        course0.code = "src/CD.csv";
        course0.subject = "src/Newsletter.csv";
        java.lang.String str11 = course0.code;
        course0.subject = "model.RentingNotAllowedException: model.LoginFailedException: hi!";
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "src/CD.csv" + "'", str11, "src/CD.csv");
    }

    @Test
    public void test2304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2304");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        model.RentedItem[] rentedItemArray4 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList5 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList5, rentedItemArray4);
        model.BorrowingManager borrowingManager7 = new model.BorrowingManager(rentedItemList5);
        model.RentedItem[] rentedItemArray8 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList9 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList9, rentedItemArray8);
        model.BorrowingManager borrowingManager11 = new model.BorrowingManager(rentedItemList9);
        borrowingManager7.physicalItemBorrowed = rentedItemList9;
        borrowingManager3.physicalItemBorrowed = rentedItemList9;
        model.Visitor visitor14 = new model.Visitor();
        model.VirtualBook[] virtualBookArray15 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList16 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList16, virtualBookArray15);
        visitor14.virtualBooksAvailable = virtualBookList16;
        borrowingManager3.client = visitor14;
        model.Faculty faculty20 = new model.Faculty();
        java.lang.String str21 = faculty20.faculty;
        borrowingManager3.client = faculty20;
        model.RentedItem[] rentedItemArray23 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList24 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList24, rentedItemArray23);
        model.BorrowingManager borrowingManager26 = new model.BorrowingManager(rentedItemList24);
        model.RentedItem[] rentedItemArray27 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList28 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList28, rentedItemArray27);
        model.BorrowingManager borrowingManager30 = new model.BorrowingManager(rentedItemList28);
        model.RentedItem[] rentedItemArray31 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList32 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList32, rentedItemArray31);
        model.BorrowingManager borrowingManager34 = new model.BorrowingManager(rentedItemList32);
        borrowingManager30.physicalItemBorrowed = rentedItemList32;
        borrowingManager26.physicalItemBorrowed = rentedItemList32;
        borrowingManager3.physicalItemBorrowed = rentedItemList32;
        java.util.ArrayList<model.RentedItem> rentedItemList38 = borrowingManager3.physicalItemBorrowed;
        model.RentedItem rentedItem39 = null;
        // The following exception was thrown during execution in test generation
        try {
            borrowingManager3.removeRentedItem(rentedItem39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"item\" because \"item\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(rentedItemArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rentedItemArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(virtualBookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(rentedItemArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(rentedItemArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(rentedItemArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(rentedItemList38);
    }

    @Test
    public void test2305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2305");
        model.LibraryManagementTeam libraryManagementTeam0 = new model.LibraryManagementTeam();
        int int1 = libraryManagementTeam0.ID;
        libraryManagementTeam0.accessCode = (-1);
        model.Student student4 = new model.Student();
        int int5 = student4.ID;
        model.StudentOnlineResources studentOnlineResources6 = new model.StudentOnlineResources((model.Client) student4);
        model.VirtualBook virtualBook8 = studentOnlineResources6.searchAccessibleBook("");
        model.VirtualItemContent virtualItemContent9 = virtualBook8.content;
        model.Student student10 = new model.Student();
        int int11 = student10.ID;
        model.StudentOnlineResources studentOnlineResources12 = new model.StudentOnlineResources((model.Client) student10);
        model.VirtualBook virtualBook14 = studentOnlineResources12.searchAccessibleBook("");
        model.CD cD16 = new model.CD("");
        model.Magazine magazine17 = null;
        model.Book book18 = null;
        model.CD cD19 = null;
        model.Magazine magazine20 = null;
        model.Book[] bookArray21 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList22 = new java.util.ArrayList<model.Book>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList22, bookArray21);
        model.CD[] cDArray24 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList25 = new java.util.ArrayList<model.CD>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList25, cDArray24);
        model.Magazine[] magazineArray27 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList28 = new java.util.ArrayList<model.Magazine>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList28, magazineArray27);
        model.ItemSearchResult itemSearchResult30 = new model.ItemSearchResult(book18, cD19, magazine20, (java.util.Collection<model.Book>) bookList22, (java.util.Collection<model.CD>) cDList25, (java.util.Collection<model.Magazine>) magazineList28);
        model.Book book31 = null;
        model.CD cD32 = null;
        model.Magazine magazine33 = null;
        model.Book[] bookArray34 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList35 = new java.util.ArrayList<model.Book>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList35, bookArray34);
        model.CD[] cDArray37 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList38 = new java.util.ArrayList<model.CD>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList38, cDArray37);
        model.Magazine[] magazineArray40 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList41 = new java.util.ArrayList<model.Magazine>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList41, magazineArray40);
        model.ItemSearchResult itemSearchResult43 = new model.ItemSearchResult(book31, cD32, magazine33, (java.util.Collection<model.Book>) bookList35, (java.util.Collection<model.CD>) cDList38, (java.util.Collection<model.Magazine>) magazineList41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        itemSearchResult43.similarCD = cDList45;
        model.Book book48 = null;
        model.CD cD49 = null;
        model.Magazine magazine50 = null;
        model.Book[] bookArray51 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList52 = new java.util.ArrayList<model.Book>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList52, bookArray51);
        model.CD[] cDArray54 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList55 = new java.util.ArrayList<model.CD>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList55, cDArray54);
        model.Magazine[] magazineArray57 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList58 = new java.util.ArrayList<model.Magazine>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList58, magazineArray57);
        model.ItemSearchResult itemSearchResult60 = new model.ItemSearchResult(book48, cD49, magazine50, (java.util.Collection<model.Book>) bookList52, (java.util.Collection<model.CD>) cDList55, (java.util.Collection<model.Magazine>) magazineList58);
        model.ItemSearchResult itemSearchResult61 = new model.ItemSearchResult((model.Book) virtualBook14, cD16, magazine17, (java.util.Collection<model.Book>) bookList22, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList58);
        int int62 = virtualBook14.ID;
        int int63 = virtualBook14.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter64 = null;
        model.PaidNewsletter paidNewsletter65 = null;
        model.VirtualItemSearchResult virtualItemSearchResult66 = new model.VirtualItemSearchResult(virtualBook14, uniProvidedNewsletter64, paidNewsletter65);
        model.PaidNewsletter paidNewsletter67 = virtualItemSearchResult66.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter68 = new model.UniProvidedNewsletter();
        virtualItemSearchResult66.setUniNewsletter(uniProvidedNewsletter68);
        java.lang.String str70 = uniProvidedNewsletter68.title;
        model.PaidNewsletter paidNewsletter71 = null;
        model.VirtualItemSearchResult virtualItemSearchResult72 = new model.VirtualItemSearchResult(virtualBook8, uniProvidedNewsletter68, paidNewsletter71);
        model.VirtualItemContent virtualItemContent74 = new model.VirtualItemContent("hi!");
        java.lang.String str75 = virtualItemContent74.link;
        java.lang.String str77 = virtualItemContent74.getContent("");
        java.lang.String str79 = virtualItemContent74.getContent("model.RegistrationFailedException: ");
        java.lang.String str80 = virtualItemContent74.link;
        virtualBook8.content = virtualItemContent74;
        libraryManagementTeam0.enableAnItem((model.Item) virtualBook8);
        int int83 = libraryManagementTeam0.accessCode;
        model.ItemManagement itemManagement84 = libraryManagementTeam0.itemManagement;
        libraryManagementTeam0.accessCode = (short) 1;
        libraryManagementTeam0.ID = 39;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(virtualBook8);
        org.junit.Assert.assertNull(virtualItemContent9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(virtualBook14);
        org.junit.Assert.assertNotNull(bookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(cDArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(magazineArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(bookArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(cDArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(magazineArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(bookArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(cDArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(magazineArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 20 + "'", int63 == 20);
        org.junit.Assert.assertNull(paidNewsletter67);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!" + "'", str77, "hi!");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNull(itemManagement84);
    }

    @Test
    public void test2306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2306");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.Database.database = database7;
        java.lang.String str10 = database7.virtualItemFilePath;
        java.lang.String str11 = database7.getBookFilePath();
        database7.itemPath = "src/Magazine.csv";
        model.Login login14 = model.Login.makeLogin(database7);
        boolean boolean16 = database7.addItem("src/Client.csv");
        model.Login login17 = new model.Login(database7);
        model.Database database18 = login17.db;
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "model.RegistrationFailedException: src/Magazine.csv" + "'", str10, "model.RegistrationFailedException: src/Magazine.csv");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "src/Book.csv" + "'", str11, "src/Book.csv");
        org.junit.Assert.assertNotNull(login14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(database18);
    }

    @Test
    public void test2307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2307");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.Payment payment1 = rentAndReturnSystem0.paymentAPI;
        model.PayMobileWallet payMobileWallet2 = new model.PayMobileWallet();
        payMobileWallet2.amountPay = 100.0f;
        payMobileWallet2.amountPay = (byte) -1;
        rentAndReturnSystem0.paymentAPI = payMobileWallet2;
        model.BuySpecialItems buySpecialItems8 = new model.BuySpecialItems();
        model.Book book9 = null;
        model.CD cD11 = new model.CD("");
        model.Magazine magazine12 = null;
        java.util.Collection<model.Book> bookCollection13 = null;
        model.Book book14 = null;
        model.CD cD15 = null;
        model.Magazine magazine16 = null;
        model.Book[] bookArray17 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList18 = new java.util.ArrayList<model.Book>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList18, bookArray17);
        model.CD[] cDArray20 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList21 = new java.util.ArrayList<model.CD>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList21, cDArray20);
        model.Magazine[] magazineArray23 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList24 = new java.util.ArrayList<model.Magazine>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList24, magazineArray23);
        model.ItemSearchResult itemSearchResult26 = new model.ItemSearchResult(book14, cD15, magazine16, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList21, (java.util.Collection<model.Magazine>) magazineList24);
        model.Book book27 = null;
        model.CD cD28 = null;
        model.Magazine magazine29 = null;
        model.Book[] bookArray30 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList31 = new java.util.ArrayList<model.Book>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList31, bookArray30);
        model.CD[] cDArray33 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList34 = new java.util.ArrayList<model.CD>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList34, cDArray33);
        model.Magazine[] magazineArray36 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList37 = new java.util.ArrayList<model.Magazine>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList37, magazineArray36);
        model.ItemSearchResult itemSearchResult39 = new model.ItemSearchResult(book27, cD28, magazine29, (java.util.Collection<model.Book>) bookList31, (java.util.Collection<model.CD>) cDList34, (java.util.Collection<model.Magazine>) magazineList37);
        itemSearchResult26.similarCD = cDList34;
        model.Book book41 = null;
        model.CD cD42 = null;
        model.Magazine magazine43 = null;
        model.Book[] bookArray44 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList45 = new java.util.ArrayList<model.Book>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList45, bookArray44);
        model.CD[] cDArray47 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList48 = new java.util.ArrayList<model.CD>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList48, cDArray47);
        model.Magazine[] magazineArray50 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList51 = new java.util.ArrayList<model.Magazine>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList51, magazineArray50);
        model.ItemSearchResult itemSearchResult53 = new model.ItemSearchResult(book41, cD42, magazine43, (java.util.Collection<model.Book>) bookList45, (java.util.Collection<model.CD>) cDList48, (java.util.Collection<model.Magazine>) magazineList51);
        model.ItemSearchResult itemSearchResult54 = new model.ItemSearchResult(book9, cD11, magazine12, bookCollection13, (java.util.Collection<model.CD>) cDList34, (java.util.Collection<model.Magazine>) magazineList51);
        cD11.ID = (short) 10;
        boolean boolean58 = buySpecialItems8.buyAnItem((model.Item) cD11, (double) 0);
        model.PayDebit payDebit59 = new model.PayDebit();
        buySpecialItems8.paymentAPI = payDebit59;
        rentAndReturnSystem0.paymentAPI = payDebit59;
        payDebit59.amountPay = 1.0f;
        payDebit59.amountPay = 2108586.0d;
        org.junit.Assert.assertNull(payment1);
        org.junit.Assert.assertNotNull(bookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(cDArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(magazineArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(bookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(magazineArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(bookArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(cDArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(magazineArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test2308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2308");
        int int2 = model.SearchStrategy.calculateDistance("src/Newsletter.csv", "model.RegistrationFailedException: src/VirtualBook.csv");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 43 + "'", int2 == 43);
    }

    @Test
    public void test2309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2309");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.Request request1 = new model.Request();
        request1.title = "";
        java.lang.String str4 = requestForum0.makeARequest(request1);
        model.LibraryManagementTeam libraryManagementTeam5 = new model.LibraryManagementTeam();
        int int6 = libraryManagementTeam5.ID;
        model.Magazine magazine8 = new model.Magazine("");
        java.util.Calendar calendar9 = magazine8.date;
        magazine8.author = "model.RegistrationFailedException: ";
        libraryManagementTeam5.disableAnItem((model.Item) magazine8);
        requestForum0.managementTeam = libraryManagementTeam5;
        model.Request request14 = new model.Request();
        request14.title = "src/Client.csv";
        java.lang.String str17 = requestForum0.makeARequest(request14);
        model.Client client18 = request14.requestee;
        java.lang.String str19 = request14.title;
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(calendar9);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(client18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "src/Client.csv" + "'", str19, "src/Client.csv");
    }

    @Test
    public void test2310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2310");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter54 = null;
        model.PaidNewsletter paidNewsletter55 = null;
        model.VirtualItemSearchResult virtualItemSearchResult56 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter54, paidNewsletter55);
        model.PaidNewsletter paidNewsletter57 = virtualItemSearchResult56.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter58 = virtualItemSearchResult56.getUniNewsletter();
        model.PaidNewsletter paidNewsletter59 = virtualItemSearchResult56.getPaidNewsletter();
        model.UniProvidedNewsletter uniProvidedNewsletter60 = virtualItemSearchResult56.getUniNewsletter();
        model.VirtualBook virtualBook61 = virtualItemSearchResult56.getVirtualBook();
        model.VirtualBook virtualBook62 = virtualItemSearchResult56.getVirtualBook();
        model.VirtualBook virtualBook63 = virtualItemSearchResult56.virtualBook;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertNull(paidNewsletter57);
        org.junit.Assert.assertNull(uniProvidedNewsletter58);
        org.junit.Assert.assertNull(paidNewsletter59);
        org.junit.Assert.assertNull(uniProvidedNewsletter60);
        org.junit.Assert.assertNotNull(virtualBook61);
        org.junit.Assert.assertNotNull(virtualBook62);
        org.junit.Assert.assertNotNull(virtualBook63);
    }

    @Test
    public void test2311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2311");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        model.Book book4 = null;
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        java.util.Collection<model.Book> bookCollection8 = null;
        model.Book book9 = null;
        model.CD cD10 = null;
        model.Magazine magazine11 = null;
        model.Book[] bookArray12 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList13 = new java.util.ArrayList<model.Book>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList13, bookArray12);
        model.CD[] cDArray15 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList16 = new java.util.ArrayList<model.CD>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList16, cDArray15);
        model.Magazine[] magazineArray18 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList19 = new java.util.ArrayList<model.Magazine>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList19, magazineArray18);
        model.ItemSearchResult itemSearchResult21 = new model.ItemSearchResult(book9, cD10, magazine11, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList16, (java.util.Collection<model.Magazine>) magazineList19);
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        itemSearchResult21.similarCD = cDList29;
        model.Book book36 = null;
        model.CD cD37 = null;
        model.Magazine magazine38 = null;
        model.Book[] bookArray39 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList40 = new java.util.ArrayList<model.Book>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList40, bookArray39);
        model.CD[] cDArray42 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList43 = new java.util.ArrayList<model.CD>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList43, cDArray42);
        model.Magazine[] magazineArray45 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList46 = new java.util.ArrayList<model.Magazine>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList46, magazineArray45);
        model.ItemSearchResult itemSearchResult48 = new model.ItemSearchResult(book36, cD37, magazine38, (java.util.Collection<model.Book>) bookList40, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList46);
        model.ItemSearchResult itemSearchResult49 = new model.ItemSearchResult(book4, cD6, magazine7, bookCollection8, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList46);
        cD6.ID = (short) 10;
        borrowingManager3.removeRentedItem((model.Item) cD6);
        float float53 = borrowingManager3.amountOwned;
        float float54 = borrowingManager3.amountOwned;
        borrowingManager3.itemsBorrowedCount = (byte) 0;
        model.Client client57 = borrowingManager3.client;
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(bookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cDArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(magazineArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(bookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cDArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(magazineArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + 0.0f + "'", float53 == 0.0f);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + 0.0f + "'", float54 == 0.0f);
        org.junit.Assert.assertNull(client57);
    }

    @Test
    public void test2312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2312");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.RequestForum requestForum1 = model.RequestForum.createRequestForum();
        model.Request request2 = new model.Request();
        request2.title = "";
        java.lang.String str5 = requestForum1.makeARequest(request2);
        int int6 = requestForum0.assessBooksPriority(request2);
        java.lang.String str7 = request2.type;
        request2.title = "src/Newsletter.csv";
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertNotNull(requestForum1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test2313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2313");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getBookFilePath();
        database7.itemPath = "hi!";
        model.SearchVirtualItem searchVirtualItem11 = new model.SearchVirtualItem(database7);
        model.VirtualItemSearchResult virtualItemSearchResult13 = searchVirtualItem11.searchVirtualItem("model.RegistrationFailedException: ");
        model.VirtualBook virtualBook15 = searchVirtualItem11.getVirtualBook("src/BorrowedItems.csv");
        model.PaidNewsletter paidNewsletter17 = searchVirtualItem11.getPaidNewsletter("model.LoginFailedException: hi!");
        model.PaidNewsletter paidNewsletter19 = searchVirtualItem11.getPaidNewsletter("src/Magazine.csv");
        model.VirtualItemSearchResult virtualItemSearchResult21 = searchVirtualItem11.searchVirtualItem("model.RegistrationFailedException: src/VirtualBook.csv");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/Book.csv" + "'", str8, "src/Book.csv");
        org.junit.Assert.assertNotNull(virtualItemSearchResult13);
        org.junit.Assert.assertNull(virtualBook15);
        org.junit.Assert.assertNull(paidNewsletter17);
        org.junit.Assert.assertNull(paidNewsletter19);
        org.junit.Assert.assertNotNull(virtualItemSearchResult21);
    }

    @Test
    public void test2314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2314");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        model.Book book4 = null;
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        java.util.Collection<model.Book> bookCollection8 = null;
        model.Book book9 = null;
        model.CD cD10 = null;
        model.Magazine magazine11 = null;
        model.Book[] bookArray12 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList13 = new java.util.ArrayList<model.Book>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList13, bookArray12);
        model.CD[] cDArray15 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList16 = new java.util.ArrayList<model.CD>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList16, cDArray15);
        model.Magazine[] magazineArray18 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList19 = new java.util.ArrayList<model.Magazine>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList19, magazineArray18);
        model.ItemSearchResult itemSearchResult21 = new model.ItemSearchResult(book9, cD10, magazine11, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList16, (java.util.Collection<model.Magazine>) magazineList19);
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        itemSearchResult21.similarCD = cDList29;
        model.Book book36 = null;
        model.CD cD37 = null;
        model.Magazine magazine38 = null;
        model.Book[] bookArray39 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList40 = new java.util.ArrayList<model.Book>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList40, bookArray39);
        model.CD[] cDArray42 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList43 = new java.util.ArrayList<model.CD>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList43, cDArray42);
        model.Magazine[] magazineArray45 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList46 = new java.util.ArrayList<model.Magazine>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList46, magazineArray45);
        model.ItemSearchResult itemSearchResult48 = new model.ItemSearchResult(book36, cD37, magazine38, (java.util.Collection<model.Book>) bookList40, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList46);
        model.ItemSearchResult itemSearchResult49 = new model.ItemSearchResult(book4, cD6, magazine7, bookCollection8, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList46);
        cD6.ID = (short) 10;
        borrowingManager3.removeRentedItem((model.Item) cD6);
        float float53 = borrowingManager3.amountOwned;
        borrowingManager3.itemsBorrowedCount = 1;
        java.util.ArrayList<model.RentedItem> rentedItemList56 = borrowingManager3.physicalItemBorrowed;
        model.Client client57 = borrowingManager3.client;
        float float58 = borrowingManager3.amountOwned;
        boolean boolean59 = borrowingManager3.canRent();
        borrowingManager3.updateBorrowingPrivilages();
        float float61 = borrowingManager3.amountOwned;
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(bookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cDArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(magazineArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(bookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cDArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(magazineArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + 0.0f + "'", float53 == 0.0f);
        org.junit.Assert.assertNotNull(rentedItemList56);
        org.junit.Assert.assertNull(client57);
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + 0.0f + "'", float58 == 0.0f);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + 0.0f + "'", float61 == 0.0f);
    }

    @Test
    public void test2315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2315");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        java.util.ArrayList<model.Newsletter> newsletterList5 = newsletterSubscriptionManager3.newsletterSubscribed;
        model.Payment payment6 = null;
        newsletterSubscriptionManager3.paymentAPI = payment6;
        model.Student student8 = new model.Student();
        int int9 = student8.ID;
        model.StudentOnlineResources studentOnlineResources10 = new model.StudentOnlineResources((model.Client) student8);
        model.VirtualBook virtualBook12 = studentOnlineResources10.searchAccessibleBook("");
        model.VirtualItemContent virtualItemContent13 = virtualBook12.content;
        model.Student student14 = new model.Student();
        int int15 = student14.ID;
        model.StudentOnlineResources studentOnlineResources16 = new model.StudentOnlineResources((model.Client) student14);
        model.VirtualBook virtualBook18 = studentOnlineResources16.searchAccessibleBook("");
        model.CD cD20 = new model.CD("");
        model.Magazine magazine21 = null;
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        model.Book book35 = null;
        model.CD cD36 = null;
        model.Magazine magazine37 = null;
        model.Book[] bookArray38 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList39 = new java.util.ArrayList<model.Book>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList39, bookArray38);
        model.CD[] cDArray41 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList42 = new java.util.ArrayList<model.CD>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList42, cDArray41);
        model.Magazine[] magazineArray44 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList45 = new java.util.ArrayList<model.Magazine>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList45, magazineArray44);
        model.ItemSearchResult itemSearchResult47 = new model.ItemSearchResult(book35, cD36, magazine37, (java.util.Collection<model.Book>) bookList39, (java.util.Collection<model.CD>) cDList42, (java.util.Collection<model.Magazine>) magazineList45);
        model.CD[] cDArray48 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList49 = new java.util.ArrayList<model.CD>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList49, cDArray48);
        itemSearchResult47.similarCD = cDList49;
        model.Book book52 = null;
        model.CD cD53 = null;
        model.Magazine magazine54 = null;
        model.Book[] bookArray55 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList56 = new java.util.ArrayList<model.Book>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList56, bookArray55);
        model.CD[] cDArray58 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList59 = new java.util.ArrayList<model.CD>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList59, cDArray58);
        model.Magazine[] magazineArray61 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList62 = new java.util.ArrayList<model.Magazine>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList62, magazineArray61);
        model.ItemSearchResult itemSearchResult64 = new model.ItemSearchResult(book52, cD53, magazine54, (java.util.Collection<model.Book>) bookList56, (java.util.Collection<model.CD>) cDList59, (java.util.Collection<model.Magazine>) magazineList62);
        model.ItemSearchResult itemSearchResult65 = new model.ItemSearchResult((model.Book) virtualBook18, cD20, magazine21, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList49, (java.util.Collection<model.Magazine>) magazineList62);
        int int66 = virtualBook18.ID;
        int int67 = virtualBook18.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter68 = null;
        model.PaidNewsletter paidNewsletter69 = null;
        model.VirtualItemSearchResult virtualItemSearchResult70 = new model.VirtualItemSearchResult(virtualBook18, uniProvidedNewsletter68, paidNewsletter69);
        model.PaidNewsletter paidNewsletter71 = virtualItemSearchResult70.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter72 = new model.UniProvidedNewsletter();
        virtualItemSearchResult70.setUniNewsletter(uniProvidedNewsletter72);
        java.lang.String str74 = uniProvidedNewsletter72.title;
        model.PaidNewsletter paidNewsletter75 = null;
        model.VirtualItemSearchResult virtualItemSearchResult76 = new model.VirtualItemSearchResult(virtualBook12, uniProvidedNewsletter72, paidNewsletter75);
        model.VirtualBook virtualBook77 = virtualItemSearchResult76.virtualBook;
        model.PaidNewsletter paidNewsletter78 = new model.PaidNewsletter();
        virtualItemSearchResult76.setPaidNewsletter(paidNewsletter78);
        paidNewsletter78.subscriptionPrice = 11;
        double double82 = paidNewsletter78.subscriptionPrice;
        newsletterSubscriptionManager3.subscribeToPaidNewsletter(paidNewsletter78, "src/Newsletter.csv");
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertNotNull(newsletterList5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(virtualBook12);
        org.junit.Assert.assertNull(virtualItemContent13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(virtualBook18);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(bookArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(cDArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(magazineArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(cDArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(bookArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(cDArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(magazineArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 20 + "'", int67 == 20);
        org.junit.Assert.assertNull(paidNewsletter71);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(virtualBook77);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 11.0d + "'", double82 == 11.0d);
    }

    @Test
    public void test2316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2316");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.Database.database = database7;
        java.lang.String str10 = database7.virtualItemFilePath;
        model.Login login11 = model.Login.makeLogin(database7);
        java.util.ArrayList<java.lang.String> strList12 = database7.getAllItems();
        java.lang.String str13 = database7.getBookFilePath();
        java.lang.String str14 = database7.getNewspaperFilePath();
        model.SearchClient searchClient15 = model.SearchClient.makeSearchClient(database7);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "model.RegistrationFailedException: src/Magazine.csv" + "'", str10, "model.RegistrationFailedException: src/Magazine.csv");
        org.junit.Assert.assertNotNull(login11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "src/Book.csv" + "'", str13, "src/Book.csv");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "src/Newsletter.csv" + "'", str14, "src/Newsletter.csv");
        org.junit.Assert.assertNotNull(searchClient15);
    }

    @Test
    public void test2317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2317");
        model.LibraryManagementTeam libraryManagementTeam0 = new model.LibraryManagementTeam();
        int int1 = libraryManagementTeam0.ID;
        int int2 = libraryManagementTeam0.accessCode;
        model.ItemManagement itemManagement3 = new model.ItemManagement();
        model.Database database4 = null;
        itemManagement3.database = database4;
        model.Student student6 = new model.Student();
        int int7 = student6.ID;
        model.StudentOnlineResources studentOnlineResources8 = new model.StudentOnlineResources((model.Client) student6);
        model.VirtualBook virtualBook10 = studentOnlineResources8.searchAccessibleBook("");
        itemManagement3.disableAnItem((model.Item) virtualBook10);
        libraryManagementTeam0.itemManagement = itemManagement3;
        model.Book book13 = null;
        model.CD cD14 = null;
        model.Magazine magazine15 = null;
        model.Book[] bookArray16 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList17 = new java.util.ArrayList<model.Book>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList17, bookArray16);
        model.CD[] cDArray19 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList20 = new java.util.ArrayList<model.CD>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList20, cDArray19);
        model.Magazine[] magazineArray22 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList23 = new java.util.ArrayList<model.Magazine>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList23, magazineArray22);
        model.ItemSearchResult itemSearchResult25 = new model.ItemSearchResult(book13, cD14, magazine15, (java.util.Collection<model.Book>) bookList17, (java.util.Collection<model.CD>) cDList20, (java.util.Collection<model.Magazine>) magazineList23);
        model.CD[] cDArray26 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList27 = new java.util.ArrayList<model.CD>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList27, cDArray26);
        itemSearchResult25.similarCD = cDList27;
        model.Book book30 = null;
        itemSearchResult25.book = book30;
        model.Book book32 = null;
        model.CD cD33 = null;
        model.Magazine magazine34 = null;
        model.Book[] bookArray35 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList36 = new java.util.ArrayList<model.Book>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList36, bookArray35);
        model.CD[] cDArray38 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList39 = new java.util.ArrayList<model.CD>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList39, cDArray38);
        model.Magazine[] magazineArray41 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList42 = new java.util.ArrayList<model.Magazine>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList42, magazineArray41);
        model.ItemSearchResult itemSearchResult44 = new model.ItemSearchResult(book32, cD33, magazine34, (java.util.Collection<model.Book>) bookList36, (java.util.Collection<model.CD>) cDList39, (java.util.Collection<model.Magazine>) magazineList42);
        itemSearchResult25.similarBooks = bookList36;
        model.Book book46 = itemSearchResult25.book;
        java.util.Collection<model.CD> cDCollection47 = itemSearchResult25.similarCD;
        model.Magazine magazine48 = itemSearchResult25.magazine;
        model.Student student49 = new model.Student();
        int int50 = student49.ID;
        model.StudentOnlineResources studentOnlineResources51 = new model.StudentOnlineResources((model.Client) student49);
        model.VirtualBook virtualBook53 = studentOnlineResources51.searchAccessibleBook("");
        java.lang.String str54 = virtualBook53.location;
        int int55 = virtualBook53.ID;
        virtualBook53.isBookLost = false;
        java.lang.String str58 = virtualBook53.author;
        virtualBook53.edition = 'a';
        itemSearchResult25.book = virtualBook53;
        itemManagement3.enableAnItem((model.Item) virtualBook53);
        model.Database database70 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str71 = database70.getVirtualBookFilePath();
        model.SearchClient searchClient72 = model.SearchClient.makeSearchClient(database70);
        java.lang.String str73 = database70.getCDFilePath();
        model.SearchVirtualItem searchVirtualItem74 = new model.SearchVirtualItem(database70);
        itemManagement3.database = database70;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(virtualBook10);
        org.junit.Assert.assertNotNull(bookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(cDArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(magazineArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(bookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(cDArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(magazineArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(book46);
        org.junit.Assert.assertNotNull(cDCollection47);
        org.junit.Assert.assertNull(magazine48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(virtualBook53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(database70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "src/VirtualBook.csv" + "'", str71, "src/VirtualBook.csv");
        org.junit.Assert.assertNotNull(searchClient72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "src/CD.csv" + "'", str73, "src/CD.csv");
    }

    @Test
    public void test2318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2318");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getBookFilePath();
        database7.itemPath = "hi!";
        model.Database.database = database7;
        java.lang.String str12 = database7.getNewspaperFilePath();
        model.Login login13 = model.Login.makeLogin(database7);
        // The following exception was thrown during execution in test generation
        try {
            model.Client client16 = login13.login("src/Newsletter.csv", "model.RegistrationFailedException: src/VirtualBook.csv");
            org.junit.Assert.fail("Expected exception of type model.LoginFailedException; message: Login Failed.");
        } catch (model.LoginFailedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/Book.csv" + "'", str8, "src/Book.csv");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "src/Newsletter.csv" + "'", str12, "src/Newsletter.csv");
        org.junit.Assert.assertNotNull(login13);
    }

    @Test
    public void test2319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2319");
        model.LibraryManagementTeam libraryManagementTeam0 = new model.LibraryManagementTeam();
        libraryManagementTeam0.accessCode = (byte) 10;
        model.ItemManagement itemManagement3 = new model.ItemManagement();
        model.Item item5 = itemManagement3.selectAnItemFromDatabase((int) (short) 0);
        model.Database database6 = model.Database.database;
        model.Student student7 = new model.Student();
        int int8 = student7.ID;
        model.StudentOnlineResources studentOnlineResources9 = new model.StudentOnlineResources((model.Client) student7);
        student7.ID = '#';
        database6.addClient((model.Client) student7);
        itemManagement3.database = database6;
        model.Magazine magazine15 = new model.Magazine("hi!");
        magazine15.location = "model.RegistrationFailedException: ";
        magazine15.author = "src/VirtualBook.csv";
        boolean boolean20 = magazine15.canBePurchased;
        itemManagement3.addAnItem((model.Item) magazine15);
        libraryManagementTeam0.itemManagement = itemManagement3;
        model.Book book24 = new model.Book("hi!");
        libraryManagementTeam0.enableAnItem((model.Item) book24);
        org.junit.Assert.assertNull(item5);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test2320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2320");
        model.Database database0 = model.Database.database;
        java.lang.String str1 = database0.getMagazineFilePath();
        model.Login login2 = new model.Login(database0);
        model.Database database10 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str11 = database10.getVirtualBookFilePath();
        model.Database.database = database10;
        java.lang.String str13 = database10.virtualItemFilePath;
        java.lang.String str14 = database10.getBookFilePath();
        database10.itemPath = "src/Magazine.csv";
        model.Client client18 = database10.getClient("src/CD.csv");
        boolean boolean20 = database10.addItem("hi!");
        login2.db = database10;
        model.Database database22 = model.Database.database;
        java.util.ArrayList<java.lang.String> strList23 = database22.getAllItems();
        model.Student student24 = new model.Student();
        int int25 = student24.ID;
        model.StudentOnlineResources studentOnlineResources26 = new model.StudentOnlineResources((model.Client) student24);
        model.StudentOnlineResources studentOnlineResources27 = new model.StudentOnlineResources((model.Client) student24);
        database22.addClient((model.Client) student24);
        database22.virtualItemFilePath = "model.RegistrationFailedException: src/Book.csv";
        login2.db = database22;
        int int32 = database22.getRandomID();
        org.junit.Assert.assertNotNull(database0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "src/Magazine.csv" + "'", str1, "src/Magazine.csv");
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "src/VirtualBook.csv" + "'", str11, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "model.RegistrationFailedException: src/Magazine.csv" + "'", str13, "model.RegistrationFailedException: src/Magazine.csv");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "src/Book.csv" + "'", str14, "src/Book.csv");
        org.junit.Assert.assertNotNull(client18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + int32 + "' != '" + 9140853 + "'", int32 == 9140853);
    }

    @Test
    public void test2321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2321");
        model.Database database0 = null;
        model.Register register1 = model.Register.makeRegister(database0);
        model.Faculty faculty2 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection3 = faculty2.courses;
        boolean boolean6 = register1.registerAsStaff((model.Staff) faculty2, "src/Book.csv", "src/Book.csv");
        model.Database database7 = model.Database.database;
        model.Student student8 = new model.Student();
        int int9 = student8.ID;
        model.StudentOnlineResources studentOnlineResources10 = new model.StudentOnlineResources((model.Client) student8);
        student8.ID = '#';
        database7.addClient((model.Client) student8);
        student8.email = "hi!";
        boolean boolean18 = register1.registerAsStaff((model.Staff) student8, "src/CD.csv", "src/Book.csv");
        model.Database database26 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str27 = database26.getVirtualBookFilePath();
        register1.database = database26;
        model.Database database36 = model.Database.createDatabase("", "src/CD.csv", "model.RegistrationFailedException: src/Magazine.csv", "model.RegistrationFailedException: src/Magazine.csv", "model.RegistrationFailedException: ", "src/Magazine.csv", "hi!");
        register1.database = database36;
        model.Database database38 = null;
        register1.database = database38;
        model.Database database40 = model.Database.database;
        java.util.ArrayList<java.lang.String> strList41 = database40.getAllItems();
        model.Student student42 = new model.Student();
        int int43 = student42.ID;
        model.StudentOnlineResources studentOnlineResources44 = new model.StudentOnlineResources((model.Client) student42);
        model.StudentOnlineResources studentOnlineResources45 = new model.StudentOnlineResources((model.Client) student42);
        database40.addClient((model.Client) student42);
        register1.database = database40;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean51 = register1.register("src/Newsletter.csv", "model.RegistrationFailedException: src/Magazine.csv", "model.RegistrationFailedException: src/Magazine.csv");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"model.Database.getClientFilePath()\" because \"this.db\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(register1);
        org.junit.Assert.assertNull(courseCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "src/VirtualBook.csv" + "'", str27, "src/VirtualBook.csv");
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
    }

    @Test
    public void test2322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2322");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.Database.database = database7;
        java.lang.String str10 = database7.virtualItemFilePath;
        model.Login login11 = new model.Login(database7);
        database7.itemPath = "model.RegistrationFailedException: src/Book.csv";
        java.lang.String str14 = database7.getCDFilePath();
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "model.RegistrationFailedException: src/Book.csv" + "'", str10, "model.RegistrationFailedException: src/Book.csv");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "src/CD.csv" + "'", str14, "src/CD.csv");
    }

    @Test
    public void test2323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2323");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        virtualBook4.ISBN = "hi!";
        int int55 = virtualBook4.ID;
        model.VirtualItemContent virtualItemContent57 = new model.VirtualItemContent("hi!");
        virtualBook4.content = virtualItemContent57;
        java.lang.String str59 = virtualBook4.ISBN;
        java.lang.String str60 = virtualBook4.author;
        virtualBook4.isBookLost = false;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertNull(str60);
    }

    @Test
    public void test2324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2324");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        java.util.Collection<model.CD> cDCollection52 = itemSearchResult51.similarCD;
        model.Book book53 = null;
        model.CD cD54 = null;
        model.Magazine magazine55 = null;
        model.Book[] bookArray56 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList57 = new java.util.ArrayList<model.Book>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList57, bookArray56);
        model.CD[] cDArray59 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList60 = new java.util.ArrayList<model.CD>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList60, cDArray59);
        model.Magazine[] magazineArray62 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList63 = new java.util.ArrayList<model.Magazine>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList63, magazineArray62);
        model.ItemSearchResult itemSearchResult65 = new model.ItemSearchResult(book53, cD54, magazine55, (java.util.Collection<model.Book>) bookList57, (java.util.Collection<model.CD>) cDList60, (java.util.Collection<model.Magazine>) magazineList63);
        model.Book book66 = null;
        model.CD cD67 = null;
        model.Magazine magazine68 = null;
        model.Book[] bookArray69 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList70 = new java.util.ArrayList<model.Book>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList70, bookArray69);
        model.CD[] cDArray72 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList73 = new java.util.ArrayList<model.CD>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList73, cDArray72);
        model.Magazine[] magazineArray75 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList76 = new java.util.ArrayList<model.Magazine>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList76, magazineArray75);
        model.ItemSearchResult itemSearchResult78 = new model.ItemSearchResult(book66, cD67, magazine68, (java.util.Collection<model.Book>) bookList70, (java.util.Collection<model.CD>) cDList73, (java.util.Collection<model.Magazine>) magazineList76);
        itemSearchResult65.similarCD = cDList73;
        model.Magazine magazine80 = itemSearchResult65.magazine;
        model.CD cD81 = itemSearchResult65.cd;
        java.util.Collection<model.Book> bookCollection82 = itemSearchResult65.similarBooks;
        java.util.Collection<model.Magazine> magazineCollection83 = itemSearchResult65.similarMagazine;
        itemSearchResult51.similarMagazine = magazineCollection83;
        java.util.Collection<model.CD> cDCollection85 = itemSearchResult51.similarCD;
        java.util.Collection<model.CD> cDCollection86 = itemSearchResult51.similarCD;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(cDCollection52);
        org.junit.Assert.assertNotNull(bookArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(cDArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(magazineArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(bookArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(cDArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(magazineArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(magazine80);
        org.junit.Assert.assertNull(cD81);
        org.junit.Assert.assertNotNull(bookCollection82);
        org.junit.Assert.assertNotNull(magazineCollection83);
        org.junit.Assert.assertNotNull(cDCollection85);
        org.junit.Assert.assertNotNull(cDCollection86);
    }

    @Test
    public void test2325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2325");
        model.LibraryManagementTeam libraryManagementTeam0 = new model.LibraryManagementTeam();
        int int1 = libraryManagementTeam0.ID;
        int int2 = libraryManagementTeam0.accessCode;
        model.Item item3 = null;
        libraryManagementTeam0.addAnItem(item3);
        java.util.ArrayList<model.Item> itemList5 = libraryManagementTeam0.items;
        model.LibraryManagementTeam libraryManagementTeam6 = new model.LibraryManagementTeam();
        int int7 = libraryManagementTeam6.ID;
        int int8 = libraryManagementTeam6.accessCode;
        model.Item item9 = null;
        libraryManagementTeam6.addAnItem(item9);
        java.util.ArrayList<model.Item> itemList11 = libraryManagementTeam6.items;
        libraryManagementTeam0.items = itemList11;
        model.Student student13 = new model.Student();
        int int14 = student13.ID;
        model.StudentOnlineResources studentOnlineResources15 = new model.StudentOnlineResources((model.Client) student13);
        model.VirtualBook virtualBook17 = studentOnlineResources15.searchAccessibleBook("");
        java.lang.String str18 = virtualBook17.location;
        int int19 = virtualBook17.ID;
        virtualBook17.isBookLost = false;
        java.lang.String str22 = virtualBook17.author;
        virtualBook17.isBookLost = true;
        int int25 = virtualBook17.copiesAvailable;
        libraryManagementTeam0.enableAnItem((model.Item) virtualBook17);
        virtualBook17.edition = 7435442;
        virtualBook17.ISBN = "model.RegistrationFailedException: src/VirtualBook.csv";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(itemList5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(itemList11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(virtualBook17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 20 + "'", int25 == 20);
    }

    @Test
    public void test2326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2326");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter54 = null;
        model.PaidNewsletter paidNewsletter55 = null;
        model.VirtualItemSearchResult virtualItemSearchResult56 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter54, paidNewsletter55);
        model.PaidNewsletter paidNewsletter57 = virtualItemSearchResult56.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter58 = new model.UniProvidedNewsletter();
        virtualItemSearchResult56.setUniNewsletter(uniProvidedNewsletter58);
        model.UniProvidedNewsletter uniProvidedNewsletter60 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter60.title = "";
        java.lang.String str63 = uniProvidedNewsletter60.title;
        virtualItemSearchResult56.uniNewsletter = uniProvidedNewsletter60;
        model.PaidNewsletter paidNewsletter65 = virtualItemSearchResult56.getPaidNewsletter();
        model.VirtualBook virtualBook66 = virtualItemSearchResult56.getVirtualBook();
        model.VirtualBook virtualBook67 = virtualItemSearchResult56.getVirtualBook();
        model.PaidNewsletter paidNewsletter68 = virtualItemSearchResult56.getPaidNewsletter();
        model.VirtualBook virtualBook69 = virtualItemSearchResult56.virtualBook;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertNull(paidNewsletter57);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNull(paidNewsletter65);
        org.junit.Assert.assertNotNull(virtualBook66);
        org.junit.Assert.assertNotNull(virtualBook67);
        org.junit.Assert.assertNull(paidNewsletter68);
        org.junit.Assert.assertNotNull(virtualBook69);
    }

    @Test
    public void test2327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2327");
        model.LibraryManagementTeam libraryManagementTeam0 = model.LibraryManagementTeam.createLibraryManagementTeam();
        model.VirtualBook virtualBook2 = new model.VirtualBook("model.RegistrationFailedException: ");
        libraryManagementTeam0.addAnItem((model.Item) virtualBook2);
        model.Student student4 = new model.Student();
        int int5 = student4.ID;
        model.StudentOnlineResources studentOnlineResources6 = new model.StudentOnlineResources((model.Client) student4);
        model.VirtualBook virtualBook8 = studentOnlineResources6.searchAccessibleBook("");
        java.lang.String str9 = virtualBook8.location;
        int int10 = virtualBook8.ID;
        virtualBook8.isBookLost = false;
        libraryManagementTeam0.addAnItem((model.Item) virtualBook8);
        virtualBook8.isBookLost = false;
        org.junit.Assert.assertNotNull(libraryManagementTeam0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(virtualBook8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test2328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2328");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.Request request1 = new model.Request();
        request1.title = "";
        java.lang.String str4 = requestForum0.makeARequest(request1);
        model.LibraryManagementTeam libraryManagementTeam5 = requestForum0.managementTeam;
        model.LibraryManagementTeam libraryManagementTeam6 = requestForum0.managementTeam;
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(libraryManagementTeam5);
        org.junit.Assert.assertNotNull(libraryManagementTeam6);
    }

    @Test
    public void test2329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2329");
        model.SearchBorrowedItem searchBorrowedItem0 = model.SearchBorrowedItem.makeSearchBorrowedItem();
        model.Visitor visitor1 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList2 = visitor1.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources3 = new model.StudentOnlineResources((model.Client) visitor1);
        model.RentedItem[] rentedItemArray4 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList5 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList5, rentedItemArray4);
        model.BorrowingManager borrowingManager7 = new model.BorrowingManager(rentedItemList5);
        model.Visitor visitor8 = new model.Visitor();
        visitor8.email = "hi!";
        borrowingManager7.client = visitor8;
        studentOnlineResources3.client = visitor8;
        model.Student student13 = new model.Student();
        int int14 = student13.ID;
        model.StudentOnlineResources studentOnlineResources15 = new model.StudentOnlineResources((model.Client) student13);
        model.VirtualBook virtualBook17 = studentOnlineResources15.searchAccessibleBook("");
        model.CD cD19 = new model.CD("");
        model.Magazine magazine20 = null;
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.Book book34 = null;
        model.CD cD35 = null;
        model.Magazine magazine36 = null;
        model.Book[] bookArray37 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList38 = new java.util.ArrayList<model.Book>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList38, bookArray37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        model.Magazine[] magazineArray43 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList44 = new java.util.ArrayList<model.Magazine>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList44, magazineArray43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book34, cD35, magazine36, (java.util.Collection<model.Book>) bookList38, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList44);
        model.CD[] cDArray47 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList48 = new java.util.ArrayList<model.CD>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList48, cDArray47);
        itemSearchResult46.similarCD = cDList48;
        model.Book book51 = null;
        model.CD cD52 = null;
        model.Magazine magazine53 = null;
        model.Book[] bookArray54 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList55 = new java.util.ArrayList<model.Book>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList55, bookArray54);
        model.CD[] cDArray57 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList58 = new java.util.ArrayList<model.CD>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList58, cDArray57);
        model.Magazine[] magazineArray60 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList61 = new java.util.ArrayList<model.Magazine>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList61, magazineArray60);
        model.ItemSearchResult itemSearchResult63 = new model.ItemSearchResult(book51, cD52, magazine53, (java.util.Collection<model.Book>) bookList55, (java.util.Collection<model.CD>) cDList58, (java.util.Collection<model.Magazine>) magazineList61);
        model.ItemSearchResult itemSearchResult64 = new model.ItemSearchResult((model.Book) virtualBook17, cD19, magazine20, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList48, (java.util.Collection<model.Magazine>) magazineList61);
        java.lang.String str65 = studentOnlineResources3.readVirtualItem((model.VirtualItem) virtualBook17);
        model.Visitor visitor67 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList68 = visitor67.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources69 = new model.StudentOnlineResources((model.Client) visitor67);
        searchBorrowedItem0.addPhyscialItem((model.Item) virtualBook17, "", (model.Client) visitor67);
// flaky:         searchBorrowedItem0.removeItem("src/VirtualBook.csv", "src/Book.csv");
        model.SearchBorrowedItem.object = searchBorrowedItem0;
        java.util.ArrayList<model.RentedItem> rentedItemList77 = null; // flaky: searchBorrowedItem0.searchBorrowedItem("model.RegistrationFailedException: ", "src/Client.csv");
        java.util.ArrayList<model.RentedItem> rentedItemList80 = null; // flaky: searchBorrowedItem0.searchBorrowedItem("src/BorrowedItems.csv", "hi!");
        java.util.ArrayList<model.RentedItem> rentedItemList83 = null; // flaky: searchBorrowedItem0.searchBorrowedItem("model.RegistrationFailedException: model.RentingNotAllowedException: hi!", "hi!");
// flaky:         searchBorrowedItem0.removeItem("", "model.RegistrationFailedException: src/Magazine.csv");
        org.junit.Assert.assertNotNull(searchBorrowedItem0);
        org.junit.Assert.assertNull(virtualBookList2);
        org.junit.Assert.assertNotNull(rentedItemArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(virtualBook17);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(bookArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(magazineArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(cDArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(bookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(cDArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(magazineArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(virtualBookList68);
// flaky:         org.junit.Assert.assertNotNull(rentedItemList77);
// flaky:         org.junit.Assert.assertNotNull(rentedItemList80);
// flaky:         org.junit.Assert.assertNotNull(rentedItemList83);
    }

    @Test
    public void test2330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2330");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.Student student5 = new model.Student();
        int int6 = student5.ID;
        model.StudentOnlineResources studentOnlineResources7 = new model.StudentOnlineResources((model.Client) student5);
        student5.ID = '#';
        java.lang.String str10 = student5.email;
        newsletterSubscriptionManager3.client = student5;
        model.Newsletter[] newsletterArray12 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList13 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList13, newsletterArray12);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager15 = new model.NewsletterSubscriptionManager(newsletterList13);
        newsletterSubscriptionManager3.newsletterSubscribed = newsletterList13;
        java.util.ArrayList<model.Newsletter> newsletterList17 = newsletterSubscriptionManager3.newsletterSubscribed;
        model.Newsletter[] newsletterArray18 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList19 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList19, newsletterArray18);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager21 = new model.NewsletterSubscriptionManager(newsletterList19);
        model.Client client22 = newsletterSubscriptionManager21.client;
        model.Student student23 = new model.Student();
        int int24 = student23.ID;
        model.StudentOnlineResources studentOnlineResources25 = new model.StudentOnlineResources((model.Client) student23);
        student23.ID = '#';
        java.lang.String str28 = student23.email;
        newsletterSubscriptionManager21.client = student23;
        model.Newsletter[] newsletterArray30 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList31 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList31, newsletterArray30);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager33 = new model.NewsletterSubscriptionManager(newsletterList31);
        newsletterSubscriptionManager21.newsletterSubscribed = newsletterList31;
        newsletterSubscriptionManager3.newsletterSubscribed = newsletterList31;
        model.RentAndReturnSystem rentAndReturnSystem36 = new model.RentAndReturnSystem();
        model.Payment payment37 = rentAndReturnSystem36.paymentAPI;
        model.PayMobileWallet payMobileWallet38 = new model.PayMobileWallet();
        payMobileWallet38.amountPay = 100.0f;
        payMobileWallet38.amountPay = (byte) -1;
        rentAndReturnSystem36.paymentAPI = payMobileWallet38;
        newsletterSubscriptionManager3.paymentAPI = payMobileWallet38;
        payMobileWallet38.pay((double) 6924365);
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(newsletterArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(newsletterList17);
        org.junit.Assert.assertNotNull(newsletterArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(client22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(newsletterArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(payment37);
    }

    @Test
    public void test2331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2331");
        model.LibraryManagementTeam libraryManagementTeam0 = new model.LibraryManagementTeam();
        int int1 = libraryManagementTeam0.ID;
        libraryManagementTeam0.accessCode = (-1);
        model.Item item5 = libraryManagementTeam0.selectAnItemFromDatabase(5777452);
        libraryManagementTeam0.accessCode = 11;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(item5);
    }

    @Test
    public void test2332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2332");
        model.Database database7 = model.Database.createDatabase("hi!", "model.RegistrationFailedException: src/Magazine.csv", "src/CD.csv", "src/Client.csv", "model.LoginFailedException: hi!", "model.RegistrationFailedException: src/Magazine.csv", "model.LoginFailedException: hi!");
        java.lang.String str8 = database7.getBorrowedItemFilePath();
        model.Register register9 = model.Register.makeRegister(database7);
        model.Database database10 = register9.database;
        model.Database database18 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        java.lang.String str19 = database18.getNewspaperFilePath();
        register9.database = database18;
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/BorrowedItems.csv" + "'", str8, "src/BorrowedItems.csv");
        org.junit.Assert.assertNotNull(register9);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "src/Newsletter.csv" + "'", str19, "src/Newsletter.csv");
    }

    @Test
    public void test2333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2333");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.Database.database = database7;
        java.lang.String str10 = database7.virtualItemFilePath;
        model.Login login11 = model.Login.makeLogin(database7);
        model.SearchItems searchItems12 = new model.SearchItems(database7);
        model.Login login13 = new model.Login(database7);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "model.RegistrationFailedException: src/Book.csv" + "'", str10, "model.RegistrationFailedException: src/Book.csv");
        org.junit.Assert.assertNotNull(login11);
    }

    @Test
    public void test2334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2334");
        model.SearchBorrowedItem searchBorrowedItem0 = model.SearchBorrowedItem.makeSearchBorrowedItem();
        model.Visitor visitor1 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList2 = visitor1.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources3 = new model.StudentOnlineResources((model.Client) visitor1);
        model.RentedItem[] rentedItemArray4 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList5 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList5, rentedItemArray4);
        model.BorrowingManager borrowingManager7 = new model.BorrowingManager(rentedItemList5);
        model.Visitor visitor8 = new model.Visitor();
        visitor8.email = "hi!";
        borrowingManager7.client = visitor8;
        studentOnlineResources3.client = visitor8;
        model.Student student13 = new model.Student();
        int int14 = student13.ID;
        model.StudentOnlineResources studentOnlineResources15 = new model.StudentOnlineResources((model.Client) student13);
        model.VirtualBook virtualBook17 = studentOnlineResources15.searchAccessibleBook("");
        model.CD cD19 = new model.CD("");
        model.Magazine magazine20 = null;
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.Book book34 = null;
        model.CD cD35 = null;
        model.Magazine magazine36 = null;
        model.Book[] bookArray37 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList38 = new java.util.ArrayList<model.Book>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList38, bookArray37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        model.Magazine[] magazineArray43 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList44 = new java.util.ArrayList<model.Magazine>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList44, magazineArray43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book34, cD35, magazine36, (java.util.Collection<model.Book>) bookList38, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList44);
        model.CD[] cDArray47 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList48 = new java.util.ArrayList<model.CD>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList48, cDArray47);
        itemSearchResult46.similarCD = cDList48;
        model.Book book51 = null;
        model.CD cD52 = null;
        model.Magazine magazine53 = null;
        model.Book[] bookArray54 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList55 = new java.util.ArrayList<model.Book>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList55, bookArray54);
        model.CD[] cDArray57 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList58 = new java.util.ArrayList<model.CD>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList58, cDArray57);
        model.Magazine[] magazineArray60 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList61 = new java.util.ArrayList<model.Magazine>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList61, magazineArray60);
        model.ItemSearchResult itemSearchResult63 = new model.ItemSearchResult(book51, cD52, magazine53, (java.util.Collection<model.Book>) bookList55, (java.util.Collection<model.CD>) cDList58, (java.util.Collection<model.Magazine>) magazineList61);
        model.ItemSearchResult itemSearchResult64 = new model.ItemSearchResult((model.Book) virtualBook17, cD19, magazine20, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList48, (java.util.Collection<model.Magazine>) magazineList61);
        java.lang.String str65 = studentOnlineResources3.readVirtualItem((model.VirtualItem) virtualBook17);
        model.Visitor visitor67 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList68 = visitor67.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources69 = new model.StudentOnlineResources((model.Client) visitor67);
        searchBorrowedItem0.addPhyscialItem((model.Item) virtualBook17, "", (model.Client) visitor67);
        model.SearchBorrowedItem.object = searchBorrowedItem0;
        java.util.ArrayList<model.RentedItem> rentedItemList74 = null; // flaky: searchBorrowedItem0.searchBorrowedItem("src/VirtualBook.csv", "src/BorrowedItems.csv");
        model.SearchBorrowedItem.object = searchBorrowedItem0;
        java.util.ArrayList<model.VirtualItem> virtualItemList78 = searchBorrowedItem0.searchBorrowedVirtualItem("src/CD.csv", "model.RentingNotAllowedException: src/Magazine.csv");
        java.util.ArrayList<model.VirtualItem> virtualItemList81 = searchBorrowedItem0.searchBorrowedVirtualItem("model.RegistrationFailedException: src/Book.csv", "src/Newsletter.csv");
        org.junit.Assert.assertNotNull(searchBorrowedItem0);
        org.junit.Assert.assertNull(virtualBookList2);
        org.junit.Assert.assertNotNull(rentedItemArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(virtualBook17);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(bookArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(magazineArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(cDArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(bookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(cDArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(magazineArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(virtualBookList68);
// flaky:         org.junit.Assert.assertNotNull(rentedItemList74);
        org.junit.Assert.assertNotNull(virtualItemList78);
        org.junit.Assert.assertNotNull(virtualItemList81);
    }

    @Test
    public void test2335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2335");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getBookFilePath();
        database7.itemPath = "hi!";
        model.Database.database = database7;
        model.Register register12 = model.Register.makeRegister(database7);
        model.Database database13 = register12.database;
        model.SearchVirtualItem searchVirtualItem14 = new model.SearchVirtualItem(database13);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/Book.csv" + "'", str8, "src/Book.csv");
        org.junit.Assert.assertNotNull(register12);
        org.junit.Assert.assertNotNull(database13);
    }

    @Test
    public void test2336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2336");
        model.Database database7 = model.Database.createDatabase("model.RentingNotAllowedException: hi!", "hi!", "", "model.RegistrationFailedException: src/Magazine.csv", "src/Magazine.csv", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        database7.virtualItemFilePath = "model.RegistrationFailedException: src/Magazine.csv";
        model.Login login10 = new model.Login(database7);
        org.junit.Assert.assertNotNull(database7);
    }

    @Test
    public void test2337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2337");
        model.Database database0 = null;
        model.Register register1 = model.Register.makeRegister(database0);
        model.Faculty faculty2 = new model.Faculty();
        faculty2.username = "hi!";
        faculty2.faculty = "src/Client.csv";
        boolean boolean9 = register1.registerAsStaff((model.Staff) faculty2, "src/BorrowedItems.csv", "src/VirtualBook.csv");
        model.Database database17 = model.Database.createDatabase("src/Newsletter.csv", "model.RegistrationFailedException: src/Book.csv", "src/BorrowedItems.csv", "model.RegistrationFailedException: model.RentingNotAllowedException: hi!", "src/BorrowedItems.csv", "", "model.RentingNotAllowedException: hi!");
        register1.database = database17;
        org.junit.Assert.assertNotNull(register1);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(database17);
    }

    @Test
    public void test2338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2338");
        model.Book book0 = null;
        model.CD cD1 = null;
        model.Magazine magazine2 = null;
        model.Book[] bookArray3 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList4 = new java.util.ArrayList<model.Book>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList4, bookArray3);
        model.CD[] cDArray6 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList7 = new java.util.ArrayList<model.CD>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList7, cDArray6);
        model.Magazine[] magazineArray9 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList10 = new java.util.ArrayList<model.Magazine>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList10, magazineArray9);
        model.ItemSearchResult itemSearchResult12 = new model.ItemSearchResult(book0, cD1, magazine2, (java.util.Collection<model.Book>) bookList4, (java.util.Collection<model.CD>) cDList7, (java.util.Collection<model.Magazine>) magazineList10);
        model.Book book13 = null;
        model.CD cD14 = null;
        model.Magazine magazine15 = null;
        model.Book[] bookArray16 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList17 = new java.util.ArrayList<model.Book>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList17, bookArray16);
        model.CD[] cDArray19 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList20 = new java.util.ArrayList<model.CD>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList20, cDArray19);
        model.Magazine[] magazineArray22 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList23 = new java.util.ArrayList<model.Magazine>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList23, magazineArray22);
        model.ItemSearchResult itemSearchResult25 = new model.ItemSearchResult(book13, cD14, magazine15, (java.util.Collection<model.Book>) bookList17, (java.util.Collection<model.CD>) cDList20, (java.util.Collection<model.Magazine>) magazineList23);
        itemSearchResult12.similarCD = cDList20;
        model.Book book27 = itemSearchResult12.book;
        model.Book book28 = itemSearchResult12.book;
        java.util.Collection<model.Book> bookCollection29 = itemSearchResult12.similarBooks;
        org.junit.Assert.assertNotNull(bookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(cDArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(magazineArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(bookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(cDArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(magazineArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(book27);
        org.junit.Assert.assertNull(book28);
        org.junit.Assert.assertNotNull(bookCollection29);
    }

    @Test
    public void test2339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2339");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getBookFilePath();
        database7.itemPath = "hi!";
        model.SearchVirtualItem searchVirtualItem11 = new model.SearchVirtualItem(database7);
        model.VirtualItemSearchResult virtualItemSearchResult13 = searchVirtualItem11.searchVirtualItem("model.RegistrationFailedException: ");
        model.VirtualBook virtualBook15 = searchVirtualItem11.getVirtualBook("src/BorrowedItems.csv");
        model.PaidNewsletter paidNewsletter17 = searchVirtualItem11.getPaidNewsletter("model.LoginFailedException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass18 = paidNewsletter17.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/Book.csv" + "'", str8, "src/Book.csv");
        org.junit.Assert.assertNotNull(virtualItemSearchResult13);
        org.junit.Assert.assertNull(virtualBook15);
        org.junit.Assert.assertNull(paidNewsletter17);
    }

    @Test
    public void test2340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2340");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        model.Book book4 = null;
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        java.util.Collection<model.Book> bookCollection8 = null;
        model.Book book9 = null;
        model.CD cD10 = null;
        model.Magazine magazine11 = null;
        model.Book[] bookArray12 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList13 = new java.util.ArrayList<model.Book>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList13, bookArray12);
        model.CD[] cDArray15 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList16 = new java.util.ArrayList<model.CD>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList16, cDArray15);
        model.Magazine[] magazineArray18 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList19 = new java.util.ArrayList<model.Magazine>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList19, magazineArray18);
        model.ItemSearchResult itemSearchResult21 = new model.ItemSearchResult(book9, cD10, magazine11, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList16, (java.util.Collection<model.Magazine>) magazineList19);
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        itemSearchResult21.similarCD = cDList29;
        model.Book book36 = null;
        model.CD cD37 = null;
        model.Magazine magazine38 = null;
        model.Book[] bookArray39 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList40 = new java.util.ArrayList<model.Book>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList40, bookArray39);
        model.CD[] cDArray42 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList43 = new java.util.ArrayList<model.CD>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList43, cDArray42);
        model.Magazine[] magazineArray45 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList46 = new java.util.ArrayList<model.Magazine>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList46, magazineArray45);
        model.ItemSearchResult itemSearchResult48 = new model.ItemSearchResult(book36, cD37, magazine38, (java.util.Collection<model.Book>) bookList40, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList46);
        model.ItemSearchResult itemSearchResult49 = new model.ItemSearchResult(book4, cD6, magazine7, bookCollection8, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList46);
        cD6.ID = (short) 10;
        borrowingManager3.removeRentedItem((model.Item) cD6);
        model.Client client53 = borrowingManager3.client;
        java.util.ArrayList<model.RentedItem> rentedItemList54 = borrowingManager3.physicalItemBorrowed;
        double double55 = borrowingManager3.checkBalanceOwed();
        java.util.ArrayList<model.RentedItem> rentedItemList56 = borrowingManager3.physicalItemBorrowed;
        java.util.ArrayList<model.RentedItem> rentedItemList57 = borrowingManager3.physicalItemBorrowed;
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(bookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cDArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(magazineArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(bookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cDArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(magazineArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(client53);
        org.junit.Assert.assertNotNull(rentedItemList54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(rentedItemList56);
        org.junit.Assert.assertNotNull(rentedItemList57);
    }

    @Test
    public void test2341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2341");
        model.UniProvidedNewsletter uniProvidedNewsletter0 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter0.title = "";
        uniProvidedNewsletter0.cost = (byte) 0;
        model.Student student5 = new model.Student();
        int int6 = student5.ID;
        model.StudentOnlineResources studentOnlineResources7 = new model.StudentOnlineResources((model.Client) student5);
        model.VirtualBook virtualBook9 = studentOnlineResources7.searchAccessibleBook("");
        model.CD cD11 = new model.CD("");
        model.Magazine magazine12 = null;
        model.Book book13 = null;
        model.CD cD14 = null;
        model.Magazine magazine15 = null;
        model.Book[] bookArray16 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList17 = new java.util.ArrayList<model.Book>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList17, bookArray16);
        model.CD[] cDArray19 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList20 = new java.util.ArrayList<model.CD>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList20, cDArray19);
        model.Magazine[] magazineArray22 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList23 = new java.util.ArrayList<model.Magazine>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList23, magazineArray22);
        model.ItemSearchResult itemSearchResult25 = new model.ItemSearchResult(book13, cD14, magazine15, (java.util.Collection<model.Book>) bookList17, (java.util.Collection<model.CD>) cDList20, (java.util.Collection<model.Magazine>) magazineList23);
        model.Book book26 = null;
        model.CD cD27 = null;
        model.Magazine magazine28 = null;
        model.Book[] bookArray29 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList30 = new java.util.ArrayList<model.Book>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList30, bookArray29);
        model.CD[] cDArray32 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList33 = new java.util.ArrayList<model.CD>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList33, cDArray32);
        model.Magazine[] magazineArray35 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList36 = new java.util.ArrayList<model.Magazine>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList36, magazineArray35);
        model.ItemSearchResult itemSearchResult38 = new model.ItemSearchResult(book26, cD27, magazine28, (java.util.Collection<model.Book>) bookList30, (java.util.Collection<model.CD>) cDList33, (java.util.Collection<model.Magazine>) magazineList36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        itemSearchResult38.similarCD = cDList40;
        model.Book book43 = null;
        model.CD cD44 = null;
        model.Magazine magazine45 = null;
        model.Book[] bookArray46 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList47 = new java.util.ArrayList<model.Book>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList47, bookArray46);
        model.CD[] cDArray49 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList50 = new java.util.ArrayList<model.CD>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList50, cDArray49);
        model.Magazine[] magazineArray52 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList53 = new java.util.ArrayList<model.Magazine>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList53, magazineArray52);
        model.ItemSearchResult itemSearchResult55 = new model.ItemSearchResult(book43, cD44, magazine45, (java.util.Collection<model.Book>) bookList47, (java.util.Collection<model.CD>) cDList50, (java.util.Collection<model.Magazine>) magazineList53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult((model.Book) virtualBook9, cD11, magazine12, (java.util.Collection<model.Book>) bookList17, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList53);
        int int57 = virtualBook9.ID;
        virtualBook9.ISBN = "hi!";
        int int60 = virtualBook9.ID;
        model.VirtualItemContent virtualItemContent62 = new model.VirtualItemContent("hi!");
        virtualBook9.content = virtualItemContent62;
        uniProvidedNewsletter0.content = virtualItemContent62;
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(virtualBook9);
        org.junit.Assert.assertNotNull(bookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(cDArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(magazineArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(bookArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(cDArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(magazineArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(bookArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(cDArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(magazineArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
    }

    @Test
    public void test2342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2342");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        boolean boolean4 = borrowingManager3.canRent();
        borrowingManager3.updateBorrowingPrivilages();
        float float6 = borrowingManager3.amountOwned;
        java.util.ArrayList<model.RentedItem> rentedItemList7 = borrowingManager3.physicalItemBorrowed;
        borrowingManager3.updateBorrowingPrivilages();
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + float6 + "' != '" + 0.0f + "'", float6 == 0.0f);
        org.junit.Assert.assertNotNull(rentedItemList7);
    }

    @Test
    public void test2343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2343");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.VirtualItemContent virtualItemContent5 = virtualBook4.content;
        model.Student student6 = new model.Student();
        int int7 = student6.ID;
        model.StudentOnlineResources studentOnlineResources8 = new model.StudentOnlineResources((model.Client) student6);
        model.VirtualBook virtualBook10 = studentOnlineResources8.searchAccessibleBook("");
        model.CD cD12 = new model.CD("");
        model.Magazine magazine13 = null;
        model.Book book14 = null;
        model.CD cD15 = null;
        model.Magazine magazine16 = null;
        model.Book[] bookArray17 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList18 = new java.util.ArrayList<model.Book>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList18, bookArray17);
        model.CD[] cDArray20 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList21 = new java.util.ArrayList<model.CD>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList21, cDArray20);
        model.Magazine[] magazineArray23 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList24 = new java.util.ArrayList<model.Magazine>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList24, magazineArray23);
        model.ItemSearchResult itemSearchResult26 = new model.ItemSearchResult(book14, cD15, magazine16, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList21, (java.util.Collection<model.Magazine>) magazineList24);
        model.Book book27 = null;
        model.CD cD28 = null;
        model.Magazine magazine29 = null;
        model.Book[] bookArray30 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList31 = new java.util.ArrayList<model.Book>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList31, bookArray30);
        model.CD[] cDArray33 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList34 = new java.util.ArrayList<model.CD>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList34, cDArray33);
        model.Magazine[] magazineArray36 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList37 = new java.util.ArrayList<model.Magazine>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList37, magazineArray36);
        model.ItemSearchResult itemSearchResult39 = new model.ItemSearchResult(book27, cD28, magazine29, (java.util.Collection<model.Book>) bookList31, (java.util.Collection<model.CD>) cDList34, (java.util.Collection<model.Magazine>) magazineList37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        itemSearchResult39.similarCD = cDList41;
        model.Book book44 = null;
        model.CD cD45 = null;
        model.Magazine magazine46 = null;
        model.Book[] bookArray47 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList48 = new java.util.ArrayList<model.Book>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList48, bookArray47);
        model.CD[] cDArray50 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList51 = new java.util.ArrayList<model.CD>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList51, cDArray50);
        model.Magazine[] magazineArray53 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList54 = new java.util.ArrayList<model.Magazine>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList54, magazineArray53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult(book44, cD45, magazine46, (java.util.Collection<model.Book>) bookList48, (java.util.Collection<model.CD>) cDList51, (java.util.Collection<model.Magazine>) magazineList54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult((model.Book) virtualBook10, cD12, magazine13, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList54);
        int int58 = virtualBook10.ID;
        int int59 = virtualBook10.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter60 = null;
        model.PaidNewsletter paidNewsletter61 = null;
        model.VirtualItemSearchResult virtualItemSearchResult62 = new model.VirtualItemSearchResult(virtualBook10, uniProvidedNewsletter60, paidNewsletter61);
        model.PaidNewsletter paidNewsletter63 = virtualItemSearchResult62.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter64 = new model.UniProvidedNewsletter();
        virtualItemSearchResult62.setUniNewsletter(uniProvidedNewsletter64);
        java.lang.String str66 = uniProvidedNewsletter64.title;
        model.PaidNewsletter paidNewsletter67 = null;
        model.VirtualItemSearchResult virtualItemSearchResult68 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter64, paidNewsletter67);
        model.VirtualBook virtualBook69 = virtualItemSearchResult68.virtualBook;
        model.PaidNewsletter paidNewsletter70 = new model.PaidNewsletter();
        virtualItemSearchResult68.setPaidNewsletter(paidNewsletter70);
        paidNewsletter70.subscriptionPrice = 'a';
        paidNewsletter70.subscriptionPrice = 0.0d;
        double double76 = paidNewsletter70.subscriptionPrice;
        model.VirtualItemContent virtualItemContent78 = new model.VirtualItemContent("src/CD.csv");
        paidNewsletter70.content = virtualItemContent78;
        double double80 = paidNewsletter70.subscriptionPrice;
        paidNewsletter70.subscriptionPrice = (-1L);
        paidNewsletter70.ID = 7694375;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNull(virtualItemContent5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(virtualBook10);
        org.junit.Assert.assertNotNull(bookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(cDArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(magazineArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(bookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(magazineArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(bookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(cDArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(magazineArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 20 + "'", int59 == 20);
        org.junit.Assert.assertNull(paidNewsletter63);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(virtualBook69);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
    }

    @Test
    public void test2344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2344");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter54 = null;
        model.PaidNewsletter paidNewsletter55 = null;
        model.VirtualItemSearchResult virtualItemSearchResult56 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter54, paidNewsletter55);
        model.UniProvidedNewsletter uniProvidedNewsletter57 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter57.title = "hi!";
        uniProvidedNewsletter57.title = "";
        virtualItemSearchResult56.uniNewsletter = uniProvidedNewsletter57;
        model.UniProvidedNewsletter uniProvidedNewsletter63 = virtualItemSearchResult56.uniNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter64 = virtualItemSearchResult56.getUniNewsletter();
        model.VirtualBook virtualBook65 = virtualItemSearchResult56.virtualBook;
        model.VirtualBook virtualBook66 = virtualItemSearchResult56.getVirtualBook();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertNotNull(uniProvidedNewsletter63);
        org.junit.Assert.assertNotNull(uniProvidedNewsletter64);
        org.junit.Assert.assertNotNull(virtualBook65);
        org.junit.Assert.assertNotNull(virtualBook66);
    }

    @Test
    public void test2345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2345");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "", "src/CD.csv", "model.RegistrationFailedException: src/Magazine.csv", "model.RegistrationFailedException: src/Book.csv", "model.RegistrationFailedException: ", "model.RegistrationFailedException: src/Book.csv");
        java.lang.String str8 = database7.getNewspaperFilePath();
        model.Login login9 = model.Login.makeLogin(database7);
        model.SearchItems searchItems10 = new model.SearchItems(database7);
        model.CD cD12 = searchItems10.getCD("model.RegistrationFailedException: ");
        model.Magazine magazine14 = searchItems10.getMagazine("");
        model.Magazine magazine16 = searchItems10.getMagazine("model.RegistrationFailedException: model.RentingNotAllowedException: hi!");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/Newsletter.csv" + "'", str8, "src/Newsletter.csv");
        org.junit.Assert.assertNotNull(login9);
        org.junit.Assert.assertNull(cD12);
        org.junit.Assert.assertNull(magazine14);
        org.junit.Assert.assertNull(magazine16);
    }

    @Test
    public void test2346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2346");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.Request request1 = new model.Request();
        request1.title = "";
        java.lang.String str4 = requestForum0.makeARequest(request1);
        model.RequestForum requestForum5 = model.RequestForum.createRequestForum();
        model.Request request6 = new model.Request();
        request6.title = "";
        java.lang.String str9 = requestForum5.makeARequest(request6);
        model.LibraryManagementTeam libraryManagementTeam10 = requestForum5.managementTeam;
        model.RequestForum requestForum11 = model.RequestForum.createRequestForum();
        model.Request request12 = new model.Request();
        request12.title = "";
        java.lang.String str15 = requestForum11.makeARequest(request12);
        model.Client client16 = request12.requestee;
        int int17 = requestForum5.assessBooksPriority(request12);
        request12.type = "model.RegistrationFailedException: ";
        java.lang.String str20 = request12.type;
        request12.title = "model.RentingNotAllowedException: hi!";
        int int23 = requestForum0.assessBooksPriority(request12);
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(requestForum5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(libraryManagementTeam10);
        org.junit.Assert.assertNotNull(requestForum11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(client16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "model.RegistrationFailedException: " + "'", str20, "model.RegistrationFailedException: ");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test2347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2347");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.Student student5 = new model.Student();
        int int6 = student5.ID;
        model.StudentOnlineResources studentOnlineResources7 = new model.StudentOnlineResources((model.Client) student5);
        student5.ID = '#';
        java.lang.String str10 = student5.email;
        newsletterSubscriptionManager3.client = student5;
        model.Client client12 = newsletterSubscriptionManager3.client;
        model.Client client13 = newsletterSubscriptionManager3.client;
        model.Newsletter[] newsletterArray14 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList15 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList15, newsletterArray14);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager17 = new model.NewsletterSubscriptionManager(newsletterList15);
        model.Client client18 = newsletterSubscriptionManager17.client;
        model.Newsletter[] newsletterArray19 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList20 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList20, newsletterArray19);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager22 = new model.NewsletterSubscriptionManager(newsletterList20);
        newsletterSubscriptionManager17.newsletterSubscribed = newsletterList20;
        newsletterSubscriptionManager3.newsletterSubscribed = newsletterList20;
        java.util.ArrayList<model.Newsletter> newsletterList25 = newsletterSubscriptionManager3.newsletterSubscribed;
        model.NewsletterSubscriptionManager newsletterSubscriptionManager26 = new model.NewsletterSubscriptionManager(newsletterList25);
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(client12);
        org.junit.Assert.assertNotNull(client13);
        org.junit.Assert.assertNotNull(newsletterArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(client18);
        org.junit.Assert.assertNotNull(newsletterArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(newsletterList25);
    }

    @Test
    public void test2348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2348");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.Request request1 = new model.Request();
        request1.title = "";
        java.lang.String str4 = requestForum0.makeARequest(request1);
        request1.title = "hi!";
        request1.title = "model.RegistrationFailedException: ";
        request1.title = "model.RegistrationFailedException: model.RentingNotAllowedException: hi!";
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
    }

    @Test
    public void test2349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2349");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.StudentOnlineResources studentOnlineResources3 = new model.StudentOnlineResources((model.Client) student0);
        model.Visitor visitor4 = new model.Visitor();
        model.StudentOnlineResources studentOnlineResources5 = new model.StudentOnlineResources((model.Client) visitor4);
        model.Visitor visitor6 = new model.Visitor();
        model.VirtualBook[] virtualBookArray7 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList8 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList8, virtualBookArray7);
        visitor6.virtualBooksAvailable = virtualBookList8;
        visitor4.virtualBooksAvailable = virtualBookList8;
        student0.virtualBooksAvailable = virtualBookList8;
        model.Visitor visitor13 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList14 = visitor13.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources15 = new model.StudentOnlineResources((model.Client) visitor13);
        model.RentedItem[] rentedItemArray16 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList17 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList17, rentedItemArray16);
        model.BorrowingManager borrowingManager19 = new model.BorrowingManager(rentedItemList17);
        model.Visitor visitor20 = new model.Visitor();
        visitor20.email = "hi!";
        borrowingManager19.client = visitor20;
        studentOnlineResources15.client = visitor20;
        model.NonFaculty nonFaculty25 = new model.NonFaculty();
        model.Visitor visitor26 = new model.Visitor();
        model.VirtualBook[] virtualBookArray27 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList28 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList28, virtualBookArray27);
        visitor26.virtualBooksAvailable = virtualBookList28;
        visitor26.username = "";
        model.Visitor visitor33 = new model.Visitor();
        model.VirtualBook[] virtualBookArray34 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList35 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList35, virtualBookArray34);
        visitor33.virtualBooksAvailable = virtualBookList35;
        visitor26.virtualBooksAvailable = virtualBookList35;
        nonFaculty25.virtualBooksAvailable = virtualBookList35;
        visitor20.virtualBooksAvailable = virtualBookList35;
        student0.virtualBooksAvailable = virtualBookList35;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(virtualBookList14);
        org.junit.Assert.assertNotNull(rentedItemArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(virtualBookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(virtualBookArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test2350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2350");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.BuySpecialItems buySpecialItems1 = new model.BuySpecialItems();
        model.PayDebit payDebit2 = new model.PayDebit();
        buySpecialItems1.paymentAPI = payDebit2;
        rentAndReturnSystem0.paymentAPI = payDebit2;
        model.PaidNewsletter paidNewsletter5 = new model.PaidNewsletter();
        model.Student student6 = new model.Student();
        int int7 = student6.ID;
        model.StudentOnlineResources studentOnlineResources8 = new model.StudentOnlineResources((model.Client) student6);
        model.VirtualBook virtualBook10 = studentOnlineResources8.searchAccessibleBook("");
        model.CD cD12 = new model.CD("");
        model.Magazine magazine13 = null;
        model.Book book14 = null;
        model.CD cD15 = null;
        model.Magazine magazine16 = null;
        model.Book[] bookArray17 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList18 = new java.util.ArrayList<model.Book>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList18, bookArray17);
        model.CD[] cDArray20 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList21 = new java.util.ArrayList<model.CD>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList21, cDArray20);
        model.Magazine[] magazineArray23 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList24 = new java.util.ArrayList<model.Magazine>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList24, magazineArray23);
        model.ItemSearchResult itemSearchResult26 = new model.ItemSearchResult(book14, cD15, magazine16, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList21, (java.util.Collection<model.Magazine>) magazineList24);
        model.Book book27 = null;
        model.CD cD28 = null;
        model.Magazine magazine29 = null;
        model.Book[] bookArray30 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList31 = new java.util.ArrayList<model.Book>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList31, bookArray30);
        model.CD[] cDArray33 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList34 = new java.util.ArrayList<model.CD>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList34, cDArray33);
        model.Magazine[] magazineArray36 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList37 = new java.util.ArrayList<model.Magazine>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList37, magazineArray36);
        model.ItemSearchResult itemSearchResult39 = new model.ItemSearchResult(book27, cD28, magazine29, (java.util.Collection<model.Book>) bookList31, (java.util.Collection<model.CD>) cDList34, (java.util.Collection<model.Magazine>) magazineList37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        itemSearchResult39.similarCD = cDList41;
        model.Book book44 = null;
        model.CD cD45 = null;
        model.Magazine magazine46 = null;
        model.Book[] bookArray47 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList48 = new java.util.ArrayList<model.Book>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList48, bookArray47);
        model.CD[] cDArray50 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList51 = new java.util.ArrayList<model.CD>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList51, cDArray50);
        model.Magazine[] magazineArray53 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList54 = new java.util.ArrayList<model.Magazine>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList54, magazineArray53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult(book44, cD45, magazine46, (java.util.Collection<model.Book>) bookList48, (java.util.Collection<model.CD>) cDList51, (java.util.Collection<model.Magazine>) magazineList54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult((model.Book) virtualBook10, cD12, magazine13, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList54);
        int int58 = virtualBook10.ID;
        int int59 = virtualBook10.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter60 = null;
        model.PaidNewsletter paidNewsletter61 = null;
        model.VirtualItemSearchResult virtualItemSearchResult62 = new model.VirtualItemSearchResult(virtualBook10, uniProvidedNewsletter60, paidNewsletter61);
        virtualBook10.author = "hi!";
        virtualBook10.showContent();
        boolean boolean66 = paidNewsletter5.equals((java.lang.Object) virtualBook10);
        model.Faculty faculty67 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection68 = faculty67.courses;
        boolean boolean69 = rentAndReturnSystem0.rentAnItem((model.Item) virtualBook10, (model.Client) faculty67);
        faculty67.username = "model.RegistrationFailedException: src/Magazine.csv";
        model.RentedItem[] rentedItemArray72 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList73 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList73, rentedItemArray72);
        model.BorrowingManager borrowingManager75 = new model.BorrowingManager(rentedItemList73);
        boolean boolean76 = borrowingManager75.canRent();
        boolean boolean77 = borrowingManager75.canRent();
        float float78 = borrowingManager75.amountOwned;
        java.util.ArrayList<model.RentedItem> rentedItemList79 = borrowingManager75.physicalItemBorrowed;
        faculty67.borrowManager = borrowingManager75;
        int int81 = borrowingManager75.itemsBorrowedCount;
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(virtualBook10);
        org.junit.Assert.assertNotNull(bookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(cDArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(magazineArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(bookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(magazineArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(bookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(cDArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(magazineArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 20 + "'", int59 == 20);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(courseCollection68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(rentedItemArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + float78 + "' != '" + 0.0f + "'", float78 == 0.0f);
        org.junit.Assert.assertNotNull(rentedItemList79);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
    }

    @Test
    public void test2351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2351");
        model.Database database7 = model.Database.createDatabase("src/Client.csv", "src/Book.csv", "model.RegistrationFailedException: src/Book.csv", "src/VirtualBook.csv", "model.RegistrationFailedException: ", "model.RegistrationFailedException: src/Book.csv", "src/CD.csv");
        java.lang.String str8 = database7.getBorrowedItemFilePath();
        java.util.ArrayList<java.lang.String> strList9 = database7.getAllItems();
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/BorrowedItems.csv" + "'", str8, "src/BorrowedItems.csv");
        org.junit.Assert.assertNotNull(strList9);
    }

    @Test
    public void test2352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2352");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.Request request1 = new model.Request();
        request1.title = "";
        java.lang.String str4 = requestForum0.makeARequest(request1);
        model.LibraryManagementTeam libraryManagementTeam5 = requestForum0.managementTeam;
        model.RequestForum requestForum6 = model.RequestForum.createRequestForum();
        model.Request request7 = new model.Request();
        request7.title = "";
        java.lang.String str10 = requestForum6.makeARequest(request7);
        model.Client client11 = request7.requestee;
        int int12 = requestForum0.assessBooksPriority(request7);
        model.SearchBorrowedItem searchBorrowedItem13 = model.SearchBorrowedItem.makeSearchBorrowedItem();
// flaky:         searchBorrowedItem13.removeItem("src/Book.csv", "");
        model.Student student17 = new model.Student();
        int int18 = student17.ID;
        model.StudentOnlineResources studentOnlineResources19 = new model.StudentOnlineResources((model.Client) student17);
        model.VirtualBook virtualBook21 = studentOnlineResources19.searchAccessibleBook("");
        java.lang.String str22 = virtualBook21.location;
        int int23 = virtualBook21.ID;
        virtualBook21.isBookLost = false;
        model.RentedItem[] rentedItemArray27 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList28 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList28, rentedItemArray27);
        model.BorrowingManager borrowingManager30 = new model.BorrowingManager(rentedItemList28);
        model.Book book31 = null;
        model.CD cD33 = new model.CD("");
        model.Magazine magazine34 = null;
        java.util.Collection<model.Book> bookCollection35 = null;
        model.Book book36 = null;
        model.CD cD37 = null;
        model.Magazine magazine38 = null;
        model.Book[] bookArray39 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList40 = new java.util.ArrayList<model.Book>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList40, bookArray39);
        model.CD[] cDArray42 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList43 = new java.util.ArrayList<model.CD>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList43, cDArray42);
        model.Magazine[] magazineArray45 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList46 = new java.util.ArrayList<model.Magazine>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList46, magazineArray45);
        model.ItemSearchResult itemSearchResult48 = new model.ItemSearchResult(book36, cD37, magazine38, (java.util.Collection<model.Book>) bookList40, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList46);
        model.Book book49 = null;
        model.CD cD50 = null;
        model.Magazine magazine51 = null;
        model.Book[] bookArray52 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList53 = new java.util.ArrayList<model.Book>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList53, bookArray52);
        model.CD[] cDArray55 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList56 = new java.util.ArrayList<model.CD>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList56, cDArray55);
        model.Magazine[] magazineArray58 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList59 = new java.util.ArrayList<model.Magazine>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList59, magazineArray58);
        model.ItemSearchResult itemSearchResult61 = new model.ItemSearchResult(book49, cD50, magazine51, (java.util.Collection<model.Book>) bookList53, (java.util.Collection<model.CD>) cDList56, (java.util.Collection<model.Magazine>) magazineList59);
        itemSearchResult48.similarCD = cDList56;
        model.Book book63 = null;
        model.CD cD64 = null;
        model.Magazine magazine65 = null;
        model.Book[] bookArray66 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList67 = new java.util.ArrayList<model.Book>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList67, bookArray66);
        model.CD[] cDArray69 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList70 = new java.util.ArrayList<model.CD>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList70, cDArray69);
        model.Magazine[] magazineArray72 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList73 = new java.util.ArrayList<model.Magazine>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList73, magazineArray72);
        model.ItemSearchResult itemSearchResult75 = new model.ItemSearchResult(book63, cD64, magazine65, (java.util.Collection<model.Book>) bookList67, (java.util.Collection<model.CD>) cDList70, (java.util.Collection<model.Magazine>) magazineList73);
        model.ItemSearchResult itemSearchResult76 = new model.ItemSearchResult(book31, cD33, magazine34, bookCollection35, (java.util.Collection<model.CD>) cDList56, (java.util.Collection<model.Magazine>) magazineList73);
        cD33.ID = (short) 10;
        borrowingManager30.removeRentedItem((model.Item) cD33);
        model.Client client80 = borrowingManager30.client;
        model.Visitor visitor81 = new model.Visitor();
        borrowingManager30.client = visitor81;
        searchBorrowedItem13.addPhyscialItem((model.Item) virtualBook21, "", (model.Client) visitor81);
        request7.requestee = visitor81;
        java.lang.String str85 = request7.title;
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(libraryManagementTeam5);
        org.junit.Assert.assertNotNull(requestForum6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(client11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(searchBorrowedItem13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(virtualBook21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(rentedItemArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(bookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cDArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(magazineArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(bookArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(cDArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(magazineArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(bookArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(cDArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(magazineArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(client80);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
    }

    @Test
    public void test2353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2353");
        model.Database database0 = null;
        model.Register register1 = model.Register.makeRegister(database0);
        model.Faculty faculty2 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection3 = faculty2.courses;
        boolean boolean6 = register1.registerAsStaff((model.Staff) faculty2, "src/Book.csv", "src/Book.csv");
        model.Faculty faculty7 = new model.Faculty();
        faculty7.username = "hi!";
        java.lang.String str10 = faculty7.username;
        boolean boolean13 = register1.registerAsStaff((model.Staff) faculty7, "src/CD.csv", "hi!");
        model.Database database21 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        model.SearchClient searchClient22 = model.SearchClient.makeSearchClient(database21);
        java.lang.String str23 = database21.getCDFilePath();
        int int24 = database21.getRandomID();
        register1.database = database21;
        java.lang.String str26 = database21.getVirtualBookFilePath();
        java.lang.String str27 = database21.getNewspaperFilePath();
        java.lang.String str28 = database21.itemPath;
        org.junit.Assert.assertNotNull(register1);
        org.junit.Assert.assertNull(courseCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(searchClient22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "src/CD.csv" + "'", str23, "src/CD.csv");
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5622603 + "'", int24 == 5622603);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "src/VirtualBook.csv" + "'", str26, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "src/Newsletter.csv" + "'", str27, "src/Newsletter.csv");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
    }

    @Test
    public void test2354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2354");
        model.SearchBorrowedItem searchBorrowedItem0 = model.SearchBorrowedItem.makeSearchBorrowedItem();
        model.Visitor visitor1 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList2 = visitor1.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources3 = new model.StudentOnlineResources((model.Client) visitor1);
        model.RentedItem[] rentedItemArray4 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList5 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList5, rentedItemArray4);
        model.BorrowingManager borrowingManager7 = new model.BorrowingManager(rentedItemList5);
        model.Visitor visitor8 = new model.Visitor();
        visitor8.email = "hi!";
        borrowingManager7.client = visitor8;
        studentOnlineResources3.client = visitor8;
        model.Student student13 = new model.Student();
        int int14 = student13.ID;
        model.StudentOnlineResources studentOnlineResources15 = new model.StudentOnlineResources((model.Client) student13);
        model.VirtualBook virtualBook17 = studentOnlineResources15.searchAccessibleBook("");
        model.CD cD19 = new model.CD("");
        model.Magazine magazine20 = null;
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.Book book34 = null;
        model.CD cD35 = null;
        model.Magazine magazine36 = null;
        model.Book[] bookArray37 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList38 = new java.util.ArrayList<model.Book>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList38, bookArray37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        model.Magazine[] magazineArray43 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList44 = new java.util.ArrayList<model.Magazine>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList44, magazineArray43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book34, cD35, magazine36, (java.util.Collection<model.Book>) bookList38, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList44);
        model.CD[] cDArray47 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList48 = new java.util.ArrayList<model.CD>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList48, cDArray47);
        itemSearchResult46.similarCD = cDList48;
        model.Book book51 = null;
        model.CD cD52 = null;
        model.Magazine magazine53 = null;
        model.Book[] bookArray54 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList55 = new java.util.ArrayList<model.Book>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList55, bookArray54);
        model.CD[] cDArray57 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList58 = new java.util.ArrayList<model.CD>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList58, cDArray57);
        model.Magazine[] magazineArray60 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList61 = new java.util.ArrayList<model.Magazine>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList61, magazineArray60);
        model.ItemSearchResult itemSearchResult63 = new model.ItemSearchResult(book51, cD52, magazine53, (java.util.Collection<model.Book>) bookList55, (java.util.Collection<model.CD>) cDList58, (java.util.Collection<model.Magazine>) magazineList61);
        model.ItemSearchResult itemSearchResult64 = new model.ItemSearchResult((model.Book) virtualBook17, cD19, magazine20, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList48, (java.util.Collection<model.Magazine>) magazineList61);
        java.lang.String str65 = studentOnlineResources3.readVirtualItem((model.VirtualItem) virtualBook17);
        model.Visitor visitor67 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList68 = visitor67.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources69 = new model.StudentOnlineResources((model.Client) visitor67);
        searchBorrowedItem0.addPhyscialItem((model.Item) virtualBook17, "", (model.Client) visitor67);
        model.SearchBorrowedItem.object = searchBorrowedItem0;
        java.util.ArrayList<model.RentedItem> rentedItemList74 = null; // flaky: searchBorrowedItem0.searchBorrowedItem("src/VirtualBook.csv", "src/BorrowedItems.csv");
// flaky:         searchBorrowedItem0.removeItem("src/Newsletter.csv", "src/Magazine.csv");
        model.UniProvidedNewsletter uniProvidedNewsletter78 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter78.title = "";
        java.lang.String str81 = uniProvidedNewsletter78.title;
        uniProvidedNewsletter78.showContent();
        uniProvidedNewsletter78.showContent();
        model.Faculty faculty85 = new model.Faculty();
        java.lang.String str86 = faculty85.faculty;
        searchBorrowedItem0.addVirtualItem((model.VirtualItem) uniProvidedNewsletter78, "src/Client.csv", (model.Client) faculty85);
        faculty85.ID = (short) 10;
        model.BorrowingManager borrowingManager90 = faculty85.borrowManager;
        org.junit.Assert.assertNotNull(searchBorrowedItem0);
        org.junit.Assert.assertNull(virtualBookList2);
        org.junit.Assert.assertNotNull(rentedItemArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(virtualBook17);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(bookArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(magazineArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(cDArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(bookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(cDArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(magazineArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(virtualBookList68);
// flaky:         org.junit.Assert.assertNotNull(rentedItemList74);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertNull(borrowingManager90);
    }

    @Test
    public void test2355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2355");
        model.Database database0 = null;
        model.Register register1 = model.Register.makeRegister(database0);
        model.Faculty faculty2 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection3 = faculty2.courses;
        boolean boolean6 = register1.registerAsStaff((model.Staff) faculty2, "src/Book.csv", "src/Book.csv");
        model.Database database7 = model.Database.database;
        model.Student student8 = new model.Student();
        int int9 = student8.ID;
        model.StudentOnlineResources studentOnlineResources10 = new model.StudentOnlineResources((model.Client) student8);
        student8.ID = '#';
        database7.addClient((model.Client) student8);
        student8.email = "hi!";
        boolean boolean18 = register1.registerAsStaff((model.Staff) student8, "src/CD.csv", "src/Book.csv");
        model.Database database26 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str27 = database26.getVirtualBookFilePath();
        register1.database = database26;
        model.Database database36 = model.Database.createDatabase("", "src/CD.csv", "model.RegistrationFailedException: src/Magazine.csv", "model.RegistrationFailedException: src/Magazine.csv", "model.RegistrationFailedException: ", "src/Magazine.csv", "hi!");
        register1.database = database36;
        model.Database database38 = null;
        register1.database = database38;
        model.Database database40 = model.Database.database;
        java.util.ArrayList<java.lang.String> strList41 = database40.getAllItems();
        model.Student student42 = new model.Student();
        int int43 = student42.ID;
        model.StudentOnlineResources studentOnlineResources44 = new model.StudentOnlineResources((model.Client) student42);
        model.StudentOnlineResources studentOnlineResources45 = new model.StudentOnlineResources((model.Client) student42);
        database40.addClient((model.Client) student42);
        register1.database = database40;
        model.Database database48 = register1.database;
        model.Database database49 = register1.database;
        model.Database database57 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str58 = database57.getVirtualBookFilePath();
        model.Database.database = database57;
        java.lang.String str60 = database57.virtualItemFilePath;
        java.lang.String str61 = database57.getBookFilePath();
        database57.itemPath = "src/Magazine.csv";
        model.Client client65 = database57.getClient("src/CD.csv");
        register1.database = database57;
        org.junit.Assert.assertNotNull(register1);
        org.junit.Assert.assertNull(courseCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "src/VirtualBook.csv" + "'", str27, "src/VirtualBook.csv");
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(database48);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(database57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "src/VirtualBook.csv" + "'", str58, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "model.RegistrationFailedException: src/Magazine.csv" + "'", str60, "model.RegistrationFailedException: src/Magazine.csv");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "src/Book.csv" + "'", str61, "src/Book.csv");
        org.junit.Assert.assertNotNull(client65);
    }

    @Test
    public void test2356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2356");
        model.Database database0 = model.Database.database;
        java.lang.String str1 = database0.getMagazineFilePath();
        model.Login login2 = new model.Login(database0);
        model.SearchClient searchClient3 = model.SearchClient.makeSearchClient(database0);
        boolean boolean5 = database0.addItem("src/VirtualBook.csv");
        org.junit.Assert.assertNotNull(database0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "src/Magazine.csv" + "'", str1, "src/Magazine.csv");
        org.junit.Assert.assertNotNull(searchClient3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test2357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2357");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.Payment payment1 = rentAndReturnSystem0.paymentAPI;
        model.PayMobileWallet payMobileWallet2 = new model.PayMobileWallet();
        payMobileWallet2.amountPay = 100.0f;
        payMobileWallet2.pay((double) 100L);
        rentAndReturnSystem0.paymentAPI = payMobileWallet2;
        model.Payment payment8 = rentAndReturnSystem0.paymentAPI;
        model.Payment payment9 = rentAndReturnSystem0.paymentAPI;
        model.Student student10 = new model.Student();
        int int11 = student10.ID;
        model.StudentOnlineResources studentOnlineResources12 = new model.StudentOnlineResources((model.Client) student10);
        model.VirtualBook virtualBook14 = studentOnlineResources12.searchAccessibleBook("");
        model.CD cD16 = new model.CD("");
        model.Magazine magazine17 = null;
        model.Book book18 = null;
        model.CD cD19 = null;
        model.Magazine magazine20 = null;
        model.Book[] bookArray21 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList22 = new java.util.ArrayList<model.Book>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList22, bookArray21);
        model.CD[] cDArray24 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList25 = new java.util.ArrayList<model.CD>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList25, cDArray24);
        model.Magazine[] magazineArray27 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList28 = new java.util.ArrayList<model.Magazine>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList28, magazineArray27);
        model.ItemSearchResult itemSearchResult30 = new model.ItemSearchResult(book18, cD19, magazine20, (java.util.Collection<model.Book>) bookList22, (java.util.Collection<model.CD>) cDList25, (java.util.Collection<model.Magazine>) magazineList28);
        model.Book book31 = null;
        model.CD cD32 = null;
        model.Magazine magazine33 = null;
        model.Book[] bookArray34 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList35 = new java.util.ArrayList<model.Book>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList35, bookArray34);
        model.CD[] cDArray37 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList38 = new java.util.ArrayList<model.CD>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList38, cDArray37);
        model.Magazine[] magazineArray40 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList41 = new java.util.ArrayList<model.Magazine>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList41, magazineArray40);
        model.ItemSearchResult itemSearchResult43 = new model.ItemSearchResult(book31, cD32, magazine33, (java.util.Collection<model.Book>) bookList35, (java.util.Collection<model.CD>) cDList38, (java.util.Collection<model.Magazine>) magazineList41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        itemSearchResult43.similarCD = cDList45;
        model.Book book48 = null;
        model.CD cD49 = null;
        model.Magazine magazine50 = null;
        model.Book[] bookArray51 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList52 = new java.util.ArrayList<model.Book>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList52, bookArray51);
        model.CD[] cDArray54 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList55 = new java.util.ArrayList<model.CD>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList55, cDArray54);
        model.Magazine[] magazineArray57 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList58 = new java.util.ArrayList<model.Magazine>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList58, magazineArray57);
        model.ItemSearchResult itemSearchResult60 = new model.ItemSearchResult(book48, cD49, magazine50, (java.util.Collection<model.Book>) bookList52, (java.util.Collection<model.CD>) cDList55, (java.util.Collection<model.Magazine>) magazineList58);
        model.ItemSearchResult itemSearchResult61 = new model.ItemSearchResult((model.Book) virtualBook14, cD16, magazine17, (java.util.Collection<model.Book>) bookList22, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList58);
        int int62 = virtualBook14.ID;
        int int63 = virtualBook14.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter64 = null;
        model.PaidNewsletter paidNewsletter65 = null;
        model.VirtualItemSearchResult virtualItemSearchResult66 = new model.VirtualItemSearchResult(virtualBook14, uniProvidedNewsletter64, paidNewsletter65);
        boolean boolean67 = virtualBook14.isBookLost;
        model.VirtualItemContent virtualItemContent68 = virtualBook14.content;
        java.util.Calendar calendar69 = virtualBook14.date;
        virtualBook14.showContent();
        model.Student student71 = new model.Student();
        java.lang.String str72 = student71.username;
        boolean boolean73 = rentAndReturnSystem0.rentAnItem((model.Item) virtualBook14, (model.Client) student71);
        model.Newsletter[] newsletterArray74 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList75 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList75, newsletterArray74);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager77 = new model.NewsletterSubscriptionManager(newsletterList75);
        model.Client client78 = newsletterSubscriptionManager77.client;
        model.Client client79 = newsletterSubscriptionManager77.client;
        model.PayCredit payCredit80 = new model.PayCredit();
        payCredit80.pay((double) (short) 100);
        payCredit80.amountPay = ' ';
        double double85 = payCredit80.amountPay;
        payCredit80.pay((double) 12);
        double double88 = payCredit80.amountPay;
        newsletterSubscriptionManager77.paymentAPI = payCredit80;
        rentAndReturnSystem0.paymentAPI = payCredit80;
        payCredit80.amountPay = 7680797.0d;
        org.junit.Assert.assertNull(payment1);
        org.junit.Assert.assertNotNull(payment8);
        org.junit.Assert.assertNotNull(payment9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(virtualBook14);
        org.junit.Assert.assertNotNull(bookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(cDArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(magazineArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(bookArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(cDArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(magazineArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(bookArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(cDArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(magazineArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 20 + "'", int63 == 20);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(virtualItemContent68);
        org.junit.Assert.assertNull(calendar69);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(newsletterArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(client78);
        org.junit.Assert.assertNull(client79);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 32.0d + "'", double85 == 32.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 44.0d + "'", double88 == 44.0d);
    }

    @Test
    public void test2358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2358");
        model.Database database7 = model.Database.createDatabase("src/Magazine.csv", "src/Client.csv", "model.RentingNotAllowedException: hi!", "src/Client.csv", "model.RegistrationFailedException: src/VirtualBook.csv", "model.RentingNotAllowedException: model.LoginFailedException: hi!", "src/Magazine.csv");
        org.junit.Assert.assertNotNull(database7);
    }

    @Test
    public void test2359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2359");
        model.Database database7 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database7;
        model.SearchVirtualItem searchVirtualItem9 = new model.SearchVirtualItem(database7);
        model.UniProvidedNewsletter uniProvidedNewsletter11 = searchVirtualItem9.getUniNewsletter("");
        model.UniProvidedNewsletter uniProvidedNewsletter13 = searchVirtualItem9.getUniNewsletter("hi!");
        model.UniProvidedNewsletter uniProvidedNewsletter15 = searchVirtualItem9.getUniNewsletter("model.RegistrationFailedException: src/VirtualBook.csv");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNull(uniProvidedNewsletter11);
        org.junit.Assert.assertNull(uniProvidedNewsletter13);
        org.junit.Assert.assertNull(uniProvidedNewsletter15);
    }

    @Test
    public void test2360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2360");
        model.Book book0 = null;
        model.CD cD1 = null;
        model.Magazine magazine2 = null;
        model.Book[] bookArray3 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList4 = new java.util.ArrayList<model.Book>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList4, bookArray3);
        model.CD[] cDArray6 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList7 = new java.util.ArrayList<model.CD>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList7, cDArray6);
        model.Magazine[] magazineArray9 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList10 = new java.util.ArrayList<model.Magazine>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList10, magazineArray9);
        model.ItemSearchResult itemSearchResult12 = new model.ItemSearchResult(book0, cD1, magazine2, (java.util.Collection<model.Book>) bookList4, (java.util.Collection<model.CD>) cDList7, (java.util.Collection<model.Magazine>) magazineList10);
        model.CD[] cDArray13 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList14 = new java.util.ArrayList<model.CD>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList14, cDArray13);
        itemSearchResult12.similarCD = cDList14;
        model.Book book17 = null;
        itemSearchResult12.book = book17;
        model.Magazine magazine19 = itemSearchResult12.magazine;
        org.junit.Assert.assertNotNull(bookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(cDArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(magazineArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(cDArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(magazine19);
    }

    @Test
    public void test2361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2361");
        model.LoginFailedException loginFailedException1 = new model.LoginFailedException("model.RegistrationFailedException: src/Magazine.csv");
    }

    @Test
    public void test2362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2362");
        model.Database database7 = model.Database.createDatabase("src/VirtualBook.csv", "model.RegistrationFailedException: ", "src/BorrowedItems.csv", "src/Magazine.csv", "src/Magazine.csv", "src/VirtualBook.csv", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.virtualItemFilePath;
        java.util.ArrayList<java.lang.String> strList9 = database7.getAllItems();
        java.lang.String str10 = database7.getBookFilePath();
        database7.virtualItemFilePath = "src/CD.csv";
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "model.RegistrationFailedException: src/Magazine.csv" + "'", str8, "model.RegistrationFailedException: src/Magazine.csv");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "src/Book.csv" + "'", str10, "src/Book.csv");
    }

    @Test
    public void test2363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2363");
        model.Request request0 = new model.Request();
        java.lang.String str1 = request0.type;
        model.Database database9 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database9;
        model.SearchVirtualItem searchVirtualItem11 = new model.SearchVirtualItem(database9);
        model.RentAndReturnSystem rentAndReturnSystem12 = new model.RentAndReturnSystem();
        model.Book book13 = null;
        model.CD cD15 = new model.CD("");
        model.Magazine magazine16 = null;
        java.util.Collection<model.Book> bookCollection17 = null;
        model.Book book18 = null;
        model.CD cD19 = null;
        model.Magazine magazine20 = null;
        model.Book[] bookArray21 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList22 = new java.util.ArrayList<model.Book>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList22, bookArray21);
        model.CD[] cDArray24 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList25 = new java.util.ArrayList<model.CD>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList25, cDArray24);
        model.Magazine[] magazineArray27 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList28 = new java.util.ArrayList<model.Magazine>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList28, magazineArray27);
        model.ItemSearchResult itemSearchResult30 = new model.ItemSearchResult(book18, cD19, magazine20, (java.util.Collection<model.Book>) bookList22, (java.util.Collection<model.CD>) cDList25, (java.util.Collection<model.Magazine>) magazineList28);
        model.Book book31 = null;
        model.CD cD32 = null;
        model.Magazine magazine33 = null;
        model.Book[] bookArray34 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList35 = new java.util.ArrayList<model.Book>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList35, bookArray34);
        model.CD[] cDArray37 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList38 = new java.util.ArrayList<model.CD>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList38, cDArray37);
        model.Magazine[] magazineArray40 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList41 = new java.util.ArrayList<model.Magazine>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList41, magazineArray40);
        model.ItemSearchResult itemSearchResult43 = new model.ItemSearchResult(book31, cD32, magazine33, (java.util.Collection<model.Book>) bookList35, (java.util.Collection<model.CD>) cDList38, (java.util.Collection<model.Magazine>) magazineList41);
        itemSearchResult30.similarCD = cDList38;
        model.Book book45 = null;
        model.CD cD46 = null;
        model.Magazine magazine47 = null;
        model.Book[] bookArray48 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList49 = new java.util.ArrayList<model.Book>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList49, bookArray48);
        model.CD[] cDArray51 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList52 = new java.util.ArrayList<model.CD>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList52, cDArray51);
        model.Magazine[] magazineArray54 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList55 = new java.util.ArrayList<model.Magazine>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList55, magazineArray54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult(book45, cD46, magazine47, (java.util.Collection<model.Book>) bookList49, (java.util.Collection<model.CD>) cDList52, (java.util.Collection<model.Magazine>) magazineList55);
        model.ItemSearchResult itemSearchResult58 = new model.ItemSearchResult(book13, cD15, magazine16, bookCollection17, (java.util.Collection<model.CD>) cDList38, (java.util.Collection<model.Magazine>) magazineList55);
        cD15.ID = (short) 10;
        cD15.canBePurchased = false;
        boolean boolean63 = cD15.canBePurchased;
        model.Faculty faculty64 = new model.Faculty();
        boolean boolean65 = rentAndReturnSystem12.rentAnItem((model.Item) cD15, (model.Client) faculty64);
        java.lang.String str66 = faculty64.faculty;
        database9.addClient((model.Client) faculty64);
        request0.requestee = faculty64;
        model.Student student69 = new model.Student();
        int int70 = student69.ID;
        model.StudentOnlineResources studentOnlineResources71 = new model.StudentOnlineResources((model.Client) student69);
        java.util.Iterator<model.VirtualItem> virtualItemItor72 = studentOnlineResources71.iterator();
        model.Faculty faculty73 = new model.Faculty();
        faculty73.username = "hi!";
        java.util.Collection<model.Course> courseCollection76 = null;
        faculty73.courses = courseCollection76;
        java.util.Collection<model.Course> courseCollection78 = faculty73.courses;
        java.util.Collection<model.Course> courseCollection79 = faculty73.courses;
        studentOnlineResources71.client = faculty73;
        request0.requestee = faculty73;
        request0.title = "src/BorrowedItems.csv";
        java.lang.String str84 = request0.title;
        java.lang.String str85 = request0.type;
        request0.type = "src/Book.csv";
        java.lang.String str88 = request0.title;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(bookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(cDArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(magazineArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(bookArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(cDArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(magazineArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(bookArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(cDArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(magazineArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNull(virtualItemItor72);
        org.junit.Assert.assertNull(courseCollection78);
        org.junit.Assert.assertNull(courseCollection79);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "src/BorrowedItems.csv" + "'", str84, "src/BorrowedItems.csv");
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "src/BorrowedItems.csv" + "'", str88, "src/BorrowedItems.csv");
    }

    @Test
    public void test2364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2364");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter54 = null;
        model.PaidNewsletter paidNewsletter55 = null;
        model.VirtualItemSearchResult virtualItemSearchResult56 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter54, paidNewsletter55);
        model.PaidNewsletter paidNewsletter57 = virtualItemSearchResult56.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter58 = virtualItemSearchResult56.getUniNewsletter();
        model.PaidNewsletter paidNewsletter59 = virtualItemSearchResult56.getPaidNewsletter();
        model.UniProvidedNewsletter uniProvidedNewsletter60 = virtualItemSearchResult56.getUniNewsletter();
        model.PaidNewsletter paidNewsletter61 = null;
        virtualItemSearchResult56.setPaidNewsletter(paidNewsletter61);
        model.UniProvidedNewsletter uniProvidedNewsletter63 = virtualItemSearchResult56.getUniNewsletter();
        model.VirtualBook virtualBook64 = virtualItemSearchResult56.getVirtualBook();
        model.VirtualBook virtualBook65 = virtualItemSearchResult56.virtualBook;
        model.VirtualBook virtualBook67 = new model.VirtualBook("model.RegistrationFailedException: src/Book.csv");
        virtualItemSearchResult56.setVirtualBook(virtualBook67);
        model.PaidNewsletter paidNewsletter69 = virtualItemSearchResult56.getPaidNewsletter();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertNull(paidNewsletter57);
        org.junit.Assert.assertNull(uniProvidedNewsletter58);
        org.junit.Assert.assertNull(paidNewsletter59);
        org.junit.Assert.assertNull(uniProvidedNewsletter60);
        org.junit.Assert.assertNull(uniProvidedNewsletter63);
        org.junit.Assert.assertNotNull(virtualBook64);
        org.junit.Assert.assertNotNull(virtualBook65);
        org.junit.Assert.assertNull(paidNewsletter69);
    }

    @Test
    public void test2365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2365");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.RequestForum requestForum1 = model.RequestForum.createRequestForum();
        model.Request request2 = new model.Request();
        request2.title = "";
        java.lang.String str5 = requestForum1.makeARequest(request2);
        int int6 = requestForum0.assessBooksPriority(request2);
        java.lang.String str7 = request2.type;
        java.lang.String str8 = request2.type;
        java.lang.String str9 = request2.type;
        model.Client client10 = request2.requestee;
        model.Faculty faculty11 = new model.Faculty();
        faculty11.username = "hi!";
        java.lang.String str14 = faculty11.username;
        model.Course course15 = new model.Course();
        java.lang.String str16 = course15.subject;
        course15.code = "";
        course15.subject = "src/Magazine.csv";
        model.Course course21 = new model.Course();
        java.lang.String str22 = course21.code;
        model.Course course23 = new model.Course();
        java.lang.String str24 = course23.subject;
        java.lang.String str25 = course23.subject;
        java.lang.String str26 = course23.code;
        java.lang.String str27 = course23.code;
        model.Course course28 = new model.Course();
        java.lang.String str29 = course28.code;
        model.Course course30 = new model.Course();
        java.lang.String str31 = course30.subject;
        java.lang.String str32 = course30.subject;
        java.lang.String str33 = course30.code;
        course30.code = "src/VirtualBook.csv";
        model.Course course36 = new model.Course();
        model.Course course37 = new model.Course();
        java.lang.String str38 = course37.subject;
        course37.code = "";
        course37.subject = "src/Magazine.csv";
        int int43 = course37.year;
        model.Course course44 = new model.Course();
        java.lang.String str45 = course44.code;
        java.lang.String str46 = course44.subject;
        course44.subject = "model.RegistrationFailedException: ";
        course44.subject = "src/Magazine.csv";
        model.Course[] courseArray51 = new model.Course[] { course15, course21, course23, course28, course30, course36, course37, course44 };
        java.util.ArrayList<model.Course> courseList52 = new java.util.ArrayList<model.Course>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<model.Course>) courseList52, courseArray51);
        faculty11.courses = courseList52;
        java.util.Collection<model.Course> courseCollection55 = faculty11.courses;
        faculty11.ID = 3173270;
        request2.requestee = faculty11;
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertNotNull(requestForum1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(client10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(courseArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(courseCollection55);
    }

    @Test
    public void test2366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2366");
        model.Database database7 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database7;
        model.SearchVirtualItem searchVirtualItem9 = new model.SearchVirtualItem(database7);
        model.RentAndReturnSystem rentAndReturnSystem10 = new model.RentAndReturnSystem();
        model.Book book11 = null;
        model.CD cD13 = new model.CD("");
        model.Magazine magazine14 = null;
        java.util.Collection<model.Book> bookCollection15 = null;
        model.Book book16 = null;
        model.CD cD17 = null;
        model.Magazine magazine18 = null;
        model.Book[] bookArray19 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList20 = new java.util.ArrayList<model.Book>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList20, bookArray19);
        model.CD[] cDArray22 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList23 = new java.util.ArrayList<model.CD>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList23, cDArray22);
        model.Magazine[] magazineArray25 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList26 = new java.util.ArrayList<model.Magazine>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList26, magazineArray25);
        model.ItemSearchResult itemSearchResult28 = new model.ItemSearchResult(book16, cD17, magazine18, (java.util.Collection<model.Book>) bookList20, (java.util.Collection<model.CD>) cDList23, (java.util.Collection<model.Magazine>) magazineList26);
        model.Book book29 = null;
        model.CD cD30 = null;
        model.Magazine magazine31 = null;
        model.Book[] bookArray32 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList33 = new java.util.ArrayList<model.Book>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList33, bookArray32);
        model.CD[] cDArray35 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList36 = new java.util.ArrayList<model.CD>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList36, cDArray35);
        model.Magazine[] magazineArray38 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList39 = new java.util.ArrayList<model.Magazine>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList39, magazineArray38);
        model.ItemSearchResult itemSearchResult41 = new model.ItemSearchResult(book29, cD30, magazine31, (java.util.Collection<model.Book>) bookList33, (java.util.Collection<model.CD>) cDList36, (java.util.Collection<model.Magazine>) magazineList39);
        itemSearchResult28.similarCD = cDList36;
        model.Book book43 = null;
        model.CD cD44 = null;
        model.Magazine magazine45 = null;
        model.Book[] bookArray46 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList47 = new java.util.ArrayList<model.Book>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList47, bookArray46);
        model.CD[] cDArray49 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList50 = new java.util.ArrayList<model.CD>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList50, cDArray49);
        model.Magazine[] magazineArray52 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList53 = new java.util.ArrayList<model.Magazine>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList53, magazineArray52);
        model.ItemSearchResult itemSearchResult55 = new model.ItemSearchResult(book43, cD44, magazine45, (java.util.Collection<model.Book>) bookList47, (java.util.Collection<model.CD>) cDList50, (java.util.Collection<model.Magazine>) magazineList53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult(book11, cD13, magazine14, bookCollection15, (java.util.Collection<model.CD>) cDList36, (java.util.Collection<model.Magazine>) magazineList53);
        cD13.ID = (short) 10;
        cD13.canBePurchased = false;
        boolean boolean61 = cD13.canBePurchased;
        model.Faculty faculty62 = new model.Faculty();
        boolean boolean63 = rentAndReturnSystem10.rentAnItem((model.Item) cD13, (model.Client) faculty62);
        java.lang.String str64 = faculty62.faculty;
        database7.addClient((model.Client) faculty62);
        java.lang.String str66 = database7.getClientFilePath();
        model.SearchVirtualItem searchVirtualItem67 = new model.SearchVirtualItem(database7);
        model.Register register68 = model.Register.makeRegister(database7);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(bookArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(cDArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(magazineArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(bookArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(cDArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(magazineArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(bookArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(cDArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(magazineArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "src/Client.csv" + "'", str66, "src/Client.csv");
        org.junit.Assert.assertNotNull(register68);
    }

    @Test
    public void test2367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2367");
        model.SearchBorrowedItem searchBorrowedItem0 = model.SearchBorrowedItem.makeSearchBorrowedItem();
// flaky:         searchBorrowedItem0.removeItem("src/Book.csv", "");
        model.SearchBorrowedItem.object = searchBorrowedItem0;
        org.junit.Assert.assertNotNull(searchBorrowedItem0);
    }

    @Test
    public void test2368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2368");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.UniProvidedNewsletter uniProvidedNewsletter5 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter5.title = "";
        java.lang.String str8 = uniProvidedNewsletter5.title;
        newsletterSubscriptionManager3.subscribeToUniProvidedNewsletter(uniProvidedNewsletter5, "");
        java.util.ArrayList<model.Newsletter> newsletterList11 = newsletterSubscriptionManager3.newsletterSubscribed;
        java.util.ArrayList<model.Newsletter> newsletterList12 = newsletterSubscriptionManager3.newsletterSubscribed;
        model.Student student13 = new model.Student();
        int int14 = student13.ID;
        model.StudentOnlineResources studentOnlineResources15 = new model.StudentOnlineResources((model.Client) student13);
        model.VirtualBook virtualBook17 = studentOnlineResources15.searchAccessibleBook("");
        model.VirtualItemContent virtualItemContent18 = virtualBook17.content;
        model.Student student19 = new model.Student();
        int int20 = student19.ID;
        model.StudentOnlineResources studentOnlineResources21 = new model.StudentOnlineResources((model.Client) student19);
        model.VirtualBook virtualBook23 = studentOnlineResources21.searchAccessibleBook("");
        model.CD cD25 = new model.CD("");
        model.Magazine magazine26 = null;
        model.Book book27 = null;
        model.CD cD28 = null;
        model.Magazine magazine29 = null;
        model.Book[] bookArray30 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList31 = new java.util.ArrayList<model.Book>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList31, bookArray30);
        model.CD[] cDArray33 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList34 = new java.util.ArrayList<model.CD>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList34, cDArray33);
        model.Magazine[] magazineArray36 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList37 = new java.util.ArrayList<model.Magazine>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList37, magazineArray36);
        model.ItemSearchResult itemSearchResult39 = new model.ItemSearchResult(book27, cD28, magazine29, (java.util.Collection<model.Book>) bookList31, (java.util.Collection<model.CD>) cDList34, (java.util.Collection<model.Magazine>) magazineList37);
        model.Book book40 = null;
        model.CD cD41 = null;
        model.Magazine magazine42 = null;
        model.Book[] bookArray43 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList44 = new java.util.ArrayList<model.Book>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList44, bookArray43);
        model.CD[] cDArray46 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList47 = new java.util.ArrayList<model.CD>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList47, cDArray46);
        model.Magazine[] magazineArray49 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList50 = new java.util.ArrayList<model.Magazine>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList50, magazineArray49);
        model.ItemSearchResult itemSearchResult52 = new model.ItemSearchResult(book40, cD41, magazine42, (java.util.Collection<model.Book>) bookList44, (java.util.Collection<model.CD>) cDList47, (java.util.Collection<model.Magazine>) magazineList50);
        model.CD[] cDArray53 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList54 = new java.util.ArrayList<model.CD>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList54, cDArray53);
        itemSearchResult52.similarCD = cDList54;
        model.Book book57 = null;
        model.CD cD58 = null;
        model.Magazine magazine59 = null;
        model.Book[] bookArray60 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList61 = new java.util.ArrayList<model.Book>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList61, bookArray60);
        model.CD[] cDArray63 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList64 = new java.util.ArrayList<model.CD>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList64, cDArray63);
        model.Magazine[] magazineArray66 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList67 = new java.util.ArrayList<model.Magazine>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList67, magazineArray66);
        model.ItemSearchResult itemSearchResult69 = new model.ItemSearchResult(book57, cD58, magazine59, (java.util.Collection<model.Book>) bookList61, (java.util.Collection<model.CD>) cDList64, (java.util.Collection<model.Magazine>) magazineList67);
        model.ItemSearchResult itemSearchResult70 = new model.ItemSearchResult((model.Book) virtualBook23, cD25, magazine26, (java.util.Collection<model.Book>) bookList31, (java.util.Collection<model.CD>) cDList54, (java.util.Collection<model.Magazine>) magazineList67);
        int int71 = virtualBook23.ID;
        int int72 = virtualBook23.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter73 = null;
        model.PaidNewsletter paidNewsletter74 = null;
        model.VirtualItemSearchResult virtualItemSearchResult75 = new model.VirtualItemSearchResult(virtualBook23, uniProvidedNewsletter73, paidNewsletter74);
        model.PaidNewsletter paidNewsletter76 = virtualItemSearchResult75.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter77 = new model.UniProvidedNewsletter();
        virtualItemSearchResult75.setUniNewsletter(uniProvidedNewsletter77);
        java.lang.String str79 = uniProvidedNewsletter77.title;
        model.PaidNewsletter paidNewsletter80 = null;
        model.VirtualItemSearchResult virtualItemSearchResult81 = new model.VirtualItemSearchResult(virtualBook17, uniProvidedNewsletter77, paidNewsletter80);
        model.VirtualBook virtualBook82 = virtualItemSearchResult81.virtualBook;
        model.PaidNewsletter paidNewsletter83 = new model.PaidNewsletter();
        virtualItemSearchResult81.setPaidNewsletter(paidNewsletter83);
        paidNewsletter83.subscriptionPrice = 'a';
        double double87 = paidNewsletter83.subscriptionPrice;
        newsletterSubscriptionManager3.cancelSubscription((model.Newsletter) paidNewsletter83);
        paidNewsletter83.cost = 27;
        paidNewsletter83.ID = 7822095;
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(newsletterList11);
        org.junit.Assert.assertNotNull(newsletterList12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(virtualBook17);
        org.junit.Assert.assertNull(virtualItemContent18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(virtualBook23);
        org.junit.Assert.assertNotNull(bookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(magazineArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(bookArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(cDArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(magazineArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(cDArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(bookArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(cDArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(magazineArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 20 + "'", int72 == 20);
        org.junit.Assert.assertNull(paidNewsletter76);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(virtualBook82);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 97.0d + "'", double87 == 97.0d);
    }

    @Test
    public void test2369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2369");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.Book book1 = null;
        model.CD cD3 = new model.CD("");
        model.Magazine magazine4 = null;
        java.util.Collection<model.Book> bookCollection5 = null;
        model.Book book6 = null;
        model.CD cD7 = null;
        model.Magazine magazine8 = null;
        model.Book[] bookArray9 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList10 = new java.util.ArrayList<model.Book>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList10, bookArray9);
        model.CD[] cDArray12 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList13 = new java.util.ArrayList<model.CD>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList13, cDArray12);
        model.Magazine[] magazineArray15 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList16 = new java.util.ArrayList<model.Magazine>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList16, magazineArray15);
        model.ItemSearchResult itemSearchResult18 = new model.ItemSearchResult(book6, cD7, magazine8, (java.util.Collection<model.Book>) bookList10, (java.util.Collection<model.CD>) cDList13, (java.util.Collection<model.Magazine>) magazineList16);
        model.Book book19 = null;
        model.CD cD20 = null;
        model.Magazine magazine21 = null;
        model.Book[] bookArray22 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList23 = new java.util.ArrayList<model.Book>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList23, bookArray22);
        model.CD[] cDArray25 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList26 = new java.util.ArrayList<model.CD>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList26, cDArray25);
        model.Magazine[] magazineArray28 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList29 = new java.util.ArrayList<model.Magazine>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList29, magazineArray28);
        model.ItemSearchResult itemSearchResult31 = new model.ItemSearchResult(book19, cD20, magazine21, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList29);
        itemSearchResult18.similarCD = cDList26;
        model.Book book33 = null;
        model.CD cD34 = null;
        model.Magazine magazine35 = null;
        model.Book[] bookArray36 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList37 = new java.util.ArrayList<model.Book>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList37, bookArray36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        model.Magazine[] magazineArray42 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList43 = new java.util.ArrayList<model.Magazine>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList43, magazineArray42);
        model.ItemSearchResult itemSearchResult45 = new model.ItemSearchResult(book33, cD34, magazine35, (java.util.Collection<model.Book>) bookList37, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book1, cD3, magazine4, bookCollection5, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList43);
        cD3.ID = (short) 10;
        cD3.canBePurchased = false;
        boolean boolean51 = cD3.canBePurchased;
        model.Faculty faculty52 = new model.Faculty();
        boolean boolean53 = rentAndReturnSystem0.rentAnItem((model.Item) cD3, (model.Client) faculty52);
        java.lang.String str54 = faculty52.faculty;
        model.RentedItem[] rentedItemArray55 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList56 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList56, rentedItemArray55);
        model.BorrowingManager borrowingManager58 = new model.BorrowingManager(rentedItemList56);
        boolean boolean59 = borrowingManager58.canRent();
        model.Client client60 = borrowingManager58.client;
        faculty52.borrowManager = borrowingManager58;
        java.util.Collection<model.Course> courseCollection62 = faculty52.courses;
        model.NewsletterSubscriptionManager newsletterSubscriptionManager63 = faculty52.newsletterManager;
        java.util.Collection<model.Book> bookCollection64 = null;
        faculty52.textbooks = bookCollection64;
        faculty52.ID = 100;
        int int68 = faculty52.ID;
        model.RentedItem[] rentedItemArray69 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList70 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList70, rentedItemArray69);
        model.BorrowingManager borrowingManager72 = new model.BorrowingManager(rentedItemList70);
        boolean boolean73 = borrowingManager72.canRent();
        borrowingManager72.updateBorrowingPrivilages();
        float float75 = borrowingManager72.amountOwned;
        faculty52.borrowManager = borrowingManager72;
        double double77 = borrowingManager72.checkBalanceOwed();
        org.junit.Assert.assertNotNull(bookArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(cDArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(magazineArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(bookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(magazineArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(bookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(magazineArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(rentedItemArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(client60);
        org.junit.Assert.assertNull(courseCollection62);
        org.junit.Assert.assertNull(newsletterSubscriptionManager63);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        org.junit.Assert.assertNotNull(rentedItemArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + float75 + "' != '" + 0.0f + "'", float75 == 0.0f);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
    }

    @Test
    public void test2370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2370");
        model.Book book0 = null;
        model.CD cD1 = null;
        model.Magazine magazine2 = null;
        model.Book[] bookArray3 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList4 = new java.util.ArrayList<model.Book>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList4, bookArray3);
        model.CD[] cDArray6 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList7 = new java.util.ArrayList<model.CD>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList7, cDArray6);
        model.Magazine[] magazineArray9 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList10 = new java.util.ArrayList<model.Magazine>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList10, magazineArray9);
        model.ItemSearchResult itemSearchResult12 = new model.ItemSearchResult(book0, cD1, magazine2, (java.util.Collection<model.Book>) bookList4, (java.util.Collection<model.CD>) cDList7, (java.util.Collection<model.Magazine>) magazineList10);
        model.CD[] cDArray13 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList14 = new java.util.ArrayList<model.CD>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList14, cDArray13);
        itemSearchResult12.similarCD = cDList14;
        model.Book book17 = null;
        itemSearchResult12.book = book17;
        model.Book book19 = null;
        model.CD cD20 = null;
        model.Magazine magazine21 = null;
        model.Book[] bookArray22 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList23 = new java.util.ArrayList<model.Book>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList23, bookArray22);
        model.CD[] cDArray25 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList26 = new java.util.ArrayList<model.CD>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList26, cDArray25);
        model.Magazine[] magazineArray28 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList29 = new java.util.ArrayList<model.Magazine>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList29, magazineArray28);
        model.ItemSearchResult itemSearchResult31 = new model.ItemSearchResult(book19, cD20, magazine21, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList29);
        itemSearchResult12.similarBooks = bookList23;
        model.CD cD33 = itemSearchResult12.cd;
        org.junit.Assert.assertNotNull(bookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(cDArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(magazineArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(cDArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(bookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(magazineArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(cD33);
    }

    @Test
    public void test2371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2371");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.Newsletter[] newsletterArray5 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList6 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList6, newsletterArray5);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager8 = new model.NewsletterSubscriptionManager(newsletterList6);
        newsletterSubscriptionManager3.newsletterSubscribed = newsletterList6;
        model.Newsletter[] newsletterArray10 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList11 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList11, newsletterArray10);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager13 = new model.NewsletterSubscriptionManager(newsletterList11);
        model.Client client14 = newsletterSubscriptionManager13.client;
        model.Visitor visitor15 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList16 = visitor15.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources17 = new model.StudentOnlineResources((model.Client) visitor15);
        model.RentedItem[] rentedItemArray18 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList19 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList19, rentedItemArray18);
        model.BorrowingManager borrowingManager21 = new model.BorrowingManager(rentedItemList19);
        model.Visitor visitor22 = new model.Visitor();
        visitor22.email = "hi!";
        borrowingManager21.client = visitor22;
        studentOnlineResources17.client = visitor22;
        model.UniProvidedNewsletter uniProvidedNewsletter27 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter27.title = "";
        java.lang.String str30 = studentOnlineResources17.readVirtualItem((model.VirtualItem) uniProvidedNewsletter27);
        newsletterSubscriptionManager13.cancelSubscription((model.Newsletter) uniProvidedNewsletter27);
        uniProvidedNewsletter27.cost = 0;
        model.VirtualItemContent virtualItemContent35 = new model.VirtualItemContent("hi!");
        java.lang.String str36 = virtualItemContent35.link;
        java.lang.String str38 = virtualItemContent35.getContent("");
        java.lang.String str40 = virtualItemContent35.getContent("model.RegistrationFailedException: ");
        uniProvidedNewsletter27.content = virtualItemContent35;
        model.UniProvidedNewsletter uniProvidedNewsletter42 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter42.title = "hi!";
        model.VirtualItemContent virtualItemContent46 = new model.VirtualItemContent("hi!");
        java.lang.String str47 = virtualItemContent46.link;
        uniProvidedNewsletter42.content = virtualItemContent46;
        uniProvidedNewsletter27.content = virtualItemContent46;
        int int50 = uniProvidedNewsletter27.ID;
        newsletterSubscriptionManager3.cancelSubscription((model.Newsletter) uniProvidedNewsletter27);
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertNotNull(newsletterArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(newsletterArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(client14);
        org.junit.Assert.assertNull(virtualBookList16);
        org.junit.Assert.assertNotNull(rentedItemArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
    }

    @Test
    public void test2372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2372");
        model.BuySpecialItems buySpecialItems0 = new model.BuySpecialItems();
        model.PayDebit payDebit1 = new model.PayDebit();
        buySpecialItems0.paymentAPI = payDebit1;
        java.util.ArrayList<model.Item> itemList3 = buySpecialItems0.purchasedItems;
        model.LibraryManagementTeam libraryManagementTeam4 = new model.LibraryManagementTeam();
        libraryManagementTeam4.accessCode = (short) 10;
        java.util.Collection<model.Request> requestCollection7 = libraryManagementTeam4.bookRequests;
        libraryManagementTeam4.accessCode = 6080850;
        int int10 = libraryManagementTeam4.ID;
        model.RequestForum requestForum11 = model.RequestForum.createRequestForum();
        model.RequestForum requestForum12 = model.RequestForum.createRequestForum();
        model.Request request13 = new model.Request();
        request13.title = "";
        java.lang.String str16 = requestForum12.makeARequest(request13);
        int int17 = requestForum11.assessBooksPriority(request13);
        model.LibraryManagementTeam libraryManagementTeam18 = new model.LibraryManagementTeam();
        int int19 = libraryManagementTeam18.ID;
        int int20 = libraryManagementTeam18.accessCode;
        model.Item item21 = null;
        libraryManagementTeam18.addAnItem(item21);
        java.util.ArrayList<model.Item> itemList23 = libraryManagementTeam18.items;
        requestForum11.managementTeam = libraryManagementTeam18;
        model.LibraryManagementTeam libraryManagementTeam25 = requestForum11.managementTeam;
        model.Student student26 = new model.Student();
        int int27 = student26.ID;
        model.StudentOnlineResources studentOnlineResources28 = new model.StudentOnlineResources((model.Client) student26);
        model.VirtualBook virtualBook30 = studentOnlineResources28.searchAccessibleBook("");
        model.CD cD32 = new model.CD("");
        model.Magazine magazine33 = null;
        model.Book book34 = null;
        model.CD cD35 = null;
        model.Magazine magazine36 = null;
        model.Book[] bookArray37 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList38 = new java.util.ArrayList<model.Book>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList38, bookArray37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        model.Magazine[] magazineArray43 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList44 = new java.util.ArrayList<model.Magazine>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList44, magazineArray43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book34, cD35, magazine36, (java.util.Collection<model.Book>) bookList38, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList44);
        model.Book book47 = null;
        model.CD cD48 = null;
        model.Magazine magazine49 = null;
        model.Book[] bookArray50 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList51 = new java.util.ArrayList<model.Book>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList51, bookArray50);
        model.CD[] cDArray53 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList54 = new java.util.ArrayList<model.CD>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList54, cDArray53);
        model.Magazine[] magazineArray56 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList57 = new java.util.ArrayList<model.Magazine>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList57, magazineArray56);
        model.ItemSearchResult itemSearchResult59 = new model.ItemSearchResult(book47, cD48, magazine49, (java.util.Collection<model.Book>) bookList51, (java.util.Collection<model.CD>) cDList54, (java.util.Collection<model.Magazine>) magazineList57);
        model.CD[] cDArray60 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList61 = new java.util.ArrayList<model.CD>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList61, cDArray60);
        itemSearchResult59.similarCD = cDList61;
        model.Book book64 = null;
        model.CD cD65 = null;
        model.Magazine magazine66 = null;
        model.Book[] bookArray67 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList68 = new java.util.ArrayList<model.Book>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList68, bookArray67);
        model.CD[] cDArray70 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList71 = new java.util.ArrayList<model.CD>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList71, cDArray70);
        model.Magazine[] magazineArray73 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList74 = new java.util.ArrayList<model.Magazine>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList74, magazineArray73);
        model.ItemSearchResult itemSearchResult76 = new model.ItemSearchResult(book64, cD65, magazine66, (java.util.Collection<model.Book>) bookList68, (java.util.Collection<model.CD>) cDList71, (java.util.Collection<model.Magazine>) magazineList74);
        model.ItemSearchResult itemSearchResult77 = new model.ItemSearchResult((model.Book) virtualBook30, cD32, magazine33, (java.util.Collection<model.Book>) bookList38, (java.util.Collection<model.CD>) cDList61, (java.util.Collection<model.Magazine>) magazineList74);
        virtualBook30.ID = (short) 10;
        boolean boolean80 = virtualBook30.isBookLost;
        virtualBook30.showContent();
        libraryManagementTeam25.disableAnItem((model.Item) virtualBook30);
        virtualBook30.showContent();
        libraryManagementTeam4.disableAnItem((model.Item) virtualBook30);
        boolean boolean86 = buySpecialItems0.buyAnItem((model.Item) virtualBook30, (double) 5239293);
        model.Payment payment87 = buySpecialItems0.paymentAPI;
        org.junit.Assert.assertNotNull(itemList3);
        org.junit.Assert.assertNull(requestCollection7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(requestForum11);
        org.junit.Assert.assertNotNull(requestForum12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(itemList23);
        org.junit.Assert.assertNotNull(libraryManagementTeam25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(virtualBook30);
        org.junit.Assert.assertNotNull(bookArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(magazineArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(bookArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(cDArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(magazineArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(cDArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(bookArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(cDArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(magazineArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(payment87);
    }

    @Test
    public void test2373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2373");
        model.Database database0 = model.Database.database;
        model.Student student1 = new model.Student();
        int int2 = student1.ID;
        model.StudentOnlineResources studentOnlineResources3 = new model.StudentOnlineResources((model.Client) student1);
        student1.ID = '#';
        database0.addClient((model.Client) student1);
        java.lang.String str7 = database0.getCDFilePath();
        java.util.ArrayList<java.lang.String> strList8 = database0.getAllItems();
        model.Faculty faculty9 = new model.Faculty();
        faculty9.username = "hi!";
        java.lang.String str12 = faculty9.username;
        database0.addClient((model.Client) faculty9);
        java.lang.String str14 = faculty9.faculty;
        model.BorrowingManager borrowingManager15 = null;
        faculty9.borrowManager = borrowingManager15;
        faculty9.username = "model.LoginFailedException: hi!";
        org.junit.Assert.assertNotNull(database0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "src/CD.csv" + "'", str7, "src/CD.csv");
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test2374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2374");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.Request request1 = new model.Request();
        request1.title = "";
        java.lang.String str4 = requestForum0.makeARequest(request1);
        model.RequestForum requestForum5 = model.RequestForum.createRequestForum();
        model.RequestForum requestForum6 = model.RequestForum.createRequestForum();
        model.Request request7 = new model.Request();
        request7.title = "";
        java.lang.String str10 = requestForum6.makeARequest(request7);
        int int11 = requestForum5.assessBooksPriority(request7);
        java.lang.String str12 = request7.type;
        java.lang.String str13 = request7.type;
        java.lang.String str14 = requestForum0.makeARequest(request7);
        model.LibraryManagementTeam libraryManagementTeam15 = requestForum0.managementTeam;
        libraryManagementTeam15.ID = 40;
        model.Student student18 = new model.Student();
        int int19 = student18.ID;
        model.StudentOnlineResources studentOnlineResources20 = new model.StudentOnlineResources((model.Client) student18);
        model.VirtualBook virtualBook22 = studentOnlineResources20.searchAccessibleBook("");
        model.CD cD24 = new model.CD("");
        model.Magazine magazine25 = null;
        model.Book book26 = null;
        model.CD cD27 = null;
        model.Magazine magazine28 = null;
        model.Book[] bookArray29 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList30 = new java.util.ArrayList<model.Book>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList30, bookArray29);
        model.CD[] cDArray32 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList33 = new java.util.ArrayList<model.CD>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList33, cDArray32);
        model.Magazine[] magazineArray35 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList36 = new java.util.ArrayList<model.Magazine>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList36, magazineArray35);
        model.ItemSearchResult itemSearchResult38 = new model.ItemSearchResult(book26, cD27, magazine28, (java.util.Collection<model.Book>) bookList30, (java.util.Collection<model.CD>) cDList33, (java.util.Collection<model.Magazine>) magazineList36);
        model.Book book39 = null;
        model.CD cD40 = null;
        model.Magazine magazine41 = null;
        model.Book[] bookArray42 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList43 = new java.util.ArrayList<model.Book>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList43, bookArray42);
        model.CD[] cDArray45 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList46 = new java.util.ArrayList<model.CD>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList46, cDArray45);
        model.Magazine[] magazineArray48 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList49 = new java.util.ArrayList<model.Magazine>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList49, magazineArray48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult(book39, cD40, magazine41, (java.util.Collection<model.Book>) bookList43, (java.util.Collection<model.CD>) cDList46, (java.util.Collection<model.Magazine>) magazineList49);
        model.CD[] cDArray52 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList53 = new java.util.ArrayList<model.CD>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList53, cDArray52);
        itemSearchResult51.similarCD = cDList53;
        model.Book book56 = null;
        model.CD cD57 = null;
        model.Magazine magazine58 = null;
        model.Book[] bookArray59 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList60 = new java.util.ArrayList<model.Book>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList60, bookArray59);
        model.CD[] cDArray62 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList63 = new java.util.ArrayList<model.CD>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList63, cDArray62);
        model.Magazine[] magazineArray65 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList66 = new java.util.ArrayList<model.Magazine>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList66, magazineArray65);
        model.ItemSearchResult itemSearchResult68 = new model.ItemSearchResult(book56, cD57, magazine58, (java.util.Collection<model.Book>) bookList60, (java.util.Collection<model.CD>) cDList63, (java.util.Collection<model.Magazine>) magazineList66);
        model.ItemSearchResult itemSearchResult69 = new model.ItemSearchResult((model.Book) virtualBook22, cD24, magazine25, (java.util.Collection<model.Book>) bookList30, (java.util.Collection<model.CD>) cDList53, (java.util.Collection<model.Magazine>) magazineList66);
        virtualBook22.ID = (short) 10;
        int int72 = virtualBook22.ID;
        virtualBook22.showContent();
        virtualBook22.publisher = "src/Book.csv";
        boolean boolean76 = virtualBook22.isBookLost;
        libraryManagementTeam15.enableAnItem((model.Item) virtualBook22);
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(requestForum5);
        org.junit.Assert.assertNotNull(requestForum6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(libraryManagementTeam15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(virtualBook22);
        org.junit.Assert.assertNotNull(bookArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(cDArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(magazineArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(bookArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(cDArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(magazineArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(cDArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(bookArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(cDArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(magazineArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test2375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2375");
        model.Magazine magazine1 = new model.Magazine("model.RegistrationFailedException: src/VirtualBook.csv");
    }

    @Test
    public void test2376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2376");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.Database.database = database7;
        java.lang.String str10 = database7.virtualItemFilePath;
        java.lang.String str11 = database7.getBookFilePath();
        database7.itemPath = "src/Magazine.csv";
        model.Login login14 = model.Login.makeLogin(database7);
        boolean boolean16 = database7.addItem("src/Client.csv");
        model.SearchVirtualItem searchVirtualItem17 = new model.SearchVirtualItem(database7);
        model.PaidNewsletter paidNewsletter19 = searchVirtualItem17.getPaidNewsletter("hi!");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "src/CD.csv" + "'", str10, "src/CD.csv");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "src/Book.csv" + "'", str11, "src/Book.csv");
        org.junit.Assert.assertNotNull(login14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(paidNewsletter19);
    }

    @Test
    public void test2377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2377");
        model.LibraryManagementTeam libraryManagementTeam0 = new model.LibraryManagementTeam();
        int int1 = libraryManagementTeam0.ID;
        int int2 = libraryManagementTeam0.accessCode;
        model.Item item3 = null;
        libraryManagementTeam0.addAnItem(item3);
        java.util.ArrayList<model.Item> itemList5 = libraryManagementTeam0.items;
        model.LibraryManagementTeam libraryManagementTeam6 = new model.LibraryManagementTeam();
        int int7 = libraryManagementTeam6.ID;
        int int8 = libraryManagementTeam6.accessCode;
        model.Item item9 = null;
        libraryManagementTeam6.addAnItem(item9);
        java.util.ArrayList<model.Item> itemList11 = libraryManagementTeam6.items;
        libraryManagementTeam0.items = itemList11;
        model.ItemManagement itemManagement13 = new model.ItemManagement();
        model.Database database14 = null;
        itemManagement13.database = database14;
        model.Item item17 = itemManagement13.selectAnItemFromDatabase((int) '#');
        libraryManagementTeam0.itemManagement = itemManagement13;
        model.Item item20 = libraryManagementTeam0.selectAnItemFromDatabase(12);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(itemList5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(itemList11);
        org.junit.Assert.assertNull(item17);
        org.junit.Assert.assertNull(item20);
    }

    @Test
    public void test2378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2378");
        model.LibraryManagementTeam libraryManagementTeam0 = new model.LibraryManagementTeam();
        libraryManagementTeam0.accessCode = (byte) 10;
        java.util.ArrayList<model.Item> itemList3 = libraryManagementTeam0.items;
        int int4 = libraryManagementTeam0.ID;
        model.Student student5 = new model.Student();
        int int6 = student5.ID;
        model.StudentOnlineResources studentOnlineResources7 = new model.StudentOnlineResources((model.Client) student5);
        model.VirtualBook virtualBook9 = studentOnlineResources7.searchAccessibleBook("");
        model.CD cD11 = new model.CD("");
        model.Magazine magazine12 = null;
        model.Book book13 = null;
        model.CD cD14 = null;
        model.Magazine magazine15 = null;
        model.Book[] bookArray16 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList17 = new java.util.ArrayList<model.Book>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList17, bookArray16);
        model.CD[] cDArray19 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList20 = new java.util.ArrayList<model.CD>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList20, cDArray19);
        model.Magazine[] magazineArray22 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList23 = new java.util.ArrayList<model.Magazine>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList23, magazineArray22);
        model.ItemSearchResult itemSearchResult25 = new model.ItemSearchResult(book13, cD14, magazine15, (java.util.Collection<model.Book>) bookList17, (java.util.Collection<model.CD>) cDList20, (java.util.Collection<model.Magazine>) magazineList23);
        model.Book book26 = null;
        model.CD cD27 = null;
        model.Magazine magazine28 = null;
        model.Book[] bookArray29 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList30 = new java.util.ArrayList<model.Book>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList30, bookArray29);
        model.CD[] cDArray32 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList33 = new java.util.ArrayList<model.CD>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList33, cDArray32);
        model.Magazine[] magazineArray35 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList36 = new java.util.ArrayList<model.Magazine>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList36, magazineArray35);
        model.ItemSearchResult itemSearchResult38 = new model.ItemSearchResult(book26, cD27, magazine28, (java.util.Collection<model.Book>) bookList30, (java.util.Collection<model.CD>) cDList33, (java.util.Collection<model.Magazine>) magazineList36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        itemSearchResult38.similarCD = cDList40;
        model.Book book43 = null;
        model.CD cD44 = null;
        model.Magazine magazine45 = null;
        model.Book[] bookArray46 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList47 = new java.util.ArrayList<model.Book>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList47, bookArray46);
        model.CD[] cDArray49 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList50 = new java.util.ArrayList<model.CD>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList50, cDArray49);
        model.Magazine[] magazineArray52 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList53 = new java.util.ArrayList<model.Magazine>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList53, magazineArray52);
        model.ItemSearchResult itemSearchResult55 = new model.ItemSearchResult(book43, cD44, magazine45, (java.util.Collection<model.Book>) bookList47, (java.util.Collection<model.CD>) cDList50, (java.util.Collection<model.Magazine>) magazineList53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult((model.Book) virtualBook9, cD11, magazine12, (java.util.Collection<model.Book>) bookList17, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList53);
        int int57 = virtualBook9.ID;
        int int58 = virtualBook9.copiesAvailable;
        model.LibraryManagementTeam libraryManagementTeam59 = new model.LibraryManagementTeam();
        libraryManagementTeam59.accessCode = (byte) 10;
        java.util.ArrayList<model.Item> itemList62 = libraryManagementTeam59.items;
        boolean boolean63 = virtualBook9.equals((java.lang.Object) libraryManagementTeam59);
        java.lang.String str64 = virtualBook9.title;
        virtualBook9.edition = (-1);
        virtualBook9.ISBN = "hi!";
        virtualBook9.ID = 1;
        libraryManagementTeam0.enableAnItem((model.Item) virtualBook9);
        org.junit.Assert.assertNotNull(itemList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(virtualBook9);
        org.junit.Assert.assertNotNull(bookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(cDArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(magazineArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(bookArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(cDArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(magazineArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(bookArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(cDArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(magazineArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 20 + "'", int58 == 20);
        org.junit.Assert.assertNotNull(itemList62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
    }

    @Test
    public void test2379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2379");
        model.Faculty faculty0 = new model.Faculty();
        faculty0.username = "hi!";
        java.util.Collection<model.Course> courseCollection3 = null;
        faculty0.courses = courseCollection3;
        java.util.Collection<model.Course> courseCollection5 = faculty0.courses;
        model.Newsletter[] newsletterArray6 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList7 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList7, newsletterArray6);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager9 = new model.NewsletterSubscriptionManager(newsletterList7);
        model.Client client10 = newsletterSubscriptionManager9.client;
        model.Student student11 = new model.Student();
        int int12 = student11.ID;
        model.StudentOnlineResources studentOnlineResources13 = new model.StudentOnlineResources((model.Client) student11);
        student11.ID = '#';
        java.lang.String str16 = student11.email;
        newsletterSubscriptionManager9.client = student11;
        model.Newsletter[] newsletterArray18 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList19 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList19, newsletterArray18);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager21 = new model.NewsletterSubscriptionManager(newsletterList19);
        newsletterSubscriptionManager9.newsletterSubscribed = newsletterList19;
        faculty0.newsletterManager = newsletterSubscriptionManager9;
        java.util.ArrayList<model.VirtualBook> virtualBookList24 = faculty0.virtualBooksAvailable;
        model.NewsletterSubscriptionManager newsletterSubscriptionManager25 = faculty0.newsletterManager;
        model.UniProvidedNewsletter uniProvidedNewsletter26 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter26.title = "hi!";
        model.Faculty faculty29 = new model.Faculty();
        java.lang.String str30 = faculty29.email;
        boolean boolean31 = uniProvidedNewsletter26.equals((java.lang.Object) str30);
        model.VirtualItemContent virtualItemContent33 = new model.VirtualItemContent("src/Book.csv");
        uniProvidedNewsletter26.content = virtualItemContent33;
// flaky:         newsletterSubscriptionManager25.cancelSubscription((model.Newsletter) uniProvidedNewsletter26);
        java.util.ArrayList<model.Newsletter> newsletterList36 = newsletterSubscriptionManager25.newsletterSubscribed;
        org.junit.Assert.assertNull(courseCollection5);
        org.junit.Assert.assertNotNull(newsletterArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(client10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(newsletterArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(virtualBookList24);
        org.junit.Assert.assertNotNull(newsletterSubscriptionManager25);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(newsletterList36);
    }

    @Test
    public void test2380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2380");
        model.LibraryManagementTeam libraryManagementTeam0 = new model.LibraryManagementTeam();
        int int1 = libraryManagementTeam0.ID;
        int int2 = libraryManagementTeam0.accessCode;
        libraryManagementTeam0.accessCode = (short) -1;
        libraryManagementTeam0.ID = '#';
        model.Student student7 = new model.Student();
        int int8 = student7.ID;
        model.StudentOnlineResources studentOnlineResources9 = new model.StudentOnlineResources((model.Client) student7);
        model.VirtualBook virtualBook11 = studentOnlineResources9.searchAccessibleBook("");
        model.CD cD13 = new model.CD("");
        model.Magazine magazine14 = null;
        model.Book book15 = null;
        model.CD cD16 = null;
        model.Magazine magazine17 = null;
        model.Book[] bookArray18 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList19 = new java.util.ArrayList<model.Book>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList19, bookArray18);
        model.CD[] cDArray21 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList22 = new java.util.ArrayList<model.CD>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList22, cDArray21);
        model.Magazine[] magazineArray24 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList25 = new java.util.ArrayList<model.Magazine>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList25, magazineArray24);
        model.ItemSearchResult itemSearchResult27 = new model.ItemSearchResult(book15, cD16, magazine17, (java.util.Collection<model.Book>) bookList19, (java.util.Collection<model.CD>) cDList22, (java.util.Collection<model.Magazine>) magazineList25);
        model.Book book28 = null;
        model.CD cD29 = null;
        model.Magazine magazine30 = null;
        model.Book[] bookArray31 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList32 = new java.util.ArrayList<model.Book>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList32, bookArray31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        model.Magazine[] magazineArray37 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList38 = new java.util.ArrayList<model.Magazine>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList38, magazineArray37);
        model.ItemSearchResult itemSearchResult40 = new model.ItemSearchResult(book28, cD29, magazine30, (java.util.Collection<model.Book>) bookList32, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList38);
        model.CD[] cDArray41 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList42 = new java.util.ArrayList<model.CD>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList42, cDArray41);
        itemSearchResult40.similarCD = cDList42;
        model.Book book45 = null;
        model.CD cD46 = null;
        model.Magazine magazine47 = null;
        model.Book[] bookArray48 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList49 = new java.util.ArrayList<model.Book>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList49, bookArray48);
        model.CD[] cDArray51 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList52 = new java.util.ArrayList<model.CD>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList52, cDArray51);
        model.Magazine[] magazineArray54 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList55 = new java.util.ArrayList<model.Magazine>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList55, magazineArray54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult(book45, cD46, magazine47, (java.util.Collection<model.Book>) bookList49, (java.util.Collection<model.CD>) cDList52, (java.util.Collection<model.Magazine>) magazineList55);
        model.ItemSearchResult itemSearchResult58 = new model.ItemSearchResult((model.Book) virtualBook11, cD13, magazine14, (java.util.Collection<model.Book>) bookList19, (java.util.Collection<model.CD>) cDList42, (java.util.Collection<model.Magazine>) magazineList55);
        int int59 = virtualBook11.ID;
        virtualBook11.ISBN = "hi!";
        int int62 = virtualBook11.ID;
        model.VirtualItemContent virtualItemContent64 = new model.VirtualItemContent("hi!");
        virtualBook11.content = virtualItemContent64;
        java.lang.String str66 = virtualBook11.ISBN;
        virtualBook11.isBookLost = true;
        model.VirtualItemContent virtualItemContent69 = virtualBook11.content;
        libraryManagementTeam0.enableAnItem((model.Item) virtualBook11);
        java.util.Calendar calendar71 = null;
        virtualBook11.date = calendar71;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(virtualBook11);
        org.junit.Assert.assertNotNull(bookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(cDArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(magazineArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(bookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(magazineArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(cDArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(bookArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(cDArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(magazineArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertNotNull(virtualItemContent69);
    }

    @Test
    public void test2381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2381");
        model.ValidateRegistration validateRegistration0 = new model.ValidateRegistration();
        model.Student student1 = new model.Student();
        student1.viewMyOnlineResource();
        boolean boolean3 = validateRegistration0.validateStaffRegistration((model.Staff) student1);
        model.Faculty faculty4 = new model.Faculty();
        boolean boolean5 = validateRegistration0.validateStaffRegistration((model.Staff) faculty4);
        java.util.Collection<model.Book> bookCollection6 = null;
        faculty4.textbooks = bookCollection6;
        java.util.Collection<model.Course> courseCollection8 = faculty4.courses;
        int int9 = faculty4.ID;
        model.Newsletter[] newsletterArray10 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList11 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList11, newsletterArray10);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager13 = new model.NewsletterSubscriptionManager(newsletterList11);
        model.Client client14 = newsletterSubscriptionManager13.client;
        model.Client client15 = newsletterSubscriptionManager13.client;
        model.Student student16 = new model.Student();
        int int17 = student16.ID;
        model.StudentOnlineResources studentOnlineResources18 = new model.StudentOnlineResources((model.Client) student16);
        model.VirtualBook virtualBook20 = studentOnlineResources18.searchAccessibleBook("");
        model.CD cD22 = new model.CD("");
        model.Magazine magazine23 = null;
        model.Book book24 = null;
        model.CD cD25 = null;
        model.Magazine magazine26 = null;
        model.Book[] bookArray27 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList28 = new java.util.ArrayList<model.Book>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList28, bookArray27);
        model.CD[] cDArray30 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList31 = new java.util.ArrayList<model.CD>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList31, cDArray30);
        model.Magazine[] magazineArray33 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList34 = new java.util.ArrayList<model.Magazine>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList34, magazineArray33);
        model.ItemSearchResult itemSearchResult36 = new model.ItemSearchResult(book24, cD25, magazine26, (java.util.Collection<model.Book>) bookList28, (java.util.Collection<model.CD>) cDList31, (java.util.Collection<model.Magazine>) magazineList34);
        model.Book book37 = null;
        model.CD cD38 = null;
        model.Magazine magazine39 = null;
        model.Book[] bookArray40 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList41 = new java.util.ArrayList<model.Book>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList41, bookArray40);
        model.CD[] cDArray43 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList44 = new java.util.ArrayList<model.CD>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList44, cDArray43);
        model.Magazine[] magazineArray46 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList47 = new java.util.ArrayList<model.Magazine>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList47, magazineArray46);
        model.ItemSearchResult itemSearchResult49 = new model.ItemSearchResult(book37, cD38, magazine39, (java.util.Collection<model.Book>) bookList41, (java.util.Collection<model.CD>) cDList44, (java.util.Collection<model.Magazine>) magazineList47);
        model.CD[] cDArray50 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList51 = new java.util.ArrayList<model.CD>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList51, cDArray50);
        itemSearchResult49.similarCD = cDList51;
        model.Book book54 = null;
        model.CD cD55 = null;
        model.Magazine magazine56 = null;
        model.Book[] bookArray57 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList58 = new java.util.ArrayList<model.Book>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList58, bookArray57);
        model.CD[] cDArray60 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList61 = new java.util.ArrayList<model.CD>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList61, cDArray60);
        model.Magazine[] magazineArray63 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList64 = new java.util.ArrayList<model.Magazine>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList64, magazineArray63);
        model.ItemSearchResult itemSearchResult66 = new model.ItemSearchResult(book54, cD55, magazine56, (java.util.Collection<model.Book>) bookList58, (java.util.Collection<model.CD>) cDList61, (java.util.Collection<model.Magazine>) magazineList64);
        model.ItemSearchResult itemSearchResult67 = new model.ItemSearchResult((model.Book) virtualBook20, cD22, magazine23, (java.util.Collection<model.Book>) bookList28, (java.util.Collection<model.CD>) cDList51, (java.util.Collection<model.Magazine>) magazineList64);
        int int68 = virtualBook20.ID;
        int int69 = virtualBook20.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter70 = null;
        model.PaidNewsletter paidNewsletter71 = null;
        model.VirtualItemSearchResult virtualItemSearchResult72 = new model.VirtualItemSearchResult(virtualBook20, uniProvidedNewsletter70, paidNewsletter71);
        model.PaidNewsletter paidNewsletter73 = virtualItemSearchResult72.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter74 = new model.UniProvidedNewsletter();
        virtualItemSearchResult72.setUniNewsletter(uniProvidedNewsletter74);
        newsletterSubscriptionManager13.cancelSubscription((model.Newsletter) uniProvidedNewsletter74);
        faculty4.newsletterManager = newsletterSubscriptionManager13;
        java.util.Collection<model.Book> bookCollection78 = faculty4.textbooks;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(courseCollection8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(newsletterArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(client14);
        org.junit.Assert.assertNull(client15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(virtualBook20);
        org.junit.Assert.assertNotNull(bookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(cDArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(magazineArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(bookArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(cDArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(magazineArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(cDArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(bookArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(cDArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(magazineArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 20 + "'", int69 == 20);
        org.junit.Assert.assertNull(paidNewsletter73);
        org.junit.Assert.assertNull(bookCollection78);
    }

    @Test
    public void test2382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2382");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter54 = null;
        model.PaidNewsletter paidNewsletter55 = null;
        model.VirtualItemSearchResult virtualItemSearchResult56 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter54, paidNewsletter55);
        model.PaidNewsletter paidNewsletter57 = virtualItemSearchResult56.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter58 = new model.UniProvidedNewsletter();
        virtualItemSearchResult56.setUniNewsletter(uniProvidedNewsletter58);
        model.PaidNewsletter paidNewsletter60 = virtualItemSearchResult56.getPaidNewsletter();
        model.PaidNewsletter paidNewsletter61 = virtualItemSearchResult56.getPaidNewsletter();
        model.VirtualBook virtualBook62 = virtualItemSearchResult56.virtualBook;
        model.Newsletter[] newsletterArray63 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList64 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList64, newsletterArray63);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager66 = new model.NewsletterSubscriptionManager(newsletterList64);
        model.Client client67 = newsletterSubscriptionManager66.client;
        model.UniProvidedNewsletter uniProvidedNewsletter68 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter68.title = "";
        java.lang.String str71 = uniProvidedNewsletter68.title;
        newsletterSubscriptionManager66.subscribeToUniProvidedNewsletter(uniProvidedNewsletter68, "");
        virtualItemSearchResult56.uniNewsletter = uniProvidedNewsletter68;
        model.Student student75 = new model.Student();
        int int76 = student75.ID;
        model.StudentOnlineResources studentOnlineResources77 = new model.StudentOnlineResources((model.Client) student75);
        model.VirtualBook virtualBook79 = studentOnlineResources77.searchAccessibleBook("");
        java.lang.String str80 = virtualBook79.location;
        virtualBook79.ID = '#';
        virtualBook79.edition = 0;
        virtualBook79.isBookLost = true;
        virtualBook79.showContent();
        model.VirtualItemContent virtualItemContent88 = virtualBook79.content;
        virtualItemSearchResult56.setVirtualBook(virtualBook79);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertNull(paidNewsletter57);
        org.junit.Assert.assertNull(paidNewsletter60);
        org.junit.Assert.assertNull(paidNewsletter61);
        org.junit.Assert.assertNotNull(virtualBook62);
        org.junit.Assert.assertNotNull(newsletterArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(client67);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(virtualBook79);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNull(virtualItemContent88);
    }

    @Test
    public void test2383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2383");
        model.ItemManagement itemManagement0 = new model.ItemManagement();
        model.Database database1 = null;
        itemManagement0.database = database1;
        model.BuySpecialItems buySpecialItems3 = new model.BuySpecialItems();
        model.Book book4 = null;
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        java.util.Collection<model.Book> bookCollection8 = null;
        model.Book book9 = null;
        model.CD cD10 = null;
        model.Magazine magazine11 = null;
        model.Book[] bookArray12 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList13 = new java.util.ArrayList<model.Book>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList13, bookArray12);
        model.CD[] cDArray15 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList16 = new java.util.ArrayList<model.CD>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList16, cDArray15);
        model.Magazine[] magazineArray18 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList19 = new java.util.ArrayList<model.Magazine>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList19, magazineArray18);
        model.ItemSearchResult itemSearchResult21 = new model.ItemSearchResult(book9, cD10, magazine11, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList16, (java.util.Collection<model.Magazine>) magazineList19);
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        itemSearchResult21.similarCD = cDList29;
        model.Book book36 = null;
        model.CD cD37 = null;
        model.Magazine magazine38 = null;
        model.Book[] bookArray39 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList40 = new java.util.ArrayList<model.Book>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList40, bookArray39);
        model.CD[] cDArray42 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList43 = new java.util.ArrayList<model.CD>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList43, cDArray42);
        model.Magazine[] magazineArray45 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList46 = new java.util.ArrayList<model.Magazine>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList46, magazineArray45);
        model.ItemSearchResult itemSearchResult48 = new model.ItemSearchResult(book36, cD37, magazine38, (java.util.Collection<model.Book>) bookList40, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList46);
        model.ItemSearchResult itemSearchResult49 = new model.ItemSearchResult(book4, cD6, magazine7, bookCollection8, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList46);
        cD6.ID = (short) 10;
        boolean boolean53 = buySpecialItems3.buyAnItem((model.Item) cD6, (double) 0);
        itemManagement0.enableAnItem((model.Item) cD6);
        model.Database database62 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str63 = database62.getVirtualBookFilePath();
        model.Database.database = database62;
        java.lang.String str65 = database62.virtualItemFilePath;
        itemManagement0.database = database62;
        model.Database database74 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database74;
        model.SearchVirtualItem searchVirtualItem76 = new model.SearchVirtualItem(database74);
        model.VirtualItemSearchResult virtualItemSearchResult78 = searchVirtualItem76.searchVirtualItem("src/VirtualBook.csv");
        model.Student student79 = new model.Student();
        int int80 = student79.ID;
        model.StudentOnlineResources studentOnlineResources81 = new model.StudentOnlineResources((model.Client) student79);
        model.VirtualBook virtualBook83 = studentOnlineResources81.searchAccessibleBook("");
        java.lang.String str84 = virtualBook83.location;
        int int85 = virtualBook83.ID;
        virtualBook83.isBookLost = false;
        virtualItemSearchResult78.virtualBook = virtualBook83;
        model.VirtualBook virtualBook89 = virtualItemSearchResult78.getVirtualBook();
        model.VirtualItemContent virtualItemContent90 = virtualBook89.content;
        itemManagement0.enableAnItem((model.Item) virtualBook89);
        int int92 = virtualBook89.edition;
        boolean boolean93 = virtualBook89.canBePurchased;
        java.lang.String str94 = virtualBook89.author;
        virtualBook89.title = "src/Newsletter.csv";
        org.junit.Assert.assertNotNull(bookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cDArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(magazineArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(bookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cDArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(magazineArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(database62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "src/VirtualBook.csv" + "'", str63, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "src/CD.csv" + "'", str65, "src/CD.csv");
        org.junit.Assert.assertNotNull(database74);
        org.junit.Assert.assertNotNull(virtualItemSearchResult78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(virtualBook83);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(virtualBook89);
        org.junit.Assert.assertNull(virtualItemContent90);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNull(str94);
    }

    @Test
    public void test2384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2384");
        model.BuySpecialItems buySpecialItems0 = new model.BuySpecialItems();
        model.Payment payment1 = null;
        buySpecialItems0.paymentAPI = payment1;
        model.PayMobileWallet payMobileWallet3 = new model.PayMobileWallet();
        buySpecialItems0.paymentAPI = payMobileWallet3;
        payMobileWallet3.amountPay = 1.0d;
        payMobileWallet3.amountPay = 9042984;
        payMobileWallet3.pay((double) 4649131);
    }

    @Test
    public void test2385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2385");
        model.LibraryManagementTeam libraryManagementTeam0 = new model.LibraryManagementTeam();
        libraryManagementTeam0.accessCode = (byte) 10;
        java.util.ArrayList<model.Item> itemList3 = libraryManagementTeam0.items;
        model.LibraryManagementTeam libraryManagementTeam4 = new model.LibraryManagementTeam();
        libraryManagementTeam4.accessCode = (byte) 10;
        java.util.ArrayList<model.Item> itemList7 = libraryManagementTeam4.items;
        libraryManagementTeam0.items = itemList7;
        java.util.ArrayList<model.Item> itemList9 = libraryManagementTeam0.items;
        model.SearchBorrowedItem searchBorrowedItem10 = model.SearchBorrowedItem.makeSearchBorrowedItem();
        model.Visitor visitor11 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList12 = visitor11.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources13 = new model.StudentOnlineResources((model.Client) visitor11);
        model.RentedItem[] rentedItemArray14 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList15 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList15, rentedItemArray14);
        model.BorrowingManager borrowingManager17 = new model.BorrowingManager(rentedItemList15);
        model.Visitor visitor18 = new model.Visitor();
        visitor18.email = "hi!";
        borrowingManager17.client = visitor18;
        studentOnlineResources13.client = visitor18;
        model.Student student23 = new model.Student();
        int int24 = student23.ID;
        model.StudentOnlineResources studentOnlineResources25 = new model.StudentOnlineResources((model.Client) student23);
        model.VirtualBook virtualBook27 = studentOnlineResources25.searchAccessibleBook("");
        model.CD cD29 = new model.CD("");
        model.Magazine magazine30 = null;
        model.Book book31 = null;
        model.CD cD32 = null;
        model.Magazine magazine33 = null;
        model.Book[] bookArray34 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList35 = new java.util.ArrayList<model.Book>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList35, bookArray34);
        model.CD[] cDArray37 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList38 = new java.util.ArrayList<model.CD>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList38, cDArray37);
        model.Magazine[] magazineArray40 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList41 = new java.util.ArrayList<model.Magazine>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList41, magazineArray40);
        model.ItemSearchResult itemSearchResult43 = new model.ItemSearchResult(book31, cD32, magazine33, (java.util.Collection<model.Book>) bookList35, (java.util.Collection<model.CD>) cDList38, (java.util.Collection<model.Magazine>) magazineList41);
        model.Book book44 = null;
        model.CD cD45 = null;
        model.Magazine magazine46 = null;
        model.Book[] bookArray47 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList48 = new java.util.ArrayList<model.Book>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList48, bookArray47);
        model.CD[] cDArray50 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList51 = new java.util.ArrayList<model.CD>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList51, cDArray50);
        model.Magazine[] magazineArray53 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList54 = new java.util.ArrayList<model.Magazine>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList54, magazineArray53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult(book44, cD45, magazine46, (java.util.Collection<model.Book>) bookList48, (java.util.Collection<model.CD>) cDList51, (java.util.Collection<model.Magazine>) magazineList54);
        model.CD[] cDArray57 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList58 = new java.util.ArrayList<model.CD>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList58, cDArray57);
        itemSearchResult56.similarCD = cDList58;
        model.Book book61 = null;
        model.CD cD62 = null;
        model.Magazine magazine63 = null;
        model.Book[] bookArray64 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList65 = new java.util.ArrayList<model.Book>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList65, bookArray64);
        model.CD[] cDArray67 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList68 = new java.util.ArrayList<model.CD>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList68, cDArray67);
        model.Magazine[] magazineArray70 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList71 = new java.util.ArrayList<model.Magazine>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList71, magazineArray70);
        model.ItemSearchResult itemSearchResult73 = new model.ItemSearchResult(book61, cD62, magazine63, (java.util.Collection<model.Book>) bookList65, (java.util.Collection<model.CD>) cDList68, (java.util.Collection<model.Magazine>) magazineList71);
        model.ItemSearchResult itemSearchResult74 = new model.ItemSearchResult((model.Book) virtualBook27, cD29, magazine30, (java.util.Collection<model.Book>) bookList35, (java.util.Collection<model.CD>) cDList58, (java.util.Collection<model.Magazine>) magazineList71);
        java.lang.String str75 = studentOnlineResources13.readVirtualItem((model.VirtualItem) virtualBook27);
        model.Visitor visitor77 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList78 = visitor77.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources79 = new model.StudentOnlineResources((model.Client) visitor77);
        searchBorrowedItem10.addPhyscialItem((model.Item) virtualBook27, "", (model.Client) visitor77);
        model.Student student81 = new model.Student();
        int int82 = student81.ID;
        model.StudentOnlineResources studentOnlineResources83 = new model.StudentOnlineResources((model.Client) student81);
        java.util.Iterator<model.VirtualItem> virtualItemItor84 = studentOnlineResources83.iterator();
        boolean boolean85 = virtualBook27.equals((java.lang.Object) virtualItemItor84);
        libraryManagementTeam0.enableAnItem((model.Item) virtualBook27);
        virtualBook27.location = "model.RentingNotAllowedException: hi!";
        org.junit.Assert.assertNotNull(itemList3);
        org.junit.Assert.assertNotNull(itemList7);
        org.junit.Assert.assertNotNull(itemList9);
        org.junit.Assert.assertNotNull(searchBorrowedItem10);
        org.junit.Assert.assertNull(virtualBookList12);
        org.junit.Assert.assertNotNull(rentedItemArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(virtualBook27);
        org.junit.Assert.assertNotNull(bookArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(cDArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(magazineArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(bookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(cDArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(magazineArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(cDArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(bookArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(cDArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(magazineArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(virtualBookList78);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNull(virtualItemItor84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test2386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2386");
        model.ItemManagement itemManagement0 = new model.ItemManagement();
        model.Database database1 = null;
        itemManagement0.database = database1;
        model.BuySpecialItems buySpecialItems3 = new model.BuySpecialItems();
        model.Book book4 = null;
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        java.util.Collection<model.Book> bookCollection8 = null;
        model.Book book9 = null;
        model.CD cD10 = null;
        model.Magazine magazine11 = null;
        model.Book[] bookArray12 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList13 = new java.util.ArrayList<model.Book>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList13, bookArray12);
        model.CD[] cDArray15 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList16 = new java.util.ArrayList<model.CD>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList16, cDArray15);
        model.Magazine[] magazineArray18 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList19 = new java.util.ArrayList<model.Magazine>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList19, magazineArray18);
        model.ItemSearchResult itemSearchResult21 = new model.ItemSearchResult(book9, cD10, magazine11, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList16, (java.util.Collection<model.Magazine>) magazineList19);
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        itemSearchResult21.similarCD = cDList29;
        model.Book book36 = null;
        model.CD cD37 = null;
        model.Magazine magazine38 = null;
        model.Book[] bookArray39 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList40 = new java.util.ArrayList<model.Book>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList40, bookArray39);
        model.CD[] cDArray42 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList43 = new java.util.ArrayList<model.CD>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList43, cDArray42);
        model.Magazine[] magazineArray45 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList46 = new java.util.ArrayList<model.Magazine>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList46, magazineArray45);
        model.ItemSearchResult itemSearchResult48 = new model.ItemSearchResult(book36, cD37, magazine38, (java.util.Collection<model.Book>) bookList40, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList46);
        model.ItemSearchResult itemSearchResult49 = new model.ItemSearchResult(book4, cD6, magazine7, bookCollection8, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList46);
        cD6.ID = (short) 10;
        boolean boolean53 = buySpecialItems3.buyAnItem((model.Item) cD6, (double) 0);
        itemManagement0.enableAnItem((model.Item) cD6);
        model.Database database55 = model.Database.database;
        model.Student student56 = new model.Student();
        int int57 = student56.ID;
        model.StudentOnlineResources studentOnlineResources58 = new model.StudentOnlineResources((model.Client) student56);
        student56.ID = '#';
        database55.addClient((model.Client) student56);
        itemManagement0.database = database55;
        model.Login login63 = model.Login.makeLogin(database55);
        model.SearchClient searchClient64 = model.SearchClient.makeSearchClient(database55);
        org.junit.Assert.assertNotNull(bookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cDArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(magazineArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(bookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cDArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(magazineArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(login63);
        org.junit.Assert.assertNotNull(searchClient64);
    }

    @Test
    public void test2387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2387");
        model.Visitor visitor0 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList1 = visitor0.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) visitor0);
        model.RentedItem[] rentedItemArray3 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList4 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList4, rentedItemArray3);
        model.BorrowingManager borrowingManager6 = new model.BorrowingManager(rentedItemList4);
        model.Visitor visitor7 = new model.Visitor();
        visitor7.email = "hi!";
        borrowingManager6.client = visitor7;
        studentOnlineResources2.client = visitor7;
        model.Student student12 = new model.Student();
        int int13 = student12.ID;
        model.StudentOnlineResources studentOnlineResources14 = new model.StudentOnlineResources((model.Client) student12);
        model.VirtualBook virtualBook16 = studentOnlineResources14.searchAccessibleBook("");
        model.CD cD18 = new model.CD("");
        model.Magazine magazine19 = null;
        model.Book book20 = null;
        model.CD cD21 = null;
        model.Magazine magazine22 = null;
        model.Book[] bookArray23 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList24 = new java.util.ArrayList<model.Book>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList24, bookArray23);
        model.CD[] cDArray26 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList27 = new java.util.ArrayList<model.CD>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList27, cDArray26);
        model.Magazine[] magazineArray29 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList30 = new java.util.ArrayList<model.Magazine>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList30, magazineArray29);
        model.ItemSearchResult itemSearchResult32 = new model.ItemSearchResult(book20, cD21, magazine22, (java.util.Collection<model.Book>) bookList24, (java.util.Collection<model.CD>) cDList27, (java.util.Collection<model.Magazine>) magazineList30);
        model.Book book33 = null;
        model.CD cD34 = null;
        model.Magazine magazine35 = null;
        model.Book[] bookArray36 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList37 = new java.util.ArrayList<model.Book>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList37, bookArray36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        model.Magazine[] magazineArray42 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList43 = new java.util.ArrayList<model.Magazine>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList43, magazineArray42);
        model.ItemSearchResult itemSearchResult45 = new model.ItemSearchResult(book33, cD34, magazine35, (java.util.Collection<model.Book>) bookList37, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList43);
        model.CD[] cDArray46 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList47 = new java.util.ArrayList<model.CD>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList47, cDArray46);
        itemSearchResult45.similarCD = cDList47;
        model.Book book50 = null;
        model.CD cD51 = null;
        model.Magazine magazine52 = null;
        model.Book[] bookArray53 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList54 = new java.util.ArrayList<model.Book>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList54, bookArray53);
        model.CD[] cDArray56 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList57 = new java.util.ArrayList<model.CD>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList57, cDArray56);
        model.Magazine[] magazineArray59 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList60 = new java.util.ArrayList<model.Magazine>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList60, magazineArray59);
        model.ItemSearchResult itemSearchResult62 = new model.ItemSearchResult(book50, cD51, magazine52, (java.util.Collection<model.Book>) bookList54, (java.util.Collection<model.CD>) cDList57, (java.util.Collection<model.Magazine>) magazineList60);
        model.ItemSearchResult itemSearchResult63 = new model.ItemSearchResult((model.Book) virtualBook16, cD18, magazine19, (java.util.Collection<model.Book>) bookList24, (java.util.Collection<model.CD>) cDList47, (java.util.Collection<model.Magazine>) magazineList60);
        java.lang.String str64 = studentOnlineResources2.readVirtualItem((model.VirtualItem) virtualBook16);
        model.Newsletter[] newsletterArray65 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList66 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList66, newsletterArray65);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager68 = new model.NewsletterSubscriptionManager(newsletterList66);
        model.Client client69 = newsletterSubscriptionManager68.client;
        model.Visitor visitor70 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList71 = visitor70.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources72 = new model.StudentOnlineResources((model.Client) visitor70);
        model.RentedItem[] rentedItemArray73 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList74 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList74, rentedItemArray73);
        model.BorrowingManager borrowingManager76 = new model.BorrowingManager(rentedItemList74);
        model.Visitor visitor77 = new model.Visitor();
        visitor77.email = "hi!";
        borrowingManager76.client = visitor77;
        studentOnlineResources72.client = visitor77;
        model.UniProvidedNewsletter uniProvidedNewsletter82 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter82.title = "";
        java.lang.String str85 = studentOnlineResources72.readVirtualItem((model.VirtualItem) uniProvidedNewsletter82);
        newsletterSubscriptionManager68.cancelSubscription((model.Newsletter) uniProvidedNewsletter82);
        uniProvidedNewsletter82.cost = 0;
        model.VirtualItemContent virtualItemContent90 = new model.VirtualItemContent("hi!");
        java.lang.String str91 = virtualItemContent90.link;
        java.lang.String str93 = virtualItemContent90.getContent("");
        java.lang.String str95 = virtualItemContent90.getContent("model.RegistrationFailedException: ");
        uniProvidedNewsletter82.content = virtualItemContent90;
        model.VirtualItemContent virtualItemContent97 = uniProvidedNewsletter82.content;
        virtualBook16.content = virtualItemContent97;
        org.junit.Assert.assertNull(virtualBookList1);
        org.junit.Assert.assertNotNull(rentedItemArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(virtualBook16);
        org.junit.Assert.assertNotNull(bookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(cDArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(magazineArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(bookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(magazineArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(cDArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(bookArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(cDArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(magazineArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(newsletterArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(client69);
        org.junit.Assert.assertNull(virtualBookList71);
        org.junit.Assert.assertNotNull(rentedItemArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "hi!" + "'", str91, "hi!");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "hi!" + "'", str93, "hi!");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "hi!" + "'", str95, "hi!");
        org.junit.Assert.assertNotNull(virtualItemContent97);
    }

    @Test
    public void test2388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2388");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "", "src/CD.csv", "model.RegistrationFailedException: src/Magazine.csv", "model.RegistrationFailedException: src/Book.csv", "model.RegistrationFailedException: ", "model.RegistrationFailedException: src/Book.csv");
        java.lang.String str8 = database7.getNewspaperFilePath();
        model.Database database16 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str17 = database16.getVirtualBookFilePath();
        model.Database.database = database16;
        java.lang.String str19 = database16.virtualItemFilePath;
        java.lang.String str20 = database16.getBookFilePath();
        database16.itemPath = "src/Magazine.csv";
        model.Client client24 = database16.getClient("src/CD.csv");
        model.StudentOnlineResources studentOnlineResources25 = new model.StudentOnlineResources(client24);
        client24.viewMyOnlineResource();
        database7.addClient(client24);
        java.lang.String str28 = database7.getBorrowedItemFilePath();
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/Newsletter.csv" + "'", str8, "src/Newsletter.csv");
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "src/VirtualBook.csv" + "'", str17, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "src/CD.csv" + "'", str19, "src/CD.csv");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "src/Book.csv" + "'", str20, "src/Book.csv");
        org.junit.Assert.assertNotNull(client24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "src/BorrowedItems.csv" + "'", str28, "src/BorrowedItems.csv");
    }

    @Test
    public void test2389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2389");
        model.PayCredit payCredit0 = new model.PayCredit();
        payCredit0.amountPay = 10;
        payCredit0.pay((double) (-1.0f));
        payCredit0.pay((double) ' ');
        payCredit0.pay(0.0d);
        payCredit0.pay((double) 10);
        payCredit0.pay((double) 1719839);
        double double13 = payCredit0.amountPay;
        payCredit0.pay((double) 1979322);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1719890.0d + "'", double13 == 1719890.0d);
    }

    @Test
    public void test2390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2390");
        model.Database database7 = model.Database.createDatabase("src/CD.csv", "src/BorrowedItems.csv", "model.RegistrationFailedException: src/Magazine.csv", "model.RentingNotAllowedException: ", "model.LoginFailedException: hi!", "model.RegistrationFailedException: src/Book.csv", "model.RentingNotAllowedException: model.LoginFailedException: hi!");
        org.junit.Assert.assertNotNull(database7);
    }

    @Test
    public void test2391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2391");
        model.ItemManagement itemManagement0 = new model.ItemManagement();
        model.Database database1 = null;
        itemManagement0.database = database1;
        model.BuySpecialItems buySpecialItems3 = new model.BuySpecialItems();
        model.Book book4 = null;
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        java.util.Collection<model.Book> bookCollection8 = null;
        model.Book book9 = null;
        model.CD cD10 = null;
        model.Magazine magazine11 = null;
        model.Book[] bookArray12 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList13 = new java.util.ArrayList<model.Book>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList13, bookArray12);
        model.CD[] cDArray15 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList16 = new java.util.ArrayList<model.CD>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList16, cDArray15);
        model.Magazine[] magazineArray18 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList19 = new java.util.ArrayList<model.Magazine>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList19, magazineArray18);
        model.ItemSearchResult itemSearchResult21 = new model.ItemSearchResult(book9, cD10, magazine11, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList16, (java.util.Collection<model.Magazine>) magazineList19);
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        itemSearchResult21.similarCD = cDList29;
        model.Book book36 = null;
        model.CD cD37 = null;
        model.Magazine magazine38 = null;
        model.Book[] bookArray39 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList40 = new java.util.ArrayList<model.Book>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList40, bookArray39);
        model.CD[] cDArray42 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList43 = new java.util.ArrayList<model.CD>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList43, cDArray42);
        model.Magazine[] magazineArray45 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList46 = new java.util.ArrayList<model.Magazine>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList46, magazineArray45);
        model.ItemSearchResult itemSearchResult48 = new model.ItemSearchResult(book36, cD37, magazine38, (java.util.Collection<model.Book>) bookList40, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList46);
        model.ItemSearchResult itemSearchResult49 = new model.ItemSearchResult(book4, cD6, magazine7, bookCollection8, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList46);
        cD6.ID = (short) 10;
        boolean boolean53 = buySpecialItems3.buyAnItem((model.Item) cD6, (double) 0);
        itemManagement0.enableAnItem((model.Item) cD6);
        model.Database database62 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str63 = database62.getVirtualBookFilePath();
        model.Database.database = database62;
        java.lang.String str65 = database62.virtualItemFilePath;
        itemManagement0.database = database62;
        java.lang.String str67 = database62.getVirtualBookFilePath();
        model.Database.database = database62;
        java.lang.String str69 = database62.getBookFilePath();
        java.lang.String str70 = database62.getClientFilePath();
        org.junit.Assert.assertNotNull(bookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cDArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(magazineArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(bookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cDArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(magazineArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(database62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "src/VirtualBook.csv" + "'", str63, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "src/CD.csv" + "'", str65, "src/CD.csv");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "src/VirtualBook.csv" + "'", str67, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "src/Book.csv" + "'", str69, "src/Book.csv");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "src/Client.csv" + "'", str70, "src/Client.csv");
    }

    @Test
    public void test2392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2392");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.Database.database = database7;
        java.lang.String str10 = database7.getCDFilePath();
        java.lang.String str11 = database7.getNewspaperFilePath();
        model.SearchItems searchItems12 = new model.SearchItems(database7);
        model.Book book14 = searchItems12.getBook("src/Magazine.csv");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "src/CD.csv" + "'", str10, "src/CD.csv");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "src/Newsletter.csv" + "'", str11, "src/Newsletter.csv");
        org.junit.Assert.assertNull(book14);
    }

    @Test
    public void test2393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2393");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        virtualBook4.ID = 20;
        virtualBook4.ID = (short) 100;
        virtualBook4.edition = 9844035;
        java.util.Calendar calendar11 = virtualBook4.date;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNull(calendar11);
    }

    @Test
    public void test2394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2394");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.Request request1 = new model.Request();
        request1.title = "";
        java.lang.String str4 = requestForum0.makeARequest(request1);
        model.LibraryManagementTeam libraryManagementTeam5 = new model.LibraryManagementTeam();
        int int6 = libraryManagementTeam5.ID;
        model.Magazine magazine8 = new model.Magazine("");
        java.util.Calendar calendar9 = magazine8.date;
        magazine8.author = "model.RegistrationFailedException: ";
        libraryManagementTeam5.disableAnItem((model.Item) magazine8);
        requestForum0.managementTeam = libraryManagementTeam5;
        model.Request request14 = new model.Request();
        request14.title = "src/Client.csv";
        java.lang.String str17 = requestForum0.makeARequest(request14);
        java.lang.String str18 = request14.type;
        request14.title = "model.RentingNotAllowedException: src/Magazine.csv";
        request14.title = "src/Newsletter.csv";
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(calendar9);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test2395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2395");
        model.Database database7 = model.Database.createDatabase("hi!", "model.RegistrationFailedException: src/Magazine.csv", "src/CD.csv", "src/Client.csv", "model.LoginFailedException: hi!", "model.RegistrationFailedException: src/Magazine.csv", "model.LoginFailedException: hi!");
        java.lang.String str8 = database7.getBorrowedItemFilePath();
        model.Register register9 = model.Register.makeRegister(database7);
        model.Database.database = database7;
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/BorrowedItems.csv" + "'", str8, "src/BorrowedItems.csv");
        org.junit.Assert.assertNotNull(register9);
    }

    @Test
    public void test2396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2396");
        model.LibraryManagementTeam libraryManagementTeam0 = model.LibraryManagementTeam.createLibraryManagementTeam();
        java.util.ArrayList<model.Item> itemList1 = libraryManagementTeam0.items;
        model.ItemManagement itemManagement2 = libraryManagementTeam0.itemManagement;
        model.Book book4 = new model.Book("model.RegistrationFailedException: ");
        book4.publisher = "model.RegistrationFailedException: src/Magazine.csv";
        java.lang.String str7 = book4.location;
        libraryManagementTeam0.addAnItem((model.Item) book4);
        libraryManagementTeam0.accessCode = 8213253;
        org.junit.Assert.assertNotNull(libraryManagementTeam0);
        org.junit.Assert.assertNotNull(itemList1);
        org.junit.Assert.assertNull(itemManagement2);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test2397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2397");
        model.BuySpecialItems buySpecialItems0 = new model.BuySpecialItems();
        model.Payment payment1 = buySpecialItems0.paymentAPI;
        model.Payment payment2 = buySpecialItems0.paymentAPI;
        model.Payment payment3 = buySpecialItems0.paymentAPI;
        model.Payment payment4 = buySpecialItems0.paymentAPI;
        model.Student student5 = new model.Student();
        int int6 = student5.ID;
        model.StudentOnlineResources studentOnlineResources7 = new model.StudentOnlineResources((model.Client) student5);
        model.VirtualBook virtualBook9 = studentOnlineResources7.searchAccessibleBook("");
        model.CD cD11 = new model.CD("");
        model.Magazine magazine12 = null;
        model.Book book13 = null;
        model.CD cD14 = null;
        model.Magazine magazine15 = null;
        model.Book[] bookArray16 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList17 = new java.util.ArrayList<model.Book>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList17, bookArray16);
        model.CD[] cDArray19 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList20 = new java.util.ArrayList<model.CD>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList20, cDArray19);
        model.Magazine[] magazineArray22 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList23 = new java.util.ArrayList<model.Magazine>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList23, magazineArray22);
        model.ItemSearchResult itemSearchResult25 = new model.ItemSearchResult(book13, cD14, magazine15, (java.util.Collection<model.Book>) bookList17, (java.util.Collection<model.CD>) cDList20, (java.util.Collection<model.Magazine>) magazineList23);
        model.Book book26 = null;
        model.CD cD27 = null;
        model.Magazine magazine28 = null;
        model.Book[] bookArray29 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList30 = new java.util.ArrayList<model.Book>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList30, bookArray29);
        model.CD[] cDArray32 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList33 = new java.util.ArrayList<model.CD>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList33, cDArray32);
        model.Magazine[] magazineArray35 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList36 = new java.util.ArrayList<model.Magazine>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList36, magazineArray35);
        model.ItemSearchResult itemSearchResult38 = new model.ItemSearchResult(book26, cD27, magazine28, (java.util.Collection<model.Book>) bookList30, (java.util.Collection<model.CD>) cDList33, (java.util.Collection<model.Magazine>) magazineList36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        itemSearchResult38.similarCD = cDList40;
        model.Book book43 = null;
        model.CD cD44 = null;
        model.Magazine magazine45 = null;
        model.Book[] bookArray46 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList47 = new java.util.ArrayList<model.Book>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList47, bookArray46);
        model.CD[] cDArray49 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList50 = new java.util.ArrayList<model.CD>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList50, cDArray49);
        model.Magazine[] magazineArray52 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList53 = new java.util.ArrayList<model.Magazine>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList53, magazineArray52);
        model.ItemSearchResult itemSearchResult55 = new model.ItemSearchResult(book43, cD44, magazine45, (java.util.Collection<model.Book>) bookList47, (java.util.Collection<model.CD>) cDList50, (java.util.Collection<model.Magazine>) magazineList53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult((model.Book) virtualBook9, cD11, magazine12, (java.util.Collection<model.Book>) bookList17, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList53);
        int int57 = virtualBook9.ID;
        int int58 = virtualBook9.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter59 = null;
        model.PaidNewsletter paidNewsletter60 = null;
        model.VirtualItemSearchResult virtualItemSearchResult61 = new model.VirtualItemSearchResult(virtualBook9, uniProvidedNewsletter59, paidNewsletter60);
        model.VirtualBook virtualBook62 = virtualItemSearchResult61.getVirtualBook();
        java.lang.String str63 = virtualBook62.publisher;
        java.lang.String str64 = virtualBook62.title;
        model.VirtualItemContent virtualItemContent65 = virtualBook62.content;
        boolean boolean67 = buySpecialItems0.buyAnItem((model.Item) virtualBook62, (double) (short) -1);
        org.junit.Assert.assertNull(payment1);
        org.junit.Assert.assertNull(payment2);
        org.junit.Assert.assertNull(payment3);
        org.junit.Assert.assertNull(payment4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(virtualBook9);
        org.junit.Assert.assertNotNull(bookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(cDArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(magazineArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(bookArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(cDArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(magazineArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(bookArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(cDArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(magazineArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 20 + "'", int58 == 20);
        org.junit.Assert.assertNotNull(virtualBook62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNull(virtualItemContent65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test2398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2398");
        model.RentingNotAllowedException rentingNotAllowedException1 = new model.RentingNotAllowedException("src/CD.csv");
        java.lang.String str2 = rentingNotAllowedException1.message;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "src/CD.csv" + "'", str2, "src/CD.csv");
    }

    @Test
    public void test2399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2399");
        model.Database database7 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database7;
        model.SearchVirtualItem searchVirtualItem9 = new model.SearchVirtualItem(database7);
        model.Login login10 = new model.Login(database7);
        model.Register register11 = model.Register.makeRegister(database7);
        java.lang.String str12 = database7.getBorrowedItemFilePath();
        boolean boolean14 = database7.addItem("");
        model.Login login15 = new model.Login(database7);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(register11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "src/BorrowedItems.csv" + "'", str12, "src/BorrowedItems.csv");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test2400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2400");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.Database.database = database7;
        java.lang.String str10 = database7.virtualItemFilePath;
        java.lang.String str11 = database7.getBookFilePath();
        database7.itemPath = "src/Magazine.csv";
        model.Login login14 = model.Login.makeLogin(database7);
        boolean boolean16 = database7.addItem("src/Client.csv");
        model.SearchItems searchItems17 = new model.SearchItems(database7);
        model.ItemSearchResult itemSearchResult19 = searchItems17.searchItem("hi!");
        model.Magazine magazine20 = itemSearchResult19.magazine;
        model.Student student21 = new model.Student();
        int int22 = student21.ID;
        model.StudentOnlineResources studentOnlineResources23 = new model.StudentOnlineResources((model.Client) student21);
        model.VirtualBook virtualBook25 = studentOnlineResources23.searchAccessibleBook("");
        model.CD cD27 = new model.CD("");
        model.Magazine magazine28 = null;
        model.Book book29 = null;
        model.CD cD30 = null;
        model.Magazine magazine31 = null;
        model.Book[] bookArray32 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList33 = new java.util.ArrayList<model.Book>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList33, bookArray32);
        model.CD[] cDArray35 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList36 = new java.util.ArrayList<model.CD>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList36, cDArray35);
        model.Magazine[] magazineArray38 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList39 = new java.util.ArrayList<model.Magazine>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList39, magazineArray38);
        model.ItemSearchResult itemSearchResult41 = new model.ItemSearchResult(book29, cD30, magazine31, (java.util.Collection<model.Book>) bookList33, (java.util.Collection<model.CD>) cDList36, (java.util.Collection<model.Magazine>) magazineList39);
        model.Book book42 = null;
        model.CD cD43 = null;
        model.Magazine magazine44 = null;
        model.Book[] bookArray45 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList46 = new java.util.ArrayList<model.Book>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList46, bookArray45);
        model.CD[] cDArray48 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList49 = new java.util.ArrayList<model.CD>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList49, cDArray48);
        model.Magazine[] magazineArray51 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList52 = new java.util.ArrayList<model.Magazine>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList52, magazineArray51);
        model.ItemSearchResult itemSearchResult54 = new model.ItemSearchResult(book42, cD43, magazine44, (java.util.Collection<model.Book>) bookList46, (java.util.Collection<model.CD>) cDList49, (java.util.Collection<model.Magazine>) magazineList52);
        model.CD[] cDArray55 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList56 = new java.util.ArrayList<model.CD>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList56, cDArray55);
        itemSearchResult54.similarCD = cDList56;
        model.Book book59 = null;
        model.CD cD60 = null;
        model.Magazine magazine61 = null;
        model.Book[] bookArray62 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList63 = new java.util.ArrayList<model.Book>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList63, bookArray62);
        model.CD[] cDArray65 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList66 = new java.util.ArrayList<model.CD>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList66, cDArray65);
        model.Magazine[] magazineArray68 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList69 = new java.util.ArrayList<model.Magazine>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList69, magazineArray68);
        model.ItemSearchResult itemSearchResult71 = new model.ItemSearchResult(book59, cD60, magazine61, (java.util.Collection<model.Book>) bookList63, (java.util.Collection<model.CD>) cDList66, (java.util.Collection<model.Magazine>) magazineList69);
        model.ItemSearchResult itemSearchResult72 = new model.ItemSearchResult((model.Book) virtualBook25, cD27, magazine28, (java.util.Collection<model.Book>) bookList33, (java.util.Collection<model.CD>) cDList56, (java.util.Collection<model.Magazine>) magazineList69);
        int int73 = virtualBook25.ID;
        int int74 = virtualBook25.copiesAvailable;
        model.LibraryManagementTeam libraryManagementTeam75 = new model.LibraryManagementTeam();
        libraryManagementTeam75.accessCode = (byte) 10;
        java.util.ArrayList<model.Item> itemList78 = libraryManagementTeam75.items;
        boolean boolean79 = virtualBook25.equals((java.lang.Object) libraryManagementTeam75);
        java.lang.String str80 = virtualBook25.title;
        virtualBook25.edition = (-1);
        itemSearchResult19.book = virtualBook25;
        java.util.Collection<model.Book> bookCollection84 = itemSearchResult19.similarBooks;
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "src/CD.csv" + "'", str10, "src/CD.csv");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "src/Book.csv" + "'", str11, "src/Book.csv");
        org.junit.Assert.assertNotNull(login14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(itemSearchResult19);
        org.junit.Assert.assertNull(magazine20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(virtualBook25);
        org.junit.Assert.assertNotNull(bookArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(cDArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(magazineArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(bookArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(cDArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(magazineArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(cDArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(bookArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(cDArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(magazineArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 20 + "'", int74 == 20);
        org.junit.Assert.assertNotNull(itemList78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertNotNull(bookCollection84);
    }

    @Test
    public void test2401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2401");
        model.Faculty faculty0 = new model.Faculty();
        faculty0.username = "hi!";
        faculty0.faculty = "src/Client.csv";
        java.lang.String str5 = faculty0.faculty;
        model.Faculty faculty6 = new model.Faculty();
        java.lang.String str7 = faculty6.faculty;
        java.lang.String str8 = faculty6.faculty;
        faculty6.viewMyOnlineResource();
        model.Course course10 = new model.Course();
        java.lang.String str11 = course10.subject;
        java.lang.String str12 = course10.subject;
        java.lang.String str13 = course10.code;
        java.lang.String str14 = course10.code;
        course10.subject = "";
        model.Course course17 = new model.Course();
        java.lang.String str18 = course17.code;
        model.Course course19 = new model.Course();
        java.lang.String str20 = course19.subject;
        course19.code = "";
        int int23 = course19.year;
        course19.subject = "src/CD.csv";
        model.Course course26 = new model.Course();
        java.lang.String str27 = course26.subject;
        java.lang.String str28 = course26.subject;
        java.lang.String str29 = course26.code;
        java.lang.String str30 = course26.code;
        model.Course course31 = new model.Course();
        model.Course course32 = new model.Course();
        java.lang.String str33 = course32.subject;
        course32.year = (byte) 10;
        model.Course course36 = new model.Course();
        model.Course course37 = new model.Course();
        java.lang.String str38 = course37.subject;
        java.lang.String str39 = course37.subject;
        java.lang.String str40 = course37.code;
        java.lang.String str41 = course37.code;
        course37.subject = "";
        model.Course course44 = new model.Course();
        java.lang.String str45 = course44.code;
        java.lang.String str46 = course44.subject;
        course44.subject = "model.RegistrationFailedException: ";
        course44.subject = "src/Magazine.csv";
        course44.subject = "model.RegistrationFailedException: ";
        model.Course course53 = new model.Course();
        java.lang.String str54 = course53.subject;
        java.lang.String str55 = course53.subject;
        model.Course course56 = new model.Course();
        java.lang.String str57 = course56.subject;
        course56.code = "";
        course56.subject = "src/Magazine.csv";
        model.Course course62 = new model.Course();
        java.lang.String str63 = course62.code;
        java.lang.String str64 = course62.subject;
        model.Course course65 = new model.Course();
        java.lang.String str66 = course65.subject;
        course65.code = "";
        int int69 = course65.year;
        course65.subject = "src/CD.csv";
        model.Course course72 = new model.Course();
        java.lang.String str73 = course72.subject;
        course72.code = "";
        int int76 = course72.year;
        course72.subject = "src/CD.csv";
        model.Course[] courseArray79 = new model.Course[] { course10, course17, course19, course26, course31, course32, course36, course37, course44, course53, course56, course62, course65, course72 };
        java.util.ArrayList<model.Course> courseList80 = new java.util.ArrayList<model.Course>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<model.Course>) courseList80, courseArray79);
        faculty6.courses = courseList80;
        faculty0.courses = courseList80;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "src/Client.csv" + "'", str5, "src/Client.csv");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(courseArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test2402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2402");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.Database.database = database7;
        java.lang.String str10 = database7.virtualItemFilePath;
        java.lang.String str11 = database7.getBookFilePath();
        database7.itemPath = "src/Magazine.csv";
        model.Login login14 = model.Login.makeLogin(database7);
        boolean boolean16 = database7.addItem("src/Client.csv");
        model.SearchItems searchItems17 = new model.SearchItems(database7);
        model.CD cD19 = searchItems17.getCD("src/Client.csv");
        model.Book book21 = searchItems17.getBook("src/CD.csv");
        model.Magazine magazine23 = searchItems17.getMagazine("src/BorrowedItems.csv");
        model.Book book25 = searchItems17.getBook("model.RentingNotAllowedException: src/Magazine.csv");
        model.ItemSearchResult itemSearchResult27 = searchItems17.searchItem("src/Book.csv");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "src/CD.csv" + "'", str10, "src/CD.csv");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "src/Book.csv" + "'", str11, "src/Book.csv");
        org.junit.Assert.assertNotNull(login14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(cD19);
        org.junit.Assert.assertNull(book21);
        org.junit.Assert.assertNull(magazine23);
        org.junit.Assert.assertNull(book25);
        org.junit.Assert.assertNotNull(itemSearchResult27);
    }

    @Test
    public void test2403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2403");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.Book book1 = null;
        model.CD cD3 = new model.CD("");
        model.Magazine magazine4 = null;
        java.util.Collection<model.Book> bookCollection5 = null;
        model.Book book6 = null;
        model.CD cD7 = null;
        model.Magazine magazine8 = null;
        model.Book[] bookArray9 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList10 = new java.util.ArrayList<model.Book>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList10, bookArray9);
        model.CD[] cDArray12 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList13 = new java.util.ArrayList<model.CD>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList13, cDArray12);
        model.Magazine[] magazineArray15 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList16 = new java.util.ArrayList<model.Magazine>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList16, magazineArray15);
        model.ItemSearchResult itemSearchResult18 = new model.ItemSearchResult(book6, cD7, magazine8, (java.util.Collection<model.Book>) bookList10, (java.util.Collection<model.CD>) cDList13, (java.util.Collection<model.Magazine>) magazineList16);
        model.Book book19 = null;
        model.CD cD20 = null;
        model.Magazine magazine21 = null;
        model.Book[] bookArray22 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList23 = new java.util.ArrayList<model.Book>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList23, bookArray22);
        model.CD[] cDArray25 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList26 = new java.util.ArrayList<model.CD>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList26, cDArray25);
        model.Magazine[] magazineArray28 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList29 = new java.util.ArrayList<model.Magazine>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList29, magazineArray28);
        model.ItemSearchResult itemSearchResult31 = new model.ItemSearchResult(book19, cD20, magazine21, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList29);
        itemSearchResult18.similarCD = cDList26;
        model.Book book33 = null;
        model.CD cD34 = null;
        model.Magazine magazine35 = null;
        model.Book[] bookArray36 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList37 = new java.util.ArrayList<model.Book>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList37, bookArray36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        model.Magazine[] magazineArray42 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList43 = new java.util.ArrayList<model.Magazine>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList43, magazineArray42);
        model.ItemSearchResult itemSearchResult45 = new model.ItemSearchResult(book33, cD34, magazine35, (java.util.Collection<model.Book>) bookList37, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book1, cD3, magazine4, bookCollection5, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList43);
        cD3.ID = (short) 10;
        cD3.canBePurchased = false;
        boolean boolean51 = cD3.canBePurchased;
        model.Faculty faculty52 = new model.Faculty();
        boolean boolean53 = rentAndReturnSystem0.rentAnItem((model.Item) cD3, (model.Client) faculty52);
        java.lang.String str54 = faculty52.faculty;
        model.RentedItem[] rentedItemArray55 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList56 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList56, rentedItemArray55);
        model.BorrowingManager borrowingManager58 = new model.BorrowingManager(rentedItemList56);
        boolean boolean59 = borrowingManager58.canRent();
        model.Client client60 = borrowingManager58.client;
        faculty52.borrowManager = borrowingManager58;
        java.util.Collection<model.Course> courseCollection62 = faculty52.courses;
        model.NewsletterSubscriptionManager newsletterSubscriptionManager63 = faculty52.newsletterManager;
        java.util.Collection<model.Book> bookCollection64 = null;
        faculty52.textbooks = bookCollection64;
        faculty52.ID = 100;
        faculty52.ID = 8273159;
        faculty52.viewMyOnlineResource();
        boolean boolean71 = faculty52.allowedToBorrow();
        org.junit.Assert.assertNotNull(bookArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(cDArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(magazineArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(bookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(magazineArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(bookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(magazineArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(rentedItemArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(client60);
        org.junit.Assert.assertNull(courseCollection62);
        org.junit.Assert.assertNull(newsletterSubscriptionManager63);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test2404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2404");
        model.ItemManagement itemManagement0 = new model.ItemManagement();
        model.Item item2 = itemManagement0.selectAnItemFromDatabase((int) (short) 0);
        model.Database database3 = model.Database.database;
        model.Student student4 = new model.Student();
        int int5 = student4.ID;
        model.StudentOnlineResources studentOnlineResources6 = new model.StudentOnlineResources((model.Client) student4);
        student4.ID = '#';
        database3.addClient((model.Client) student4);
        itemManagement0.database = database3;
        model.Database database11 = itemManagement0.database;
        model.Database database12 = itemManagement0.database;
        java.lang.String str13 = database12.itemPath;
        org.junit.Assert.assertNull(item2);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "src/Magazine.csv" + "'", str13, "src/Magazine.csv");
    }

    @Test
    public void test2405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2405");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        model.LibraryManagementTeam libraryManagementTeam54 = new model.LibraryManagementTeam();
        libraryManagementTeam54.accessCode = (byte) 10;
        java.util.ArrayList<model.Item> itemList57 = libraryManagementTeam54.items;
        boolean boolean58 = virtualBook4.equals((java.lang.Object) libraryManagementTeam54);
        java.lang.String str59 = virtualBook4.title;
        int int60 = virtualBook4.ID;
        virtualBook4.ID = 2689259;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertNotNull(itemList57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
    }

    @Test
    public void test2406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2406");
        model.SearchBorrowedItem searchBorrowedItem0 = model.SearchBorrowedItem.object;
// flaky:         searchBorrowedItem0.removeItem("src/Client.csv", "");
        java.util.ArrayList<model.RentedItem> rentedItemList6 = null; // flaky: searchBorrowedItem0.searchBorrowedItem("hi!", "model.RegistrationFailedException: src/Magazine.csv");
        model.BorrowingManager borrowingManager7 = null; // flaky: new model.BorrowingManager(rentedItemList6);
// flaky:         borrowingManager7.itemsBorrowedCount = (byte) 100;
        boolean boolean10 = false; // flaky: borrowingManager7.canRent();
        float float11 = 0.0f; // flaky: borrowingManager7.amountOwned;
        org.junit.Assert.assertNotNull(searchBorrowedItem0);
// flaky:         org.junit.Assert.assertNotNull(rentedItemList6);
// flaky:         org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + 0.0f + "'", float11 == 0.0f);
    }

    @Test
    public void test2407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2407");
        model.Visitor visitor0 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList1 = visitor0.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) visitor0);
        model.RentedItem[] rentedItemArray3 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList4 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList4, rentedItemArray3);
        model.BorrowingManager borrowingManager6 = new model.BorrowingManager(rentedItemList4);
        model.Visitor visitor7 = new model.Visitor();
        visitor7.email = "hi!";
        borrowingManager6.client = visitor7;
        studentOnlineResources2.client = visitor7;
        model.NonFaculty nonFaculty12 = new model.NonFaculty();
        model.Visitor visitor13 = new model.Visitor();
        model.VirtualBook[] virtualBookArray14 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList15 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList15, virtualBookArray14);
        visitor13.virtualBooksAvailable = virtualBookList15;
        visitor13.username = "";
        model.Visitor visitor20 = new model.Visitor();
        model.VirtualBook[] virtualBookArray21 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList22 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList22, virtualBookArray21);
        visitor20.virtualBooksAvailable = virtualBookList22;
        visitor13.virtualBooksAvailable = virtualBookList22;
        nonFaculty12.virtualBooksAvailable = virtualBookList22;
        visitor7.virtualBooksAvailable = virtualBookList22;
        visitor7.email = "src/VirtualBook.csv";
        model.BorrowingManager borrowingManager30 = visitor7.borrowManager;
        model.Newsletter[] newsletterArray31 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList32 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList32, newsletterArray31);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager34 = new model.NewsletterSubscriptionManager(newsletterList32);
        model.Client client35 = newsletterSubscriptionManager34.client;
        model.Student student36 = new model.Student();
        int int37 = student36.ID;
        model.StudentOnlineResources studentOnlineResources38 = new model.StudentOnlineResources((model.Client) student36);
        student36.ID = '#';
        java.lang.String str41 = student36.email;
        newsletterSubscriptionManager34.client = student36;
        model.Newsletter[] newsletterArray43 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList44 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList44, newsletterArray43);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager46 = new model.NewsletterSubscriptionManager(newsletterList44);
        newsletterSubscriptionManager34.newsletterSubscribed = newsletterList44;
        java.util.ArrayList<model.Newsletter> newsletterList48 = newsletterSubscriptionManager34.newsletterSubscribed;
        model.Newsletter[] newsletterArray49 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList50 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList50, newsletterArray49);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager52 = new model.NewsletterSubscriptionManager(newsletterList50);
        model.Client client53 = newsletterSubscriptionManager52.client;
        model.Student student54 = new model.Student();
        int int55 = student54.ID;
        model.StudentOnlineResources studentOnlineResources56 = new model.StudentOnlineResources((model.Client) student54);
        student54.ID = '#';
        java.lang.String str59 = student54.email;
        newsletterSubscriptionManager52.client = student54;
        model.Newsletter[] newsletterArray61 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList62 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList62, newsletterArray61);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager64 = new model.NewsletterSubscriptionManager(newsletterList62);
        newsletterSubscriptionManager52.newsletterSubscribed = newsletterList62;
        newsletterSubscriptionManager34.newsletterSubscribed = newsletterList62;
        java.util.ArrayList<model.Newsletter> newsletterList67 = newsletterSubscriptionManager34.newsletterSubscribed;
        model.UniProvidedNewsletter uniProvidedNewsletter68 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter68.title = "";
// flaky:         newsletterSubscriptionManager34.cancelSubscription((model.Newsletter) uniProvidedNewsletter68);
        visitor7.newsletterManager = newsletterSubscriptionManager34;
        java.util.ArrayList<model.VirtualBook> virtualBookList73 = visitor7.virtualBooksAvailable;
        org.junit.Assert.assertNull(virtualBookList1);
        org.junit.Assert.assertNotNull(rentedItemArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(virtualBookArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(virtualBookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(borrowingManager30);
        org.junit.Assert.assertNotNull(newsletterArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(client35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(newsletterArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(newsletterList48);
        org.junit.Assert.assertNotNull(newsletterArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(client53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(newsletterArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(newsletterList67);
        org.junit.Assert.assertNotNull(virtualBookList73);
    }

    @Test
    public void test2408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2408");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.VirtualItemContent virtualItemContent5 = virtualBook4.content;
        model.Student student6 = new model.Student();
        int int7 = student6.ID;
        model.StudentOnlineResources studentOnlineResources8 = new model.StudentOnlineResources((model.Client) student6);
        model.VirtualBook virtualBook10 = studentOnlineResources8.searchAccessibleBook("");
        model.CD cD12 = new model.CD("");
        model.Magazine magazine13 = null;
        model.Book book14 = null;
        model.CD cD15 = null;
        model.Magazine magazine16 = null;
        model.Book[] bookArray17 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList18 = new java.util.ArrayList<model.Book>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList18, bookArray17);
        model.CD[] cDArray20 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList21 = new java.util.ArrayList<model.CD>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList21, cDArray20);
        model.Magazine[] magazineArray23 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList24 = new java.util.ArrayList<model.Magazine>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList24, magazineArray23);
        model.ItemSearchResult itemSearchResult26 = new model.ItemSearchResult(book14, cD15, magazine16, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList21, (java.util.Collection<model.Magazine>) magazineList24);
        model.Book book27 = null;
        model.CD cD28 = null;
        model.Magazine magazine29 = null;
        model.Book[] bookArray30 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList31 = new java.util.ArrayList<model.Book>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList31, bookArray30);
        model.CD[] cDArray33 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList34 = new java.util.ArrayList<model.CD>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList34, cDArray33);
        model.Magazine[] magazineArray36 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList37 = new java.util.ArrayList<model.Magazine>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList37, magazineArray36);
        model.ItemSearchResult itemSearchResult39 = new model.ItemSearchResult(book27, cD28, magazine29, (java.util.Collection<model.Book>) bookList31, (java.util.Collection<model.CD>) cDList34, (java.util.Collection<model.Magazine>) magazineList37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        itemSearchResult39.similarCD = cDList41;
        model.Book book44 = null;
        model.CD cD45 = null;
        model.Magazine magazine46 = null;
        model.Book[] bookArray47 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList48 = new java.util.ArrayList<model.Book>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList48, bookArray47);
        model.CD[] cDArray50 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList51 = new java.util.ArrayList<model.CD>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList51, cDArray50);
        model.Magazine[] magazineArray53 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList54 = new java.util.ArrayList<model.Magazine>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList54, magazineArray53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult(book44, cD45, magazine46, (java.util.Collection<model.Book>) bookList48, (java.util.Collection<model.CD>) cDList51, (java.util.Collection<model.Magazine>) magazineList54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult((model.Book) virtualBook10, cD12, magazine13, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList54);
        int int58 = virtualBook10.ID;
        int int59 = virtualBook10.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter60 = null;
        model.PaidNewsletter paidNewsletter61 = null;
        model.VirtualItemSearchResult virtualItemSearchResult62 = new model.VirtualItemSearchResult(virtualBook10, uniProvidedNewsletter60, paidNewsletter61);
        model.PaidNewsletter paidNewsletter63 = virtualItemSearchResult62.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter64 = new model.UniProvidedNewsletter();
        virtualItemSearchResult62.setUniNewsletter(uniProvidedNewsletter64);
        java.lang.String str66 = uniProvidedNewsletter64.title;
        model.PaidNewsletter paidNewsletter67 = null;
        model.VirtualItemSearchResult virtualItemSearchResult68 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter64, paidNewsletter67);
        model.VirtualBook virtualBook69 = virtualItemSearchResult68.virtualBook;
        model.PaidNewsletter paidNewsletter70 = new model.PaidNewsletter();
        virtualItemSearchResult68.setPaidNewsletter(paidNewsletter70);
        paidNewsletter70.subscriptionPrice = 'a';
        paidNewsletter70.subscriptionPrice = 0.0d;
        float float76 = paidNewsletter70.cost;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNull(virtualItemContent5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(virtualBook10);
        org.junit.Assert.assertNotNull(bookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(cDArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(magazineArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(bookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(magazineArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(bookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(cDArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(magazineArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 20 + "'", int59 == 20);
        org.junit.Assert.assertNull(paidNewsletter63);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(virtualBook69);
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + 0.0f + "'", float76 == 0.0f);
    }

    @Test
    public void test2409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2409");
        model.Database database7 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database7;
        model.SearchVirtualItem searchVirtualItem9 = new model.SearchVirtualItem(database7);
        model.Login login10 = new model.Login(database7);
        model.Login login11 = model.Login.makeLogin(database7);
        model.Database database12 = login11.db;
        java.lang.String str13 = database12.getMagazineFilePath();
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(login11);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "src/Magazine.csv" + "'", str13, "src/Magazine.csv");
    }

    @Test
    public void test2410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2410");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.Request request1 = new model.Request();
        java.lang.String str2 = request1.type;
        request1.title = "model.RegistrationFailedException: src/Magazine.csv";
        request1.type = "model.RegistrationFailedException: src/Book.csv";
        java.lang.String str7 = request1.type;
        int int8 = requestForum0.assessBooksPriority(request1);
        java.lang.String str9 = request1.title;
        model.Client client10 = request1.requestee;
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "model.RegistrationFailedException: src/Book.csv" + "'", str7, "model.RegistrationFailedException: src/Book.csv");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "model.RegistrationFailedException: src/Magazine.csv" + "'", str9, "model.RegistrationFailedException: src/Magazine.csv");
        org.junit.Assert.assertNull(client10);
    }

    @Test
    public void test2411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2411");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "", "src/CD.csv", "model.RegistrationFailedException: src/Magazine.csv", "model.RegistrationFailedException: src/Book.csv", "model.RegistrationFailedException: ", "model.RegistrationFailedException: src/Book.csv");
        java.lang.String str8 = database7.getNewspaperFilePath();
        model.Login login9 = model.Login.makeLogin(database7);
        model.SearchItems searchItems10 = new model.SearchItems(database7);
        model.CD cD12 = searchItems10.getCD("model.RegistrationFailedException: ");
        model.Magazine magazine14 = searchItems10.getMagazine("");
        model.CD cD16 = searchItems10.getCD("model.RegistrationFailedException: model.RentingNotAllowedException: hi!");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/Newsletter.csv" + "'", str8, "src/Newsletter.csv");
        org.junit.Assert.assertNotNull(login9);
        org.junit.Assert.assertNull(cD12);
        org.junit.Assert.assertNull(magazine14);
        org.junit.Assert.assertNull(cD16);
    }

    @Test
    public void test2412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2412");
        model.LoginFailedException loginFailedException1 = new model.LoginFailedException("hi!");
        model.LoginFailedException loginFailedException3 = new model.LoginFailedException("hi!");
        model.LoginFailedException loginFailedException5 = new model.LoginFailedException("hi!");
        loginFailedException3.addSuppressed((java.lang.Throwable) loginFailedException5);
        model.RegistrationFailedException registrationFailedException8 = new model.RegistrationFailedException("src/Book.csv");
        loginFailedException5.addSuppressed((java.lang.Throwable) registrationFailedException8);
        loginFailedException1.addSuppressed((java.lang.Throwable) registrationFailedException8);
        java.lang.Throwable[] throwableArray11 = loginFailedException1.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray11);
    }

    @Test
    public void test2413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2413");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.LibraryManagementTeam libraryManagementTeam1 = requestForum0.managementTeam;
        model.LibraryManagementTeam libraryManagementTeam2 = new model.LibraryManagementTeam();
        int int3 = libraryManagementTeam2.ID;
        int int4 = libraryManagementTeam2.accessCode;
        requestForum0.managementTeam = libraryManagementTeam2;
        libraryManagementTeam2.ID = 8273159;
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertNotNull(libraryManagementTeam1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test2414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2414");
        model.Book book0 = null;
        model.CD cD1 = null;
        model.Magazine magazine2 = null;
        model.Book[] bookArray3 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList4 = new java.util.ArrayList<model.Book>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList4, bookArray3);
        model.CD[] cDArray6 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList7 = new java.util.ArrayList<model.CD>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList7, cDArray6);
        model.Magazine[] magazineArray9 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList10 = new java.util.ArrayList<model.Magazine>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList10, magazineArray9);
        model.ItemSearchResult itemSearchResult12 = new model.ItemSearchResult(book0, cD1, magazine2, (java.util.Collection<model.Book>) bookList4, (java.util.Collection<model.CD>) cDList7, (java.util.Collection<model.Magazine>) magazineList10);
        model.Book book13 = null;
        model.CD cD14 = null;
        model.Magazine magazine15 = null;
        model.Book[] bookArray16 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList17 = new java.util.ArrayList<model.Book>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList17, bookArray16);
        model.CD[] cDArray19 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList20 = new java.util.ArrayList<model.CD>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList20, cDArray19);
        model.Magazine[] magazineArray22 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList23 = new java.util.ArrayList<model.Magazine>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList23, magazineArray22);
        model.ItemSearchResult itemSearchResult25 = new model.ItemSearchResult(book13, cD14, magazine15, (java.util.Collection<model.Book>) bookList17, (java.util.Collection<model.CD>) cDList20, (java.util.Collection<model.Magazine>) magazineList23);
        itemSearchResult12.similarCD = cDList20;
        model.Magazine magazine27 = itemSearchResult12.magazine;
        model.CD cD28 = itemSearchResult12.cd;
        model.Book book29 = null;
        model.CD cD31 = new model.CD("");
        model.Magazine magazine32 = null;
        java.util.Collection<model.Book> bookCollection33 = null;
        model.Book book34 = null;
        model.CD cD35 = null;
        model.Magazine magazine36 = null;
        model.Book[] bookArray37 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList38 = new java.util.ArrayList<model.Book>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList38, bookArray37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        model.Magazine[] magazineArray43 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList44 = new java.util.ArrayList<model.Magazine>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList44, magazineArray43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book34, cD35, magazine36, (java.util.Collection<model.Book>) bookList38, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList44);
        model.Book book47 = null;
        model.CD cD48 = null;
        model.Magazine magazine49 = null;
        model.Book[] bookArray50 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList51 = new java.util.ArrayList<model.Book>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList51, bookArray50);
        model.CD[] cDArray53 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList54 = new java.util.ArrayList<model.CD>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList54, cDArray53);
        model.Magazine[] magazineArray56 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList57 = new java.util.ArrayList<model.Magazine>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList57, magazineArray56);
        model.ItemSearchResult itemSearchResult59 = new model.ItemSearchResult(book47, cD48, magazine49, (java.util.Collection<model.Book>) bookList51, (java.util.Collection<model.CD>) cDList54, (java.util.Collection<model.Magazine>) magazineList57);
        itemSearchResult46.similarCD = cDList54;
        model.Book book61 = null;
        model.CD cD62 = null;
        model.Magazine magazine63 = null;
        model.Book[] bookArray64 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList65 = new java.util.ArrayList<model.Book>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList65, bookArray64);
        model.CD[] cDArray67 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList68 = new java.util.ArrayList<model.CD>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList68, cDArray67);
        model.Magazine[] magazineArray70 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList71 = new java.util.ArrayList<model.Magazine>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList71, magazineArray70);
        model.ItemSearchResult itemSearchResult73 = new model.ItemSearchResult(book61, cD62, magazine63, (java.util.Collection<model.Book>) bookList65, (java.util.Collection<model.CD>) cDList68, (java.util.Collection<model.Magazine>) magazineList71);
        model.ItemSearchResult itemSearchResult74 = new model.ItemSearchResult(book29, cD31, magazine32, bookCollection33, (java.util.Collection<model.CD>) cDList54, (java.util.Collection<model.Magazine>) magazineList71);
        model.Book book75 = null;
        itemSearchResult74.book = book75;
        java.util.Collection<model.Book> bookCollection77 = itemSearchResult74.similarBooks;
        model.Magazine magazine79 = new model.Magazine("");
        itemSearchResult74.magazine = magazine79;
        itemSearchResult12.magazine = magazine79;
        model.CD cD83 = new model.CD("");
        int int84 = cD83.ID;
        boolean boolean85 = cD83.canBePurchased;
        itemSearchResult12.cd = cD83;
        java.util.Collection<model.Book> bookCollection87 = itemSearchResult12.similarBooks;
        model.Magazine magazine88 = itemSearchResult12.magazine;
        model.Book book89 = itemSearchResult12.book;
        org.junit.Assert.assertNotNull(bookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(cDArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(magazineArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(bookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(cDArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(magazineArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(magazine27);
        org.junit.Assert.assertNull(cD28);
        org.junit.Assert.assertNotNull(bookArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(magazineArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(bookArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(cDArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(magazineArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(bookArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(cDArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(magazineArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(bookCollection77);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(bookCollection87);
        org.junit.Assert.assertNotNull(magazine88);
        org.junit.Assert.assertNull(book89);
    }

    @Test
    public void test2415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2415");
        model.PaidNewsletter paidNewsletter0 = new model.PaidNewsletter();
        model.Student student1 = new model.Student();
        int int2 = student1.ID;
        model.StudentOnlineResources studentOnlineResources3 = new model.StudentOnlineResources((model.Client) student1);
        model.VirtualBook virtualBook5 = studentOnlineResources3.searchAccessibleBook("");
        model.CD cD7 = new model.CD("");
        model.Magazine magazine8 = null;
        model.Book book9 = null;
        model.CD cD10 = null;
        model.Magazine magazine11 = null;
        model.Book[] bookArray12 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList13 = new java.util.ArrayList<model.Book>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList13, bookArray12);
        model.CD[] cDArray15 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList16 = new java.util.ArrayList<model.CD>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList16, cDArray15);
        model.Magazine[] magazineArray18 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList19 = new java.util.ArrayList<model.Magazine>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList19, magazineArray18);
        model.ItemSearchResult itemSearchResult21 = new model.ItemSearchResult(book9, cD10, magazine11, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList16, (java.util.Collection<model.Magazine>) magazineList19);
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        model.CD[] cDArray35 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList36 = new java.util.ArrayList<model.CD>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList36, cDArray35);
        itemSearchResult34.similarCD = cDList36;
        model.Book book39 = null;
        model.CD cD40 = null;
        model.Magazine magazine41 = null;
        model.Book[] bookArray42 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList43 = new java.util.ArrayList<model.Book>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList43, bookArray42);
        model.CD[] cDArray45 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList46 = new java.util.ArrayList<model.CD>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList46, cDArray45);
        model.Magazine[] magazineArray48 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList49 = new java.util.ArrayList<model.Magazine>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList49, magazineArray48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult(book39, cD40, magazine41, (java.util.Collection<model.Book>) bookList43, (java.util.Collection<model.CD>) cDList46, (java.util.Collection<model.Magazine>) magazineList49);
        model.ItemSearchResult itemSearchResult52 = new model.ItemSearchResult((model.Book) virtualBook5, cD7, magazine8, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList36, (java.util.Collection<model.Magazine>) magazineList49);
        int int53 = virtualBook5.ID;
        int int54 = virtualBook5.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter55 = null;
        model.PaidNewsletter paidNewsletter56 = null;
        model.VirtualItemSearchResult virtualItemSearchResult57 = new model.VirtualItemSearchResult(virtualBook5, uniProvidedNewsletter55, paidNewsletter56);
        virtualBook5.author = "hi!";
        virtualBook5.showContent();
        boolean boolean61 = paidNewsletter0.equals((java.lang.Object) virtualBook5);
        paidNewsletter0.subscriptionPrice = 0.0d;
        paidNewsletter0.subscriptionPrice = 9581700;
        int int66 = paidNewsletter0.ID;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(virtualBook5);
        org.junit.Assert.assertNotNull(bookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cDArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(magazineArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(cDArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(bookArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(cDArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(magazineArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 20 + "'", int54 == 20);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
    }

    @Test
    public void test2416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2416");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.Book book1 = null;
        model.CD cD3 = new model.CD("");
        model.Magazine magazine4 = null;
        java.util.Collection<model.Book> bookCollection5 = null;
        model.Book book6 = null;
        model.CD cD7 = null;
        model.Magazine magazine8 = null;
        model.Book[] bookArray9 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList10 = new java.util.ArrayList<model.Book>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList10, bookArray9);
        model.CD[] cDArray12 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList13 = new java.util.ArrayList<model.CD>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList13, cDArray12);
        model.Magazine[] magazineArray15 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList16 = new java.util.ArrayList<model.Magazine>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList16, magazineArray15);
        model.ItemSearchResult itemSearchResult18 = new model.ItemSearchResult(book6, cD7, magazine8, (java.util.Collection<model.Book>) bookList10, (java.util.Collection<model.CD>) cDList13, (java.util.Collection<model.Magazine>) magazineList16);
        model.Book book19 = null;
        model.CD cD20 = null;
        model.Magazine magazine21 = null;
        model.Book[] bookArray22 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList23 = new java.util.ArrayList<model.Book>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList23, bookArray22);
        model.CD[] cDArray25 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList26 = new java.util.ArrayList<model.CD>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList26, cDArray25);
        model.Magazine[] magazineArray28 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList29 = new java.util.ArrayList<model.Magazine>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList29, magazineArray28);
        model.ItemSearchResult itemSearchResult31 = new model.ItemSearchResult(book19, cD20, magazine21, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList29);
        itemSearchResult18.similarCD = cDList26;
        model.Book book33 = null;
        model.CD cD34 = null;
        model.Magazine magazine35 = null;
        model.Book[] bookArray36 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList37 = new java.util.ArrayList<model.Book>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList37, bookArray36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        model.Magazine[] magazineArray42 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList43 = new java.util.ArrayList<model.Magazine>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList43, magazineArray42);
        model.ItemSearchResult itemSearchResult45 = new model.ItemSearchResult(book33, cD34, magazine35, (java.util.Collection<model.Book>) bookList37, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book1, cD3, magazine4, bookCollection5, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList43);
        cD3.ID = (short) 10;
        cD3.canBePurchased = false;
        boolean boolean51 = cD3.canBePurchased;
        model.Faculty faculty52 = new model.Faculty();
        boolean boolean53 = rentAndReturnSystem0.rentAnItem((model.Item) cD3, (model.Client) faculty52);
        java.lang.String str54 = faculty52.faculty;
        model.RentedItem[] rentedItemArray55 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList56 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList56, rentedItemArray55);
        model.BorrowingManager borrowingManager58 = new model.BorrowingManager(rentedItemList56);
        boolean boolean59 = borrowingManager58.canRent();
        model.Client client60 = borrowingManager58.client;
        faculty52.borrowManager = borrowingManager58;
        model.StudentOnlineResources studentOnlineResources62 = new model.StudentOnlineResources((model.Client) faculty52);
        java.util.Iterator<model.VirtualItem> virtualItemItor63 = studentOnlineResources62.iterator();
        model.VirtualBook virtualBook65 = studentOnlineResources62.searchAccessibleBook("model.RegistrationFailedException: src/Magazine.csv");
        virtualBook65.author = "model.RentingNotAllowedException: src/Magazine.csv";
        org.junit.Assert.assertNotNull(bookArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(cDArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(magazineArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(bookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(magazineArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(bookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(magazineArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(rentedItemArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(client60);
        org.junit.Assert.assertNull(virtualItemItor63);
        org.junit.Assert.assertNotNull(virtualBook65);
    }

    @Test
    public void test2417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2417");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.Request request1 = new model.Request();
        java.lang.String str2 = request1.type;
        request1.title = "model.RegistrationFailedException: src/Magazine.csv";
        request1.type = "model.RegistrationFailedException: src/Book.csv";
        java.lang.String str7 = request1.type;
        int int8 = requestForum0.assessBooksPriority(request1);
        model.RequestForum requestForum9 = model.RequestForum.createRequestForum();
        model.RequestForum requestForum10 = model.RequestForum.createRequestForum();
        model.Request request11 = new model.Request();
        request11.title = "";
        java.lang.String str14 = requestForum10.makeARequest(request11);
        int int15 = requestForum9.assessBooksPriority(request11);
        java.lang.String str16 = request11.type;
        java.lang.String str17 = request11.type;
        java.lang.String str18 = request11.type;
        model.Client client19 = request11.requestee;
        int int20 = requestForum0.assessBooksPriority(request11);
        model.Client client21 = request11.requestee;
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "model.RegistrationFailedException: src/Book.csv" + "'", str7, "model.RegistrationFailedException: src/Book.csv");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(requestForum9);
        org.junit.Assert.assertNotNull(requestForum10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(client19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(client21);
    }

    @Test
    public void test2418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2418");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.Request request1 = new model.Request();
        request1.title = "";
        java.lang.String str4 = requestForum0.makeARequest(request1);
        model.RequestForum requestForum5 = model.RequestForum.createRequestForum();
        model.RequestForum requestForum6 = model.RequestForum.createRequestForum();
        model.Request request7 = new model.Request();
        request7.title = "";
        java.lang.String str10 = requestForum6.makeARequest(request7);
        int int11 = requestForum5.assessBooksPriority(request7);
        java.lang.String str12 = request7.type;
        java.lang.String str13 = request7.type;
        java.lang.String str14 = requestForum0.makeARequest(request7);
        model.RentedItem[] rentedItemArray15 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList16 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList16, rentedItemArray15);
        model.BorrowingManager borrowingManager18 = new model.BorrowingManager(rentedItemList16);
        model.Book book19 = null;
        model.CD cD21 = new model.CD("");
        model.Magazine magazine22 = null;
        java.util.Collection<model.Book> bookCollection23 = null;
        model.Book book24 = null;
        model.CD cD25 = null;
        model.Magazine magazine26 = null;
        model.Book[] bookArray27 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList28 = new java.util.ArrayList<model.Book>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList28, bookArray27);
        model.CD[] cDArray30 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList31 = new java.util.ArrayList<model.CD>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList31, cDArray30);
        model.Magazine[] magazineArray33 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList34 = new java.util.ArrayList<model.Magazine>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList34, magazineArray33);
        model.ItemSearchResult itemSearchResult36 = new model.ItemSearchResult(book24, cD25, magazine26, (java.util.Collection<model.Book>) bookList28, (java.util.Collection<model.CD>) cDList31, (java.util.Collection<model.Magazine>) magazineList34);
        model.Book book37 = null;
        model.CD cD38 = null;
        model.Magazine magazine39 = null;
        model.Book[] bookArray40 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList41 = new java.util.ArrayList<model.Book>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList41, bookArray40);
        model.CD[] cDArray43 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList44 = new java.util.ArrayList<model.CD>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList44, cDArray43);
        model.Magazine[] magazineArray46 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList47 = new java.util.ArrayList<model.Magazine>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList47, magazineArray46);
        model.ItemSearchResult itemSearchResult49 = new model.ItemSearchResult(book37, cD38, magazine39, (java.util.Collection<model.Book>) bookList41, (java.util.Collection<model.CD>) cDList44, (java.util.Collection<model.Magazine>) magazineList47);
        itemSearchResult36.similarCD = cDList44;
        model.Book book51 = null;
        model.CD cD52 = null;
        model.Magazine magazine53 = null;
        model.Book[] bookArray54 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList55 = new java.util.ArrayList<model.Book>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList55, bookArray54);
        model.CD[] cDArray57 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList58 = new java.util.ArrayList<model.CD>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList58, cDArray57);
        model.Magazine[] magazineArray60 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList61 = new java.util.ArrayList<model.Magazine>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList61, magazineArray60);
        model.ItemSearchResult itemSearchResult63 = new model.ItemSearchResult(book51, cD52, magazine53, (java.util.Collection<model.Book>) bookList55, (java.util.Collection<model.CD>) cDList58, (java.util.Collection<model.Magazine>) magazineList61);
        model.ItemSearchResult itemSearchResult64 = new model.ItemSearchResult(book19, cD21, magazine22, bookCollection23, (java.util.Collection<model.CD>) cDList44, (java.util.Collection<model.Magazine>) magazineList61);
        cD21.ID = (short) 10;
        borrowingManager18.removeRentedItem((model.Item) cD21);
        float float68 = borrowingManager18.amountOwned;
        model.Database database69 = null;
        model.Register register70 = model.Register.makeRegister(database69);
        model.Faculty faculty71 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection72 = faculty71.courses;
        boolean boolean75 = register70.registerAsStaff((model.Staff) faculty71, "src/Book.csv", "src/Book.csv");
        faculty71.faculty = "src/Magazine.csv";
        borrowingManager18.client = faculty71;
        request7.requestee = faculty71;
        request7.type = "model.RentingNotAllowedException: hi!";
        java.lang.String str82 = request7.type;
        java.lang.String str83 = request7.type;
        model.Client client84 = request7.requestee;
        java.lang.String str85 = request7.title;
        request7.title = "src/Newsletter.csv";
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(requestForum5);
        org.junit.Assert.assertNotNull(requestForum6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(rentedItemArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(bookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(cDArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(magazineArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(bookArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(cDArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(magazineArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(bookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(cDArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(magazineArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + float68 + "' != '" + 0.0f + "'", float68 == 0.0f);
        org.junit.Assert.assertNotNull(register70);
        org.junit.Assert.assertNull(courseCollection72);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "model.RentingNotAllowedException: hi!" + "'", str82, "model.RentingNotAllowedException: hi!");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "model.RentingNotAllowedException: hi!" + "'", str83, "model.RentingNotAllowedException: hi!");
        org.junit.Assert.assertNotNull(client84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
    }

    @Test
    public void test2419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2419");
        model.LibraryManagementTeam libraryManagementTeam0 = new model.LibraryManagementTeam();
        int int1 = libraryManagementTeam0.ID;
        model.Student student2 = new model.Student();
        int int3 = student2.ID;
        model.StudentOnlineResources studentOnlineResources4 = new model.StudentOnlineResources((model.Client) student2);
        model.VirtualBook virtualBook6 = studentOnlineResources4.searchAccessibleBook("");
        model.VirtualItemContent virtualItemContent7 = virtualBook6.content;
        libraryManagementTeam0.enableAnItem((model.Item) virtualBook6);
        java.util.ArrayList<model.Item> itemList9 = libraryManagementTeam0.items;
        model.Student student10 = new model.Student();
        int int11 = student10.ID;
        model.StudentOnlineResources studentOnlineResources12 = new model.StudentOnlineResources((model.Client) student10);
        model.StudentOnlineResources studentOnlineResources13 = new model.StudentOnlineResources((model.Client) student10);
        model.RentedItem[] rentedItemArray14 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList15 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList15, rentedItemArray14);
        model.BorrowingManager borrowingManager17 = new model.BorrowingManager(rentedItemList15);
        model.Visitor visitor18 = new model.Visitor();
        visitor18.email = "hi!";
        borrowingManager17.client = visitor18;
        studentOnlineResources13.client = visitor18;
        model.Student student23 = new model.Student();
        int int24 = student23.ID;
        model.StudentOnlineResources studentOnlineResources25 = new model.StudentOnlineResources((model.Client) student23);
        model.VirtualBook virtualBook27 = studentOnlineResources25.searchAccessibleBook("");
        java.lang.String str28 = virtualBook27.location;
        model.VirtualItemContent virtualItemContent29 = virtualBook27.content;
        java.lang.String str30 = studentOnlineResources13.readVirtualItem((model.VirtualItem) virtualBook27);
        virtualBook27.canBePurchased = false;
        virtualBook27.copiesAvailable = (byte) 0;
        libraryManagementTeam0.addAnItem((model.Item) virtualBook27);
        model.Magazine magazine37 = new model.Magazine("model.RegistrationFailedException: ");
        libraryManagementTeam0.disableAnItem((model.Item) magazine37);
        magazine37.location = "src/Magazine.csv";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(virtualBook6);
        org.junit.Assert.assertNull(virtualItemContent7);
        org.junit.Assert.assertNotNull(itemList9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(rentedItemArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(virtualBook27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(virtualItemContent29);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test2420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2420");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.Database.database = database7;
        java.lang.String str10 = database7.getCDFilePath();
        java.lang.String str11 = database7.itemPath;
        database7.virtualItemFilePath = "model.RegistrationFailedException: ";
        model.Faculty faculty14 = new model.Faculty();
        java.lang.String str15 = faculty14.email;
        model.Faculty faculty16 = new model.Faculty();
        faculty16.username = "hi!";
        java.lang.String str19 = faculty16.username;
        model.Course course20 = new model.Course();
        java.lang.String str21 = course20.subject;
        course20.code = "";
        course20.subject = "src/Magazine.csv";
        model.Course course26 = new model.Course();
        java.lang.String str27 = course26.code;
        model.Course course28 = new model.Course();
        java.lang.String str29 = course28.subject;
        java.lang.String str30 = course28.subject;
        java.lang.String str31 = course28.code;
        java.lang.String str32 = course28.code;
        model.Course course33 = new model.Course();
        java.lang.String str34 = course33.code;
        model.Course course35 = new model.Course();
        java.lang.String str36 = course35.subject;
        java.lang.String str37 = course35.subject;
        java.lang.String str38 = course35.code;
        course35.code = "src/VirtualBook.csv";
        model.Course course41 = new model.Course();
        model.Course course42 = new model.Course();
        java.lang.String str43 = course42.subject;
        course42.code = "";
        course42.subject = "src/Magazine.csv";
        int int48 = course42.year;
        model.Course course49 = new model.Course();
        java.lang.String str50 = course49.code;
        java.lang.String str51 = course49.subject;
        course49.subject = "model.RegistrationFailedException: ";
        course49.subject = "src/Magazine.csv";
        model.Course[] courseArray56 = new model.Course[] { course20, course26, course28, course33, course35, course41, course42, course49 };
        java.util.ArrayList<model.Course> courseList57 = new java.util.ArrayList<model.Course>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<model.Course>) courseList57, courseArray56);
        faculty16.courses = courseList57;
        java.util.Collection<model.Course> courseCollection60 = faculty16.courses;
        java.util.Collection<model.Course> courseCollection61 = faculty16.courses;
        faculty14.courses = courseCollection61;
        model.StudentOnlineResources studentOnlineResources63 = new model.StudentOnlineResources((model.Client) faculty14);
        database7.addClient((model.Client) faculty14);
        java.lang.String str65 = database7.virtualItemFilePath;
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "src/CD.csv" + "'", str10, "src/CD.csv");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "src/Magazine.csv" + "'", str11, "src/Magazine.csv");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(courseArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(courseCollection60);
        org.junit.Assert.assertNotNull(courseCollection61);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "model.RegistrationFailedException: " + "'", str65, "model.RegistrationFailedException: ");
    }

    @Test
    public void test2421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2421");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.Payment payment1 = rentAndReturnSystem0.paymentAPI;
        model.PayMobileWallet payMobileWallet2 = new model.PayMobileWallet();
        payMobileWallet2.amountPay = 100.0f;
        payMobileWallet2.pay((double) 100L);
        rentAndReturnSystem0.paymentAPI = payMobileWallet2;
        model.Magazine magazine9 = new model.Magazine("");
        java.util.Calendar calendar10 = magazine9.date;
        model.Database database11 = null;
        model.Register register12 = model.Register.makeRegister(database11);
        model.Faculty faculty13 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection14 = faculty13.courses;
        boolean boolean17 = register12.registerAsStaff((model.Staff) faculty13, "src/Book.csv", "src/Book.csv");
        model.Faculty faculty18 = new model.Faculty();
        faculty18.username = "hi!";
        java.lang.String str21 = faculty18.username;
        boolean boolean24 = register12.registerAsStaff((model.Staff) faculty18, "src/CD.csv", "hi!");
        boolean boolean25 = rentAndReturnSystem0.returnAnItem((model.Item) magazine9, (model.Client) faculty18);
        java.lang.String str26 = faculty18.username;
        faculty18.faculty = "src/Client.csv";
        org.junit.Assert.assertNull(payment1);
        org.junit.Assert.assertNull(calendar10);
        org.junit.Assert.assertNotNull(register12);
        org.junit.Assert.assertNull(courseCollection14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
    }

    @Test
    public void test2422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2422");
        model.Database database7 = model.Database.createDatabase("src/BorrowedItems.csv", "src/Magazine.csv", "src/Magazine.csv", "model.RegistrationFailedException: src/Book.csv", "src/Client.csv", "model.RegistrationFailedException: src/Magazine.csv", "model.RegistrationFailedException: ");
        java.util.ArrayList<java.lang.String> strList8 = database7.getAllItems();
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(strList8);
    }

    @Test
    public void test2423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2423");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.Database.database = database7;
        database7.itemPath = "";
        model.SearchClient searchClient12 = model.SearchClient.makeSearchClient(database7);
        java.lang.String str13 = database7.getVirtualBookFilePath();
        model.Register register14 = model.Register.makeRegister(database7);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
        org.junit.Assert.assertNotNull(searchClient12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "src/VirtualBook.csv" + "'", str13, "src/VirtualBook.csv");
        org.junit.Assert.assertNotNull(register14);
    }

    @Test
    public void test2424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2424");
        model.Database database7 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database7;
        model.SearchVirtualItem searchVirtualItem9 = new model.SearchVirtualItem(database7);
        model.VirtualItemSearchResult virtualItemSearchResult11 = searchVirtualItem9.searchVirtualItem("src/VirtualBook.csv");
        model.VirtualItemSearchResult virtualItemSearchResult13 = searchVirtualItem9.searchVirtualItem("src/CD.csv");
        model.PaidNewsletter paidNewsletter15 = searchVirtualItem9.getPaidNewsletter("src/Client.csv");
        model.PaidNewsletter paidNewsletter17 = searchVirtualItem9.getPaidNewsletter("model.RentingNotAllowedException: model.LoginFailedException: hi!");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(virtualItemSearchResult11);
        org.junit.Assert.assertNotNull(virtualItemSearchResult13);
        org.junit.Assert.assertNull(paidNewsletter15);
        org.junit.Assert.assertNull(paidNewsletter17);
    }

    @Test
    public void test2425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2425");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        java.lang.String str54 = virtualBook4.author;
        java.time.LocalDate localDate55 = null;
        // The following exception was thrown during execution in test generation
        try {
            model.RentedItem rentedItem56 = new model.RentedItem((model.Item) virtualBook4, localDate55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.format(java.time.format.DateTimeFormatter)\" because \"borrowDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertNull(str54);
    }

    @Test
    public void test2426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2426");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "", "src/CD.csv", "model.RegistrationFailedException: src/Magazine.csv", "model.RegistrationFailedException: src/Book.csv", "model.RegistrationFailedException: ", "model.RegistrationFailedException: src/Book.csv");
        java.lang.String str8 = database7.getNewspaperFilePath();
        model.Login login9 = model.Login.makeLogin(database7);
        model.SearchItems searchItems10 = new model.SearchItems(database7);
        model.SearchClient searchClient11 = model.SearchClient.makeSearchClient(database7);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/Newsletter.csv" + "'", str8, "src/Newsletter.csv");
        org.junit.Assert.assertNotNull(login9);
        org.junit.Assert.assertNotNull(searchClient11);
    }

    @Test
    public void test2427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2427");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter54 = null;
        model.PaidNewsletter paidNewsletter55 = null;
        model.VirtualItemSearchResult virtualItemSearchResult56 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter54, paidNewsletter55);
        model.PaidNewsletter paidNewsletter57 = virtualItemSearchResult56.paidNewsletter;
        model.Newsletter[] newsletterArray58 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList59 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList59, newsletterArray58);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager61 = new model.NewsletterSubscriptionManager(newsletterList59);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager62 = new model.NewsletterSubscriptionManager(newsletterList59);
        java.util.ArrayList<model.Newsletter> newsletterList63 = newsletterSubscriptionManager62.newsletterSubscribed;
        model.PaidNewsletter paidNewsletter64 = new model.PaidNewsletter();
        newsletterSubscriptionManager62.subscribeToPaidNewsletter(paidNewsletter64, "src/Client.csv");
        double double67 = paidNewsletter64.subscriptionPrice;
        virtualItemSearchResult56.setPaidNewsletter(paidNewsletter64);
        paidNewsletter64.subscriptionPrice = (-1.0d);
        paidNewsletter64.title = "model.RentingNotAllowedException: ";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertNull(paidNewsletter57);
        org.junit.Assert.assertNotNull(newsletterArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(newsletterList63);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
    }

    @Test
    public void test2428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2428");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        model.Book book4 = null;
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        java.util.Collection<model.Book> bookCollection8 = null;
        model.Book book9 = null;
        model.CD cD10 = null;
        model.Magazine magazine11 = null;
        model.Book[] bookArray12 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList13 = new java.util.ArrayList<model.Book>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList13, bookArray12);
        model.CD[] cDArray15 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList16 = new java.util.ArrayList<model.CD>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList16, cDArray15);
        model.Magazine[] magazineArray18 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList19 = new java.util.ArrayList<model.Magazine>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList19, magazineArray18);
        model.ItemSearchResult itemSearchResult21 = new model.ItemSearchResult(book9, cD10, magazine11, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList16, (java.util.Collection<model.Magazine>) magazineList19);
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        itemSearchResult21.similarCD = cDList29;
        model.Book book36 = null;
        model.CD cD37 = null;
        model.Magazine magazine38 = null;
        model.Book[] bookArray39 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList40 = new java.util.ArrayList<model.Book>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList40, bookArray39);
        model.CD[] cDArray42 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList43 = new java.util.ArrayList<model.CD>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList43, cDArray42);
        model.Magazine[] magazineArray45 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList46 = new java.util.ArrayList<model.Magazine>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList46, magazineArray45);
        model.ItemSearchResult itemSearchResult48 = new model.ItemSearchResult(book36, cD37, magazine38, (java.util.Collection<model.Book>) bookList40, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList46);
        model.ItemSearchResult itemSearchResult49 = new model.ItemSearchResult(book4, cD6, magazine7, bookCollection8, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList46);
        cD6.ID = (short) 10;
        borrowingManager3.removeRentedItem((model.Item) cD6);
        model.Client client53 = borrowingManager3.client;
        model.Visitor visitor54 = new model.Visitor();
        borrowingManager3.client = visitor54;
        model.RentedItem[] rentedItemArray56 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList57 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList57, rentedItemArray56);
        model.BorrowingManager borrowingManager59 = new model.BorrowingManager(rentedItemList57);
        boolean boolean60 = borrowingManager59.canRent();
        borrowingManager59.updateBorrowingPrivilages();
        visitor54.borrowManager = borrowingManager59;
        borrowingManager59.amountOwned = 6125525;
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(bookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cDArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(magazineArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(bookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cDArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(magazineArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(client53);
        org.junit.Assert.assertNotNull(rentedItemArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test2429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2429");
        model.Database database0 = null;
        model.Register register1 = model.Register.makeRegister(database0);
        model.Faculty faculty2 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection3 = faculty2.courses;
        boolean boolean6 = register1.registerAsStaff((model.Staff) faculty2, "src/Book.csv", "src/Book.csv");
        model.Database database7 = model.Database.database;
        model.Student student8 = new model.Student();
        int int9 = student8.ID;
        model.StudentOnlineResources studentOnlineResources10 = new model.StudentOnlineResources((model.Client) student8);
        student8.ID = '#';
        database7.addClient((model.Client) student8);
        student8.email = "hi!";
        boolean boolean18 = register1.registerAsStaff((model.Staff) student8, "src/CD.csv", "src/Book.csv");
        model.Database database26 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str27 = database26.getVirtualBookFilePath();
        register1.database = database26;
        model.Database database29 = model.Database.database;
        register1.database = database29;
        model.Database database31 = register1.database;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean35 = register1.register("model.RentingNotAllowedException: ", "", "src/VirtualBook.csv");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"model.Database.getClientFilePath()\" because \"this.db\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(register1);
        org.junit.Assert.assertNull(courseCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "src/VirtualBook.csv" + "'", str27, "src/VirtualBook.csv");
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(database31);
    }

    @Test
    public void test2430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2430");
        model.Request request0 = new model.Request();
        request0.title = "src/Client.csv";
        java.lang.Class<?> wildcardClass3 = request0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test2431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2431");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        java.util.Iterator<model.VirtualItem> virtualItemItor3 = studentOnlineResources2.iterator();
        model.VirtualItem virtualItem4 = null;
        java.lang.String str5 = studentOnlineResources2.readVirtualItem(virtualItem4);
        model.Student student6 = new model.Student();
        int int7 = student6.ID;
        model.StudentOnlineResources studentOnlineResources8 = new model.StudentOnlineResources((model.Client) student6);
        model.VirtualBook virtualBook10 = studentOnlineResources8.searchAccessibleBook("");
        model.CD cD12 = new model.CD("");
        model.Magazine magazine13 = null;
        model.Book book14 = null;
        model.CD cD15 = null;
        model.Magazine magazine16 = null;
        model.Book[] bookArray17 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList18 = new java.util.ArrayList<model.Book>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList18, bookArray17);
        model.CD[] cDArray20 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList21 = new java.util.ArrayList<model.CD>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList21, cDArray20);
        model.Magazine[] magazineArray23 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList24 = new java.util.ArrayList<model.Magazine>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList24, magazineArray23);
        model.ItemSearchResult itemSearchResult26 = new model.ItemSearchResult(book14, cD15, magazine16, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList21, (java.util.Collection<model.Magazine>) magazineList24);
        model.Book book27 = null;
        model.CD cD28 = null;
        model.Magazine magazine29 = null;
        model.Book[] bookArray30 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList31 = new java.util.ArrayList<model.Book>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList31, bookArray30);
        model.CD[] cDArray33 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList34 = new java.util.ArrayList<model.CD>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList34, cDArray33);
        model.Magazine[] magazineArray36 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList37 = new java.util.ArrayList<model.Magazine>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList37, magazineArray36);
        model.ItemSearchResult itemSearchResult39 = new model.ItemSearchResult(book27, cD28, magazine29, (java.util.Collection<model.Book>) bookList31, (java.util.Collection<model.CD>) cDList34, (java.util.Collection<model.Magazine>) magazineList37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        itemSearchResult39.similarCD = cDList41;
        model.Book book44 = null;
        model.CD cD45 = null;
        model.Magazine magazine46 = null;
        model.Book[] bookArray47 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList48 = new java.util.ArrayList<model.Book>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList48, bookArray47);
        model.CD[] cDArray50 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList51 = new java.util.ArrayList<model.CD>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList51, cDArray50);
        model.Magazine[] magazineArray53 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList54 = new java.util.ArrayList<model.Magazine>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList54, magazineArray53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult(book44, cD45, magazine46, (java.util.Collection<model.Book>) bookList48, (java.util.Collection<model.CD>) cDList51, (java.util.Collection<model.Magazine>) magazineList54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult((model.Book) virtualBook10, cD12, magazine13, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList54);
        int int58 = virtualBook10.ID;
        int int59 = virtualBook10.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter60 = null;
        model.PaidNewsletter paidNewsletter61 = null;
        model.VirtualItemSearchResult virtualItemSearchResult62 = new model.VirtualItemSearchResult(virtualBook10, uniProvidedNewsletter60, paidNewsletter61);
        java.lang.String str63 = studentOnlineResources2.readVirtualItem((model.VirtualItem) paidNewsletter61);
        model.UniProvidedNewsletter uniProvidedNewsletter64 = new model.UniProvidedNewsletter();
        java.lang.String str65 = studentOnlineResources2.readVirtualItem((model.VirtualItem) uniProvidedNewsletter64);
        model.VirtualBook virtualBook67 = studentOnlineResources2.searchAccessibleBook("hi!");
        java.util.Iterator<model.VirtualItem> virtualItemItor68 = studentOnlineResources2.iterator();
        model.VirtualBook virtualBook70 = studentOnlineResources2.searchAccessibleBook("model.RentingNotAllowedException: model.LoginFailedException: hi!");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(virtualItemItor3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(virtualBook10);
        org.junit.Assert.assertNotNull(bookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(cDArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(magazineArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(bookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(magazineArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(bookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(cDArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(magazineArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 20 + "'", int59 == 20);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(virtualBook67);
        org.junit.Assert.assertNull(virtualItemItor68);
        org.junit.Assert.assertNotNull(virtualBook70);
    }

    @Test
    public void test2432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2432");
        model.ValidateRegistration validateRegistration0 = new model.ValidateRegistration();
        model.Student student1 = new model.Student();
        student1.viewMyOnlineResource();
        boolean boolean3 = validateRegistration0.validateStaffRegistration((model.Staff) student1);
        model.RentAndReturnSystem rentAndReturnSystem4 = new model.RentAndReturnSystem();
        model.Book book5 = null;
        model.CD cD7 = new model.CD("");
        model.Magazine magazine8 = null;
        java.util.Collection<model.Book> bookCollection9 = null;
        model.Book book10 = null;
        model.CD cD11 = null;
        model.Magazine magazine12 = null;
        model.Book[] bookArray13 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList14 = new java.util.ArrayList<model.Book>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList14, bookArray13);
        model.CD[] cDArray16 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList17 = new java.util.ArrayList<model.CD>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList17, cDArray16);
        model.Magazine[] magazineArray19 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList20 = new java.util.ArrayList<model.Magazine>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList20, magazineArray19);
        model.ItemSearchResult itemSearchResult22 = new model.ItemSearchResult(book10, cD11, magazine12, (java.util.Collection<model.Book>) bookList14, (java.util.Collection<model.CD>) cDList17, (java.util.Collection<model.Magazine>) magazineList20);
        model.Book book23 = null;
        model.CD cD24 = null;
        model.Magazine magazine25 = null;
        model.Book[] bookArray26 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList27 = new java.util.ArrayList<model.Book>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList27, bookArray26);
        model.CD[] cDArray29 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList30 = new java.util.ArrayList<model.CD>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList30, cDArray29);
        model.Magazine[] magazineArray32 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList33 = new java.util.ArrayList<model.Magazine>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList33, magazineArray32);
        model.ItemSearchResult itemSearchResult35 = new model.ItemSearchResult(book23, cD24, magazine25, (java.util.Collection<model.Book>) bookList27, (java.util.Collection<model.CD>) cDList30, (java.util.Collection<model.Magazine>) magazineList33);
        itemSearchResult22.similarCD = cDList30;
        model.Book book37 = null;
        model.CD cD38 = null;
        model.Magazine magazine39 = null;
        model.Book[] bookArray40 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList41 = new java.util.ArrayList<model.Book>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList41, bookArray40);
        model.CD[] cDArray43 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList44 = new java.util.ArrayList<model.CD>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList44, cDArray43);
        model.Magazine[] magazineArray46 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList47 = new java.util.ArrayList<model.Magazine>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList47, magazineArray46);
        model.ItemSearchResult itemSearchResult49 = new model.ItemSearchResult(book37, cD38, magazine39, (java.util.Collection<model.Book>) bookList41, (java.util.Collection<model.CD>) cDList44, (java.util.Collection<model.Magazine>) magazineList47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book5, cD7, magazine8, bookCollection9, (java.util.Collection<model.CD>) cDList30, (java.util.Collection<model.Magazine>) magazineList47);
        cD7.ID = (short) 10;
        cD7.canBePurchased = false;
        boolean boolean55 = cD7.canBePurchased;
        model.Faculty faculty56 = new model.Faculty();
        boolean boolean57 = rentAndReturnSystem4.rentAnItem((model.Item) cD7, (model.Client) faculty56);
        java.lang.String str58 = faculty56.faculty;
        model.RentedItem[] rentedItemArray59 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList60 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList60, rentedItemArray59);
        model.BorrowingManager borrowingManager62 = new model.BorrowingManager(rentedItemList60);
        boolean boolean63 = borrowingManager62.canRent();
        model.Client client64 = borrowingManager62.client;
        faculty56.borrowManager = borrowingManager62;
        java.util.Collection<model.Course> courseCollection66 = faculty56.courses;
        model.NewsletterSubscriptionManager newsletterSubscriptionManager67 = faculty56.newsletterManager;
        boolean boolean68 = validateRegistration0.validateStaffRegistration((model.Staff) faculty56);
        java.lang.String str69 = faculty56.faculty;
        model.Newsletter[] newsletterArray70 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList71 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList71, newsletterArray70);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager73 = new model.NewsletterSubscriptionManager(newsletterList71);
        model.Client client74 = newsletterSubscriptionManager73.client;
        java.util.ArrayList<model.Newsletter> newsletterList75 = newsletterSubscriptionManager73.newsletterSubscribed;
        model.Newsletter[] newsletterArray76 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList77 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList77, newsletterArray76);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager79 = new model.NewsletterSubscriptionManager(newsletterList77);
        newsletterSubscriptionManager73.newsletterSubscribed = newsletterList77;
        faculty56.newsletterManager = newsletterSubscriptionManager73;
        java.lang.String str82 = faculty56.username;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(bookArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(cDArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(magazineArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(bookArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(cDArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(magazineArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(bookArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(cDArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(magazineArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(rentedItemArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(client64);
        org.junit.Assert.assertNull(courseCollection66);
        org.junit.Assert.assertNull(newsletterSubscriptionManager67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(newsletterArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(client74);
        org.junit.Assert.assertNotNull(newsletterList75);
        org.junit.Assert.assertNotNull(newsletterArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(str82);
    }

    @Test
    public void test2433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2433");
        model.Request request0 = new model.Request();
        java.lang.String str1 = request0.type;
        model.Database database9 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database9;
        model.SearchVirtualItem searchVirtualItem11 = new model.SearchVirtualItem(database9);
        model.RentAndReturnSystem rentAndReturnSystem12 = new model.RentAndReturnSystem();
        model.Book book13 = null;
        model.CD cD15 = new model.CD("");
        model.Magazine magazine16 = null;
        java.util.Collection<model.Book> bookCollection17 = null;
        model.Book book18 = null;
        model.CD cD19 = null;
        model.Magazine magazine20 = null;
        model.Book[] bookArray21 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList22 = new java.util.ArrayList<model.Book>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList22, bookArray21);
        model.CD[] cDArray24 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList25 = new java.util.ArrayList<model.CD>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList25, cDArray24);
        model.Magazine[] magazineArray27 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList28 = new java.util.ArrayList<model.Magazine>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList28, magazineArray27);
        model.ItemSearchResult itemSearchResult30 = new model.ItemSearchResult(book18, cD19, magazine20, (java.util.Collection<model.Book>) bookList22, (java.util.Collection<model.CD>) cDList25, (java.util.Collection<model.Magazine>) magazineList28);
        model.Book book31 = null;
        model.CD cD32 = null;
        model.Magazine magazine33 = null;
        model.Book[] bookArray34 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList35 = new java.util.ArrayList<model.Book>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList35, bookArray34);
        model.CD[] cDArray37 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList38 = new java.util.ArrayList<model.CD>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList38, cDArray37);
        model.Magazine[] magazineArray40 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList41 = new java.util.ArrayList<model.Magazine>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList41, magazineArray40);
        model.ItemSearchResult itemSearchResult43 = new model.ItemSearchResult(book31, cD32, magazine33, (java.util.Collection<model.Book>) bookList35, (java.util.Collection<model.CD>) cDList38, (java.util.Collection<model.Magazine>) magazineList41);
        itemSearchResult30.similarCD = cDList38;
        model.Book book45 = null;
        model.CD cD46 = null;
        model.Magazine magazine47 = null;
        model.Book[] bookArray48 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList49 = new java.util.ArrayList<model.Book>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList49, bookArray48);
        model.CD[] cDArray51 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList52 = new java.util.ArrayList<model.CD>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList52, cDArray51);
        model.Magazine[] magazineArray54 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList55 = new java.util.ArrayList<model.Magazine>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList55, magazineArray54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult(book45, cD46, magazine47, (java.util.Collection<model.Book>) bookList49, (java.util.Collection<model.CD>) cDList52, (java.util.Collection<model.Magazine>) magazineList55);
        model.ItemSearchResult itemSearchResult58 = new model.ItemSearchResult(book13, cD15, magazine16, bookCollection17, (java.util.Collection<model.CD>) cDList38, (java.util.Collection<model.Magazine>) magazineList55);
        cD15.ID = (short) 10;
        cD15.canBePurchased = false;
        boolean boolean63 = cD15.canBePurchased;
        model.Faculty faculty64 = new model.Faculty();
        boolean boolean65 = rentAndReturnSystem12.rentAnItem((model.Item) cD15, (model.Client) faculty64);
        java.lang.String str66 = faculty64.faculty;
        database9.addClient((model.Client) faculty64);
        request0.requestee = faculty64;
        java.util.ArrayList<model.VirtualBook> virtualBookList69 = faculty64.virtualBooksAvailable;
        faculty64.email = "hi!";
        java.lang.String str72 = faculty64.faculty;
        faculty64.email = "model.RentingNotAllowedException: hi!";
        model.NewsletterSubscriptionManager newsletterSubscriptionManager75 = faculty64.newsletterManager;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(bookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(cDArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(magazineArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(bookArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(cDArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(magazineArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(bookArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(cDArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(magazineArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(virtualBookList69);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(newsletterSubscriptionManager75);
    }

    @Test
    public void test2434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2434");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.Request request1 = new model.Request();
        request1.title = "";
        java.lang.String str4 = requestForum0.makeARequest(request1);
        model.LibraryManagementTeam libraryManagementTeam5 = new model.LibraryManagementTeam();
        int int6 = libraryManagementTeam5.ID;
        model.Magazine magazine8 = new model.Magazine("");
        java.util.Calendar calendar9 = magazine8.date;
        magazine8.author = "model.RegistrationFailedException: ";
        libraryManagementTeam5.disableAnItem((model.Item) magazine8);
        requestForum0.managementTeam = libraryManagementTeam5;
        model.Student student14 = new model.Student();
        int int15 = student14.ID;
        model.StudentOnlineResources studentOnlineResources16 = new model.StudentOnlineResources((model.Client) student14);
        model.VirtualBook virtualBook18 = studentOnlineResources16.searchAccessibleBook("");
        model.VirtualItemContent virtualItemContent19 = virtualBook18.content;
        model.Student student20 = new model.Student();
        int int21 = student20.ID;
        model.StudentOnlineResources studentOnlineResources22 = new model.StudentOnlineResources((model.Client) student20);
        model.VirtualBook virtualBook24 = studentOnlineResources22.searchAccessibleBook("");
        model.CD cD26 = new model.CD("");
        model.Magazine magazine27 = null;
        model.Book book28 = null;
        model.CD cD29 = null;
        model.Magazine magazine30 = null;
        model.Book[] bookArray31 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList32 = new java.util.ArrayList<model.Book>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList32, bookArray31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        model.Magazine[] magazineArray37 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList38 = new java.util.ArrayList<model.Magazine>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList38, magazineArray37);
        model.ItemSearchResult itemSearchResult40 = new model.ItemSearchResult(book28, cD29, magazine30, (java.util.Collection<model.Book>) bookList32, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList38);
        model.Book book41 = null;
        model.CD cD42 = null;
        model.Magazine magazine43 = null;
        model.Book[] bookArray44 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList45 = new java.util.ArrayList<model.Book>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList45, bookArray44);
        model.CD[] cDArray47 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList48 = new java.util.ArrayList<model.CD>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList48, cDArray47);
        model.Magazine[] magazineArray50 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList51 = new java.util.ArrayList<model.Magazine>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList51, magazineArray50);
        model.ItemSearchResult itemSearchResult53 = new model.ItemSearchResult(book41, cD42, magazine43, (java.util.Collection<model.Book>) bookList45, (java.util.Collection<model.CD>) cDList48, (java.util.Collection<model.Magazine>) magazineList51);
        model.CD[] cDArray54 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList55 = new java.util.ArrayList<model.CD>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList55, cDArray54);
        itemSearchResult53.similarCD = cDList55;
        model.Book book58 = null;
        model.CD cD59 = null;
        model.Magazine magazine60 = null;
        model.Book[] bookArray61 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList62 = new java.util.ArrayList<model.Book>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList62, bookArray61);
        model.CD[] cDArray64 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList65 = new java.util.ArrayList<model.CD>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList65, cDArray64);
        model.Magazine[] magazineArray67 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList68 = new java.util.ArrayList<model.Magazine>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList68, magazineArray67);
        model.ItemSearchResult itemSearchResult70 = new model.ItemSearchResult(book58, cD59, magazine60, (java.util.Collection<model.Book>) bookList62, (java.util.Collection<model.CD>) cDList65, (java.util.Collection<model.Magazine>) magazineList68);
        model.ItemSearchResult itemSearchResult71 = new model.ItemSearchResult((model.Book) virtualBook24, cD26, magazine27, (java.util.Collection<model.Book>) bookList32, (java.util.Collection<model.CD>) cDList55, (java.util.Collection<model.Magazine>) magazineList68);
        int int72 = virtualBook24.ID;
        int int73 = virtualBook24.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter74 = null;
        model.PaidNewsletter paidNewsletter75 = null;
        model.VirtualItemSearchResult virtualItemSearchResult76 = new model.VirtualItemSearchResult(virtualBook24, uniProvidedNewsletter74, paidNewsletter75);
        model.PaidNewsletter paidNewsletter77 = virtualItemSearchResult76.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter78 = new model.UniProvidedNewsletter();
        virtualItemSearchResult76.setUniNewsletter(uniProvidedNewsletter78);
        java.lang.String str80 = uniProvidedNewsletter78.title;
        model.PaidNewsletter paidNewsletter81 = null;
        model.VirtualItemSearchResult virtualItemSearchResult82 = new model.VirtualItemSearchResult(virtualBook18, uniProvidedNewsletter78, paidNewsletter81);
        model.VirtualItemContent virtualItemContent84 = new model.VirtualItemContent("hi!");
        java.lang.String str85 = virtualItemContent84.link;
        java.lang.String str87 = virtualItemContent84.getContent("");
        java.lang.String str89 = virtualItemContent84.getContent("model.RegistrationFailedException: ");
        java.lang.String str90 = virtualItemContent84.link;
        virtualBook18.content = virtualItemContent84;
        libraryManagementTeam5.addAnItem((model.Item) virtualBook18);
        virtualBook18.showContent();
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(calendar9);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(virtualBook18);
        org.junit.Assert.assertNull(virtualItemContent19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(virtualBook24);
        org.junit.Assert.assertNotNull(bookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(magazineArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(bookArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(cDArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(magazineArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(cDArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(bookArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(cDArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(magazineArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 20 + "'", int73 == 20);
        org.junit.Assert.assertNull(paidNewsletter77);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "hi!" + "'", str85, "hi!");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "hi!" + "'", str87, "hi!");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "hi!" + "'", str89, "hi!");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "hi!" + "'", str90, "hi!");
    }

    @Test
    public void test2435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2435");
        model.LibraryManagementTeam libraryManagementTeam0 = new model.LibraryManagementTeam();
        int int1 = libraryManagementTeam0.ID;
        int int2 = libraryManagementTeam0.accessCode;
        libraryManagementTeam0.accessCode = '#';
        libraryManagementTeam0.accessCode = 8565250;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test2436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2436");
        model.Database database0 = null;
        model.Register register1 = model.Register.makeRegister(database0);
        model.ValidateRegistration validateRegistration2 = new model.ValidateRegistration();
        model.Student student3 = new model.Student();
        student3.viewMyOnlineResource();
        boolean boolean5 = validateRegistration2.validateStaffRegistration((model.Staff) student3);
        boolean boolean8 = register1.registerAsStaff((model.Staff) student3, "", "");
        student3.username = "src/Client.csv";
        java.util.ArrayList<model.VirtualBook> virtualBookList11 = student3.virtualBooksAvailable;
        model.NewsletterSubscriptionManager newsletterSubscriptionManager12 = student3.newsletterManager;
        org.junit.Assert.assertNotNull(register1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(virtualBookList11);
        org.junit.Assert.assertNull(newsletterSubscriptionManager12);
    }

    @Test
    public void test2437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2437");
        model.LoginFailedException loginFailedException1 = new model.LoginFailedException("hi!");
        model.LoginFailedException loginFailedException3 = new model.LoginFailedException("hi!");
        loginFailedException1.addSuppressed((java.lang.Throwable) loginFailedException3);
        model.RegistrationFailedException registrationFailedException6 = new model.RegistrationFailedException("src/Newsletter.csv");
        java.lang.Throwable[] throwableArray7 = registrationFailedException6.getSuppressed();
        loginFailedException3.addSuppressed((java.lang.Throwable) registrationFailedException6);
        java.lang.String str9 = registrationFailedException6.toString();
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "model.RegistrationFailedException: src/Newsletter.csv" + "'", str9, "model.RegistrationFailedException: src/Newsletter.csv");
    }

    @Test
    public void test2438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2438");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        model.RentedItem[] rentedItemArray4 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList5 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList5, rentedItemArray4);
        model.BorrowingManager borrowingManager7 = new model.BorrowingManager(rentedItemList5);
        model.RentedItem[] rentedItemArray8 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList9 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList9, rentedItemArray8);
        model.BorrowingManager borrowingManager11 = new model.BorrowingManager(rentedItemList9);
        borrowingManager7.physicalItemBorrowed = rentedItemList9;
        borrowingManager3.physicalItemBorrowed = rentedItemList9;
        borrowingManager3.updateBorrowingPrivilages();
        int int15 = borrowingManager3.itemsBorrowedCount;
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(rentedItemArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rentedItemArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test2439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2439");
        model.Database database7 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database7;
        model.SearchVirtualItem searchVirtualItem9 = new model.SearchVirtualItem(database7);
        model.UniProvidedNewsletter uniProvidedNewsletter11 = searchVirtualItem9.getUniNewsletter("");
        model.UniProvidedNewsletter uniProvidedNewsletter13 = searchVirtualItem9.getUniNewsletter("hi!");
        model.VirtualBook virtualBook15 = searchVirtualItem9.getVirtualBook("src/BorrowedItems.csv");
        model.VirtualBook virtualBook17 = searchVirtualItem9.getVirtualBook("src/Newsletter.csv");
        model.UniProvidedNewsletter uniProvidedNewsletter19 = searchVirtualItem9.getUniNewsletter("model.LoginFailedException: hi!");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNull(uniProvidedNewsletter11);
        org.junit.Assert.assertNull(uniProvidedNewsletter13);
        org.junit.Assert.assertNull(virtualBook15);
        org.junit.Assert.assertNull(virtualBook17);
        org.junit.Assert.assertNull(uniProvidedNewsletter19);
    }

    @Test
    public void test2440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2440");
        model.CD cD1 = new model.CD("src/Book.csv");
    }

    @Test
    public void test2441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2441");
        model.Database database7 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database7;
        model.SearchVirtualItem searchVirtualItem9 = new model.SearchVirtualItem(database7);
        model.VirtualItemSearchResult virtualItemSearchResult11 = searchVirtualItem9.searchVirtualItem("src/VirtualBook.csv");
        model.VirtualItemSearchResult virtualItemSearchResult13 = searchVirtualItem9.searchVirtualItem("src/CD.csv");
        model.Student student14 = new model.Student();
        int int15 = student14.ID;
        model.StudentOnlineResources studentOnlineResources16 = new model.StudentOnlineResources((model.Client) student14);
        model.VirtualBook virtualBook18 = studentOnlineResources16.searchAccessibleBook("");
        model.CD cD20 = new model.CD("");
        model.Magazine magazine21 = null;
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        model.Book book35 = null;
        model.CD cD36 = null;
        model.Magazine magazine37 = null;
        model.Book[] bookArray38 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList39 = new java.util.ArrayList<model.Book>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList39, bookArray38);
        model.CD[] cDArray41 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList42 = new java.util.ArrayList<model.CD>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList42, cDArray41);
        model.Magazine[] magazineArray44 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList45 = new java.util.ArrayList<model.Magazine>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList45, magazineArray44);
        model.ItemSearchResult itemSearchResult47 = new model.ItemSearchResult(book35, cD36, magazine37, (java.util.Collection<model.Book>) bookList39, (java.util.Collection<model.CD>) cDList42, (java.util.Collection<model.Magazine>) magazineList45);
        model.CD[] cDArray48 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList49 = new java.util.ArrayList<model.CD>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList49, cDArray48);
        itemSearchResult47.similarCD = cDList49;
        model.Book book52 = null;
        model.CD cD53 = null;
        model.Magazine magazine54 = null;
        model.Book[] bookArray55 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList56 = new java.util.ArrayList<model.Book>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList56, bookArray55);
        model.CD[] cDArray58 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList59 = new java.util.ArrayList<model.CD>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList59, cDArray58);
        model.Magazine[] magazineArray61 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList62 = new java.util.ArrayList<model.Magazine>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList62, magazineArray61);
        model.ItemSearchResult itemSearchResult64 = new model.ItemSearchResult(book52, cD53, magazine54, (java.util.Collection<model.Book>) bookList56, (java.util.Collection<model.CD>) cDList59, (java.util.Collection<model.Magazine>) magazineList62);
        model.ItemSearchResult itemSearchResult65 = new model.ItemSearchResult((model.Book) virtualBook18, cD20, magazine21, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList49, (java.util.Collection<model.Magazine>) magazineList62);
        int int66 = virtualBook18.ID;
        int int67 = virtualBook18.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter68 = null;
        model.PaidNewsletter paidNewsletter69 = null;
        model.VirtualItemSearchResult virtualItemSearchResult70 = new model.VirtualItemSearchResult(virtualBook18, uniProvidedNewsletter68, paidNewsletter69);
        model.PaidNewsletter paidNewsletter71 = virtualItemSearchResult70.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter72 = new model.UniProvidedNewsletter();
        virtualItemSearchResult70.setUniNewsletter(uniProvidedNewsletter72);
        model.PaidNewsletter paidNewsletter74 = virtualItemSearchResult70.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter75 = virtualItemSearchResult70.uniNewsletter;
        virtualItemSearchResult13.setUniNewsletter(uniProvidedNewsletter75);
        uniProvidedNewsletter75.title = "model.RegistrationFailedException: src/Magazine.csv";
        uniProvidedNewsletter75.title = "";
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(virtualItemSearchResult11);
        org.junit.Assert.assertNotNull(virtualItemSearchResult13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(virtualBook18);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(bookArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(cDArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(magazineArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(cDArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(bookArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(cDArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(magazineArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 20 + "'", int67 == 20);
        org.junit.Assert.assertNull(paidNewsletter71);
        org.junit.Assert.assertNull(paidNewsletter74);
        org.junit.Assert.assertNotNull(uniProvidedNewsletter75);
    }

    @Test
    public void test2442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2442");
        model.Database database7 = model.Database.createDatabase("src/Client.csv", "src/Book.csv", "model.RegistrationFailedException: src/Book.csv", "src/VirtualBook.csv", "model.RegistrationFailedException: ", "model.RegistrationFailedException: src/Book.csv", "src/CD.csv");
        java.lang.String str8 = database7.getBorrowedItemFilePath();
        java.lang.String str9 = database7.getCDFilePath();
        model.SearchItems searchItems10 = new model.SearchItems(database7);
        java.lang.String str11 = database7.getNewspaperFilePath();
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/BorrowedItems.csv" + "'", str8, "src/BorrowedItems.csv");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "src/CD.csv" + "'", str9, "src/CD.csv");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "src/Newsletter.csv" + "'", str11, "src/Newsletter.csv");
    }

    @Test
    public void test2443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2443");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.Database.database = database7;
        database7.itemPath = "";
        model.SearchClient searchClient12 = model.SearchClient.makeSearchClient(database7);
        java.lang.String str13 = database7.getVirtualBookFilePath();
        model.SearchItems searchItems14 = new model.SearchItems(database7);
        java.util.Collection<model.Book> bookCollection16 = searchItems14.getSimilarBooks("src/VirtualBook.csv");
        model.CD cD18 = searchItems14.getCD("model.RentingNotAllowedException: ");
        model.ItemSearchResult itemSearchResult20 = searchItems14.searchItem("model.RegistrationFailedException: src/Magazine.csv");
        java.util.Collection<model.Book> bookCollection22 = searchItems14.getSimilarBooks("src/Book.csv");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
        org.junit.Assert.assertNotNull(searchClient12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "src/VirtualBook.csv" + "'", str13, "src/VirtualBook.csv");
        org.junit.Assert.assertNotNull(bookCollection16);
        org.junit.Assert.assertNull(cD18);
        org.junit.Assert.assertNotNull(itemSearchResult20);
        org.junit.Assert.assertNotNull(bookCollection22);
    }

    @Test
    public void test2444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2444");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.UniProvidedNewsletter uniProvidedNewsletter5 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter5.title = "";
        java.lang.String str8 = uniProvidedNewsletter5.title;
        newsletterSubscriptionManager3.subscribeToUniProvidedNewsletter(uniProvidedNewsletter5, "");
        java.util.ArrayList<model.Newsletter> newsletterList11 = newsletterSubscriptionManager3.newsletterSubscribed;
        model.Student student12 = new model.Student();
        int int13 = student12.ID;
        model.StudentOnlineResources studentOnlineResources14 = new model.StudentOnlineResources((model.Client) student12);
        model.VirtualBook virtualBook16 = studentOnlineResources14.searchAccessibleBook("");
        model.VirtualItemContent virtualItemContent17 = virtualBook16.content;
        model.Student student18 = new model.Student();
        int int19 = student18.ID;
        model.StudentOnlineResources studentOnlineResources20 = new model.StudentOnlineResources((model.Client) student18);
        model.VirtualBook virtualBook22 = studentOnlineResources20.searchAccessibleBook("");
        model.CD cD24 = new model.CD("");
        model.Magazine magazine25 = null;
        model.Book book26 = null;
        model.CD cD27 = null;
        model.Magazine magazine28 = null;
        model.Book[] bookArray29 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList30 = new java.util.ArrayList<model.Book>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList30, bookArray29);
        model.CD[] cDArray32 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList33 = new java.util.ArrayList<model.CD>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList33, cDArray32);
        model.Magazine[] magazineArray35 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList36 = new java.util.ArrayList<model.Magazine>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList36, magazineArray35);
        model.ItemSearchResult itemSearchResult38 = new model.ItemSearchResult(book26, cD27, magazine28, (java.util.Collection<model.Book>) bookList30, (java.util.Collection<model.CD>) cDList33, (java.util.Collection<model.Magazine>) magazineList36);
        model.Book book39 = null;
        model.CD cD40 = null;
        model.Magazine magazine41 = null;
        model.Book[] bookArray42 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList43 = new java.util.ArrayList<model.Book>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList43, bookArray42);
        model.CD[] cDArray45 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList46 = new java.util.ArrayList<model.CD>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList46, cDArray45);
        model.Magazine[] magazineArray48 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList49 = new java.util.ArrayList<model.Magazine>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList49, magazineArray48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult(book39, cD40, magazine41, (java.util.Collection<model.Book>) bookList43, (java.util.Collection<model.CD>) cDList46, (java.util.Collection<model.Magazine>) magazineList49);
        model.CD[] cDArray52 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList53 = new java.util.ArrayList<model.CD>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList53, cDArray52);
        itemSearchResult51.similarCD = cDList53;
        model.Book book56 = null;
        model.CD cD57 = null;
        model.Magazine magazine58 = null;
        model.Book[] bookArray59 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList60 = new java.util.ArrayList<model.Book>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList60, bookArray59);
        model.CD[] cDArray62 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList63 = new java.util.ArrayList<model.CD>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList63, cDArray62);
        model.Magazine[] magazineArray65 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList66 = new java.util.ArrayList<model.Magazine>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList66, magazineArray65);
        model.ItemSearchResult itemSearchResult68 = new model.ItemSearchResult(book56, cD57, magazine58, (java.util.Collection<model.Book>) bookList60, (java.util.Collection<model.CD>) cDList63, (java.util.Collection<model.Magazine>) magazineList66);
        model.ItemSearchResult itemSearchResult69 = new model.ItemSearchResult((model.Book) virtualBook22, cD24, magazine25, (java.util.Collection<model.Book>) bookList30, (java.util.Collection<model.CD>) cDList53, (java.util.Collection<model.Magazine>) magazineList66);
        int int70 = virtualBook22.ID;
        int int71 = virtualBook22.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter72 = null;
        model.PaidNewsletter paidNewsletter73 = null;
        model.VirtualItemSearchResult virtualItemSearchResult74 = new model.VirtualItemSearchResult(virtualBook22, uniProvidedNewsletter72, paidNewsletter73);
        model.PaidNewsletter paidNewsletter75 = virtualItemSearchResult74.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter76 = new model.UniProvidedNewsletter();
        virtualItemSearchResult74.setUniNewsletter(uniProvidedNewsletter76);
        java.lang.String str78 = uniProvidedNewsletter76.title;
        model.PaidNewsletter paidNewsletter79 = null;
        model.VirtualItemSearchResult virtualItemSearchResult80 = new model.VirtualItemSearchResult(virtualBook16, uniProvidedNewsletter76, paidNewsletter79);
        uniProvidedNewsletter76.ID = ' ';
        uniProvidedNewsletter76.cost = (byte) 1;
        int int85 = uniProvidedNewsletter76.ID;
        newsletterSubscriptionManager3.subscribeToUniProvidedNewsletter(uniProvidedNewsletter76, "model.RegistrationFailedException: ");
        uniProvidedNewsletter76.cost = (-1);
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(newsletterList11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(virtualBook16);
        org.junit.Assert.assertNull(virtualItemContent17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(virtualBook22);
        org.junit.Assert.assertNotNull(bookArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(cDArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(magazineArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(bookArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(cDArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(magazineArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(cDArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(bookArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(cDArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(magazineArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 20 + "'", int71 == 20);
        org.junit.Assert.assertNull(paidNewsletter75);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 32 + "'", int85 == 32);
    }

    @Test
    public void test2445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2445");
        model.Database database7 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database7;
        model.SearchVirtualItem searchVirtualItem9 = new model.SearchVirtualItem(database7);
        model.VirtualItemSearchResult virtualItemSearchResult11 = searchVirtualItem9.searchVirtualItem("src/VirtualBook.csv");
        model.PaidNewsletter paidNewsletter13 = searchVirtualItem9.getPaidNewsletter("src/Client.csv");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(virtualItemSearchResult11);
        org.junit.Assert.assertNull(paidNewsletter13);
    }

    @Test
    public void test2446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2446");
        model.Database database7 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.SearchClient searchClient8 = model.SearchClient.makeSearchClient(database7);
        java.lang.String str9 = database7.itemPath;
        java.lang.String str10 = database7.getCDFilePath();
        java.lang.String str11 = database7.getCDFilePath();
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(searchClient8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "src/CD.csv" + "'", str10, "src/CD.csv");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "src/CD.csv" + "'", str11, "src/CD.csv");
    }

    @Test
    public void test2447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2447");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.Database.database = database7;
        java.lang.String str10 = database7.virtualItemFilePath;
        java.lang.String str11 = database7.getBookFilePath();
        database7.itemPath = "src/Magazine.csv";
        model.Login login14 = model.Login.makeLogin(database7);
        boolean boolean16 = database7.addItem("src/Client.csv");
        model.SearchVirtualItem searchVirtualItem17 = new model.SearchVirtualItem(database7);
        java.util.ArrayList<java.lang.String> strList18 = database7.getAllItems();
        java.lang.String str19 = database7.itemPath;
        java.lang.String str20 = database7.getMagazineFilePath();
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "model.RegistrationFailedException: " + "'", str10, "model.RegistrationFailedException: ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "src/Book.csv" + "'", str11, "src/Book.csv");
        org.junit.Assert.assertNotNull(login14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "src/Magazine.csv" + "'", str19, "src/Magazine.csv");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "src/Magazine.csv" + "'", str20, "src/Magazine.csv");
    }

    @Test
    public void test2448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2448");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        model.Client client9 = database7.getClient("");
        java.lang.String str10 = database7.getClientFilePath();
        database7.virtualItemFilePath = "src/Newsletter.csv";
        java.lang.String str13 = database7.getVirtualBookFilePath();
        model.Register register14 = model.Register.makeRegister(database7);
        int int15 = database7.getRandomID();
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(client9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "src/Client.csv" + "'", str10, "src/Client.csv");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "src/VirtualBook.csv" + "'", str13, "src/VirtualBook.csv");
        org.junit.Assert.assertNotNull(register14);
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 9521568 + "'", int15 == 9521568);
    }

    @Test
    public void test2449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2449");
        model.ItemManagement itemManagement0 = new model.ItemManagement();
        model.Database database1 = null;
        itemManagement0.database = database1;
        model.Database database10 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        java.lang.String str11 = database10.itemPath;
        itemManagement0.database = database10;
        model.SearchVirtualItem searchVirtualItem13 = new model.SearchVirtualItem(database10);
        model.SearchClient searchClient14 = model.SearchClient.makeSearchClient(database10);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "src/Magazine.csv" + "'", str11, "src/Magazine.csv");
        org.junit.Assert.assertNotNull(searchClient14);
    }

    @Test
    public void test2450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2450");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        model.Visitor visitor4 = new model.Visitor();
        visitor4.email = "hi!";
        borrowingManager3.client = visitor4;
        borrowingManager3.updateBorrowingPrivilages();
        boolean boolean9 = borrowingManager3.canRent();
        int int10 = borrowingManager3.itemsBorrowedCount;
        borrowingManager3.updateBorrowingPrivilages();
        model.Faculty faculty12 = new model.Faculty();
        faculty12.username = "hi!";
        java.util.Collection<model.Course> courseCollection15 = null;
        faculty12.courses = courseCollection15;
        java.util.Collection<model.Course> courseCollection17 = faculty12.courses;
        model.Newsletter[] newsletterArray18 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList19 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList19, newsletterArray18);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager21 = new model.NewsletterSubscriptionManager(newsletterList19);
        model.Client client22 = newsletterSubscriptionManager21.client;
        model.Student student23 = new model.Student();
        int int24 = student23.ID;
        model.StudentOnlineResources studentOnlineResources25 = new model.StudentOnlineResources((model.Client) student23);
        student23.ID = '#';
        java.lang.String str28 = student23.email;
        newsletterSubscriptionManager21.client = student23;
        model.Newsletter[] newsletterArray30 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList31 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList31, newsletterArray30);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager33 = new model.NewsletterSubscriptionManager(newsletterList31);
        newsletterSubscriptionManager21.newsletterSubscribed = newsletterList31;
        faculty12.newsletterManager = newsletterSubscriptionManager21;
        java.util.ArrayList<model.VirtualBook> virtualBookList36 = faculty12.virtualBooksAvailable;
        java.util.ArrayList<model.VirtualBook> virtualBookList37 = faculty12.virtualBooksAvailable;
        borrowingManager3.client = faculty12;
        java.lang.String str39 = faculty12.email;
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(courseCollection17);
        org.junit.Assert.assertNotNull(newsletterArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(client22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(newsletterArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(virtualBookList36);
        org.junit.Assert.assertNull(virtualBookList37);
        org.junit.Assert.assertNull(str39);
    }

    @Test
    public void test2451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2451");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter54 = null;
        model.PaidNewsletter paidNewsletter55 = null;
        model.VirtualItemSearchResult virtualItemSearchResult56 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter54, paidNewsletter55);
        model.PaidNewsletter paidNewsletter57 = virtualItemSearchResult56.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter58 = new model.UniProvidedNewsletter();
        virtualItemSearchResult56.setUniNewsletter(uniProvidedNewsletter58);
        model.PaidNewsletter paidNewsletter60 = virtualItemSearchResult56.getPaidNewsletter();
        model.UniProvidedNewsletter uniProvidedNewsletter61 = virtualItemSearchResult56.getUniNewsletter();
        model.VirtualBook virtualBook62 = virtualItemSearchResult56.virtualBook;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertNull(paidNewsletter57);
        org.junit.Assert.assertNull(paidNewsletter60);
        org.junit.Assert.assertNotNull(uniProvidedNewsletter61);
        org.junit.Assert.assertNotNull(virtualBook62);
    }

    @Test
    public void test2452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2452");
        model.Request request0 = new model.Request();
        java.lang.String str1 = request0.type;
        model.ValidateRegistration validateRegistration2 = new model.ValidateRegistration();
        model.Student student3 = new model.Student();
        student3.viewMyOnlineResource();
        boolean boolean5 = validateRegistration2.validateStaffRegistration((model.Staff) student3);
        request0.requestee = student3;
        request0.title = "";
        java.lang.String str9 = request0.type;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test2453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2453");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        boolean boolean4 = borrowingManager3.canRent();
        model.Client client5 = borrowingManager3.client;
        model.Student student6 = new model.Student();
        int int7 = student6.ID;
        model.StudentOnlineResources studentOnlineResources8 = new model.StudentOnlineResources((model.Client) student6);
        model.StudentOnlineResources studentOnlineResources9 = new model.StudentOnlineResources((model.Client) student6);
        model.RentedItem[] rentedItemArray10 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList11 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList11, rentedItemArray10);
        model.BorrowingManager borrowingManager13 = new model.BorrowingManager(rentedItemList11);
        model.Visitor visitor14 = new model.Visitor();
        visitor14.email = "hi!";
        borrowingManager13.client = visitor14;
        studentOnlineResources9.client = visitor14;
        model.Client client19 = studentOnlineResources9.client;
        borrowingManager3.client = client19;
        borrowingManager3.amountOwned = (byte) 1;
        java.util.ArrayList<model.RentedItem> rentedItemList23 = borrowingManager3.physicalItemBorrowed;
        borrowingManager3.amountOwned = 11;
        model.RentedItem[] rentedItemArray26 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList27 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList27, rentedItemArray26);
        model.BorrowingManager borrowingManager29 = new model.BorrowingManager(rentedItemList27);
        model.Book book30 = null;
        model.CD cD32 = new model.CD("");
        model.Magazine magazine33 = null;
        java.util.Collection<model.Book> bookCollection34 = null;
        model.Book book35 = null;
        model.CD cD36 = null;
        model.Magazine magazine37 = null;
        model.Book[] bookArray38 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList39 = new java.util.ArrayList<model.Book>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList39, bookArray38);
        model.CD[] cDArray41 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList42 = new java.util.ArrayList<model.CD>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList42, cDArray41);
        model.Magazine[] magazineArray44 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList45 = new java.util.ArrayList<model.Magazine>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList45, magazineArray44);
        model.ItemSearchResult itemSearchResult47 = new model.ItemSearchResult(book35, cD36, magazine37, (java.util.Collection<model.Book>) bookList39, (java.util.Collection<model.CD>) cDList42, (java.util.Collection<model.Magazine>) magazineList45);
        model.Book book48 = null;
        model.CD cD49 = null;
        model.Magazine magazine50 = null;
        model.Book[] bookArray51 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList52 = new java.util.ArrayList<model.Book>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList52, bookArray51);
        model.CD[] cDArray54 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList55 = new java.util.ArrayList<model.CD>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList55, cDArray54);
        model.Magazine[] magazineArray57 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList58 = new java.util.ArrayList<model.Magazine>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList58, magazineArray57);
        model.ItemSearchResult itemSearchResult60 = new model.ItemSearchResult(book48, cD49, magazine50, (java.util.Collection<model.Book>) bookList52, (java.util.Collection<model.CD>) cDList55, (java.util.Collection<model.Magazine>) magazineList58);
        itemSearchResult47.similarCD = cDList55;
        model.Book book62 = null;
        model.CD cD63 = null;
        model.Magazine magazine64 = null;
        model.Book[] bookArray65 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList66 = new java.util.ArrayList<model.Book>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList66, bookArray65);
        model.CD[] cDArray68 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList69 = new java.util.ArrayList<model.CD>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList69, cDArray68);
        model.Magazine[] magazineArray71 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList72 = new java.util.ArrayList<model.Magazine>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList72, magazineArray71);
        model.ItemSearchResult itemSearchResult74 = new model.ItemSearchResult(book62, cD63, magazine64, (java.util.Collection<model.Book>) bookList66, (java.util.Collection<model.CD>) cDList69, (java.util.Collection<model.Magazine>) magazineList72);
        model.ItemSearchResult itemSearchResult75 = new model.ItemSearchResult(book30, cD32, magazine33, bookCollection34, (java.util.Collection<model.CD>) cDList55, (java.util.Collection<model.Magazine>) magazineList72);
        cD32.ID = (short) 10;
        borrowingManager29.removeRentedItem((model.Item) cD32);
        float float79 = borrowingManager29.amountOwned;
        float float80 = borrowingManager29.amountOwned;
        float float81 = borrowingManager29.amountOwned;
        java.util.ArrayList<model.RentedItem> rentedItemList82 = borrowingManager29.physicalItemBorrowed;
        java.util.ArrayList<model.RentedItem> rentedItemList83 = borrowingManager29.physicalItemBorrowed;
        borrowingManager3.physicalItemBorrowed = rentedItemList83;
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(client5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(rentedItemArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(client19);
        org.junit.Assert.assertNotNull(rentedItemList23);
        org.junit.Assert.assertNotNull(rentedItemArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(bookArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(cDArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(magazineArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(bookArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(cDArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(magazineArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(bookArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(cDArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(magazineArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + float79 + "' != '" + 0.0f + "'", float79 == 0.0f);
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + 0.0f + "'", float80 == 0.0f);
        org.junit.Assert.assertTrue("'" + float81 + "' != '" + 0.0f + "'", float81 == 0.0f);
        org.junit.Assert.assertNotNull(rentedItemList82);
        org.junit.Assert.assertNotNull(rentedItemList83);
    }

    @Test
    public void test2454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2454");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.Payment payment1 = rentAndReturnSystem0.paymentAPI;
        model.PayMobileWallet payMobileWallet2 = new model.PayMobileWallet();
        payMobileWallet2.amountPay = 100.0f;
        payMobileWallet2.amountPay = (byte) -1;
        rentAndReturnSystem0.paymentAPI = payMobileWallet2;
        payMobileWallet2.pay((double) 0);
        java.lang.Class<?> wildcardClass10 = payMobileWallet2.getClass();
        org.junit.Assert.assertNull(payment1);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test2455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2455");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.RequestForum requestForum1 = model.RequestForum.createRequestForum();
        model.Request request2 = new model.Request();
        request2.title = "";
        java.lang.String str5 = requestForum1.makeARequest(request2);
        int int6 = requestForum0.assessBooksPriority(request2);
        model.LibraryManagementTeam libraryManagementTeam7 = new model.LibraryManagementTeam();
        int int8 = libraryManagementTeam7.ID;
        int int9 = libraryManagementTeam7.accessCode;
        model.Item item10 = null;
        libraryManagementTeam7.addAnItem(item10);
        java.util.ArrayList<model.Item> itemList12 = libraryManagementTeam7.items;
        requestForum0.managementTeam = libraryManagementTeam7;
        model.RequestForum requestForum14 = model.RequestForum.createRequestForum();
        model.LibraryManagementTeam libraryManagementTeam15 = new model.LibraryManagementTeam();
        int int16 = libraryManagementTeam15.ID;
        int int17 = libraryManagementTeam15.accessCode;
        model.Item item18 = null;
        libraryManagementTeam15.addAnItem(item18);
        requestForum14.managementTeam = libraryManagementTeam15;
        java.util.ArrayList<model.Item> itemList21 = libraryManagementTeam15.items;
        requestForum0.managementTeam = libraryManagementTeam15;
        model.LibraryManagementTeam libraryManagementTeam23 = new model.LibraryManagementTeam();
        int int24 = libraryManagementTeam23.ID;
        int int25 = libraryManagementTeam23.accessCode;
        model.ItemManagement itemManagement26 = new model.ItemManagement();
        model.Database database27 = null;
        itemManagement26.database = database27;
        model.Student student29 = new model.Student();
        int int30 = student29.ID;
        model.StudentOnlineResources studentOnlineResources31 = new model.StudentOnlineResources((model.Client) student29);
        model.VirtualBook virtualBook33 = studentOnlineResources31.searchAccessibleBook("");
        itemManagement26.disableAnItem((model.Item) virtualBook33);
        libraryManagementTeam23.itemManagement = itemManagement26;
        requestForum0.managementTeam = libraryManagementTeam23;
        int int37 = libraryManagementTeam23.ID;
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertNotNull(requestForum1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(itemList12);
        org.junit.Assert.assertNotNull(requestForum14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(itemList21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(virtualBook33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
    }

    @Test
    public void test2456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2456");
        model.SearchBorrowedItem searchBorrowedItem0 = model.SearchBorrowedItem.makeSearchBorrowedItem();
// flaky:         searchBorrowedItem0.removeItem("src/Book.csv", "");
        model.Student student4 = new model.Student();
        int int5 = student4.ID;
        model.StudentOnlineResources studentOnlineResources6 = new model.StudentOnlineResources((model.Client) student4);
        model.VirtualBook virtualBook8 = studentOnlineResources6.searchAccessibleBook("");
        java.lang.String str9 = virtualBook8.location;
        int int10 = virtualBook8.ID;
        virtualBook8.isBookLost = false;
        model.RentedItem[] rentedItemArray14 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList15 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList15, rentedItemArray14);
        model.BorrowingManager borrowingManager17 = new model.BorrowingManager(rentedItemList15);
        model.Book book18 = null;
        model.CD cD20 = new model.CD("");
        model.Magazine magazine21 = null;
        java.util.Collection<model.Book> bookCollection22 = null;
        model.Book book23 = null;
        model.CD cD24 = null;
        model.Magazine magazine25 = null;
        model.Book[] bookArray26 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList27 = new java.util.ArrayList<model.Book>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList27, bookArray26);
        model.CD[] cDArray29 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList30 = new java.util.ArrayList<model.CD>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList30, cDArray29);
        model.Magazine[] magazineArray32 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList33 = new java.util.ArrayList<model.Magazine>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList33, magazineArray32);
        model.ItemSearchResult itemSearchResult35 = new model.ItemSearchResult(book23, cD24, magazine25, (java.util.Collection<model.Book>) bookList27, (java.util.Collection<model.CD>) cDList30, (java.util.Collection<model.Magazine>) magazineList33);
        model.Book book36 = null;
        model.CD cD37 = null;
        model.Magazine magazine38 = null;
        model.Book[] bookArray39 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList40 = new java.util.ArrayList<model.Book>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList40, bookArray39);
        model.CD[] cDArray42 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList43 = new java.util.ArrayList<model.CD>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList43, cDArray42);
        model.Magazine[] magazineArray45 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList46 = new java.util.ArrayList<model.Magazine>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList46, magazineArray45);
        model.ItemSearchResult itemSearchResult48 = new model.ItemSearchResult(book36, cD37, magazine38, (java.util.Collection<model.Book>) bookList40, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList46);
        itemSearchResult35.similarCD = cDList43;
        model.Book book50 = null;
        model.CD cD51 = null;
        model.Magazine magazine52 = null;
        model.Book[] bookArray53 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList54 = new java.util.ArrayList<model.Book>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList54, bookArray53);
        model.CD[] cDArray56 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList57 = new java.util.ArrayList<model.CD>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList57, cDArray56);
        model.Magazine[] magazineArray59 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList60 = new java.util.ArrayList<model.Magazine>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList60, magazineArray59);
        model.ItemSearchResult itemSearchResult62 = new model.ItemSearchResult(book50, cD51, magazine52, (java.util.Collection<model.Book>) bookList54, (java.util.Collection<model.CD>) cDList57, (java.util.Collection<model.Magazine>) magazineList60);
        model.ItemSearchResult itemSearchResult63 = new model.ItemSearchResult(book18, cD20, magazine21, bookCollection22, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList60);
        cD20.ID = (short) 10;
        borrowingManager17.removeRentedItem((model.Item) cD20);
        model.Client client67 = borrowingManager17.client;
        model.Visitor visitor68 = new model.Visitor();
        borrowingManager17.client = visitor68;
        searchBorrowedItem0.addPhyscialItem((model.Item) virtualBook8, "", (model.Client) visitor68);
        java.util.ArrayList<model.RentedItem> rentedItemList73 = null; // flaky: searchBorrowedItem0.searchBorrowedItem("model.RegistrationFailedException: ", "");
        java.util.ArrayList<model.RentedItem> rentedItemList76 = null; // flaky: searchBorrowedItem0.searchBorrowedItem("hi!", "model.RentingNotAllowedException: hi!");
        model.BorrowingManager borrowingManager77 = null; // flaky: new model.BorrowingManager(rentedItemList76);
        org.junit.Assert.assertNotNull(searchBorrowedItem0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(virtualBook8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(rentedItemArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(bookArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(cDArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(magazineArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(bookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cDArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(magazineArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(bookArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(cDArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(magazineArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(client67);
// flaky:         org.junit.Assert.assertNotNull(rentedItemList73);
// flaky:         org.junit.Assert.assertNotNull(rentedItemList76);
    }

    @Test
    public void test2457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2457");
        model.BuySpecialItems buySpecialItems0 = new model.BuySpecialItems();
        model.Payment payment1 = null;
        buySpecialItems0.paymentAPI = payment1;
        model.PayMobileWallet payMobileWallet3 = new model.PayMobileWallet();
        buySpecialItems0.paymentAPI = payMobileWallet3;
        model.PayMobileWallet payMobileWallet5 = new model.PayMobileWallet();
        payMobileWallet5.amountPay = 100.0f;
        payMobileWallet5.amountPay = (byte) -1;
        buySpecialItems0.paymentAPI = payMobileWallet5;
        model.BuySpecialItems buySpecialItems11 = new model.BuySpecialItems();
        model.Student student12 = new model.Student();
        int int13 = student12.ID;
        model.StudentOnlineResources studentOnlineResources14 = new model.StudentOnlineResources((model.Client) student12);
        model.VirtualBook virtualBook16 = studentOnlineResources14.searchAccessibleBook("");
        model.CD cD18 = new model.CD("");
        model.Magazine magazine19 = null;
        model.Book book20 = null;
        model.CD cD21 = null;
        model.Magazine magazine22 = null;
        model.Book[] bookArray23 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList24 = new java.util.ArrayList<model.Book>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList24, bookArray23);
        model.CD[] cDArray26 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList27 = new java.util.ArrayList<model.CD>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList27, cDArray26);
        model.Magazine[] magazineArray29 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList30 = new java.util.ArrayList<model.Magazine>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList30, magazineArray29);
        model.ItemSearchResult itemSearchResult32 = new model.ItemSearchResult(book20, cD21, magazine22, (java.util.Collection<model.Book>) bookList24, (java.util.Collection<model.CD>) cDList27, (java.util.Collection<model.Magazine>) magazineList30);
        model.Book book33 = null;
        model.CD cD34 = null;
        model.Magazine magazine35 = null;
        model.Book[] bookArray36 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList37 = new java.util.ArrayList<model.Book>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList37, bookArray36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        model.Magazine[] magazineArray42 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList43 = new java.util.ArrayList<model.Magazine>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList43, magazineArray42);
        model.ItemSearchResult itemSearchResult45 = new model.ItemSearchResult(book33, cD34, magazine35, (java.util.Collection<model.Book>) bookList37, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList43);
        model.CD[] cDArray46 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList47 = new java.util.ArrayList<model.CD>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList47, cDArray46);
        itemSearchResult45.similarCD = cDList47;
        model.Book book50 = null;
        model.CD cD51 = null;
        model.Magazine magazine52 = null;
        model.Book[] bookArray53 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList54 = new java.util.ArrayList<model.Book>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList54, bookArray53);
        model.CD[] cDArray56 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList57 = new java.util.ArrayList<model.CD>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList57, cDArray56);
        model.Magazine[] magazineArray59 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList60 = new java.util.ArrayList<model.Magazine>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList60, magazineArray59);
        model.ItemSearchResult itemSearchResult62 = new model.ItemSearchResult(book50, cD51, magazine52, (java.util.Collection<model.Book>) bookList54, (java.util.Collection<model.CD>) cDList57, (java.util.Collection<model.Magazine>) magazineList60);
        model.ItemSearchResult itemSearchResult63 = new model.ItemSearchResult((model.Book) virtualBook16, cD18, magazine19, (java.util.Collection<model.Book>) bookList24, (java.util.Collection<model.CD>) cDList47, (java.util.Collection<model.Magazine>) magazineList60);
        int int64 = virtualBook16.ID;
        int int65 = virtualBook16.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter66 = null;
        model.PaidNewsletter paidNewsletter67 = null;
        model.VirtualItemSearchResult virtualItemSearchResult68 = new model.VirtualItemSearchResult(virtualBook16, uniProvidedNewsletter66, paidNewsletter67);
        boolean boolean70 = buySpecialItems11.buyAnItem((model.Item) virtualBook16, (double) (short) 0);
        model.Visitor visitor71 = new model.Visitor();
        model.StudentOnlineResources studentOnlineResources72 = new model.StudentOnlineResources((model.Client) visitor71);
        model.VirtualBook virtualBook74 = studentOnlineResources72.searchAccessibleBook("src/Book.csv");
        virtualBook74.ISBN = "model.RentingNotAllowedException: src/Magazine.csv";
        boolean boolean78 = buySpecialItems11.buyAnItem((model.Item) virtualBook74, 100.0d);
        model.BuySpecialItems buySpecialItems79 = new model.BuySpecialItems();
        model.Payment payment80 = buySpecialItems79.paymentAPI;
        model.BuySpecialItems buySpecialItems81 = new model.BuySpecialItems();
        model.Payment payment82 = buySpecialItems81.paymentAPI;
        java.util.ArrayList<model.Item> itemList83 = buySpecialItems81.purchasedItems;
        buySpecialItems79.purchasedItems = itemList83;
        model.BuySpecialItems buySpecialItems85 = new model.BuySpecialItems();
        model.Payment payment86 = null;
        buySpecialItems85.paymentAPI = payment86;
        model.RequestForum requestForum88 = model.RequestForum.createRequestForum();
        model.LibraryManagementTeam libraryManagementTeam89 = new model.LibraryManagementTeam();
        int int90 = libraryManagementTeam89.ID;
        int int91 = libraryManagementTeam89.accessCode;
        model.Item item92 = null;
        libraryManagementTeam89.addAnItem(item92);
        requestForum88.managementTeam = libraryManagementTeam89;
        java.util.ArrayList<model.Item> itemList95 = libraryManagementTeam89.items;
        buySpecialItems85.purchasedItems = itemList95;
        buySpecialItems79.purchasedItems = itemList95;
        buySpecialItems11.purchasedItems = itemList95;
        buySpecialItems0.purchasedItems = itemList95;
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(virtualBook16);
        org.junit.Assert.assertNotNull(bookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(cDArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(magazineArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(bookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(magazineArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(cDArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(bookArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(cDArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(magazineArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 20 + "'", int65 == 20);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(virtualBook74);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(payment80);
        org.junit.Assert.assertNull(payment82);
        org.junit.Assert.assertNotNull(itemList83);
        org.junit.Assert.assertNotNull(requestForum88);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertNotNull(itemList95);
    }

    @Test
    public void test2458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2458");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.Book book1 = null;
        model.CD cD3 = new model.CD("");
        model.Magazine magazine4 = null;
        java.util.Collection<model.Book> bookCollection5 = null;
        model.Book book6 = null;
        model.CD cD7 = null;
        model.Magazine magazine8 = null;
        model.Book[] bookArray9 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList10 = new java.util.ArrayList<model.Book>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList10, bookArray9);
        model.CD[] cDArray12 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList13 = new java.util.ArrayList<model.CD>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList13, cDArray12);
        model.Magazine[] magazineArray15 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList16 = new java.util.ArrayList<model.Magazine>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList16, magazineArray15);
        model.ItemSearchResult itemSearchResult18 = new model.ItemSearchResult(book6, cD7, magazine8, (java.util.Collection<model.Book>) bookList10, (java.util.Collection<model.CD>) cDList13, (java.util.Collection<model.Magazine>) magazineList16);
        model.Book book19 = null;
        model.CD cD20 = null;
        model.Magazine magazine21 = null;
        model.Book[] bookArray22 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList23 = new java.util.ArrayList<model.Book>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList23, bookArray22);
        model.CD[] cDArray25 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList26 = new java.util.ArrayList<model.CD>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList26, cDArray25);
        model.Magazine[] magazineArray28 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList29 = new java.util.ArrayList<model.Magazine>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList29, magazineArray28);
        model.ItemSearchResult itemSearchResult31 = new model.ItemSearchResult(book19, cD20, magazine21, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList29);
        itemSearchResult18.similarCD = cDList26;
        model.Book book33 = null;
        model.CD cD34 = null;
        model.Magazine magazine35 = null;
        model.Book[] bookArray36 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList37 = new java.util.ArrayList<model.Book>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList37, bookArray36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        model.Magazine[] magazineArray42 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList43 = new java.util.ArrayList<model.Magazine>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList43, magazineArray42);
        model.ItemSearchResult itemSearchResult45 = new model.ItemSearchResult(book33, cD34, magazine35, (java.util.Collection<model.Book>) bookList37, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book1, cD3, magazine4, bookCollection5, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList43);
        cD3.ID = (short) 10;
        cD3.canBePurchased = false;
        boolean boolean51 = cD3.canBePurchased;
        model.Faculty faculty52 = new model.Faculty();
        boolean boolean53 = rentAndReturnSystem0.rentAnItem((model.Item) cD3, (model.Client) faculty52);
        java.lang.String str54 = faculty52.faculty;
        model.RentedItem[] rentedItemArray55 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList56 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList56, rentedItemArray55);
        model.BorrowingManager borrowingManager58 = new model.BorrowingManager(rentedItemList56);
        boolean boolean59 = borrowingManager58.canRent();
        model.Client client60 = borrowingManager58.client;
        faculty52.borrowManager = borrowingManager58;
        model.RentedItem[] rentedItemArray62 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList63 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList63, rentedItemArray62);
        model.BorrowingManager borrowingManager65 = new model.BorrowingManager(rentedItemList63);
        borrowingManager58.physicalItemBorrowed = rentedItemList63;
        borrowingManager58.itemsBorrowedCount = (byte) 0;
        model.Client client69 = borrowingManager58.client;
        borrowingManager58.itemsBorrowedCount = 8981991;
        double double72 = borrowingManager58.checkBalanceOwed();
        org.junit.Assert.assertNotNull(bookArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(cDArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(magazineArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(bookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(magazineArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(bookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(magazineArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(rentedItemArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(client60);
        org.junit.Assert.assertNotNull(rentedItemArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(client69);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
    }

    @Test
    public void test2459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2459");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.Database.database = database7;
        java.lang.String str10 = database7.virtualItemFilePath;
        java.lang.String str11 = database7.getBookFilePath();
        database7.itemPath = "src/Magazine.csv";
        model.Client client15 = database7.getClient("src/CD.csv");
        client15.viewMyOnlineResource();
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "src/Newsletter.csv" + "'", str10, "src/Newsletter.csv");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "src/Book.csv" + "'", str11, "src/Book.csv");
        org.junit.Assert.assertNotNull(client15);
    }

    @Test
    public void test2460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2460");
        model.Faculty faculty0 = new model.Faculty();
        faculty0.username = "hi!";
        java.util.Collection<model.Course> courseCollection3 = null;
        faculty0.courses = courseCollection3;
        java.util.Collection<model.Course> courseCollection5 = faculty0.courses;
        model.Newsletter[] newsletterArray6 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList7 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList7, newsletterArray6);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager9 = new model.NewsletterSubscriptionManager(newsletterList7);
        model.Client client10 = newsletterSubscriptionManager9.client;
        model.Student student11 = new model.Student();
        int int12 = student11.ID;
        model.StudentOnlineResources studentOnlineResources13 = new model.StudentOnlineResources((model.Client) student11);
        student11.ID = '#';
        java.lang.String str16 = student11.email;
        newsletterSubscriptionManager9.client = student11;
        model.Newsletter[] newsletterArray18 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList19 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList19, newsletterArray18);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager21 = new model.NewsletterSubscriptionManager(newsletterList19);
        newsletterSubscriptionManager9.newsletterSubscribed = newsletterList19;
        faculty0.newsletterManager = newsletterSubscriptionManager9;
        java.util.ArrayList<model.VirtualBook> virtualBookList24 = faculty0.virtualBooksAvailable;
        java.util.ArrayList<model.VirtualBook> virtualBookList25 = faculty0.virtualBooksAvailable;
        faculty0.email = "model.RegistrationFailedException: ";
        faculty0.ID = 0;
        org.junit.Assert.assertNull(courseCollection5);
        org.junit.Assert.assertNotNull(newsletterArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(client10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(newsletterArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(virtualBookList24);
        org.junit.Assert.assertNull(virtualBookList25);
    }

    @Test
    public void test2461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2461");
        model.Book book1 = new model.Book("src/CD.csv");
        java.time.LocalDate localDate2 = null;
        // The following exception was thrown during execution in test generation
        try {
            model.RentedItem rentedItem3 = new model.RentedItem((model.Item) book1, localDate2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.format(java.time.format.DateTimeFormatter)\" because \"borrowDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2462");
        int int2 = model.SearchStrategy.countSimilarWords("hi!", "model.RentingNotAllowedException: model.LoginFailedException: hi!");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    }

    @Test
    public void test2463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2463");
        model.SearchBorrowedItem searchBorrowedItem0 = model.SearchBorrowedItem.makeSearchBorrowedItem();
// flaky:         searchBorrowedItem0.removeItem("src/Book.csv", "");
        model.Student student4 = new model.Student();
        int int5 = student4.ID;
        model.StudentOnlineResources studentOnlineResources6 = new model.StudentOnlineResources((model.Client) student4);
        model.VirtualBook virtualBook8 = studentOnlineResources6.searchAccessibleBook("");
        java.lang.String str9 = virtualBook8.location;
        int int10 = virtualBook8.ID;
        virtualBook8.isBookLost = false;
        model.RentedItem[] rentedItemArray14 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList15 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList15, rentedItemArray14);
        model.BorrowingManager borrowingManager17 = new model.BorrowingManager(rentedItemList15);
        model.Book book18 = null;
        model.CD cD20 = new model.CD("");
        model.Magazine magazine21 = null;
        java.util.Collection<model.Book> bookCollection22 = null;
        model.Book book23 = null;
        model.CD cD24 = null;
        model.Magazine magazine25 = null;
        model.Book[] bookArray26 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList27 = new java.util.ArrayList<model.Book>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList27, bookArray26);
        model.CD[] cDArray29 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList30 = new java.util.ArrayList<model.CD>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList30, cDArray29);
        model.Magazine[] magazineArray32 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList33 = new java.util.ArrayList<model.Magazine>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList33, magazineArray32);
        model.ItemSearchResult itemSearchResult35 = new model.ItemSearchResult(book23, cD24, magazine25, (java.util.Collection<model.Book>) bookList27, (java.util.Collection<model.CD>) cDList30, (java.util.Collection<model.Magazine>) magazineList33);
        model.Book book36 = null;
        model.CD cD37 = null;
        model.Magazine magazine38 = null;
        model.Book[] bookArray39 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList40 = new java.util.ArrayList<model.Book>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList40, bookArray39);
        model.CD[] cDArray42 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList43 = new java.util.ArrayList<model.CD>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList43, cDArray42);
        model.Magazine[] magazineArray45 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList46 = new java.util.ArrayList<model.Magazine>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList46, magazineArray45);
        model.ItemSearchResult itemSearchResult48 = new model.ItemSearchResult(book36, cD37, magazine38, (java.util.Collection<model.Book>) bookList40, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList46);
        itemSearchResult35.similarCD = cDList43;
        model.Book book50 = null;
        model.CD cD51 = null;
        model.Magazine magazine52 = null;
        model.Book[] bookArray53 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList54 = new java.util.ArrayList<model.Book>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList54, bookArray53);
        model.CD[] cDArray56 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList57 = new java.util.ArrayList<model.CD>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList57, cDArray56);
        model.Magazine[] magazineArray59 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList60 = new java.util.ArrayList<model.Magazine>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList60, magazineArray59);
        model.ItemSearchResult itemSearchResult62 = new model.ItemSearchResult(book50, cD51, magazine52, (java.util.Collection<model.Book>) bookList54, (java.util.Collection<model.CD>) cDList57, (java.util.Collection<model.Magazine>) magazineList60);
        model.ItemSearchResult itemSearchResult63 = new model.ItemSearchResult(book18, cD20, magazine21, bookCollection22, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList60);
        cD20.ID = (short) 10;
        borrowingManager17.removeRentedItem((model.Item) cD20);
        model.Client client67 = borrowingManager17.client;
        model.Visitor visitor68 = new model.Visitor();
        borrowingManager17.client = visitor68;
        searchBorrowedItem0.addPhyscialItem((model.Item) virtualBook8, "", (model.Client) visitor68);
        java.util.ArrayList<model.VirtualItem> virtualItemList73 = searchBorrowedItem0.searchBorrowedVirtualItem("", "src/Newsletter.csv");
// flaky:         searchBorrowedItem0.removeItem("src/Magazine.csv", "model.RegistrationFailedException: src/Book.csv");
        java.lang.Class<?> wildcardClass77 = searchBorrowedItem0.getClass();
        org.junit.Assert.assertNotNull(searchBorrowedItem0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(virtualBook8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(rentedItemArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(bookArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(cDArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(magazineArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(bookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cDArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(magazineArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(bookArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(cDArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(magazineArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(client67);
        org.junit.Assert.assertNotNull(virtualItemList73);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test2464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2464");
        model.BuySpecialItems buySpecialItems0 = new model.BuySpecialItems();
        model.Payment payment1 = null;
        buySpecialItems0.paymentAPI = payment1;
        model.PayMobileWallet payMobileWallet3 = new model.PayMobileWallet();
        buySpecialItems0.paymentAPI = payMobileWallet3;
        payMobileWallet3.amountPay = (-1L);
        payMobileWallet3.pay((double) (-1.0f));
        double double9 = payMobileWallet3.amountPay;
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-2.0d) + "'", double9 == (-2.0d));
    }

    @Test
    public void test2465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2465");
        model.ItemManagement itemManagement0 = new model.ItemManagement();
        model.Database database1 = null;
        itemManagement0.database = database1;
        model.BuySpecialItems buySpecialItems3 = new model.BuySpecialItems();
        model.Book book4 = null;
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        java.util.Collection<model.Book> bookCollection8 = null;
        model.Book book9 = null;
        model.CD cD10 = null;
        model.Magazine magazine11 = null;
        model.Book[] bookArray12 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList13 = new java.util.ArrayList<model.Book>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList13, bookArray12);
        model.CD[] cDArray15 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList16 = new java.util.ArrayList<model.CD>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList16, cDArray15);
        model.Magazine[] magazineArray18 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList19 = new java.util.ArrayList<model.Magazine>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList19, magazineArray18);
        model.ItemSearchResult itemSearchResult21 = new model.ItemSearchResult(book9, cD10, magazine11, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList16, (java.util.Collection<model.Magazine>) magazineList19);
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        itemSearchResult21.similarCD = cDList29;
        model.Book book36 = null;
        model.CD cD37 = null;
        model.Magazine magazine38 = null;
        model.Book[] bookArray39 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList40 = new java.util.ArrayList<model.Book>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList40, bookArray39);
        model.CD[] cDArray42 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList43 = new java.util.ArrayList<model.CD>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList43, cDArray42);
        model.Magazine[] magazineArray45 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList46 = new java.util.ArrayList<model.Magazine>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList46, magazineArray45);
        model.ItemSearchResult itemSearchResult48 = new model.ItemSearchResult(book36, cD37, magazine38, (java.util.Collection<model.Book>) bookList40, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList46);
        model.ItemSearchResult itemSearchResult49 = new model.ItemSearchResult(book4, cD6, magazine7, bookCollection8, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList46);
        cD6.ID = (short) 10;
        boolean boolean53 = buySpecialItems3.buyAnItem((model.Item) cD6, (double) 0);
        itemManagement0.enableAnItem((model.Item) cD6);
        model.Database database55 = model.Database.database;
        model.Student student56 = new model.Student();
        int int57 = student56.ID;
        model.StudentOnlineResources studentOnlineResources58 = new model.StudentOnlineResources((model.Client) student56);
        student56.ID = '#';
        database55.addClient((model.Client) student56);
        itemManagement0.database = database55;
        model.Database database63 = itemManagement0.database;
        model.SearchVirtualItem searchVirtualItem64 = new model.SearchVirtualItem(database63);
        org.junit.Assert.assertNotNull(bookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cDArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(magazineArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(bookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cDArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(magazineArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(database63);
    }

    @Test
    public void test2466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2466");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.Student student5 = new model.Student();
        int int6 = student5.ID;
        model.StudentOnlineResources studentOnlineResources7 = new model.StudentOnlineResources((model.Client) student5);
        student5.ID = '#';
        java.lang.String str10 = student5.email;
        newsletterSubscriptionManager3.client = student5;
        model.Newsletter[] newsletterArray12 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList13 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList13, newsletterArray12);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager15 = new model.NewsletterSubscriptionManager(newsletterList13);
        newsletterSubscriptionManager3.newsletterSubscribed = newsletterList13;
        java.util.ArrayList<model.Newsletter> newsletterList17 = newsletterSubscriptionManager3.newsletterSubscribed;
        model.Newsletter[] newsletterArray18 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList19 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList19, newsletterArray18);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager21 = new model.NewsletterSubscriptionManager(newsletterList19);
        model.Client client22 = newsletterSubscriptionManager21.client;
        model.Student student23 = new model.Student();
        int int24 = student23.ID;
        model.StudentOnlineResources studentOnlineResources25 = new model.StudentOnlineResources((model.Client) student23);
        student23.ID = '#';
        java.lang.String str28 = student23.email;
        newsletterSubscriptionManager21.client = student23;
        model.Newsletter[] newsletterArray30 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList31 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList31, newsletterArray30);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager33 = new model.NewsletterSubscriptionManager(newsletterList31);
        newsletterSubscriptionManager21.newsletterSubscribed = newsletterList31;
        newsletterSubscriptionManager3.newsletterSubscribed = newsletterList31;
        java.util.ArrayList<model.Newsletter> newsletterList36 = newsletterSubscriptionManager3.newsletterSubscribed;
        model.UniProvidedNewsletter uniProvidedNewsletter37 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter37.title = "";
// flaky:         newsletterSubscriptionManager3.cancelSubscription((model.Newsletter) uniProvidedNewsletter37);
        uniProvidedNewsletter37.title = "model.RegistrationFailedException: src/Magazine.csv";
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(newsletterArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(newsletterList17);
        org.junit.Assert.assertNotNull(newsletterArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(client22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(newsletterArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(newsletterList36);
    }

    @Test
    public void test2467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2467");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.LibraryManagementTeam libraryManagementTeam1 = requestForum0.managementTeam;
        model.LibraryManagementTeam libraryManagementTeam2 = new model.LibraryManagementTeam();
        int int3 = libraryManagementTeam2.ID;
        int int4 = libraryManagementTeam2.accessCode;
        requestForum0.managementTeam = libraryManagementTeam2;
        model.LibraryManagementTeam libraryManagementTeam6 = new model.LibraryManagementTeam();
        int int7 = libraryManagementTeam6.ID;
        int int8 = libraryManagementTeam6.accessCode;
        libraryManagementTeam6.accessCode = (short) -1;
        int int11 = libraryManagementTeam6.accessCode;
        requestForum0.managementTeam = libraryManagementTeam6;
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertNotNull(libraryManagementTeam1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test2468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2468");
        model.VirtualItemContent virtualItemContent1 = new model.VirtualItemContent("hi!");
        java.lang.String str2 = virtualItemContent1.link;
        java.lang.String str4 = virtualItemContent1.getContent("");
        java.lang.String str6 = virtualItemContent1.getContent("model.RegistrationFailedException: ");
        virtualItemContent1.link = "";
        java.lang.String str9 = virtualItemContent1.link;
        java.lang.String str11 = virtualItemContent1.getContent("src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test2469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2469");
        model.Course course0 = new model.Course();
        java.lang.String str1 = course0.code;
        java.lang.String str2 = course0.subject;
        course0.subject = "model.RegistrationFailedException: ";
        int int5 = course0.year;
        course0.subject = "src/CD.csv";
        java.lang.String str8 = course0.subject;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/CD.csv" + "'", str8, "src/CD.csv");
    }

    @Test
    public void test2470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2470");
        model.CD cD1 = new model.CD("model.RegistrationFailedException: src/VirtualBook.csv");
    }

    @Test
    public void test2471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2471");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.Database.database = database7;
        java.lang.String str10 = database7.virtualItemFilePath;
        java.lang.String str11 = database7.getBookFilePath();
        database7.itemPath = "src/Magazine.csv";
        model.Login login14 = model.Login.makeLogin(database7);
        boolean boolean16 = database7.addItem("src/Client.csv");
        model.SearchItems searchItems17 = new model.SearchItems(database7);
        model.CD cD19 = searchItems17.getCD("src/Client.csv");
        java.util.Collection<model.Book> bookCollection21 = searchItems17.getSimilarBooks("src/CD.csv");
        model.ItemSearchResult itemSearchResult23 = searchItems17.searchItem("src/CD.csv");
        model.Magazine magazine25 = searchItems17.getMagazine("");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "src/Newsletter.csv" + "'", str10, "src/Newsletter.csv");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "src/Book.csv" + "'", str11, "src/Book.csv");
        org.junit.Assert.assertNotNull(login14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(cD19);
        org.junit.Assert.assertNotNull(bookCollection21);
        org.junit.Assert.assertNotNull(itemSearchResult23);
        org.junit.Assert.assertNull(magazine25);
    }

    @Test
    public void test2472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2472");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        boolean boolean4 = borrowingManager3.canRent();
        model.Client client5 = borrowingManager3.client;
        double double6 = borrowingManager3.checkBalanceOwed();
        double double7 = borrowingManager3.checkBalanceOwed();
        model.Client client8 = borrowingManager3.client;
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(client5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNull(client8);
    }

    @Test
    public void test2473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2473");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getBookFilePath();
        model.SearchClient searchClient9 = model.SearchClient.makeSearchClient(database7);
        model.ValidateRegistration validateRegistration10 = new model.ValidateRegistration();
        model.Student student11 = new model.Student();
        student11.viewMyOnlineResource();
        boolean boolean13 = validateRegistration10.validateStaffRegistration((model.Staff) student11);
        model.RentAndReturnSystem rentAndReturnSystem14 = new model.RentAndReturnSystem();
        model.Book book15 = null;
        model.CD cD17 = new model.CD("");
        model.Magazine magazine18 = null;
        java.util.Collection<model.Book> bookCollection19 = null;
        model.Book book20 = null;
        model.CD cD21 = null;
        model.Magazine magazine22 = null;
        model.Book[] bookArray23 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList24 = new java.util.ArrayList<model.Book>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList24, bookArray23);
        model.CD[] cDArray26 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList27 = new java.util.ArrayList<model.CD>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList27, cDArray26);
        model.Magazine[] magazineArray29 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList30 = new java.util.ArrayList<model.Magazine>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList30, magazineArray29);
        model.ItemSearchResult itemSearchResult32 = new model.ItemSearchResult(book20, cD21, magazine22, (java.util.Collection<model.Book>) bookList24, (java.util.Collection<model.CD>) cDList27, (java.util.Collection<model.Magazine>) magazineList30);
        model.Book book33 = null;
        model.CD cD34 = null;
        model.Magazine magazine35 = null;
        model.Book[] bookArray36 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList37 = new java.util.ArrayList<model.Book>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList37, bookArray36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        model.Magazine[] magazineArray42 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList43 = new java.util.ArrayList<model.Magazine>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList43, magazineArray42);
        model.ItemSearchResult itemSearchResult45 = new model.ItemSearchResult(book33, cD34, magazine35, (java.util.Collection<model.Book>) bookList37, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList43);
        itemSearchResult32.similarCD = cDList40;
        model.Book book47 = null;
        model.CD cD48 = null;
        model.Magazine magazine49 = null;
        model.Book[] bookArray50 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList51 = new java.util.ArrayList<model.Book>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList51, bookArray50);
        model.CD[] cDArray53 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList54 = new java.util.ArrayList<model.CD>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList54, cDArray53);
        model.Magazine[] magazineArray56 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList57 = new java.util.ArrayList<model.Magazine>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList57, magazineArray56);
        model.ItemSearchResult itemSearchResult59 = new model.ItemSearchResult(book47, cD48, magazine49, (java.util.Collection<model.Book>) bookList51, (java.util.Collection<model.CD>) cDList54, (java.util.Collection<model.Magazine>) magazineList57);
        model.ItemSearchResult itemSearchResult60 = new model.ItemSearchResult(book15, cD17, magazine18, bookCollection19, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList57);
        cD17.ID = (short) 10;
        cD17.canBePurchased = false;
        boolean boolean65 = cD17.canBePurchased;
        model.Faculty faculty66 = new model.Faculty();
        boolean boolean67 = rentAndReturnSystem14.rentAnItem((model.Item) cD17, (model.Client) faculty66);
        java.lang.String str68 = faculty66.faculty;
        model.RentedItem[] rentedItemArray69 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList70 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList70, rentedItemArray69);
        model.BorrowingManager borrowingManager72 = new model.BorrowingManager(rentedItemList70);
        boolean boolean73 = borrowingManager72.canRent();
        model.Client client74 = borrowingManager72.client;
        faculty66.borrowManager = borrowingManager72;
        java.util.Collection<model.Course> courseCollection76 = faculty66.courses;
        model.NewsletterSubscriptionManager newsletterSubscriptionManager77 = faculty66.newsletterManager;
        boolean boolean78 = validateRegistration10.validateStaffRegistration((model.Staff) faculty66);
        database7.addClient((model.Client) faculty66);
        faculty66.faculty = "model.LoginFailedException: hi!";
        model.Visitor visitor82 = new model.Visitor();
        model.VirtualBook[] virtualBookArray83 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList84 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList84, virtualBookArray83);
        visitor82.virtualBooksAvailable = virtualBookList84;
        faculty66.virtualBooksAvailable = virtualBookList84;
        java.util.ArrayList<model.VirtualBook> virtualBookList88 = faculty66.virtualBooksAvailable;
        java.util.Collection<model.Course> courseCollection89 = faculty66.courses;
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/Book.csv" + "'", str8, "src/Book.csv");
        org.junit.Assert.assertNotNull(searchClient9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(bookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(cDArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(magazineArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(bookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(magazineArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(bookArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(cDArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(magazineArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(rentedItemArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(client74);
        org.junit.Assert.assertNull(courseCollection76);
        org.junit.Assert.assertNull(newsletterSubscriptionManager77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(virtualBookArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(virtualBookList88);
        org.junit.Assert.assertNull(courseCollection89);
    }

    @Test
    public void test2474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2474");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter54 = null;
        model.PaidNewsletter paidNewsletter55 = null;
        model.VirtualItemSearchResult virtualItemSearchResult56 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter54, paidNewsletter55);
        model.PaidNewsletter paidNewsletter57 = virtualItemSearchResult56.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter58 = virtualItemSearchResult56.getUniNewsletter();
        model.PaidNewsletter paidNewsletter59 = virtualItemSearchResult56.getPaidNewsletter();
        model.UniProvidedNewsletter uniProvidedNewsletter60 = virtualItemSearchResult56.getUniNewsletter();
        model.PaidNewsletter paidNewsletter61 = null;
        virtualItemSearchResult56.setPaidNewsletter(paidNewsletter61);
        model.VirtualBook virtualBook63 = virtualItemSearchResult56.virtualBook;
        int int64 = virtualBook63.edition;
        java.lang.String str65 = virtualBook63.title;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertNull(paidNewsletter57);
        org.junit.Assert.assertNull(uniProvidedNewsletter58);
        org.junit.Assert.assertNull(paidNewsletter59);
        org.junit.Assert.assertNull(uniProvidedNewsletter60);
        org.junit.Assert.assertNotNull(virtualBook63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
    }

    @Test
    public void test2475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2475");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "src/Book.csv", "src/CD.csv" };
        model.Item item6 = model.ItemFactory.makeItem("", strArray5);
        model.Item item7 = model.ItemFactory.makeItem("model.RentingNotAllowedException: hi!", strArray5);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNull(item6);
        org.junit.Assert.assertNull(item7);
    }

    @Test
    public void test2476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2476");
        model.LibraryManagementTeam libraryManagementTeam0 = new model.LibraryManagementTeam();
        int int1 = libraryManagementTeam0.ID;
        int int2 = libraryManagementTeam0.accessCode;
        libraryManagementTeam0.accessCode = 'a';
        libraryManagementTeam0.ID = (byte) 1;
        model.Item item8 = libraryManagementTeam0.selectAnItemFromDatabase((int) (byte) 1);
        int int9 = libraryManagementTeam0.ID;
        libraryManagementTeam0.ID = '4';
        model.ItemManagement itemManagement12 = null;
        libraryManagementTeam0.itemManagement = itemManagement12;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(item8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }

    @Test
    public void test2477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2477");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.Database.database = database7;
        java.lang.String str10 = database7.virtualItemFilePath;
        java.lang.String str11 = database7.getBookFilePath();
        database7.itemPath = "src/Magazine.csv";
        model.Login login14 = model.Login.makeLogin(database7);
        boolean boolean16 = database7.addItem("src/Client.csv");
        model.SearchItems searchItems17 = new model.SearchItems(database7);
        model.ItemSearchResult itemSearchResult19 = searchItems17.searchItem("hi!");
        model.ItemSearchResult itemSearchResult21 = searchItems17.searchItem("src/Newsletter.csv");
        model.ItemSearchResult itemSearchResult23 = searchItems17.searchItem("model.RegistrationFailedException: src/Magazine.csv");
        java.util.Collection<model.Book> bookCollection25 = searchItems17.getSimilarBooks("");
        model.Book book27 = searchItems17.getBook("src/Book.csv");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "src/Newsletter.csv" + "'", str10, "src/Newsletter.csv");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "src/Book.csv" + "'", str11, "src/Book.csv");
        org.junit.Assert.assertNotNull(login14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(itemSearchResult19);
        org.junit.Assert.assertNotNull(itemSearchResult21);
        org.junit.Assert.assertNotNull(itemSearchResult23);
        org.junit.Assert.assertNotNull(bookCollection25);
        org.junit.Assert.assertNull(book27);
    }

    @Test
    public void test2478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2478");
        model.Course course0 = new model.Course();
        java.lang.String str1 = course0.code;
        java.lang.String str2 = course0.subject;
        course0.subject = "model.RegistrationFailedException: ";
        course0.year = 36;
        int int7 = course0.year;
        course0.code = "model.RentingNotAllowedException: src/Magazine.csv";
        java.lang.String str10 = course0.subject;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 36 + "'", int7 == 36);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "model.RegistrationFailedException: " + "'", str10, "model.RegistrationFailedException: ");
    }

    @Test
    public void test2479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2479");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.Database.database = database7;
        java.lang.String str10 = database7.virtualItemFilePath;
        model.Login login11 = new model.Login(database7);
        java.lang.String str12 = database7.getClientFilePath();
        java.lang.String str13 = database7.getVirtualBookFilePath();
        java.lang.String str14 = database7.getCDFilePath();
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "src/Newsletter.csv" + "'", str10, "src/Newsletter.csv");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "src/Client.csv" + "'", str12, "src/Client.csv");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "src/VirtualBook.csv" + "'", str13, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "src/CD.csv" + "'", str14, "src/CD.csv");
    }

    @Test
    public void test2480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2480");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.BuySpecialItems buySpecialItems1 = new model.BuySpecialItems();
        model.PayDebit payDebit2 = new model.PayDebit();
        buySpecialItems1.paymentAPI = payDebit2;
        rentAndReturnSystem0.paymentAPI = payDebit2;
        model.PayMobileWallet payMobileWallet5 = new model.PayMobileWallet();
        payMobileWallet5.amountPay = 100.0f;
        rentAndReturnSystem0.paymentAPI = payMobileWallet5;
        payMobileWallet5.amountPay = '4';
    }

    @Test
    public void test2481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2481");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        model.Book book4 = null;
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        java.util.Collection<model.Book> bookCollection8 = null;
        model.Book book9 = null;
        model.CD cD10 = null;
        model.Magazine magazine11 = null;
        model.Book[] bookArray12 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList13 = new java.util.ArrayList<model.Book>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList13, bookArray12);
        model.CD[] cDArray15 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList16 = new java.util.ArrayList<model.CD>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList16, cDArray15);
        model.Magazine[] magazineArray18 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList19 = new java.util.ArrayList<model.Magazine>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList19, magazineArray18);
        model.ItemSearchResult itemSearchResult21 = new model.ItemSearchResult(book9, cD10, magazine11, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList16, (java.util.Collection<model.Magazine>) magazineList19);
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        itemSearchResult21.similarCD = cDList29;
        model.Book book36 = null;
        model.CD cD37 = null;
        model.Magazine magazine38 = null;
        model.Book[] bookArray39 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList40 = new java.util.ArrayList<model.Book>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList40, bookArray39);
        model.CD[] cDArray42 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList43 = new java.util.ArrayList<model.CD>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList43, cDArray42);
        model.Magazine[] magazineArray45 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList46 = new java.util.ArrayList<model.Magazine>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList46, magazineArray45);
        model.ItemSearchResult itemSearchResult48 = new model.ItemSearchResult(book36, cD37, magazine38, (java.util.Collection<model.Book>) bookList40, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList46);
        model.ItemSearchResult itemSearchResult49 = new model.ItemSearchResult(book4, cD6, magazine7, bookCollection8, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList46);
        cD6.ID = (short) 10;
        borrowingManager3.removeRentedItem((model.Item) cD6);
        float float53 = borrowingManager3.amountOwned;
        int int54 = borrowingManager3.itemsBorrowedCount;
        float float55 = borrowingManager3.amountOwned;
        model.Student student56 = new model.Student();
        int int57 = student56.ID;
        model.StudentOnlineResources studentOnlineResources58 = new model.StudentOnlineResources((model.Client) student56);
        student56.ID = '#';
        java.lang.String str61 = student56.email;
        borrowingManager3.client = student56;
        java.lang.String str63 = student56.username;
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(bookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cDArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(magazineArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(bookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cDArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(magazineArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + 0.0f + "'", float53 == 0.0f);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + 0.0f + "'", float55 == 0.0f);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(str63);
    }

    @Test
    public void test2482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2482");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.Student student5 = new model.Student();
        int int6 = student5.ID;
        model.StudentOnlineResources studentOnlineResources7 = new model.StudentOnlineResources((model.Client) student5);
        student5.ID = '#';
        java.lang.String str10 = student5.email;
        newsletterSubscriptionManager3.client = student5;
        model.BuySpecialItems buySpecialItems12 = new model.BuySpecialItems();
        model.Book book13 = null;
        model.CD cD15 = new model.CD("");
        model.Magazine magazine16 = null;
        java.util.Collection<model.Book> bookCollection17 = null;
        model.Book book18 = null;
        model.CD cD19 = null;
        model.Magazine magazine20 = null;
        model.Book[] bookArray21 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList22 = new java.util.ArrayList<model.Book>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList22, bookArray21);
        model.CD[] cDArray24 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList25 = new java.util.ArrayList<model.CD>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList25, cDArray24);
        model.Magazine[] magazineArray27 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList28 = new java.util.ArrayList<model.Magazine>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList28, magazineArray27);
        model.ItemSearchResult itemSearchResult30 = new model.ItemSearchResult(book18, cD19, magazine20, (java.util.Collection<model.Book>) bookList22, (java.util.Collection<model.CD>) cDList25, (java.util.Collection<model.Magazine>) magazineList28);
        model.Book book31 = null;
        model.CD cD32 = null;
        model.Magazine magazine33 = null;
        model.Book[] bookArray34 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList35 = new java.util.ArrayList<model.Book>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList35, bookArray34);
        model.CD[] cDArray37 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList38 = new java.util.ArrayList<model.CD>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList38, cDArray37);
        model.Magazine[] magazineArray40 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList41 = new java.util.ArrayList<model.Magazine>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList41, magazineArray40);
        model.ItemSearchResult itemSearchResult43 = new model.ItemSearchResult(book31, cD32, magazine33, (java.util.Collection<model.Book>) bookList35, (java.util.Collection<model.CD>) cDList38, (java.util.Collection<model.Magazine>) magazineList41);
        itemSearchResult30.similarCD = cDList38;
        model.Book book45 = null;
        model.CD cD46 = null;
        model.Magazine magazine47 = null;
        model.Book[] bookArray48 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList49 = new java.util.ArrayList<model.Book>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList49, bookArray48);
        model.CD[] cDArray51 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList52 = new java.util.ArrayList<model.CD>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList52, cDArray51);
        model.Magazine[] magazineArray54 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList55 = new java.util.ArrayList<model.Magazine>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList55, magazineArray54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult(book45, cD46, magazine47, (java.util.Collection<model.Book>) bookList49, (java.util.Collection<model.CD>) cDList52, (java.util.Collection<model.Magazine>) magazineList55);
        model.ItemSearchResult itemSearchResult58 = new model.ItemSearchResult(book13, cD15, magazine16, bookCollection17, (java.util.Collection<model.CD>) cDList38, (java.util.Collection<model.Magazine>) magazineList55);
        cD15.ID = (short) 10;
        boolean boolean62 = buySpecialItems12.buyAnItem((model.Item) cD15, (double) 0);
        model.PayDebit payDebit63 = new model.PayDebit();
        buySpecialItems12.paymentAPI = payDebit63;
        newsletterSubscriptionManager3.paymentAPI = payDebit63;
        double double66 = payDebit63.amountPay;
        payDebit63.amountPay = (short) 1;
        payDebit63.pay(10.0d);
        payDebit63.amountPay = 2108586.0d;
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(bookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(cDArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(magazineArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(bookArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(cDArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(magazineArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(bookArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(cDArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(magazineArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
    }

    @Test
    public void test2483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2483");
        model.Course course0 = new model.Course();
        java.lang.String str1 = course0.code;
        int int2 = course0.year;
        java.lang.String str3 = course0.code;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test2484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2484");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.VirtualItemContent virtualItemContent5 = virtualBook4.content;
        model.Student student6 = new model.Student();
        int int7 = student6.ID;
        model.StudentOnlineResources studentOnlineResources8 = new model.StudentOnlineResources((model.Client) student6);
        model.VirtualBook virtualBook10 = studentOnlineResources8.searchAccessibleBook("");
        model.CD cD12 = new model.CD("");
        model.Magazine magazine13 = null;
        model.Book book14 = null;
        model.CD cD15 = null;
        model.Magazine magazine16 = null;
        model.Book[] bookArray17 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList18 = new java.util.ArrayList<model.Book>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList18, bookArray17);
        model.CD[] cDArray20 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList21 = new java.util.ArrayList<model.CD>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList21, cDArray20);
        model.Magazine[] magazineArray23 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList24 = new java.util.ArrayList<model.Magazine>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList24, magazineArray23);
        model.ItemSearchResult itemSearchResult26 = new model.ItemSearchResult(book14, cD15, magazine16, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList21, (java.util.Collection<model.Magazine>) magazineList24);
        model.Book book27 = null;
        model.CD cD28 = null;
        model.Magazine magazine29 = null;
        model.Book[] bookArray30 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList31 = new java.util.ArrayList<model.Book>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList31, bookArray30);
        model.CD[] cDArray33 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList34 = new java.util.ArrayList<model.CD>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList34, cDArray33);
        model.Magazine[] magazineArray36 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList37 = new java.util.ArrayList<model.Magazine>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList37, magazineArray36);
        model.ItemSearchResult itemSearchResult39 = new model.ItemSearchResult(book27, cD28, magazine29, (java.util.Collection<model.Book>) bookList31, (java.util.Collection<model.CD>) cDList34, (java.util.Collection<model.Magazine>) magazineList37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        itemSearchResult39.similarCD = cDList41;
        model.Book book44 = null;
        model.CD cD45 = null;
        model.Magazine magazine46 = null;
        model.Book[] bookArray47 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList48 = new java.util.ArrayList<model.Book>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList48, bookArray47);
        model.CD[] cDArray50 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList51 = new java.util.ArrayList<model.CD>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList51, cDArray50);
        model.Magazine[] magazineArray53 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList54 = new java.util.ArrayList<model.Magazine>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList54, magazineArray53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult(book44, cD45, magazine46, (java.util.Collection<model.Book>) bookList48, (java.util.Collection<model.CD>) cDList51, (java.util.Collection<model.Magazine>) magazineList54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult((model.Book) virtualBook10, cD12, magazine13, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList54);
        int int58 = virtualBook10.ID;
        int int59 = virtualBook10.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter60 = null;
        model.PaidNewsletter paidNewsletter61 = null;
        model.VirtualItemSearchResult virtualItemSearchResult62 = new model.VirtualItemSearchResult(virtualBook10, uniProvidedNewsletter60, paidNewsletter61);
        model.PaidNewsletter paidNewsletter63 = virtualItemSearchResult62.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter64 = new model.UniProvidedNewsletter();
        virtualItemSearchResult62.setUniNewsletter(uniProvidedNewsletter64);
        java.lang.String str66 = uniProvidedNewsletter64.title;
        model.PaidNewsletter paidNewsletter67 = null;
        model.VirtualItemSearchResult virtualItemSearchResult68 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter64, paidNewsletter67);
        model.VirtualBook virtualBook69 = virtualItemSearchResult68.virtualBook;
        model.PaidNewsletter paidNewsletter70 = new model.PaidNewsletter();
        virtualItemSearchResult68.setPaidNewsletter(paidNewsletter70);
        paidNewsletter70.title = "";
        paidNewsletter70.subscriptionPrice = 1719839;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNull(virtualItemContent5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(virtualBook10);
        org.junit.Assert.assertNotNull(bookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(cDArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(magazineArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(bookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(magazineArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(bookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(cDArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(magazineArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 20 + "'", int59 == 20);
        org.junit.Assert.assertNull(paidNewsletter63);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(virtualBook69);
    }

    @Test
    public void test2485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2485");
        model.UniProvidedNewsletter uniProvidedNewsletter0 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter0.title = "hi!";
        model.Faculty faculty3 = new model.Faculty();
        java.lang.String str4 = faculty3.email;
        boolean boolean5 = uniProvidedNewsletter0.equals((java.lang.Object) str4);
        model.Database database13 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str14 = database13.getVirtualBookFilePath();
        model.Database.database = database13;
        java.lang.String str16 = database13.virtualItemFilePath;
        model.Login login17 = model.Login.makeLogin(database13);
        model.SearchItems searchItems18 = new model.SearchItems(database13);
        boolean boolean19 = uniProvidedNewsletter0.equals((java.lang.Object) searchItems18);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "src/VirtualBook.csv" + "'", str14, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "src/Newsletter.csv" + "'", str16, "src/Newsletter.csv");
        org.junit.Assert.assertNotNull(login17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test2486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2486");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.Database.database = database7;
        java.lang.String str10 = database7.getCDFilePath();
        java.lang.String str11 = database7.getNewspaperFilePath();
        model.SearchItems searchItems12 = new model.SearchItems(database7);
        model.Magazine magazine14 = searchItems12.getMagazine("model.LoginFailedException: hi!");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "src/CD.csv" + "'", str10, "src/CD.csv");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "src/Newsletter.csv" + "'", str11, "src/Newsletter.csv");
        org.junit.Assert.assertNull(magazine14);
    }

    @Test
    public void test2487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2487");
        model.Database database7 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.SearchVirtualItem searchVirtualItem8 = new model.SearchVirtualItem(database7);
        model.Login login9 = new model.Login(database7);
        model.Database database10 = login9.db;
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(database10);
    }

    @Test
    public void test2488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2488");
        model.Database database0 = model.Database.database;
        model.Student student1 = new model.Student();
        int int2 = student1.ID;
        model.StudentOnlineResources studentOnlineResources3 = new model.StudentOnlineResources((model.Client) student1);
        student1.ID = '#';
        database0.addClient((model.Client) student1);
        java.lang.String str7 = database0.getCDFilePath();
        java.util.ArrayList<java.lang.String> strList8 = database0.getAllItems();
        model.Faculty faculty9 = new model.Faculty();
        faculty9.username = "hi!";
        java.lang.String str12 = faculty9.username;
        database0.addClient((model.Client) faculty9);
        java.lang.String str14 = faculty9.faculty;
        model.BorrowingManager borrowingManager15 = faculty9.borrowManager;
        org.junit.Assert.assertNotNull(database0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "src/CD.csv" + "'", str7, "src/CD.csv");
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(borrowingManager15);
    }

    @Test
    public void test2489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2489");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getBookFilePath();
        database7.itemPath = "hi!";
        model.SearchVirtualItem searchVirtualItem11 = new model.SearchVirtualItem(database7);
        model.PaidNewsletter paidNewsletter13 = searchVirtualItem11.getPaidNewsletter("src/BorrowedItems.csv");
        model.VirtualItemSearchResult virtualItemSearchResult15 = searchVirtualItem11.searchVirtualItem("model.RentingNotAllowedException: hi!");
        model.VirtualBook virtualBook17 = searchVirtualItem11.getVirtualBook("model.RegistrationFailedException: src/VirtualBook.csv");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/Book.csv" + "'", str8, "src/Book.csv");
        org.junit.Assert.assertNull(paidNewsletter13);
        org.junit.Assert.assertNotNull(virtualItemSearchResult15);
        org.junit.Assert.assertNull(virtualBook17);
    }

    @Test
    public void test2490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2490");
        model.Book book0 = null;
        model.CD cD2 = new model.CD("");
        model.Magazine magazine3 = null;
        java.util.Collection<model.Book> bookCollection4 = null;
        model.Book book5 = null;
        model.CD cD6 = null;
        model.Magazine magazine7 = null;
        model.Book[] bookArray8 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList9 = new java.util.ArrayList<model.Book>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList9, bookArray8);
        model.CD[] cDArray11 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList12 = new java.util.ArrayList<model.CD>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList12, cDArray11);
        model.Magazine[] magazineArray14 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList15 = new java.util.ArrayList<model.Magazine>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList15, magazineArray14);
        model.ItemSearchResult itemSearchResult17 = new model.ItemSearchResult(book5, cD6, magazine7, (java.util.Collection<model.Book>) bookList9, (java.util.Collection<model.CD>) cDList12, (java.util.Collection<model.Magazine>) magazineList15);
        model.Book book18 = null;
        model.CD cD19 = null;
        model.Magazine magazine20 = null;
        model.Book[] bookArray21 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList22 = new java.util.ArrayList<model.Book>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList22, bookArray21);
        model.CD[] cDArray24 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList25 = new java.util.ArrayList<model.CD>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList25, cDArray24);
        model.Magazine[] magazineArray27 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList28 = new java.util.ArrayList<model.Magazine>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList28, magazineArray27);
        model.ItemSearchResult itemSearchResult30 = new model.ItemSearchResult(book18, cD19, magazine20, (java.util.Collection<model.Book>) bookList22, (java.util.Collection<model.CD>) cDList25, (java.util.Collection<model.Magazine>) magazineList28);
        itemSearchResult17.similarCD = cDList25;
        model.Book book32 = null;
        model.CD cD33 = null;
        model.Magazine magazine34 = null;
        model.Book[] bookArray35 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList36 = new java.util.ArrayList<model.Book>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList36, bookArray35);
        model.CD[] cDArray38 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList39 = new java.util.ArrayList<model.CD>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList39, cDArray38);
        model.Magazine[] magazineArray41 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList42 = new java.util.ArrayList<model.Magazine>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList42, magazineArray41);
        model.ItemSearchResult itemSearchResult44 = new model.ItemSearchResult(book32, cD33, magazine34, (java.util.Collection<model.Book>) bookList36, (java.util.Collection<model.CD>) cDList39, (java.util.Collection<model.Magazine>) magazineList42);
        model.ItemSearchResult itemSearchResult45 = new model.ItemSearchResult(book0, cD2, magazine3, bookCollection4, (java.util.Collection<model.CD>) cDList25, (java.util.Collection<model.Magazine>) magazineList42);
        model.CD cD46 = null;
        itemSearchResult45.cd = cD46;
        model.CD cD48 = itemSearchResult45.cd;
        model.Magazine magazine49 = itemSearchResult45.magazine;
        org.junit.Assert.assertNotNull(bookArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(cDArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(magazineArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(bookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(cDArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(magazineArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(bookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(cDArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(magazineArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(cD48);
        org.junit.Assert.assertNull(magazine49);
    }

    @Test
    public void test2491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2491");
        model.Course course0 = new model.Course();
        java.lang.String str1 = course0.code;
        java.lang.String str2 = course0.subject;
        course0.subject = "model.RegistrationFailedException: ";
        course0.year = 36;
        course0.code = "model.LoginFailedException: hi!";
        java.lang.String str9 = course0.subject;
        java.lang.String str10 = course0.subject;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "model.RegistrationFailedException: " + "'", str9, "model.RegistrationFailedException: ");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "model.RegistrationFailedException: " + "'", str10, "model.RegistrationFailedException: ");
    }

    @Test
    public void test2492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2492");
        model.ItemManagement itemManagement0 = new model.ItemManagement();
        model.Item item2 = itemManagement0.selectAnItemFromDatabase((int) (short) 0);
        model.Database database3 = model.Database.database;
        model.Student student4 = new model.Student();
        int int5 = student4.ID;
        model.StudentOnlineResources studentOnlineResources6 = new model.StudentOnlineResources((model.Client) student4);
        student4.ID = '#';
        database3.addClient((model.Client) student4);
        itemManagement0.database = database3;
        model.Database database11 = itemManagement0.database;
        model.Register register12 = model.Register.makeRegister(database11);
        boolean boolean14 = database11.addItem("model.RegistrationFailedException: src/Book.csv");
        model.Login login15 = model.Login.makeLogin(database11);
        org.junit.Assert.assertNull(item2);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(register12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(login15);
    }

    @Test
    public void test2493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2493");
        model.VirtualItemContent virtualItemContent1 = new model.VirtualItemContent("hi!");
        java.lang.String str2 = virtualItemContent1.link;
        java.lang.String str4 = virtualItemContent1.getContent("");
        java.lang.String str5 = virtualItemContent1.link;
        java.lang.String str7 = virtualItemContent1.getContent("model.RentingNotAllowedException: src/Magazine.csv");
        java.lang.String str9 = virtualItemContent1.getContent("model.RegistrationFailedException: src/Magazine.csv");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
    }

    @Test
    public void test2494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2494");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.Payment payment1 = rentAndReturnSystem0.paymentAPI;
        model.PayMobileWallet payMobileWallet2 = new model.PayMobileWallet();
        payMobileWallet2.amountPay = 100.0f;
        payMobileWallet2.pay((double) 100L);
        rentAndReturnSystem0.paymentAPI = payMobileWallet2;
        model.Payment payment8 = rentAndReturnSystem0.paymentAPI;
        model.Payment payment9 = rentAndReturnSystem0.paymentAPI;
        model.Student student10 = new model.Student();
        int int11 = student10.ID;
        model.StudentOnlineResources studentOnlineResources12 = new model.StudentOnlineResources((model.Client) student10);
        model.VirtualBook virtualBook14 = studentOnlineResources12.searchAccessibleBook("");
        model.CD cD16 = new model.CD("");
        model.Magazine magazine17 = null;
        model.Book book18 = null;
        model.CD cD19 = null;
        model.Magazine magazine20 = null;
        model.Book[] bookArray21 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList22 = new java.util.ArrayList<model.Book>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList22, bookArray21);
        model.CD[] cDArray24 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList25 = new java.util.ArrayList<model.CD>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList25, cDArray24);
        model.Magazine[] magazineArray27 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList28 = new java.util.ArrayList<model.Magazine>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList28, magazineArray27);
        model.ItemSearchResult itemSearchResult30 = new model.ItemSearchResult(book18, cD19, magazine20, (java.util.Collection<model.Book>) bookList22, (java.util.Collection<model.CD>) cDList25, (java.util.Collection<model.Magazine>) magazineList28);
        model.Book book31 = null;
        model.CD cD32 = null;
        model.Magazine magazine33 = null;
        model.Book[] bookArray34 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList35 = new java.util.ArrayList<model.Book>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList35, bookArray34);
        model.CD[] cDArray37 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList38 = new java.util.ArrayList<model.CD>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList38, cDArray37);
        model.Magazine[] magazineArray40 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList41 = new java.util.ArrayList<model.Magazine>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList41, magazineArray40);
        model.ItemSearchResult itemSearchResult43 = new model.ItemSearchResult(book31, cD32, magazine33, (java.util.Collection<model.Book>) bookList35, (java.util.Collection<model.CD>) cDList38, (java.util.Collection<model.Magazine>) magazineList41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        itemSearchResult43.similarCD = cDList45;
        model.Book book48 = null;
        model.CD cD49 = null;
        model.Magazine magazine50 = null;
        model.Book[] bookArray51 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList52 = new java.util.ArrayList<model.Book>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList52, bookArray51);
        model.CD[] cDArray54 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList55 = new java.util.ArrayList<model.CD>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList55, cDArray54);
        model.Magazine[] magazineArray57 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList58 = new java.util.ArrayList<model.Magazine>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList58, magazineArray57);
        model.ItemSearchResult itemSearchResult60 = new model.ItemSearchResult(book48, cD49, magazine50, (java.util.Collection<model.Book>) bookList52, (java.util.Collection<model.CD>) cDList55, (java.util.Collection<model.Magazine>) magazineList58);
        model.ItemSearchResult itemSearchResult61 = new model.ItemSearchResult((model.Book) virtualBook14, cD16, magazine17, (java.util.Collection<model.Book>) bookList22, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList58);
        int int62 = virtualBook14.ID;
        int int63 = virtualBook14.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter64 = null;
        model.PaidNewsletter paidNewsletter65 = null;
        model.VirtualItemSearchResult virtualItemSearchResult66 = new model.VirtualItemSearchResult(virtualBook14, uniProvidedNewsletter64, paidNewsletter65);
        boolean boolean67 = virtualBook14.isBookLost;
        model.VirtualItemContent virtualItemContent68 = virtualBook14.content;
        java.util.Calendar calendar69 = virtualBook14.date;
        virtualBook14.showContent();
        model.Student student71 = new model.Student();
        java.lang.String str72 = student71.username;
        boolean boolean73 = rentAndReturnSystem0.rentAnItem((model.Item) virtualBook14, (model.Client) student71);
        model.PayMobileWallet payMobileWallet74 = new model.PayMobileWallet();
        payMobileWallet74.amountPay = 100.0f;
        payMobileWallet74.amountPay = 41.0d;
        payMobileWallet74.pay(41.0d);
        payMobileWallet74.pay((-1.0d));
        rentAndReturnSystem0.paymentAPI = payMobileWallet74;
        org.junit.Assert.assertNull(payment1);
        org.junit.Assert.assertNotNull(payment8);
        org.junit.Assert.assertNotNull(payment9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(virtualBook14);
        org.junit.Assert.assertNotNull(bookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(cDArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(magazineArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(bookArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(cDArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(magazineArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(bookArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(cDArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(magazineArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 20 + "'", int63 == 20);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(virtualItemContent68);
        org.junit.Assert.assertNull(calendar69);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test2495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2495");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.StudentOnlineResources studentOnlineResources3 = new model.StudentOnlineResources((model.Client) student0);
        model.RentedItem[] rentedItemArray4 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList5 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList5, rentedItemArray4);
        model.BorrowingManager borrowingManager7 = new model.BorrowingManager(rentedItemList5);
        model.Visitor visitor8 = new model.Visitor();
        visitor8.email = "hi!";
        borrowingManager7.client = visitor8;
        studentOnlineResources3.client = visitor8;
        model.Client client13 = studentOnlineResources3.client;
        model.Client client14 = studentOnlineResources3.client;
        model.Client client15 = studentOnlineResources3.client;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(rentedItemArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(client13);
        org.junit.Assert.assertNotNull(client14);
        org.junit.Assert.assertNotNull(client15);
    }

    @Test
    public void test2496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2496");
        model.Book book0 = null;
        model.CD cD1 = null;
        model.Magazine magazine2 = null;
        model.Book[] bookArray3 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList4 = new java.util.ArrayList<model.Book>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList4, bookArray3);
        model.CD[] cDArray6 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList7 = new java.util.ArrayList<model.CD>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList7, cDArray6);
        model.Magazine[] magazineArray9 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList10 = new java.util.ArrayList<model.Magazine>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList10, magazineArray9);
        model.ItemSearchResult itemSearchResult12 = new model.ItemSearchResult(book0, cD1, magazine2, (java.util.Collection<model.Book>) bookList4, (java.util.Collection<model.CD>) cDList7, (java.util.Collection<model.Magazine>) magazineList10);
        model.CD[] cDArray13 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList14 = new java.util.ArrayList<model.CD>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList14, cDArray13);
        itemSearchResult12.similarCD = cDList14;
        model.Book book17 = null;
        itemSearchResult12.book = book17;
        model.Book book19 = null;
        model.CD cD20 = null;
        model.Magazine magazine21 = null;
        model.Book[] bookArray22 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList23 = new java.util.ArrayList<model.Book>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList23, bookArray22);
        model.CD[] cDArray25 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList26 = new java.util.ArrayList<model.CD>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList26, cDArray25);
        model.Magazine[] magazineArray28 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList29 = new java.util.ArrayList<model.Magazine>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList29, magazineArray28);
        model.ItemSearchResult itemSearchResult31 = new model.ItemSearchResult(book19, cD20, magazine21, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList29);
        itemSearchResult12.similarBooks = bookList23;
        model.Magazine magazine34 = new model.Magazine("src/Book.csv");
        itemSearchResult12.magazine = magazine34;
        model.Magazine magazine36 = itemSearchResult12.magazine;
        model.Book book37 = null;
        model.CD cD39 = new model.CD("");
        model.Magazine magazine40 = null;
        java.util.Collection<model.Book> bookCollection41 = null;
        model.Book book42 = null;
        model.CD cD43 = null;
        model.Magazine magazine44 = null;
        model.Book[] bookArray45 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList46 = new java.util.ArrayList<model.Book>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList46, bookArray45);
        model.CD[] cDArray48 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList49 = new java.util.ArrayList<model.CD>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList49, cDArray48);
        model.Magazine[] magazineArray51 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList52 = new java.util.ArrayList<model.Magazine>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList52, magazineArray51);
        model.ItemSearchResult itemSearchResult54 = new model.ItemSearchResult(book42, cD43, magazine44, (java.util.Collection<model.Book>) bookList46, (java.util.Collection<model.CD>) cDList49, (java.util.Collection<model.Magazine>) magazineList52);
        model.Book book55 = null;
        model.CD cD56 = null;
        model.Magazine magazine57 = null;
        model.Book[] bookArray58 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList59 = new java.util.ArrayList<model.Book>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList59, bookArray58);
        model.CD[] cDArray61 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList62 = new java.util.ArrayList<model.CD>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList62, cDArray61);
        model.Magazine[] magazineArray64 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList65 = new java.util.ArrayList<model.Magazine>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList65, magazineArray64);
        model.ItemSearchResult itemSearchResult67 = new model.ItemSearchResult(book55, cD56, magazine57, (java.util.Collection<model.Book>) bookList59, (java.util.Collection<model.CD>) cDList62, (java.util.Collection<model.Magazine>) magazineList65);
        itemSearchResult54.similarCD = cDList62;
        model.Book book69 = null;
        model.CD cD70 = null;
        model.Magazine magazine71 = null;
        model.Book[] bookArray72 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList73 = new java.util.ArrayList<model.Book>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList73, bookArray72);
        model.CD[] cDArray75 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList76 = new java.util.ArrayList<model.CD>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList76, cDArray75);
        model.Magazine[] magazineArray78 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList79 = new java.util.ArrayList<model.Magazine>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList79, magazineArray78);
        model.ItemSearchResult itemSearchResult81 = new model.ItemSearchResult(book69, cD70, magazine71, (java.util.Collection<model.Book>) bookList73, (java.util.Collection<model.CD>) cDList76, (java.util.Collection<model.Magazine>) magazineList79);
        model.ItemSearchResult itemSearchResult82 = new model.ItemSearchResult(book37, cD39, magazine40, bookCollection41, (java.util.Collection<model.CD>) cDList62, (java.util.Collection<model.Magazine>) magazineList79);
        model.Book book83 = null;
        itemSearchResult82.book = book83;
        java.util.Collection<model.Book> bookCollection85 = itemSearchResult82.similarBooks;
        model.CD cD86 = itemSearchResult82.cd;
        itemSearchResult12.cd = cD86;
        org.junit.Assert.assertNotNull(bookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(cDArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(magazineArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(cDArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(bookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(magazineArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazine36);
        org.junit.Assert.assertNotNull(bookArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(cDArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(magazineArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(bookArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(cDArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(magazineArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(bookArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(cDArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(magazineArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(bookCollection85);
        org.junit.Assert.assertNotNull(cD86);
    }

    @Test
    public void test2497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2497");
        model.SearchBorrowedItem searchBorrowedItem0 = model.SearchBorrowedItem.makeSearchBorrowedItem();
// flaky:         searchBorrowedItem0.removeItem("src/Book.csv", "");
        model.Student student4 = new model.Student();
        int int5 = student4.ID;
        model.StudentOnlineResources studentOnlineResources6 = new model.StudentOnlineResources((model.Client) student4);
        model.VirtualBook virtualBook8 = studentOnlineResources6.searchAccessibleBook("");
        java.lang.String str9 = virtualBook8.location;
        int int10 = virtualBook8.ID;
        virtualBook8.isBookLost = false;
        model.RentedItem[] rentedItemArray14 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList15 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList15, rentedItemArray14);
        model.BorrowingManager borrowingManager17 = new model.BorrowingManager(rentedItemList15);
        model.Book book18 = null;
        model.CD cD20 = new model.CD("");
        model.Magazine magazine21 = null;
        java.util.Collection<model.Book> bookCollection22 = null;
        model.Book book23 = null;
        model.CD cD24 = null;
        model.Magazine magazine25 = null;
        model.Book[] bookArray26 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList27 = new java.util.ArrayList<model.Book>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList27, bookArray26);
        model.CD[] cDArray29 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList30 = new java.util.ArrayList<model.CD>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList30, cDArray29);
        model.Magazine[] magazineArray32 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList33 = new java.util.ArrayList<model.Magazine>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList33, magazineArray32);
        model.ItemSearchResult itemSearchResult35 = new model.ItemSearchResult(book23, cD24, magazine25, (java.util.Collection<model.Book>) bookList27, (java.util.Collection<model.CD>) cDList30, (java.util.Collection<model.Magazine>) magazineList33);
        model.Book book36 = null;
        model.CD cD37 = null;
        model.Magazine magazine38 = null;
        model.Book[] bookArray39 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList40 = new java.util.ArrayList<model.Book>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList40, bookArray39);
        model.CD[] cDArray42 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList43 = new java.util.ArrayList<model.CD>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList43, cDArray42);
        model.Magazine[] magazineArray45 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList46 = new java.util.ArrayList<model.Magazine>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList46, magazineArray45);
        model.ItemSearchResult itemSearchResult48 = new model.ItemSearchResult(book36, cD37, magazine38, (java.util.Collection<model.Book>) bookList40, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList46);
        itemSearchResult35.similarCD = cDList43;
        model.Book book50 = null;
        model.CD cD51 = null;
        model.Magazine magazine52 = null;
        model.Book[] bookArray53 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList54 = new java.util.ArrayList<model.Book>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList54, bookArray53);
        model.CD[] cDArray56 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList57 = new java.util.ArrayList<model.CD>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList57, cDArray56);
        model.Magazine[] magazineArray59 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList60 = new java.util.ArrayList<model.Magazine>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList60, magazineArray59);
        model.ItemSearchResult itemSearchResult62 = new model.ItemSearchResult(book50, cD51, magazine52, (java.util.Collection<model.Book>) bookList54, (java.util.Collection<model.CD>) cDList57, (java.util.Collection<model.Magazine>) magazineList60);
        model.ItemSearchResult itemSearchResult63 = new model.ItemSearchResult(book18, cD20, magazine21, bookCollection22, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList60);
        cD20.ID = (short) 10;
        borrowingManager17.removeRentedItem((model.Item) cD20);
        model.Client client67 = borrowingManager17.client;
        model.Visitor visitor68 = new model.Visitor();
        borrowingManager17.client = visitor68;
        searchBorrowedItem0.addPhyscialItem((model.Item) virtualBook8, "", (model.Client) visitor68);
        java.util.ArrayList<model.VirtualItem> virtualItemList73 = searchBorrowedItem0.searchBorrowedVirtualItem("", "src/Newsletter.csv");
        java.util.ArrayList<model.VirtualItem> virtualItemList76 = searchBorrowedItem0.searchBorrowedVirtualItem("model.RegistrationFailedException: ", "model.RegistrationFailedException: src/Magazine.csv");
        org.junit.Assert.assertNotNull(searchBorrowedItem0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(virtualBook8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(rentedItemArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(bookArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(cDArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(magazineArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(bookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cDArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(magazineArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(bookArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(cDArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(magazineArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(client67);
        org.junit.Assert.assertNotNull(virtualItemList73);
        org.junit.Assert.assertNotNull(virtualItemList76);
    }

    @Test
    public void test2498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2498");
        model.PayCredit payCredit0 = new model.PayCredit();
        payCredit0.pay((double) (short) 100);
        payCredit0.amountPay = ' ';
        double double5 = payCredit0.amountPay;
        payCredit0.pay((double) 12);
        double double8 = payCredit0.amountPay;
        payCredit0.pay((-1.0d));
        payCredit0.pay((double) 37);
        payCredit0.pay((double) 4174920);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 32.0d + "'", double5 == 32.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 44.0d + "'", double8 == 44.0d);
    }

    @Test
    public void test2499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2499");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        virtualBook4.ID = (short) 10;
        int int54 = virtualBook4.ID;
        virtualBook4.showContent();
        java.time.LocalDate localDate56 = null;
        // The following exception was thrown during execution in test generation
        try {
            model.RentedItem rentedItem57 = new model.RentedItem((model.Item) virtualBook4, localDate56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.format(java.time.format.DateTimeFormatter)\" because \"borrowDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
    }

    @Test
    public void test2500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2500");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        model.VirtualItemContent virtualItemContent52 = virtualBook4.content;
        virtualBook4.location = "src/Book.csv";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(virtualItemContent52);
    }
}
