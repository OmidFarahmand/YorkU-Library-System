package randoop;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

    public static boolean debug = false;

    @Test
    public void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1501");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        java.lang.String str5 = virtualBook4.location;
        int int6 = virtualBook4.ID;
        virtualBook4.isBookLost = false;
        java.lang.String str9 = virtualBook4.author;
        java.lang.String str10 = virtualBook4.author;
        model.BuySpecialItems buySpecialItems11 = new model.BuySpecialItems();
        model.Payment payment12 = buySpecialItems11.paymentAPI;
        boolean boolean13 = virtualBook4.equals((java.lang.Object) buySpecialItems11);
        model.Payment payment14 = buySpecialItems11.paymentAPI;
        model.LibraryManagementTeam libraryManagementTeam15 = new model.LibraryManagementTeam();
        libraryManagementTeam15.accessCode = (short) 10;
        java.util.Collection<model.Request> requestCollection18 = libraryManagementTeam15.bookRequests;
        java.util.ArrayList<model.Item> itemList19 = libraryManagementTeam15.items;
        buySpecialItems11.purchasedItems = itemList19;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(payment12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(payment14);
        org.junit.Assert.assertNull(requestCollection18);
        org.junit.Assert.assertNotNull(itemList19);
    }

    @Test
    public void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1502");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.Database.database = database7;
        java.lang.String str10 = database7.virtualItemFilePath;
        java.lang.String str11 = database7.getCDFilePath();
        java.lang.String str12 = database7.getBookFilePath();
        model.SearchVirtualItem searchVirtualItem13 = new model.SearchVirtualItem(database7);
        model.PaidNewsletter paidNewsletter15 = searchVirtualItem13.getPaidNewsletter("src/Magazine.csv");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "model.RentingNotAllowedException: " + "'", str10, "model.RentingNotAllowedException: ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "src/CD.csv" + "'", str11, "src/CD.csv");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "src/Book.csv" + "'", str12, "src/Book.csv");
        org.junit.Assert.assertNull(paidNewsletter15);
    }

    @Test
    public void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1503");
        model.BuySpecialItems buySpecialItems0 = new model.BuySpecialItems();
        model.Book book1 = null;
        model.CD cD3 = new model.CD("");
        model.Magazine magazine4 = null;
        java.util.Collection<model.Book> bookCollection5 = null;
        model.Book book6 = null;
        model.CD cD7 = null;
        model.Magazine magazine8 = null;
        model.Book[] bookArray9 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList10 = new java.util.ArrayList<model.Book>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList10, bookArray9);
        model.CD[] cDArray12 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList13 = new java.util.ArrayList<model.CD>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList13, cDArray12);
        model.Magazine[] magazineArray15 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList16 = new java.util.ArrayList<model.Magazine>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList16, magazineArray15);
        model.ItemSearchResult itemSearchResult18 = new model.ItemSearchResult(book6, cD7, magazine8, (java.util.Collection<model.Book>) bookList10, (java.util.Collection<model.CD>) cDList13, (java.util.Collection<model.Magazine>) magazineList16);
        model.Book book19 = null;
        model.CD cD20 = null;
        model.Magazine magazine21 = null;
        model.Book[] bookArray22 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList23 = new java.util.ArrayList<model.Book>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList23, bookArray22);
        model.CD[] cDArray25 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList26 = new java.util.ArrayList<model.CD>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList26, cDArray25);
        model.Magazine[] magazineArray28 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList29 = new java.util.ArrayList<model.Magazine>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList29, magazineArray28);
        model.ItemSearchResult itemSearchResult31 = new model.ItemSearchResult(book19, cD20, magazine21, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList29);
        itemSearchResult18.similarCD = cDList26;
        model.Book book33 = null;
        model.CD cD34 = null;
        model.Magazine magazine35 = null;
        model.Book[] bookArray36 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList37 = new java.util.ArrayList<model.Book>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList37, bookArray36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        model.Magazine[] magazineArray42 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList43 = new java.util.ArrayList<model.Magazine>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList43, magazineArray42);
        model.ItemSearchResult itemSearchResult45 = new model.ItemSearchResult(book33, cD34, magazine35, (java.util.Collection<model.Book>) bookList37, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book1, cD3, magazine4, bookCollection5, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList43);
        cD3.ID = (short) 10;
        boolean boolean50 = buySpecialItems0.buyAnItem((model.Item) cD3, (double) 0);
        model.PayDebit payDebit51 = new model.PayDebit();
        buySpecialItems0.paymentAPI = payDebit51;
        model.ItemManagement itemManagement53 = new model.ItemManagement();
        model.Database database54 = null;
        itemManagement53.database = database54;
        model.Student student56 = new model.Student();
        int int57 = student56.ID;
        model.StudentOnlineResources studentOnlineResources58 = new model.StudentOnlineResources((model.Client) student56);
        model.VirtualBook virtualBook60 = studentOnlineResources58.searchAccessibleBook("");
        itemManagement53.disableAnItem((model.Item) virtualBook60);
        model.Item item63 = itemManagement53.selectAnItemFromDatabase((int) '#');
        model.ItemManagement itemManagement64 = new model.ItemManagement();
        model.Database database65 = null;
        itemManagement64.database = database65;
        model.Student student67 = new model.Student();
        int int68 = student67.ID;
        model.StudentOnlineResources studentOnlineResources69 = new model.StudentOnlineResources((model.Client) student67);
        model.VirtualBook virtualBook71 = studentOnlineResources69.searchAccessibleBook("");
        itemManagement64.disableAnItem((model.Item) virtualBook71);
        itemManagement53.disableAnItem((model.Item) virtualBook71);
        boolean boolean75 = buySpecialItems0.buyAnItem((model.Item) virtualBook71, (double) 1052342);
        boolean boolean76 = virtualBook71.canBePurchased;
        org.junit.Assert.assertNotNull(bookArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(cDArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(magazineArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(bookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(magazineArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(bookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(magazineArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(virtualBook60);
        org.junit.Assert.assertNull(item63);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(virtualBook71);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1504");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.Database.database = database7;
        java.lang.String str10 = database7.virtualItemFilePath;
        model.Login login11 = model.Login.makeLogin(database7);
        model.Database database19 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        model.SearchClient searchClient20 = model.SearchClient.makeSearchClient(database19);
        login11.db = database19;
        model.Client client23 = database19.getClient("");
        model.Register register24 = model.Register.makeRegister(database19);
        model.Database database32 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str33 = database32.getVirtualBookFilePath();
        model.Database.database = database32;
        java.lang.String str35 = database32.getCDFilePath();
        java.lang.String str36 = database32.itemPath;
        database32.virtualItemFilePath = "model.RegistrationFailedException: ";
        register24.database = database32;
        model.Faculty faculty40 = new model.Faculty();
        faculty40.username = "hi!";
        java.util.Collection<model.Course> courseCollection43 = faculty40.courses;
        java.lang.String str44 = faculty40.username;
        model.BorrowingManager borrowingManager45 = faculty40.borrowManager;
        boolean boolean48 = register24.registerAsStaff((model.Staff) faculty40, "model.RegistrationFailedException: ", "model.RegistrationFailedException: model.RentingNotAllowedException: hi!");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "model.RentingNotAllowedException: " + "'", str10, "model.RentingNotAllowedException: ");
        org.junit.Assert.assertNotNull(login11);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(searchClient20);
        org.junit.Assert.assertNotNull(client23);
        org.junit.Assert.assertNotNull(register24);
        org.junit.Assert.assertNotNull(database32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "src/VirtualBook.csv" + "'", str33, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "src/CD.csv" + "'", str35, "src/CD.csv");
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "src/Magazine.csv" + "'", str36, "src/Magazine.csv");
        org.junit.Assert.assertNull(courseCollection43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNull(borrowingManager45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1505");
        model.VirtualBook virtualBook1 = new model.VirtualBook("src/BorrowedItems.csv");
        virtualBook1.location = "model.RegistrationFailedException: ";
    }

    @Test
    public void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1506");
        model.Request request0 = new model.Request();
        java.lang.String str1 = request0.type;
        model.Database database9 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database9;
        model.SearchVirtualItem searchVirtualItem11 = new model.SearchVirtualItem(database9);
        model.RentAndReturnSystem rentAndReturnSystem12 = new model.RentAndReturnSystem();
        model.Book book13 = null;
        model.CD cD15 = new model.CD("");
        model.Magazine magazine16 = null;
        java.util.Collection<model.Book> bookCollection17 = null;
        model.Book book18 = null;
        model.CD cD19 = null;
        model.Magazine magazine20 = null;
        model.Book[] bookArray21 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList22 = new java.util.ArrayList<model.Book>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList22, bookArray21);
        model.CD[] cDArray24 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList25 = new java.util.ArrayList<model.CD>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList25, cDArray24);
        model.Magazine[] magazineArray27 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList28 = new java.util.ArrayList<model.Magazine>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList28, magazineArray27);
        model.ItemSearchResult itemSearchResult30 = new model.ItemSearchResult(book18, cD19, magazine20, (java.util.Collection<model.Book>) bookList22, (java.util.Collection<model.CD>) cDList25, (java.util.Collection<model.Magazine>) magazineList28);
        model.Book book31 = null;
        model.CD cD32 = null;
        model.Magazine magazine33 = null;
        model.Book[] bookArray34 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList35 = new java.util.ArrayList<model.Book>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList35, bookArray34);
        model.CD[] cDArray37 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList38 = new java.util.ArrayList<model.CD>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList38, cDArray37);
        model.Magazine[] magazineArray40 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList41 = new java.util.ArrayList<model.Magazine>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList41, magazineArray40);
        model.ItemSearchResult itemSearchResult43 = new model.ItemSearchResult(book31, cD32, magazine33, (java.util.Collection<model.Book>) bookList35, (java.util.Collection<model.CD>) cDList38, (java.util.Collection<model.Magazine>) magazineList41);
        itemSearchResult30.similarCD = cDList38;
        model.Book book45 = null;
        model.CD cD46 = null;
        model.Magazine magazine47 = null;
        model.Book[] bookArray48 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList49 = new java.util.ArrayList<model.Book>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList49, bookArray48);
        model.CD[] cDArray51 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList52 = new java.util.ArrayList<model.CD>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList52, cDArray51);
        model.Magazine[] magazineArray54 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList55 = new java.util.ArrayList<model.Magazine>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList55, magazineArray54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult(book45, cD46, magazine47, (java.util.Collection<model.Book>) bookList49, (java.util.Collection<model.CD>) cDList52, (java.util.Collection<model.Magazine>) magazineList55);
        model.ItemSearchResult itemSearchResult58 = new model.ItemSearchResult(book13, cD15, magazine16, bookCollection17, (java.util.Collection<model.CD>) cDList38, (java.util.Collection<model.Magazine>) magazineList55);
        cD15.ID = (short) 10;
        cD15.canBePurchased = false;
        boolean boolean63 = cD15.canBePurchased;
        model.Faculty faculty64 = new model.Faculty();
        boolean boolean65 = rentAndReturnSystem12.rentAnItem((model.Item) cD15, (model.Client) faculty64);
        java.lang.String str66 = faculty64.faculty;
        database9.addClient((model.Client) faculty64);
        request0.requestee = faculty64;
        model.Student student69 = new model.Student();
        int int70 = student69.ID;
        model.StudentOnlineResources studentOnlineResources71 = new model.StudentOnlineResources((model.Client) student69);
        java.util.Iterator<model.VirtualItem> virtualItemItor72 = studentOnlineResources71.iterator();
        model.Faculty faculty73 = new model.Faculty();
        faculty73.username = "hi!";
        java.util.Collection<model.Course> courseCollection76 = null;
        faculty73.courses = courseCollection76;
        java.util.Collection<model.Course> courseCollection78 = faculty73.courses;
        java.util.Collection<model.Course> courseCollection79 = faculty73.courses;
        studentOnlineResources71.client = faculty73;
        request0.requestee = faculty73;
        request0.title = "src/BorrowedItems.csv";
        java.lang.String str84 = request0.title;
        java.lang.String str85 = request0.type;
        request0.title = "model.RegistrationFailedException: ";
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(bookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(cDArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(magazineArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(bookArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(cDArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(magazineArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(bookArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(cDArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(magazineArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNull(virtualItemItor72);
        org.junit.Assert.assertNull(courseCollection78);
        org.junit.Assert.assertNull(courseCollection79);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "src/BorrowedItems.csv" + "'", str84, "src/BorrowedItems.csv");
        org.junit.Assert.assertNull(str85);
    }

    @Test
    public void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1507");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.VirtualItemContent virtualItemContent5 = virtualBook4.content;
        model.Student student6 = new model.Student();
        int int7 = student6.ID;
        model.StudentOnlineResources studentOnlineResources8 = new model.StudentOnlineResources((model.Client) student6);
        model.VirtualBook virtualBook10 = studentOnlineResources8.searchAccessibleBook("");
        model.CD cD12 = new model.CD("");
        model.Magazine magazine13 = null;
        model.Book book14 = null;
        model.CD cD15 = null;
        model.Magazine magazine16 = null;
        model.Book[] bookArray17 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList18 = new java.util.ArrayList<model.Book>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList18, bookArray17);
        model.CD[] cDArray20 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList21 = new java.util.ArrayList<model.CD>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList21, cDArray20);
        model.Magazine[] magazineArray23 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList24 = new java.util.ArrayList<model.Magazine>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList24, magazineArray23);
        model.ItemSearchResult itemSearchResult26 = new model.ItemSearchResult(book14, cD15, magazine16, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList21, (java.util.Collection<model.Magazine>) magazineList24);
        model.Book book27 = null;
        model.CD cD28 = null;
        model.Magazine magazine29 = null;
        model.Book[] bookArray30 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList31 = new java.util.ArrayList<model.Book>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList31, bookArray30);
        model.CD[] cDArray33 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList34 = new java.util.ArrayList<model.CD>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList34, cDArray33);
        model.Magazine[] magazineArray36 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList37 = new java.util.ArrayList<model.Magazine>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList37, magazineArray36);
        model.ItemSearchResult itemSearchResult39 = new model.ItemSearchResult(book27, cD28, magazine29, (java.util.Collection<model.Book>) bookList31, (java.util.Collection<model.CD>) cDList34, (java.util.Collection<model.Magazine>) magazineList37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        itemSearchResult39.similarCD = cDList41;
        model.Book book44 = null;
        model.CD cD45 = null;
        model.Magazine magazine46 = null;
        model.Book[] bookArray47 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList48 = new java.util.ArrayList<model.Book>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList48, bookArray47);
        model.CD[] cDArray50 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList51 = new java.util.ArrayList<model.CD>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList51, cDArray50);
        model.Magazine[] magazineArray53 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList54 = new java.util.ArrayList<model.Magazine>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList54, magazineArray53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult(book44, cD45, magazine46, (java.util.Collection<model.Book>) bookList48, (java.util.Collection<model.CD>) cDList51, (java.util.Collection<model.Magazine>) magazineList54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult((model.Book) virtualBook10, cD12, magazine13, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList54);
        int int58 = virtualBook10.ID;
        int int59 = virtualBook10.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter60 = null;
        model.PaidNewsletter paidNewsletter61 = null;
        model.VirtualItemSearchResult virtualItemSearchResult62 = new model.VirtualItemSearchResult(virtualBook10, uniProvidedNewsletter60, paidNewsletter61);
        model.PaidNewsletter paidNewsletter63 = virtualItemSearchResult62.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter64 = new model.UniProvidedNewsletter();
        virtualItemSearchResult62.setUniNewsletter(uniProvidedNewsletter64);
        java.lang.String str66 = uniProvidedNewsletter64.title;
        model.PaidNewsletter paidNewsletter67 = null;
        model.VirtualItemSearchResult virtualItemSearchResult68 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter64, paidNewsletter67);
        model.VirtualBook virtualBook69 = virtualItemSearchResult68.virtualBook;
        model.PaidNewsletter paidNewsletter70 = new model.PaidNewsletter();
        virtualItemSearchResult68.setPaidNewsletter(paidNewsletter70);
        paidNewsletter70.subscriptionPrice = 11;
        double double74 = paidNewsletter70.subscriptionPrice;
        paidNewsletter70.subscriptionPrice = 7208239;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNull(virtualItemContent5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(virtualBook10);
        org.junit.Assert.assertNotNull(bookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(cDArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(magazineArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(bookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(magazineArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(bookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(cDArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(magazineArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 20 + "'", int59 == 20);
        org.junit.Assert.assertNull(paidNewsletter63);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(virtualBook69);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 11.0d + "'", double74 == 11.0d);
    }

    @Test
    public void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1508");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.VirtualItemContent virtualItemContent5 = virtualBook4.content;
        model.Student student6 = new model.Student();
        int int7 = student6.ID;
        model.StudentOnlineResources studentOnlineResources8 = new model.StudentOnlineResources((model.Client) student6);
        model.VirtualBook virtualBook10 = studentOnlineResources8.searchAccessibleBook("");
        model.CD cD12 = new model.CD("");
        model.Magazine magazine13 = null;
        model.Book book14 = null;
        model.CD cD15 = null;
        model.Magazine magazine16 = null;
        model.Book[] bookArray17 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList18 = new java.util.ArrayList<model.Book>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList18, bookArray17);
        model.CD[] cDArray20 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList21 = new java.util.ArrayList<model.CD>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList21, cDArray20);
        model.Magazine[] magazineArray23 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList24 = new java.util.ArrayList<model.Magazine>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList24, magazineArray23);
        model.ItemSearchResult itemSearchResult26 = new model.ItemSearchResult(book14, cD15, magazine16, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList21, (java.util.Collection<model.Magazine>) magazineList24);
        model.Book book27 = null;
        model.CD cD28 = null;
        model.Magazine magazine29 = null;
        model.Book[] bookArray30 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList31 = new java.util.ArrayList<model.Book>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList31, bookArray30);
        model.CD[] cDArray33 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList34 = new java.util.ArrayList<model.CD>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList34, cDArray33);
        model.Magazine[] magazineArray36 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList37 = new java.util.ArrayList<model.Magazine>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList37, magazineArray36);
        model.ItemSearchResult itemSearchResult39 = new model.ItemSearchResult(book27, cD28, magazine29, (java.util.Collection<model.Book>) bookList31, (java.util.Collection<model.CD>) cDList34, (java.util.Collection<model.Magazine>) magazineList37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        itemSearchResult39.similarCD = cDList41;
        model.Book book44 = null;
        model.CD cD45 = null;
        model.Magazine magazine46 = null;
        model.Book[] bookArray47 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList48 = new java.util.ArrayList<model.Book>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList48, bookArray47);
        model.CD[] cDArray50 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList51 = new java.util.ArrayList<model.CD>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList51, cDArray50);
        model.Magazine[] magazineArray53 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList54 = new java.util.ArrayList<model.Magazine>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList54, magazineArray53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult(book44, cD45, magazine46, (java.util.Collection<model.Book>) bookList48, (java.util.Collection<model.CD>) cDList51, (java.util.Collection<model.Magazine>) magazineList54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult((model.Book) virtualBook10, cD12, magazine13, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList54);
        int int58 = virtualBook10.ID;
        int int59 = virtualBook10.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter60 = null;
        model.PaidNewsletter paidNewsletter61 = null;
        model.VirtualItemSearchResult virtualItemSearchResult62 = new model.VirtualItemSearchResult(virtualBook10, uniProvidedNewsletter60, paidNewsletter61);
        model.PaidNewsletter paidNewsletter63 = virtualItemSearchResult62.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter64 = new model.UniProvidedNewsletter();
        virtualItemSearchResult62.setUniNewsletter(uniProvidedNewsletter64);
        java.lang.String str66 = uniProvidedNewsletter64.title;
        model.PaidNewsletter paidNewsletter67 = null;
        model.VirtualItemSearchResult virtualItemSearchResult68 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter64, paidNewsletter67);
        model.VirtualBook virtualBook69 = virtualItemSearchResult68.virtualBook;
        model.PaidNewsletter paidNewsletter70 = new model.PaidNewsletter();
        virtualItemSearchResult68.setPaidNewsletter(paidNewsletter70);
        paidNewsletter70.subscriptionPrice = 'a';
        int int74 = paidNewsletter70.ID;
        model.VirtualItemContent virtualItemContent75 = null;
        paidNewsletter70.content = virtualItemContent75;
        model.Faculty faculty77 = new model.Faculty();
        java.lang.String str78 = faculty77.email;
        faculty77.faculty = "src/Newsletter.csv";
        boolean boolean81 = paidNewsletter70.equals((java.lang.Object) faculty77);
        faculty77.faculty = "";
        java.lang.String str84 = faculty77.faculty;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNull(virtualItemContent5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(virtualBook10);
        org.junit.Assert.assertNotNull(bookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(cDArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(magazineArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(bookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(magazineArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(bookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(cDArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(magazineArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 20 + "'", int59 == 20);
        org.junit.Assert.assertNull(paidNewsletter63);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(virtualBook69);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
    }

    @Test
    public void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1509");
        model.SearchBorrowedItem searchBorrowedItem0 = model.SearchBorrowedItem.object;
// flaky:         searchBorrowedItem0.removeItem("src/Client.csv", "");
        java.util.ArrayList<model.RentedItem> rentedItemList6 = null; // flaky: searchBorrowedItem0.searchBorrowedItem("hi!", "model.RegistrationFailedException: src/Magazine.csv");
        model.BorrowingManager borrowingManager7 = null; // flaky: new model.BorrowingManager(rentedItemList6);
// flaky:         borrowingManager7.itemsBorrowedCount = (byte) 100;
        model.Student student10 = new model.Student();
        int int11 = student10.ID;
        model.StudentOnlineResources studentOnlineResources12 = new model.StudentOnlineResources((model.Client) student10);
        model.VirtualBook virtualBook14 = studentOnlineResources12.searchAccessibleBook("");
        model.CD cD16 = new model.CD("");
        model.Magazine magazine17 = null;
        model.Book book18 = null;
        model.CD cD19 = null;
        model.Magazine magazine20 = null;
        model.Book[] bookArray21 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList22 = new java.util.ArrayList<model.Book>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList22, bookArray21);
        model.CD[] cDArray24 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList25 = new java.util.ArrayList<model.CD>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList25, cDArray24);
        model.Magazine[] magazineArray27 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList28 = new java.util.ArrayList<model.Magazine>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList28, magazineArray27);
        model.ItemSearchResult itemSearchResult30 = new model.ItemSearchResult(book18, cD19, magazine20, (java.util.Collection<model.Book>) bookList22, (java.util.Collection<model.CD>) cDList25, (java.util.Collection<model.Magazine>) magazineList28);
        model.Book book31 = null;
        model.CD cD32 = null;
        model.Magazine magazine33 = null;
        model.Book[] bookArray34 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList35 = new java.util.ArrayList<model.Book>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList35, bookArray34);
        model.CD[] cDArray37 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList38 = new java.util.ArrayList<model.CD>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList38, cDArray37);
        model.Magazine[] magazineArray40 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList41 = new java.util.ArrayList<model.Magazine>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList41, magazineArray40);
        model.ItemSearchResult itemSearchResult43 = new model.ItemSearchResult(book31, cD32, magazine33, (java.util.Collection<model.Book>) bookList35, (java.util.Collection<model.CD>) cDList38, (java.util.Collection<model.Magazine>) magazineList41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        itemSearchResult43.similarCD = cDList45;
        model.Book book48 = null;
        model.CD cD49 = null;
        model.Magazine magazine50 = null;
        model.Book[] bookArray51 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList52 = new java.util.ArrayList<model.Book>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList52, bookArray51);
        model.CD[] cDArray54 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList55 = new java.util.ArrayList<model.CD>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList55, cDArray54);
        model.Magazine[] magazineArray57 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList58 = new java.util.ArrayList<model.Magazine>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList58, magazineArray57);
        model.ItemSearchResult itemSearchResult60 = new model.ItemSearchResult(book48, cD49, magazine50, (java.util.Collection<model.Book>) bookList52, (java.util.Collection<model.CD>) cDList55, (java.util.Collection<model.Magazine>) magazineList58);
        model.ItemSearchResult itemSearchResult61 = new model.ItemSearchResult((model.Book) virtualBook14, cD16, magazine17, (java.util.Collection<model.Book>) bookList22, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList58);
        int int62 = virtualBook14.ID;
        virtualBook14.ISBN = "hi!";
        java.time.LocalDate localDate65 = null;
        // The following exception was thrown during execution in test generation
        try {
            borrowingManager7.rentAnItem((model.Item) virtualBook14, localDate65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.toString()\" because \"date\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertNotNull(searchBorrowedItem0);
// flaky:         org.junit.Assert.assertNotNull(rentedItemList6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(virtualBook14);
        org.junit.Assert.assertNotNull(bookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(cDArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(magazineArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(bookArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(cDArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(magazineArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(bookArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(cDArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(magazineArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
    }

    @Test
    public void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1510");
        model.SearchBorrowedItem searchBorrowedItem0 = model.SearchBorrowedItem.object;
// flaky:         searchBorrowedItem0.removeItem("src/Client.csv", "");
        java.util.ArrayList<model.RentedItem> rentedItemList6 = null; // flaky: searchBorrowedItem0.searchBorrowedItem("hi!", "model.RegistrationFailedException: src/Magazine.csv");
        model.BorrowingManager borrowingManager7 = null; // flaky: new model.BorrowingManager(rentedItemList6);
        model.RentedItem[] rentedItemArray8 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList9 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList9, rentedItemArray8);
        model.BorrowingManager borrowingManager11 = new model.BorrowingManager(rentedItemList9);
        model.RentedItem[] rentedItemArray12 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList13 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList13, rentedItemArray12);
        model.BorrowingManager borrowingManager15 = new model.BorrowingManager(rentedItemList13);
        model.RentedItem[] rentedItemArray16 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList17 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList17, rentedItemArray16);
        model.BorrowingManager borrowingManager19 = new model.BorrowingManager(rentedItemList17);
        borrowingManager15.physicalItemBorrowed = rentedItemList17;
        borrowingManager11.physicalItemBorrowed = rentedItemList17;
        int int22 = borrowingManager11.itemsBorrowedCount;
        java.util.ArrayList<model.RentedItem> rentedItemList23 = borrowingManager11.physicalItemBorrowed;
// flaky:         borrowingManager7.physicalItemBorrowed = rentedItemList23;
// flaky:         org.junit.Assert.assertNotNull(searchBorrowedItem0);
// flaky:         org.junit.Assert.assertNotNull(rentedItemList6);
        org.junit.Assert.assertNotNull(rentedItemArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(rentedItemArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(rentedItemArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(rentedItemList23);
    }

    @Test
    public void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1511");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.Payment payment1 = rentAndReturnSystem0.paymentAPI;
        model.PayMobileWallet payMobileWallet2 = new model.PayMobileWallet();
        payMobileWallet2.amountPay = 100.0f;
        payMobileWallet2.amountPay = (byte) -1;
        rentAndReturnSystem0.paymentAPI = payMobileWallet2;
        model.BuySpecialItems buySpecialItems8 = new model.BuySpecialItems();
        model.Book book9 = null;
        model.CD cD11 = new model.CD("");
        model.Magazine magazine12 = null;
        java.util.Collection<model.Book> bookCollection13 = null;
        model.Book book14 = null;
        model.CD cD15 = null;
        model.Magazine magazine16 = null;
        model.Book[] bookArray17 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList18 = new java.util.ArrayList<model.Book>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList18, bookArray17);
        model.CD[] cDArray20 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList21 = new java.util.ArrayList<model.CD>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList21, cDArray20);
        model.Magazine[] magazineArray23 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList24 = new java.util.ArrayList<model.Magazine>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList24, magazineArray23);
        model.ItemSearchResult itemSearchResult26 = new model.ItemSearchResult(book14, cD15, magazine16, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList21, (java.util.Collection<model.Magazine>) magazineList24);
        model.Book book27 = null;
        model.CD cD28 = null;
        model.Magazine magazine29 = null;
        model.Book[] bookArray30 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList31 = new java.util.ArrayList<model.Book>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList31, bookArray30);
        model.CD[] cDArray33 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList34 = new java.util.ArrayList<model.CD>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList34, cDArray33);
        model.Magazine[] magazineArray36 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList37 = new java.util.ArrayList<model.Magazine>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList37, magazineArray36);
        model.ItemSearchResult itemSearchResult39 = new model.ItemSearchResult(book27, cD28, magazine29, (java.util.Collection<model.Book>) bookList31, (java.util.Collection<model.CD>) cDList34, (java.util.Collection<model.Magazine>) magazineList37);
        itemSearchResult26.similarCD = cDList34;
        model.Book book41 = null;
        model.CD cD42 = null;
        model.Magazine magazine43 = null;
        model.Book[] bookArray44 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList45 = new java.util.ArrayList<model.Book>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList45, bookArray44);
        model.CD[] cDArray47 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList48 = new java.util.ArrayList<model.CD>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList48, cDArray47);
        model.Magazine[] magazineArray50 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList51 = new java.util.ArrayList<model.Magazine>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList51, magazineArray50);
        model.ItemSearchResult itemSearchResult53 = new model.ItemSearchResult(book41, cD42, magazine43, (java.util.Collection<model.Book>) bookList45, (java.util.Collection<model.CD>) cDList48, (java.util.Collection<model.Magazine>) magazineList51);
        model.ItemSearchResult itemSearchResult54 = new model.ItemSearchResult(book9, cD11, magazine12, bookCollection13, (java.util.Collection<model.CD>) cDList34, (java.util.Collection<model.Magazine>) magazineList51);
        cD11.ID = (short) 10;
        boolean boolean58 = buySpecialItems8.buyAnItem((model.Item) cD11, (double) 0);
        model.PayDebit payDebit59 = new model.PayDebit();
        buySpecialItems8.paymentAPI = payDebit59;
        rentAndReturnSystem0.paymentAPI = payDebit59;
        model.BuySpecialItems buySpecialItems62 = new model.BuySpecialItems();
        model.Payment payment63 = null;
        buySpecialItems62.paymentAPI = payment63;
        model.PayMobileWallet payMobileWallet65 = new model.PayMobileWallet();
        buySpecialItems62.paymentAPI = payMobileWallet65;
        rentAndReturnSystem0.paymentAPI = payMobileWallet65;
        payMobileWallet65.pay(0.0d);
        org.junit.Assert.assertNull(payment1);
        org.junit.Assert.assertNotNull(bookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(cDArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(magazineArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(bookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(magazineArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(bookArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(cDArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(magazineArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1512");
        model.Book book0 = null;
        model.CD cD1 = null;
        model.Magazine magazine2 = null;
        model.Book[] bookArray3 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList4 = new java.util.ArrayList<model.Book>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList4, bookArray3);
        model.CD[] cDArray6 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList7 = new java.util.ArrayList<model.CD>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList7, cDArray6);
        model.Magazine[] magazineArray9 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList10 = new java.util.ArrayList<model.Magazine>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList10, magazineArray9);
        model.ItemSearchResult itemSearchResult12 = new model.ItemSearchResult(book0, cD1, magazine2, (java.util.Collection<model.Book>) bookList4, (java.util.Collection<model.CD>) cDList7, (java.util.Collection<model.Magazine>) magazineList10);
        model.Book book13 = null;
        model.CD cD14 = null;
        model.Magazine magazine15 = null;
        model.Book[] bookArray16 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList17 = new java.util.ArrayList<model.Book>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList17, bookArray16);
        model.CD[] cDArray19 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList20 = new java.util.ArrayList<model.CD>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList20, cDArray19);
        model.Magazine[] magazineArray22 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList23 = new java.util.ArrayList<model.Magazine>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList23, magazineArray22);
        model.ItemSearchResult itemSearchResult25 = new model.ItemSearchResult(book13, cD14, magazine15, (java.util.Collection<model.Book>) bookList17, (java.util.Collection<model.CD>) cDList20, (java.util.Collection<model.Magazine>) magazineList23);
        itemSearchResult12.similarCD = cDList20;
        model.Magazine magazine27 = itemSearchResult12.magazine;
        model.CD cD28 = itemSearchResult12.cd;
        java.util.Collection<model.Book> bookCollection29 = itemSearchResult12.similarBooks;
        model.Student student30 = new model.Student();
        int int31 = student30.ID;
        model.StudentOnlineResources studentOnlineResources32 = new model.StudentOnlineResources((model.Client) student30);
        model.VirtualBook virtualBook34 = studentOnlineResources32.searchAccessibleBook("");
        model.CD cD36 = new model.CD("");
        model.Magazine magazine37 = null;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.Book book51 = null;
        model.CD cD52 = null;
        model.Magazine magazine53 = null;
        model.Book[] bookArray54 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList55 = new java.util.ArrayList<model.Book>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList55, bookArray54);
        model.CD[] cDArray57 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList58 = new java.util.ArrayList<model.CD>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList58, cDArray57);
        model.Magazine[] magazineArray60 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList61 = new java.util.ArrayList<model.Magazine>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList61, magazineArray60);
        model.ItemSearchResult itemSearchResult63 = new model.ItemSearchResult(book51, cD52, magazine53, (java.util.Collection<model.Book>) bookList55, (java.util.Collection<model.CD>) cDList58, (java.util.Collection<model.Magazine>) magazineList61);
        model.CD[] cDArray64 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList65 = new java.util.ArrayList<model.CD>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList65, cDArray64);
        itemSearchResult63.similarCD = cDList65;
        model.Book book68 = null;
        model.CD cD69 = null;
        model.Magazine magazine70 = null;
        model.Book[] bookArray71 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList72 = new java.util.ArrayList<model.Book>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList72, bookArray71);
        model.CD[] cDArray74 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList75 = new java.util.ArrayList<model.CD>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList75, cDArray74);
        model.Magazine[] magazineArray77 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList78 = new java.util.ArrayList<model.Magazine>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList78, magazineArray77);
        model.ItemSearchResult itemSearchResult80 = new model.ItemSearchResult(book68, cD69, magazine70, (java.util.Collection<model.Book>) bookList72, (java.util.Collection<model.CD>) cDList75, (java.util.Collection<model.Magazine>) magazineList78);
        model.ItemSearchResult itemSearchResult81 = new model.ItemSearchResult((model.Book) virtualBook34, cD36, magazine37, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList65, (java.util.Collection<model.Magazine>) magazineList78);
        itemSearchResult12.book = virtualBook34;
        int int83 = virtualBook34.ID;
        virtualBook34.canBePurchased = true;
        org.junit.Assert.assertNotNull(bookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(cDArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(magazineArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(bookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(cDArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(magazineArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(magazine27);
        org.junit.Assert.assertNull(cD28);
        org.junit.Assert.assertNotNull(bookCollection29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(virtualBook34);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(bookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(cDArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(magazineArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(cDArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(bookArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(cDArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(magazineArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
    }

    @Test
    public void test1513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1513");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        virtualBook4.ISBN = "hi!";
        int int55 = virtualBook4.ID;
        model.LibraryManagementTeam libraryManagementTeam56 = new model.LibraryManagementTeam();
        libraryManagementTeam56.accessCode = (byte) 10;
        boolean boolean59 = virtualBook4.equals((java.lang.Object) libraryManagementTeam56);
        model.UniProvidedNewsletter uniProvidedNewsletter60 = null;
        model.Newsletter[] newsletterArray61 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList62 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList62, newsletterArray61);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager64 = new model.NewsletterSubscriptionManager(newsletterList62);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager65 = new model.NewsletterSubscriptionManager(newsletterList62);
        java.util.ArrayList<model.Newsletter> newsletterList66 = newsletterSubscriptionManager65.newsletterSubscribed;
        model.PaidNewsletter paidNewsletter67 = new model.PaidNewsletter();
        newsletterSubscriptionManager65.subscribeToPaidNewsletter(paidNewsletter67, "src/Client.csv");
        double double70 = paidNewsletter67.subscriptionPrice;
        model.VirtualItemSearchResult virtualItemSearchResult71 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter60, paidNewsletter67);
        paidNewsletter67.cost = 4211142;
        paidNewsletter67.subscriptionPrice = 32.0d;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(newsletterArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(newsletterList66);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
    }

    @Test
    public void test1514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1514");
        model.BuySpecialItems buySpecialItems0 = new model.BuySpecialItems();
        model.Payment payment1 = buySpecialItems0.paymentAPI;
        model.Payment payment2 = null;
        buySpecialItems0.paymentAPI = payment2;
        model.RentAndReturnSystem rentAndReturnSystem4 = new model.RentAndReturnSystem();
        model.PayCredit payCredit5 = new model.PayCredit();
        rentAndReturnSystem4.paymentAPI = payCredit5;
        payCredit5.pay((double) (short) -1);
        payCredit5.amountPay = ' ';
        buySpecialItems0.paymentAPI = payCredit5;
        org.junit.Assert.assertNull(payment1);
    }

    @Test
    public void test1515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1515");
        model.Database database7 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database7;
        model.SearchVirtualItem searchVirtualItem9 = new model.SearchVirtualItem(database7);
        model.UniProvidedNewsletter uniProvidedNewsletter11 = searchVirtualItem9.getUniNewsletter("");
        model.PaidNewsletter paidNewsletter13 = searchVirtualItem9.getPaidNewsletter("src/Magazine.csv");
        model.VirtualBook virtualBook15 = searchVirtualItem9.getVirtualBook("src/Magazine.csv");
        model.PaidNewsletter paidNewsletter17 = searchVirtualItem9.getPaidNewsletter("src/Newsletter.csv");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNull(uniProvidedNewsletter11);
        org.junit.Assert.assertNull(paidNewsletter13);
        org.junit.Assert.assertNull(virtualBook15);
        org.junit.Assert.assertNull(paidNewsletter17);
    }

    @Test
    public void test1516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1516");
        model.RentingNotAllowedException rentingNotAllowedException1 = new model.RentingNotAllowedException("hi!");
        java.lang.String str2 = rentingNotAllowedException1.message;
        model.RegistrationFailedException registrationFailedException4 = new model.RegistrationFailedException("");
        rentingNotAllowedException1.addSuppressed((java.lang.Throwable) registrationFailedException4);
        java.lang.Throwable[] throwableArray6 = rentingNotAllowedException1.getSuppressed();
        java.lang.String str7 = rentingNotAllowedException1.message;
        rentingNotAllowedException1.message = "model.RegistrationFailedException: model.RentingNotAllowedException: hi!";
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
    }

    @Test
    public void test1517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1517");
        model.Database database0 = model.Database.database;
        java.lang.String str1 = database0.getMagazineFilePath();
        int int2 = database0.getRandomID();
        model.Login login3 = new model.Login(database0);
        org.junit.Assert.assertNotNull(database0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "src/Magazine.csv" + "'", str1, "src/Magazine.csv");
// flaky:         org.junit.Assert.assertTrue("'" + int2 + "' != '" + 7965291 + "'", int2 == 7965291);
    }

    @Test
    public void test1518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1518");
        model.LibraryManagementTeam libraryManagementTeam0 = new model.LibraryManagementTeam();
        int int1 = libraryManagementTeam0.ID;
        int int2 = libraryManagementTeam0.accessCode;
        model.Item item3 = null;
        libraryManagementTeam0.addAnItem(item3);
        java.util.ArrayList<model.Item> itemList5 = libraryManagementTeam0.items;
        model.LibraryManagementTeam libraryManagementTeam6 = new model.LibraryManagementTeam();
        int int7 = libraryManagementTeam6.ID;
        int int8 = libraryManagementTeam6.accessCode;
        model.Item item9 = null;
        libraryManagementTeam6.addAnItem(item9);
        java.util.ArrayList<model.Item> itemList11 = libraryManagementTeam6.items;
        libraryManagementTeam0.items = itemList11;
        model.Student student13 = new model.Student();
        int int14 = student13.ID;
        model.StudentOnlineResources studentOnlineResources15 = new model.StudentOnlineResources((model.Client) student13);
        model.VirtualBook virtualBook17 = studentOnlineResources15.searchAccessibleBook("");
        java.lang.String str18 = virtualBook17.location;
        int int19 = virtualBook17.ID;
        virtualBook17.isBookLost = false;
        java.lang.String str22 = virtualBook17.author;
        virtualBook17.isBookLost = true;
        int int25 = virtualBook17.copiesAvailable;
        libraryManagementTeam0.enableAnItem((model.Item) virtualBook17);
        int int27 = virtualBook17.ID;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(itemList5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(itemList11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(virtualBook17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 20 + "'", int25 == 20);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test1519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1519");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.StudentOnlineResources studentOnlineResources3 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook5 = studentOnlineResources3.searchAccessibleBook("src/Book.csv");
        java.lang.String str6 = virtualBook5.author;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1520");
        model.BookOverDueNotif bookOverDueNotif0 = new model.BookOverDueNotif();
        java.lang.String str1 = bookOverDueNotif0.message;
        java.lang.String str2 = bookOverDueNotif0.message;
        java.lang.String str3 = bookOverDueNotif0.message;
        bookOverDueNotif0.message = "";
        java.lang.String str6 = bookOverDueNotif0.message;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test1521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1521");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        model.Book book4 = null;
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        java.util.Collection<model.Book> bookCollection8 = null;
        model.Book book9 = null;
        model.CD cD10 = null;
        model.Magazine magazine11 = null;
        model.Book[] bookArray12 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList13 = new java.util.ArrayList<model.Book>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList13, bookArray12);
        model.CD[] cDArray15 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList16 = new java.util.ArrayList<model.CD>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList16, cDArray15);
        model.Magazine[] magazineArray18 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList19 = new java.util.ArrayList<model.Magazine>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList19, magazineArray18);
        model.ItemSearchResult itemSearchResult21 = new model.ItemSearchResult(book9, cD10, magazine11, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList16, (java.util.Collection<model.Magazine>) magazineList19);
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        itemSearchResult21.similarCD = cDList29;
        model.Book book36 = null;
        model.CD cD37 = null;
        model.Magazine magazine38 = null;
        model.Book[] bookArray39 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList40 = new java.util.ArrayList<model.Book>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList40, bookArray39);
        model.CD[] cDArray42 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList43 = new java.util.ArrayList<model.CD>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList43, cDArray42);
        model.Magazine[] magazineArray45 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList46 = new java.util.ArrayList<model.Magazine>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList46, magazineArray45);
        model.ItemSearchResult itemSearchResult48 = new model.ItemSearchResult(book36, cD37, magazine38, (java.util.Collection<model.Book>) bookList40, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList46);
        model.ItemSearchResult itemSearchResult49 = new model.ItemSearchResult(book4, cD6, magazine7, bookCollection8, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList46);
        cD6.ID = (short) 10;
        borrowingManager3.removeRentedItem((model.Item) cD6);
        model.Client client53 = borrowingManager3.client;
        model.RentedItem rentedItem54 = null;
        // The following exception was thrown during execution in test generation
        try {
            borrowingManager3.removeRentedItem(rentedItem54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"item\" because \"item\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(bookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cDArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(magazineArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(bookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cDArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(magazineArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(client53);
    }

    @Test
    public void test1522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1522");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.RequestForum requestForum1 = model.RequestForum.createRequestForum();
        model.Request request2 = new model.Request();
        request2.title = "";
        java.lang.String str5 = requestForum1.makeARequest(request2);
        int int6 = requestForum0.assessBooksPriority(request2);
        java.lang.String str7 = request2.type;
        request2.type = "src/CD.csv";
        java.lang.String str10 = request2.title;
        model.Client client11 = request2.requestee;
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertNotNull(requestForum1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(client11);
    }

    @Test
    public void test1523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1523");
        model.Course course0 = new model.Course();
        java.lang.String str1 = course0.subject;
        java.lang.String str2 = course0.subject;
        java.lang.String str3 = course0.code;
        java.lang.String str4 = course0.code;
        course0.subject = "";
        course0.subject = "model.RegistrationFailedException: src/Book.csv";
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test1524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1524");
        model.ItemManagement itemManagement0 = new model.ItemManagement();
        model.Database database1 = null;
        itemManagement0.database = database1;
        model.Item item4 = itemManagement0.selectAnItemFromDatabase((int) '#');
        model.Student student5 = new model.Student();
        int int6 = student5.ID;
        model.StudentOnlineResources studentOnlineResources7 = new model.StudentOnlineResources((model.Client) student5);
        model.VirtualBook virtualBook9 = studentOnlineResources7.searchAccessibleBook("");
        model.CD cD11 = new model.CD("");
        model.Magazine magazine12 = null;
        model.Book book13 = null;
        model.CD cD14 = null;
        model.Magazine magazine15 = null;
        model.Book[] bookArray16 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList17 = new java.util.ArrayList<model.Book>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList17, bookArray16);
        model.CD[] cDArray19 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList20 = new java.util.ArrayList<model.CD>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList20, cDArray19);
        model.Magazine[] magazineArray22 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList23 = new java.util.ArrayList<model.Magazine>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList23, magazineArray22);
        model.ItemSearchResult itemSearchResult25 = new model.ItemSearchResult(book13, cD14, magazine15, (java.util.Collection<model.Book>) bookList17, (java.util.Collection<model.CD>) cDList20, (java.util.Collection<model.Magazine>) magazineList23);
        model.Book book26 = null;
        model.CD cD27 = null;
        model.Magazine magazine28 = null;
        model.Book[] bookArray29 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList30 = new java.util.ArrayList<model.Book>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList30, bookArray29);
        model.CD[] cDArray32 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList33 = new java.util.ArrayList<model.CD>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList33, cDArray32);
        model.Magazine[] magazineArray35 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList36 = new java.util.ArrayList<model.Magazine>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList36, magazineArray35);
        model.ItemSearchResult itemSearchResult38 = new model.ItemSearchResult(book26, cD27, magazine28, (java.util.Collection<model.Book>) bookList30, (java.util.Collection<model.CD>) cDList33, (java.util.Collection<model.Magazine>) magazineList36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        itemSearchResult38.similarCD = cDList40;
        model.Book book43 = null;
        model.CD cD44 = null;
        model.Magazine magazine45 = null;
        model.Book[] bookArray46 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList47 = new java.util.ArrayList<model.Book>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList47, bookArray46);
        model.CD[] cDArray49 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList50 = new java.util.ArrayList<model.CD>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList50, cDArray49);
        model.Magazine[] magazineArray52 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList53 = new java.util.ArrayList<model.Magazine>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList53, magazineArray52);
        model.ItemSearchResult itemSearchResult55 = new model.ItemSearchResult(book43, cD44, magazine45, (java.util.Collection<model.Book>) bookList47, (java.util.Collection<model.CD>) cDList50, (java.util.Collection<model.Magazine>) magazineList53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult((model.Book) virtualBook9, cD11, magazine12, (java.util.Collection<model.Book>) bookList17, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList53);
        virtualBook9.ID = (short) 10;
        int int59 = virtualBook9.ID;
        int int60 = virtualBook9.ID;
        virtualBook9.location = "src/Newsletter.csv";
        itemManagement0.addAnItem((model.Item) virtualBook9);
        java.lang.String str64 = virtualBook9.author;
        org.junit.Assert.assertNull(item4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(virtualBook9);
        org.junit.Assert.assertNotNull(bookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(cDArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(magazineArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(bookArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(cDArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(magazineArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(bookArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(cDArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(magazineArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNull(str64);
    }

    @Test
    public void test1525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1525");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.edition;
        virtualBook4.isBookLost = false;
        virtualBook4.ID = 10;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
    }

    @Test
    public void test1526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1526");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.Visitor visitor5 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList6 = visitor5.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources7 = new model.StudentOnlineResources((model.Client) visitor5);
        model.RentedItem[] rentedItemArray8 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList9 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList9, rentedItemArray8);
        model.BorrowingManager borrowingManager11 = new model.BorrowingManager(rentedItemList9);
        model.Visitor visitor12 = new model.Visitor();
        visitor12.email = "hi!";
        borrowingManager11.client = visitor12;
        studentOnlineResources7.client = visitor12;
        model.UniProvidedNewsletter uniProvidedNewsletter17 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter17.title = "";
        java.lang.String str20 = studentOnlineResources7.readVirtualItem((model.VirtualItem) uniProvidedNewsletter17);
        newsletterSubscriptionManager3.cancelSubscription((model.Newsletter) uniProvidedNewsletter17);
        model.Client client22 = newsletterSubscriptionManager3.client;
        model.BuySpecialItems buySpecialItems23 = new model.BuySpecialItems();
        model.Payment payment24 = null;
        buySpecialItems23.paymentAPI = payment24;
        model.PayMobileWallet payMobileWallet26 = new model.PayMobileWallet();
        buySpecialItems23.paymentAPI = payMobileWallet26;
        model.PayMobileWallet payMobileWallet28 = new model.PayMobileWallet();
        payMobileWallet28.amountPay = 100.0f;
        payMobileWallet28.amountPay = (byte) -1;
        buySpecialItems23.paymentAPI = payMobileWallet28;
        newsletterSubscriptionManager3.paymentAPI = payMobileWallet28;
        double double35 = payMobileWallet28.amountPay;
        double double36 = payMobileWallet28.amountPay;
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertNull(virtualBookList6);
        org.junit.Assert.assertNotNull(rentedItemArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(client22);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1.0d) + "'", double35 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-1.0d) + "'", double36 == (-1.0d));
    }

    @Test
    public void test1527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1527");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.RequestForum requestForum1 = model.RequestForum.createRequestForum();
        model.Request request2 = new model.Request();
        request2.title = "";
        java.lang.String str5 = requestForum1.makeARequest(request2);
        int int6 = requestForum0.assessBooksPriority(request2);
        model.LibraryManagementTeam libraryManagementTeam7 = new model.LibraryManagementTeam();
        int int8 = libraryManagementTeam7.ID;
        int int9 = libraryManagementTeam7.accessCode;
        model.Item item10 = null;
        libraryManagementTeam7.addAnItem(item10);
        java.util.ArrayList<model.Item> itemList12 = libraryManagementTeam7.items;
        requestForum0.managementTeam = libraryManagementTeam7;
        model.LibraryManagementTeam libraryManagementTeam14 = requestForum0.managementTeam;
        int int15 = libraryManagementTeam14.accessCode;
        int int16 = libraryManagementTeam14.ID;
        java.util.ArrayList<model.Item> itemList17 = libraryManagementTeam14.items;
        int int18 = libraryManagementTeam14.accessCode;
        libraryManagementTeam14.ID = 9809433;
        model.ItemManagement itemManagement21 = new model.ItemManagement();
        model.Item item23 = itemManagement21.selectAnItemFromDatabase((int) (short) 0);
        model.Database database24 = model.Database.database;
        model.Student student25 = new model.Student();
        int int26 = student25.ID;
        model.StudentOnlineResources studentOnlineResources27 = new model.StudentOnlineResources((model.Client) student25);
        student25.ID = '#';
        database24.addClient((model.Client) student25);
        itemManagement21.database = database24;
        model.Database database32 = itemManagement21.database;
        libraryManagementTeam14.itemManagement = itemManagement21;
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertNotNull(requestForum1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(itemList12);
        org.junit.Assert.assertNotNull(libraryManagementTeam14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(itemList17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(item23);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(database32);
    }

    @Test
    public void test1528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1528");
        model.Database database7 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database7;
        model.SearchVirtualItem searchVirtualItem9 = new model.SearchVirtualItem(database7);
        database7.itemPath = "model.RegistrationFailedException: src/Book.csv";
        model.SearchVirtualItem searchVirtualItem12 = new model.SearchVirtualItem(database7);
        model.VirtualItemSearchResult virtualItemSearchResult14 = searchVirtualItem12.searchVirtualItem("model.RentingNotAllowedException: hi!");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(virtualItemSearchResult14);
    }

    @Test
    public void test1529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1529");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.RequestForum requestForum1 = model.RequestForum.createRequestForum();
        model.Request request2 = new model.Request();
        request2.title = "";
        java.lang.String str5 = requestForum1.makeARequest(request2);
        int int6 = requestForum0.assessBooksPriority(request2);
        model.LibraryManagementTeam libraryManagementTeam7 = new model.LibraryManagementTeam();
        int int8 = libraryManagementTeam7.ID;
        int int9 = libraryManagementTeam7.accessCode;
        model.Item item10 = null;
        libraryManagementTeam7.addAnItem(item10);
        java.util.ArrayList<model.Item> itemList12 = libraryManagementTeam7.items;
        requestForum0.managementTeam = libraryManagementTeam7;
        model.LibraryManagementTeam libraryManagementTeam14 = new model.LibraryManagementTeam();
        int int15 = libraryManagementTeam14.ID;
        int int16 = libraryManagementTeam14.accessCode;
        model.ItemManagement itemManagement17 = new model.ItemManagement();
        model.Database database18 = null;
        itemManagement17.database = database18;
        model.Student student20 = new model.Student();
        int int21 = student20.ID;
        model.StudentOnlineResources studentOnlineResources22 = new model.StudentOnlineResources((model.Client) student20);
        model.VirtualBook virtualBook24 = studentOnlineResources22.searchAccessibleBook("");
        itemManagement17.disableAnItem((model.Item) virtualBook24);
        libraryManagementTeam14.itemManagement = itemManagement17;
        requestForum0.managementTeam = libraryManagementTeam14;
        model.RequestForum requestForum28 = model.RequestForum.createRequestForum();
        model.RequestForum requestForum29 = model.RequestForum.createRequestForum();
        model.Request request30 = new model.Request();
        request30.title = "";
        java.lang.String str33 = requestForum29.makeARequest(request30);
        int int34 = requestForum28.assessBooksPriority(request30);
        model.Client client35 = request30.requestee;
        int int36 = requestForum0.assessBooksPriority(request30);
        model.RequestForum requestForum37 = model.RequestForum.createRequestForum();
        model.Request request38 = new model.Request();
        request38.title = "";
        java.lang.String str41 = requestForum37.makeARequest(request38);
        model.RequestForum requestForum42 = model.RequestForum.createRequestForum();
        model.RequestForum requestForum43 = model.RequestForum.createRequestForum();
        model.Request request44 = new model.Request();
        request44.title = "";
        java.lang.String str47 = requestForum43.makeARequest(request44);
        int int48 = requestForum42.assessBooksPriority(request44);
        model.Client client49 = request44.requestee;
        request44.type = "src/BorrowedItems.csv";
        java.lang.String str52 = requestForum37.makeARequest(request44);
        model.Client client53 = request44.requestee;
        java.lang.String str54 = request44.type;
        java.lang.String str55 = requestForum0.makeARequest(request44);
        java.lang.String str56 = request44.type;
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertNotNull(requestForum1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(itemList12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(virtualBook24);
        org.junit.Assert.assertNotNull(requestForum28);
        org.junit.Assert.assertNotNull(requestForum29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNull(client35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(requestForum37);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(requestForum42);
        org.junit.Assert.assertNotNull(requestForum43);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(client49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNull(client53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "src/BorrowedItems.csv" + "'", str54, "src/BorrowedItems.csv");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "src/BorrowedItems.csv" + "'", str56, "src/BorrowedItems.csv");
    }

    @Test
    public void test1530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1530");
        model.ValidateRegistration validateRegistration0 = new model.ValidateRegistration();
        model.Student student1 = new model.Student();
        student1.viewMyOnlineResource();
        student1.viewMyOnlineResource();
        boolean boolean4 = validateRegistration0.validateStaffRegistration((model.Staff) student1);
        model.Database database12 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str13 = database12.getBookFilePath();
        model.SearchClient searchClient14 = model.SearchClient.makeSearchClient(database12);
        model.ValidateRegistration validateRegistration15 = new model.ValidateRegistration();
        model.Student student16 = new model.Student();
        student16.viewMyOnlineResource();
        boolean boolean18 = validateRegistration15.validateStaffRegistration((model.Staff) student16);
        model.RentAndReturnSystem rentAndReturnSystem19 = new model.RentAndReturnSystem();
        model.Book book20 = null;
        model.CD cD22 = new model.CD("");
        model.Magazine magazine23 = null;
        java.util.Collection<model.Book> bookCollection24 = null;
        model.Book book25 = null;
        model.CD cD26 = null;
        model.Magazine magazine27 = null;
        model.Book[] bookArray28 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList29 = new java.util.ArrayList<model.Book>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList29, bookArray28);
        model.CD[] cDArray31 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList32 = new java.util.ArrayList<model.CD>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList32, cDArray31);
        model.Magazine[] magazineArray34 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList35 = new java.util.ArrayList<model.Magazine>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList35, magazineArray34);
        model.ItemSearchResult itemSearchResult37 = new model.ItemSearchResult(book25, cD26, magazine27, (java.util.Collection<model.Book>) bookList29, (java.util.Collection<model.CD>) cDList32, (java.util.Collection<model.Magazine>) magazineList35);
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        itemSearchResult37.similarCD = cDList45;
        model.Book book52 = null;
        model.CD cD53 = null;
        model.Magazine magazine54 = null;
        model.Book[] bookArray55 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList56 = new java.util.ArrayList<model.Book>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList56, bookArray55);
        model.CD[] cDArray58 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList59 = new java.util.ArrayList<model.CD>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList59, cDArray58);
        model.Magazine[] magazineArray61 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList62 = new java.util.ArrayList<model.Magazine>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList62, magazineArray61);
        model.ItemSearchResult itemSearchResult64 = new model.ItemSearchResult(book52, cD53, magazine54, (java.util.Collection<model.Book>) bookList56, (java.util.Collection<model.CD>) cDList59, (java.util.Collection<model.Magazine>) magazineList62);
        model.ItemSearchResult itemSearchResult65 = new model.ItemSearchResult(book20, cD22, magazine23, bookCollection24, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList62);
        cD22.ID = (short) 10;
        cD22.canBePurchased = false;
        boolean boolean70 = cD22.canBePurchased;
        model.Faculty faculty71 = new model.Faculty();
        boolean boolean72 = rentAndReturnSystem19.rentAnItem((model.Item) cD22, (model.Client) faculty71);
        java.lang.String str73 = faculty71.faculty;
        model.RentedItem[] rentedItemArray74 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList75 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList75, rentedItemArray74);
        model.BorrowingManager borrowingManager77 = new model.BorrowingManager(rentedItemList75);
        boolean boolean78 = borrowingManager77.canRent();
        model.Client client79 = borrowingManager77.client;
        faculty71.borrowManager = borrowingManager77;
        java.util.Collection<model.Course> courseCollection81 = faculty71.courses;
        model.NewsletterSubscriptionManager newsletterSubscriptionManager82 = faculty71.newsletterManager;
        boolean boolean83 = validateRegistration15.validateStaffRegistration((model.Staff) faculty71);
        database12.addClient((model.Client) faculty71);
        faculty71.faculty = "model.LoginFailedException: hi!";
        model.Visitor visitor87 = new model.Visitor();
        model.VirtualBook[] virtualBookArray88 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList89 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList89, virtualBookArray88);
        visitor87.virtualBooksAvailable = virtualBookList89;
        faculty71.virtualBooksAvailable = virtualBookList89;
        boolean boolean93 = validateRegistration0.validateStaffRegistration((model.Staff) faculty71);
        java.lang.String str94 = faculty71.email;
        java.util.Collection<model.Book> bookCollection95 = faculty71.textbooks;
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "src/Book.csv" + "'", str13, "src/Book.csv");
        org.junit.Assert.assertNotNull(searchClient14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(bookArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(cDArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(magazineArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(bookArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(cDArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(magazineArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(rentedItemArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(client79);
        org.junit.Assert.assertNull(courseCollection81);
        org.junit.Assert.assertNull(newsletterSubscriptionManager82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(virtualBookArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNull(str94);
        org.junit.Assert.assertNull(bookCollection95);
    }

    @Test
    public void test1531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1531");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.PaidNewsletter paidNewsletter4 = null;
        newsletterSubscriptionManager3.subscribeToPaidNewsletter(paidNewsletter4, "");
        model.Student student7 = new model.Student();
        student7.viewMyOnlineResource();
        newsletterSubscriptionManager3.client = student7;
        model.PaidNewsletter paidNewsletter10 = new model.PaidNewsletter();
        model.Student student11 = new model.Student();
        int int12 = student11.ID;
        model.StudentOnlineResources studentOnlineResources13 = new model.StudentOnlineResources((model.Client) student11);
        model.VirtualBook virtualBook15 = studentOnlineResources13.searchAccessibleBook("");
        model.CD cD17 = new model.CD("");
        model.Magazine magazine18 = null;
        model.Book book19 = null;
        model.CD cD20 = null;
        model.Magazine magazine21 = null;
        model.Book[] bookArray22 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList23 = new java.util.ArrayList<model.Book>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList23, bookArray22);
        model.CD[] cDArray25 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList26 = new java.util.ArrayList<model.CD>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList26, cDArray25);
        model.Magazine[] magazineArray28 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList29 = new java.util.ArrayList<model.Magazine>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList29, magazineArray28);
        model.ItemSearchResult itemSearchResult31 = new model.ItemSearchResult(book19, cD20, magazine21, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList29);
        model.Book book32 = null;
        model.CD cD33 = null;
        model.Magazine magazine34 = null;
        model.Book[] bookArray35 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList36 = new java.util.ArrayList<model.Book>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList36, bookArray35);
        model.CD[] cDArray38 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList39 = new java.util.ArrayList<model.CD>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList39, cDArray38);
        model.Magazine[] magazineArray41 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList42 = new java.util.ArrayList<model.Magazine>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList42, magazineArray41);
        model.ItemSearchResult itemSearchResult44 = new model.ItemSearchResult(book32, cD33, magazine34, (java.util.Collection<model.Book>) bookList36, (java.util.Collection<model.CD>) cDList39, (java.util.Collection<model.Magazine>) magazineList42);
        model.CD[] cDArray45 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList46 = new java.util.ArrayList<model.CD>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList46, cDArray45);
        itemSearchResult44.similarCD = cDList46;
        model.Book book49 = null;
        model.CD cD50 = null;
        model.Magazine magazine51 = null;
        model.Book[] bookArray52 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList53 = new java.util.ArrayList<model.Book>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList53, bookArray52);
        model.CD[] cDArray55 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList56 = new java.util.ArrayList<model.CD>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList56, cDArray55);
        model.Magazine[] magazineArray58 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList59 = new java.util.ArrayList<model.Magazine>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList59, magazineArray58);
        model.ItemSearchResult itemSearchResult61 = new model.ItemSearchResult(book49, cD50, magazine51, (java.util.Collection<model.Book>) bookList53, (java.util.Collection<model.CD>) cDList56, (java.util.Collection<model.Magazine>) magazineList59);
        model.ItemSearchResult itemSearchResult62 = new model.ItemSearchResult((model.Book) virtualBook15, cD17, magazine18, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList46, (java.util.Collection<model.Magazine>) magazineList59);
        int int63 = virtualBook15.ID;
        int int64 = virtualBook15.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter65 = null;
        model.PaidNewsletter paidNewsletter66 = null;
        model.VirtualItemSearchResult virtualItemSearchResult67 = new model.VirtualItemSearchResult(virtualBook15, uniProvidedNewsletter65, paidNewsletter66);
        virtualBook15.author = "hi!";
        virtualBook15.showContent();
        boolean boolean71 = paidNewsletter10.equals((java.lang.Object) virtualBook15);
        newsletterSubscriptionManager3.subscribeToPaidNewsletter(paidNewsletter10, "src/Book.csv");
        double double74 = paidNewsletter10.subscriptionPrice;
        paidNewsletter10.ID = (short) 10;
        paidNewsletter10.showContent();
        model.VirtualItemContent virtualItemContent78 = paidNewsletter10.content;
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(virtualBook15);
        org.junit.Assert.assertNotNull(bookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(magazineArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(bookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(cDArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(magazineArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(bookArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(cDArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(magazineArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 20 + "'", int64 == 20);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNull(virtualItemContent78);
    }

    @Test
    public void test1532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1532");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.Request request1 = new model.Request();
        request1.title = "";
        java.lang.String str4 = requestForum0.makeARequest(request1);
        model.LibraryManagementTeam libraryManagementTeam5 = requestForum0.managementTeam;
        model.RequestForum requestForum6 = model.RequestForum.createRequestForum();
        model.Request request7 = new model.Request();
        request7.title = "";
        java.lang.String str10 = requestForum6.makeARequest(request7);
        model.Client client11 = request7.requestee;
        int int12 = requestForum0.assessBooksPriority(request7);
        java.lang.String str13 = request7.type;
        model.Client client14 = request7.requestee;
        request7.title = "src/Client.csv";
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(libraryManagementTeam5);
        org.junit.Assert.assertNotNull(requestForum6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(client11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(client14);
    }

    @Test
    public void test1533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1533");
        model.Database database0 = null;
        model.Register register1 = model.Register.makeRegister(database0);
        model.Faculty faculty2 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection3 = faculty2.courses;
        boolean boolean6 = register1.registerAsStaff((model.Staff) faculty2, "src/Book.csv", "src/Book.csv");
        java.lang.String str7 = faculty2.email;
        java.util.Collection<model.Course> courseCollection8 = faculty2.courses;
        org.junit.Assert.assertNotNull(register1);
        org.junit.Assert.assertNull(courseCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(courseCollection8);
    }

    @Test
    public void test1534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1534");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter54 = null;
        model.PaidNewsletter paidNewsletter55 = null;
        model.VirtualItemSearchResult virtualItemSearchResult56 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter54, paidNewsletter55);
        model.VirtualBook virtualBook57 = virtualItemSearchResult56.getVirtualBook();
        java.lang.String str58 = virtualBook57.publisher;
        java.lang.String str59 = virtualBook57.publisher;
        java.lang.String str60 = virtualBook57.location;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertNotNull(virtualBook57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str60);
    }

    @Test
    public void test1535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1535");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.Request request1 = new model.Request();
        request1.title = "";
        java.lang.String str4 = requestForum0.makeARequest(request1);
        model.LibraryManagementTeam libraryManagementTeam5 = new model.LibraryManagementTeam();
        int int6 = libraryManagementTeam5.ID;
        model.Magazine magazine8 = new model.Magazine("");
        java.util.Calendar calendar9 = magazine8.date;
        magazine8.author = "model.RegistrationFailedException: ";
        libraryManagementTeam5.disableAnItem((model.Item) magazine8);
        requestForum0.managementTeam = libraryManagementTeam5;
        model.Request request14 = new model.Request();
        request14.title = "src/Client.csv";
        java.lang.String str17 = requestForum0.makeARequest(request14);
        java.lang.String str18 = request14.type;
        model.Faculty faculty19 = new model.Faculty();
        faculty19.username = "hi!";
        faculty19.faculty = "src/Client.csv";
        request14.requestee = faculty19;
        java.lang.Class<?> wildcardClass25 = request14.getClass();
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(calendar9);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1536");
        model.Database database7 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database7;
        model.SearchVirtualItem searchVirtualItem9 = new model.SearchVirtualItem(database7);
        model.Database.database = database7;
        model.Login login11 = new model.Login(database7);
        int int12 = database7.getRandomID();
        model.Student student13 = new model.Student();
        int int14 = student13.ID;
        model.StudentOnlineResources studentOnlineResources15 = new model.StudentOnlineResources((model.Client) student13);
        model.StudentOnlineResources studentOnlineResources16 = new model.StudentOnlineResources((model.Client) student13);
        int int17 = student13.ID;
        model.Newsletter[] newsletterArray18 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList19 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList19, newsletterArray18);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager21 = new model.NewsletterSubscriptionManager(newsletterList19);
        model.Client client22 = newsletterSubscriptionManager21.client;
        model.UniProvidedNewsletter uniProvidedNewsletter23 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter23.title = "";
        java.lang.String str26 = uniProvidedNewsletter23.title;
        newsletterSubscriptionManager21.subscribeToUniProvidedNewsletter(uniProvidedNewsletter23, "");
        java.util.ArrayList<model.Newsletter> newsletterList29 = newsletterSubscriptionManager21.newsletterSubscribed;
        student13.newsletterManager = newsletterSubscriptionManager21;
        database7.addClient((model.Client) student13);
        org.junit.Assert.assertNotNull(database7);
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 9055918 + "'", int12 == 9055918);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(newsletterArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(client22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(newsletterList29);
    }

    @Test
    public void test1537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1537");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter54 = null;
        model.PaidNewsletter paidNewsletter55 = null;
        model.VirtualItemSearchResult virtualItemSearchResult56 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter54, paidNewsletter55);
        model.PaidNewsletter paidNewsletter57 = virtualItemSearchResult56.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter58 = virtualItemSearchResult56.getUniNewsletter();
        model.UniProvidedNewsletter uniProvidedNewsletter59 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter59.title = "";
        java.lang.String str62 = uniProvidedNewsletter59.title;
        uniProvidedNewsletter59.showContent();
        virtualItemSearchResult56.setUniNewsletter(uniProvidedNewsletter59);
        model.UniProvidedNewsletter uniProvidedNewsletter65 = virtualItemSearchResult56.uniNewsletter;
        uniProvidedNewsletter65.cost = 9;
        uniProvidedNewsletter65.showContent();
        uniProvidedNewsletter65.cost = 8565250;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertNull(paidNewsletter57);
        org.junit.Assert.assertNull(uniProvidedNewsletter58);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertNotNull(uniProvidedNewsletter65);
    }

    @Test
    public void test1538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1538");
        model.RentingNotAllowedException rentingNotAllowedException1 = new model.RentingNotAllowedException("src/Client.csv");
        rentingNotAllowedException1.message = "src/CD.csv";
        java.lang.Throwable[] throwableArray4 = rentingNotAllowedException1.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray4);
    }

    @Test
    public void test1539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1539");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.Payment payment1 = rentAndReturnSystem0.paymentAPI;
        model.PayMobileWallet payMobileWallet2 = new model.PayMobileWallet();
        payMobileWallet2.amountPay = 100.0f;
        payMobileWallet2.amountPay = (byte) -1;
        rentAndReturnSystem0.paymentAPI = payMobileWallet2;
        model.BuySpecialItems buySpecialItems8 = new model.BuySpecialItems();
        model.Book book9 = null;
        model.CD cD11 = new model.CD("");
        model.Magazine magazine12 = null;
        java.util.Collection<model.Book> bookCollection13 = null;
        model.Book book14 = null;
        model.CD cD15 = null;
        model.Magazine magazine16 = null;
        model.Book[] bookArray17 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList18 = new java.util.ArrayList<model.Book>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList18, bookArray17);
        model.CD[] cDArray20 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList21 = new java.util.ArrayList<model.CD>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList21, cDArray20);
        model.Magazine[] magazineArray23 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList24 = new java.util.ArrayList<model.Magazine>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList24, magazineArray23);
        model.ItemSearchResult itemSearchResult26 = new model.ItemSearchResult(book14, cD15, magazine16, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList21, (java.util.Collection<model.Magazine>) magazineList24);
        model.Book book27 = null;
        model.CD cD28 = null;
        model.Magazine magazine29 = null;
        model.Book[] bookArray30 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList31 = new java.util.ArrayList<model.Book>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList31, bookArray30);
        model.CD[] cDArray33 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList34 = new java.util.ArrayList<model.CD>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList34, cDArray33);
        model.Magazine[] magazineArray36 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList37 = new java.util.ArrayList<model.Magazine>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList37, magazineArray36);
        model.ItemSearchResult itemSearchResult39 = new model.ItemSearchResult(book27, cD28, magazine29, (java.util.Collection<model.Book>) bookList31, (java.util.Collection<model.CD>) cDList34, (java.util.Collection<model.Magazine>) magazineList37);
        itemSearchResult26.similarCD = cDList34;
        model.Book book41 = null;
        model.CD cD42 = null;
        model.Magazine magazine43 = null;
        model.Book[] bookArray44 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList45 = new java.util.ArrayList<model.Book>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList45, bookArray44);
        model.CD[] cDArray47 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList48 = new java.util.ArrayList<model.CD>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList48, cDArray47);
        model.Magazine[] magazineArray50 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList51 = new java.util.ArrayList<model.Magazine>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList51, magazineArray50);
        model.ItemSearchResult itemSearchResult53 = new model.ItemSearchResult(book41, cD42, magazine43, (java.util.Collection<model.Book>) bookList45, (java.util.Collection<model.CD>) cDList48, (java.util.Collection<model.Magazine>) magazineList51);
        model.ItemSearchResult itemSearchResult54 = new model.ItemSearchResult(book9, cD11, magazine12, bookCollection13, (java.util.Collection<model.CD>) cDList34, (java.util.Collection<model.Magazine>) magazineList51);
        cD11.ID = (short) 10;
        boolean boolean58 = buySpecialItems8.buyAnItem((model.Item) cD11, (double) 0);
        model.PayDebit payDebit59 = new model.PayDebit();
        buySpecialItems8.paymentAPI = payDebit59;
        rentAndReturnSystem0.paymentAPI = payDebit59;
        payDebit59.amountPay = 1.0f;
        payDebit59.pay((double) 19);
        org.junit.Assert.assertNull(payment1);
        org.junit.Assert.assertNotNull(bookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(cDArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(magazineArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(bookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(magazineArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(bookArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(cDArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(magazineArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test1540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1540");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager4 = new model.NewsletterSubscriptionManager(newsletterList1);
        java.util.ArrayList<model.Newsletter> newsletterList5 = newsletterSubscriptionManager4.newsletterSubscribed;
        model.PaidNewsletter paidNewsletter6 = new model.PaidNewsletter();
        newsletterSubscriptionManager4.subscribeToPaidNewsletter(paidNewsletter6, "src/Client.csv");
        double double9 = paidNewsletter6.subscriptionPrice;
        paidNewsletter6.subscriptionPrice = 100.0f;
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(newsletterList5);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    }

    @Test
    public void test1541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1541");
        model.Database database7 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database7;
        model.SearchVirtualItem searchVirtualItem9 = new model.SearchVirtualItem(database7);
        model.Database.database = database7;
        java.lang.String str11 = database7.virtualItemFilePath;
        model.Login login12 = new model.Login(database7);
        org.junit.Assert.assertNotNull(database7);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "src/Newsletter.csv" + "'", str11, "src/Newsletter.csv");
    }

    @Test
    public void test1542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1542");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "src/Client.csv", "src/BorrowedItems.csv", "src/BorrowedItems.csv", "src/Client.csv" };
        model.Item item8 = model.ItemFactory.makeItem("hi!", strArray7);
        model.Item item9 = model.ItemFactory.makeItem("src/Client.csv", strArray7);
        // The following exception was thrown during execution in test generation
        try {
            model.VirtualItem virtualItem11 = model.VirtualItemFactory.makeVirtualItem(strArray7, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"hi!\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNull(item8);
        org.junit.Assert.assertNull(item9);
    }

    @Test
    public void test1543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1543");
        model.Course course0 = new model.Course();
        java.lang.String str1 = course0.subject;
        course0.code = "";
        int int4 = course0.year;
        course0.subject = "src/CD.csv";
        java.lang.String str7 = course0.code;
        course0.subject = "src/CD.csv";
        course0.code = "model.RegistrationFailedException: ";
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test1544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1544");
        model.Database database7 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database7;
        model.SearchVirtualItem searchVirtualItem9 = new model.SearchVirtualItem(database7);
        model.UniProvidedNewsletter uniProvidedNewsletter11 = searchVirtualItem9.getUniNewsletter("");
        model.VirtualBook virtualBook13 = searchVirtualItem9.getVirtualBook("src/VirtualBook.csv");
        model.VirtualItemSearchResult virtualItemSearchResult15 = searchVirtualItem9.searchVirtualItem("src/CD.csv");
        model.UniProvidedNewsletter uniProvidedNewsletter17 = searchVirtualItem9.getUniNewsletter("model.RentingNotAllowedException: src/Magazine.csv");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNull(uniProvidedNewsletter11);
        org.junit.Assert.assertNull(virtualBook13);
        org.junit.Assert.assertNotNull(virtualItemSearchResult15);
        org.junit.Assert.assertNull(uniProvidedNewsletter17);
    }

    @Test
    public void test1545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1545");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        boolean boolean4 = borrowingManager3.canRent();
        model.Client client5 = borrowingManager3.client;
        model.Student student6 = new model.Student();
        int int7 = student6.ID;
        model.StudentOnlineResources studentOnlineResources8 = new model.StudentOnlineResources((model.Client) student6);
        model.StudentOnlineResources studentOnlineResources9 = new model.StudentOnlineResources((model.Client) student6);
        model.RentedItem[] rentedItemArray10 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList11 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList11, rentedItemArray10);
        model.BorrowingManager borrowingManager13 = new model.BorrowingManager(rentedItemList11);
        model.Visitor visitor14 = new model.Visitor();
        visitor14.email = "hi!";
        borrowingManager13.client = visitor14;
        studentOnlineResources9.client = visitor14;
        model.Client client19 = studentOnlineResources9.client;
        borrowingManager3.client = client19;
        borrowingManager3.amountOwned = (byte) 1;
        java.util.ArrayList<model.RentedItem> rentedItemList23 = borrowingManager3.physicalItemBorrowed;
        boolean boolean24 = borrowingManager3.canRent();
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(client5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(rentedItemArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(client19);
        org.junit.Assert.assertNotNull(rentedItemList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test1546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1546");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.StudentOnlineResources studentOnlineResources3 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook5 = studentOnlineResources3.searchAccessibleBook("src/Book.csv");
        int int6 = virtualBook5.ID;
        model.Newsletter[] newsletterArray7 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList8 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList8, newsletterArray7);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager10 = new model.NewsletterSubscriptionManager(newsletterList8);
        model.Client client11 = newsletterSubscriptionManager10.client;
        model.Visitor visitor12 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList13 = visitor12.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources14 = new model.StudentOnlineResources((model.Client) visitor12);
        model.RentedItem[] rentedItemArray15 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList16 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList16, rentedItemArray15);
        model.BorrowingManager borrowingManager18 = new model.BorrowingManager(rentedItemList16);
        model.Visitor visitor19 = new model.Visitor();
        visitor19.email = "hi!";
        borrowingManager18.client = visitor19;
        studentOnlineResources14.client = visitor19;
        model.UniProvidedNewsletter uniProvidedNewsletter24 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter24.title = "";
        java.lang.String str27 = studentOnlineResources14.readVirtualItem((model.VirtualItem) uniProvidedNewsletter24);
        newsletterSubscriptionManager10.cancelSubscription((model.Newsletter) uniProvidedNewsletter24);
        uniProvidedNewsletter24.cost = 0;
        model.VirtualItemContent virtualItemContent32 = new model.VirtualItemContent("hi!");
        java.lang.String str33 = virtualItemContent32.link;
        java.lang.String str35 = virtualItemContent32.getContent("");
        java.lang.String str37 = virtualItemContent32.getContent("model.RegistrationFailedException: ");
        uniProvidedNewsletter24.content = virtualItemContent32;
        model.UniProvidedNewsletter uniProvidedNewsletter39 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter39.title = "hi!";
        model.VirtualItemContent virtualItemContent43 = new model.VirtualItemContent("hi!");
        java.lang.String str44 = virtualItemContent43.link;
        uniProvidedNewsletter39.content = virtualItemContent43;
        uniProvidedNewsletter24.content = virtualItemContent43;
        virtualBook5.content = virtualItemContent43;
        java.lang.String str49 = virtualItemContent43.getContent("");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(newsletterArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(client11);
        org.junit.Assert.assertNull(virtualBookList13);
        org.junit.Assert.assertNotNull(rentedItemArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
    }

    @Test
    public void test1547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1547");
        model.Database database0 = model.Database.database;
        java.lang.String str1 = database0.getMagazineFilePath();
        java.util.ArrayList<java.lang.String> strList2 = database0.getAllItems();
        org.junit.Assert.assertNotNull(database0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "src/Magazine.csv" + "'", str1, "src/Magazine.csv");
        org.junit.Assert.assertNotNull(strList2);
    }

    @Test
    public void test1548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1548");
        model.Book book0 = null;
        model.CD cD1 = null;
        model.Magazine magazine2 = null;
        model.Book[] bookArray3 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList4 = new java.util.ArrayList<model.Book>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList4, bookArray3);
        model.CD[] cDArray6 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList7 = new java.util.ArrayList<model.CD>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList7, cDArray6);
        model.Magazine[] magazineArray9 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList10 = new java.util.ArrayList<model.Magazine>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList10, magazineArray9);
        model.ItemSearchResult itemSearchResult12 = new model.ItemSearchResult(book0, cD1, magazine2, (java.util.Collection<model.Book>) bookList4, (java.util.Collection<model.CD>) cDList7, (java.util.Collection<model.Magazine>) magazineList10);
        model.Book book13 = itemSearchResult12.book;
        model.CD cD15 = new model.CD("");
        boolean boolean16 = cD15.canBePurchased;
        itemSearchResult12.cd = cD15;
        model.Student student18 = new model.Student();
        int int19 = student18.ID;
        model.StudentOnlineResources studentOnlineResources20 = new model.StudentOnlineResources((model.Client) student18);
        model.StudentOnlineResources studentOnlineResources21 = new model.StudentOnlineResources((model.Client) student18);
        model.VirtualBook virtualBook23 = studentOnlineResources21.searchAccessibleBook("src/Book.csv");
        int int24 = virtualBook23.ID;
        model.Newsletter[] newsletterArray25 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList26 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList26, newsletterArray25);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager28 = new model.NewsletterSubscriptionManager(newsletterList26);
        model.Client client29 = newsletterSubscriptionManager28.client;
        model.Visitor visitor30 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList31 = visitor30.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources32 = new model.StudentOnlineResources((model.Client) visitor30);
        model.RentedItem[] rentedItemArray33 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList34 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList34, rentedItemArray33);
        model.BorrowingManager borrowingManager36 = new model.BorrowingManager(rentedItemList34);
        model.Visitor visitor37 = new model.Visitor();
        visitor37.email = "hi!";
        borrowingManager36.client = visitor37;
        studentOnlineResources32.client = visitor37;
        model.UniProvidedNewsletter uniProvidedNewsletter42 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter42.title = "";
        java.lang.String str45 = studentOnlineResources32.readVirtualItem((model.VirtualItem) uniProvidedNewsletter42);
        newsletterSubscriptionManager28.cancelSubscription((model.Newsletter) uniProvidedNewsletter42);
        uniProvidedNewsletter42.cost = 0;
        model.VirtualItemContent virtualItemContent50 = new model.VirtualItemContent("hi!");
        java.lang.String str51 = virtualItemContent50.link;
        java.lang.String str53 = virtualItemContent50.getContent("");
        java.lang.String str55 = virtualItemContent50.getContent("model.RegistrationFailedException: ");
        uniProvidedNewsletter42.content = virtualItemContent50;
        model.UniProvidedNewsletter uniProvidedNewsletter57 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter57.title = "hi!";
        model.VirtualItemContent virtualItemContent61 = new model.VirtualItemContent("hi!");
        java.lang.String str62 = virtualItemContent61.link;
        uniProvidedNewsletter57.content = virtualItemContent61;
        uniProvidedNewsletter42.content = virtualItemContent61;
        virtualBook23.content = virtualItemContent61;
        itemSearchResult12.book = virtualBook23;
        java.time.LocalDate localDate67 = null;
        // The following exception was thrown during execution in test generation
        try {
            model.RentedItem rentedItem68 = new model.RentedItem((model.Item) virtualBook23, localDate67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.format(java.time.format.DateTimeFormatter)\" because \"borrowDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(bookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(cDArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(magazineArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(book13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(virtualBook23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(newsletterArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(client29);
        org.junit.Assert.assertNull(virtualBookList31);
        org.junit.Assert.assertNotNull(rentedItemArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
    }

    @Test
    public void test1549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1549");
        model.RegistrationFailedException registrationFailedException1 = new model.RegistrationFailedException("");
        model.RentingNotAllowedException rentingNotAllowedException3 = new model.RentingNotAllowedException("hi!");
        registrationFailedException1.addSuppressed((java.lang.Throwable) rentingNotAllowedException3);
        rentingNotAllowedException3.message = "model.LoginFailedException: hi!";
    }

    @Test
    public void test1550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1550");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter54 = null;
        model.PaidNewsletter paidNewsletter55 = null;
        model.VirtualItemSearchResult virtualItemSearchResult56 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter54, paidNewsletter55);
        model.PaidNewsletter paidNewsletter57 = virtualItemSearchResult56.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter58 = virtualItemSearchResult56.getUniNewsletter();
        model.PaidNewsletter paidNewsletter59 = virtualItemSearchResult56.getPaidNewsletter();
        model.UniProvidedNewsletter uniProvidedNewsletter60 = virtualItemSearchResult56.getUniNewsletter();
        model.PaidNewsletter paidNewsletter61 = null;
        virtualItemSearchResult56.setPaidNewsletter(paidNewsletter61);
        model.UniProvidedNewsletter uniProvidedNewsletter63 = virtualItemSearchResult56.getUniNewsletter();
        model.Student student64 = new model.Student();
        int int65 = student64.ID;
        model.StudentOnlineResources studentOnlineResources66 = new model.StudentOnlineResources((model.Client) student64);
        model.LibraryManagementTeam libraryManagementTeam67 = new model.LibraryManagementTeam();
        int int68 = libraryManagementTeam67.ID;
        model.Student student69 = new model.Student();
        int int70 = student69.ID;
        model.StudentOnlineResources studentOnlineResources71 = new model.StudentOnlineResources((model.Client) student69);
        model.VirtualBook virtualBook73 = studentOnlineResources71.searchAccessibleBook("");
        model.VirtualItemContent virtualItemContent74 = virtualBook73.content;
        libraryManagementTeam67.enableAnItem((model.Item) virtualBook73);
        java.lang.String str76 = studentOnlineResources66.readVirtualItem((model.VirtualItem) virtualBook73);
        virtualItemSearchResult56.virtualBook = virtualBook73;
        boolean boolean78 = virtualBook73.isBookLost;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertNull(paidNewsletter57);
        org.junit.Assert.assertNull(uniProvidedNewsletter58);
        org.junit.Assert.assertNull(paidNewsletter59);
        org.junit.Assert.assertNull(uniProvidedNewsletter60);
        org.junit.Assert.assertNull(uniProvidedNewsletter63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(virtualBook73);
        org.junit.Assert.assertNull(virtualItemContent74);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test1551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1551");
        model.Database database0 = null;
        model.Login login1 = new model.Login(database0);
        model.Database database9 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str10 = database9.getBookFilePath();
        database9.itemPath = "hi!";
        model.Database.database = database9;
        java.lang.String str14 = database9.getNewspaperFilePath();
        login1.db = database9;
        boolean boolean17 = database9.addItem("model.RegistrationFailedException: src/Magazine.csv");
        model.SearchVirtualItem searchVirtualItem18 = new model.SearchVirtualItem(database9);
        java.lang.String str19 = database9.getBookFilePath();
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "src/Book.csv" + "'", str10, "src/Book.csv");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "src/Newsletter.csv" + "'", str14, "src/Newsletter.csv");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "src/Book.csv" + "'", str19, "src/Book.csv");
    }

    @Test
    public void test1552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1552");
        model.Database database0 = model.Database.database;
        java.util.ArrayList<java.lang.String> strList1 = database0.getAllItems();
        model.Client client3 = database0.getClient("src/Magazine.csv");
        model.Register register4 = model.Register.makeRegister(database0);
        model.Database database12 = model.Database.createDatabase("src/Newsletter.csv", "model.RegistrationFailedException: src/Book.csv", "src/BorrowedItems.csv", "model.RegistrationFailedException: model.RentingNotAllowedException: hi!", "src/BorrowedItems.csv", "", "model.RentingNotAllowedException: hi!");
        register4.database = database12;
        org.junit.Assert.assertNotNull(database0);
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(client3);
        org.junit.Assert.assertNotNull(register4);
        org.junit.Assert.assertNotNull(database12);
    }

    @Test
    public void test1553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1553");
        model.Course course0 = new model.Course();
        java.lang.String str1 = course0.subject;
        course0.code = "";
        int int4 = course0.year;
        course0.subject = "src/CD.csv";
        java.lang.String str7 = course0.code;
        course0.year = 6080850;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test1554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1554");
        model.Database database7 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        java.lang.String str8 = database7.getBookFilePath();
        java.lang.String str9 = database7.getBookFilePath();
        java.lang.String str10 = database7.getVirtualBookFilePath();
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/Book.csv" + "'", str8, "src/Book.csv");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "src/Book.csv" + "'", str9, "src/Book.csv");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "src/VirtualBook.csv" + "'", str10, "src/VirtualBook.csv");
    }

    @Test
    public void test1555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1555");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.RequestForum requestForum1 = model.RequestForum.createRequestForum();
        model.Request request2 = new model.Request();
        request2.title = "";
        java.lang.String str5 = requestForum1.makeARequest(request2);
        int int6 = requestForum0.assessBooksPriority(request2);
        model.LibraryManagementTeam libraryManagementTeam7 = new model.LibraryManagementTeam();
        int int8 = libraryManagementTeam7.ID;
        int int9 = libraryManagementTeam7.accessCode;
        model.Item item10 = null;
        libraryManagementTeam7.addAnItem(item10);
        java.util.ArrayList<model.Item> itemList12 = libraryManagementTeam7.items;
        requestForum0.managementTeam = libraryManagementTeam7;
        model.RequestForum requestForum14 = model.RequestForum.createRequestForum();
        model.LibraryManagementTeam libraryManagementTeam15 = new model.LibraryManagementTeam();
        int int16 = libraryManagementTeam15.ID;
        int int17 = libraryManagementTeam15.accessCode;
        model.Item item18 = null;
        libraryManagementTeam15.addAnItem(item18);
        requestForum14.managementTeam = libraryManagementTeam15;
        java.util.ArrayList<model.Item> itemList21 = libraryManagementTeam15.items;
        requestForum0.managementTeam = libraryManagementTeam15;
        model.LibraryManagementTeam libraryManagementTeam23 = new model.LibraryManagementTeam();
        int int24 = libraryManagementTeam23.ID;
        int int25 = libraryManagementTeam23.accessCode;
        model.ItemManagement itemManagement26 = new model.ItemManagement();
        model.Database database27 = null;
        itemManagement26.database = database27;
        model.Student student29 = new model.Student();
        int int30 = student29.ID;
        model.StudentOnlineResources studentOnlineResources31 = new model.StudentOnlineResources((model.Client) student29);
        model.VirtualBook virtualBook33 = studentOnlineResources31.searchAccessibleBook("");
        itemManagement26.disableAnItem((model.Item) virtualBook33);
        libraryManagementTeam23.itemManagement = itemManagement26;
        requestForum0.managementTeam = libraryManagementTeam23;
        model.Request request37 = null;
        java.lang.String str38 = requestForum0.makeARequest(request37);
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertNotNull(requestForum1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(itemList12);
        org.junit.Assert.assertNotNull(requestForum14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(itemList21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(virtualBook33);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
    }

    @Test
    public void test1556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1556");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.Payment payment1 = rentAndReturnSystem0.paymentAPI;
        model.PayMobileWallet payMobileWallet2 = new model.PayMobileWallet();
        payMobileWallet2.amountPay = 100.0f;
        payMobileWallet2.pay((double) 100L);
        rentAndReturnSystem0.paymentAPI = payMobileWallet2;
        model.Payment payment8 = rentAndReturnSystem0.paymentAPI;
        model.Payment payment9 = rentAndReturnSystem0.paymentAPI;
        model.Student student10 = new model.Student();
        int int11 = student10.ID;
        model.StudentOnlineResources studentOnlineResources12 = new model.StudentOnlineResources((model.Client) student10);
        model.VirtualBook virtualBook14 = studentOnlineResources12.searchAccessibleBook("");
        model.CD cD16 = new model.CD("");
        model.Magazine magazine17 = null;
        model.Book book18 = null;
        model.CD cD19 = null;
        model.Magazine magazine20 = null;
        model.Book[] bookArray21 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList22 = new java.util.ArrayList<model.Book>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList22, bookArray21);
        model.CD[] cDArray24 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList25 = new java.util.ArrayList<model.CD>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList25, cDArray24);
        model.Magazine[] magazineArray27 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList28 = new java.util.ArrayList<model.Magazine>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList28, magazineArray27);
        model.ItemSearchResult itemSearchResult30 = new model.ItemSearchResult(book18, cD19, magazine20, (java.util.Collection<model.Book>) bookList22, (java.util.Collection<model.CD>) cDList25, (java.util.Collection<model.Magazine>) magazineList28);
        model.Book book31 = null;
        model.CD cD32 = null;
        model.Magazine magazine33 = null;
        model.Book[] bookArray34 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList35 = new java.util.ArrayList<model.Book>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList35, bookArray34);
        model.CD[] cDArray37 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList38 = new java.util.ArrayList<model.CD>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList38, cDArray37);
        model.Magazine[] magazineArray40 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList41 = new java.util.ArrayList<model.Magazine>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList41, magazineArray40);
        model.ItemSearchResult itemSearchResult43 = new model.ItemSearchResult(book31, cD32, magazine33, (java.util.Collection<model.Book>) bookList35, (java.util.Collection<model.CD>) cDList38, (java.util.Collection<model.Magazine>) magazineList41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        itemSearchResult43.similarCD = cDList45;
        model.Book book48 = null;
        model.CD cD49 = null;
        model.Magazine magazine50 = null;
        model.Book[] bookArray51 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList52 = new java.util.ArrayList<model.Book>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList52, bookArray51);
        model.CD[] cDArray54 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList55 = new java.util.ArrayList<model.CD>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList55, cDArray54);
        model.Magazine[] magazineArray57 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList58 = new java.util.ArrayList<model.Magazine>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList58, magazineArray57);
        model.ItemSearchResult itemSearchResult60 = new model.ItemSearchResult(book48, cD49, magazine50, (java.util.Collection<model.Book>) bookList52, (java.util.Collection<model.CD>) cDList55, (java.util.Collection<model.Magazine>) magazineList58);
        model.ItemSearchResult itemSearchResult61 = new model.ItemSearchResult((model.Book) virtualBook14, cD16, magazine17, (java.util.Collection<model.Book>) bookList22, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList58);
        int int62 = virtualBook14.ID;
        int int63 = virtualBook14.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter64 = null;
        model.PaidNewsletter paidNewsletter65 = null;
        model.VirtualItemSearchResult virtualItemSearchResult66 = new model.VirtualItemSearchResult(virtualBook14, uniProvidedNewsletter64, paidNewsletter65);
        boolean boolean67 = virtualBook14.isBookLost;
        model.VirtualItemContent virtualItemContent68 = virtualBook14.content;
        java.util.Calendar calendar69 = virtualBook14.date;
        virtualBook14.showContent();
        model.Student student71 = new model.Student();
        java.lang.String str72 = student71.username;
        boolean boolean73 = rentAndReturnSystem0.rentAnItem((model.Item) virtualBook14, (model.Client) student71);
        java.lang.Class<?> wildcardClass74 = student71.getClass();
        org.junit.Assert.assertNull(payment1);
        org.junit.Assert.assertNotNull(payment8);
        org.junit.Assert.assertNotNull(payment9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(virtualBook14);
        org.junit.Assert.assertNotNull(bookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(cDArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(magazineArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(bookArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(cDArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(magazineArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(bookArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(cDArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(magazineArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 20 + "'", int63 == 20);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(virtualItemContent68);
        org.junit.Assert.assertNull(calendar69);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1557");
        model.Course course0 = new model.Course();
        java.lang.String str1 = course0.code;
        java.lang.String str2 = course0.subject;
        course0.subject = "model.RegistrationFailedException: ";
        course0.subject = "src/Magazine.csv";
        course0.code = "src/CD.csv";
        java.lang.String str9 = course0.subject;
        course0.year = 38;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "src/Magazine.csv" + "'", str9, "src/Magazine.csv");
    }

    @Test
    public void test1558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1558");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.Database.database = database7;
        java.lang.String str10 = database7.getCDFilePath();
        java.lang.String str11 = database7.getNewspaperFilePath();
        model.Login login12 = new model.Login(database7);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "src/CD.csv" + "'", str10, "src/CD.csv");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "src/Newsletter.csv" + "'", str11, "src/Newsletter.csv");
    }

    @Test
    public void test1559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1559");
        model.LibraryManagementTeam libraryManagementTeam0 = new model.LibraryManagementTeam();
        libraryManagementTeam0.accessCode = (short) 10;
        java.util.Collection<model.Request> requestCollection3 = libraryManagementTeam0.bookRequests;
        java.util.ArrayList<model.Item> itemList4 = libraryManagementTeam0.items;
        model.ItemManagement itemManagement5 = new model.ItemManagement();
        model.Database database6 = null;
        itemManagement5.database = database6;
        model.Student student8 = new model.Student();
        int int9 = student8.ID;
        model.StudentOnlineResources studentOnlineResources10 = new model.StudentOnlineResources((model.Client) student8);
        model.VirtualBook virtualBook12 = studentOnlineResources10.searchAccessibleBook("");
        itemManagement5.disableAnItem((model.Item) virtualBook12);
        model.Item item15 = itemManagement5.selectAnItemFromDatabase((int) '#');
        model.ItemManagement itemManagement16 = new model.ItemManagement();
        model.Database database17 = null;
        itemManagement16.database = database17;
        model.Student student19 = new model.Student();
        int int20 = student19.ID;
        model.StudentOnlineResources studentOnlineResources21 = new model.StudentOnlineResources((model.Client) student19);
        model.VirtualBook virtualBook23 = studentOnlineResources21.searchAccessibleBook("");
        itemManagement16.disableAnItem((model.Item) virtualBook23);
        itemManagement5.disableAnItem((model.Item) virtualBook23);
        model.Database database26 = itemManagement5.database;
        libraryManagementTeam0.itemManagement = itemManagement5;
        libraryManagementTeam0.accessCode = 43;
        org.junit.Assert.assertNull(requestCollection3);
        org.junit.Assert.assertNotNull(itemList4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(virtualBook12);
        org.junit.Assert.assertNull(item15);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(virtualBook23);
        org.junit.Assert.assertNull(database26);
    }

    @Test
    public void test1560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1560");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.Database.database = database7;
        java.lang.String str10 = database7.virtualItemFilePath;
        java.lang.String str11 = database7.getBookFilePath();
        database7.itemPath = "src/Magazine.csv";
        model.Login login14 = model.Login.makeLogin(database7);
        boolean boolean16 = database7.addItem("src/Client.csv");
        model.SearchItems searchItems17 = new model.SearchItems(database7);
        model.ItemSearchResult itemSearchResult19 = searchItems17.searchItem("hi!");
        model.ItemSearchResult itemSearchResult21 = searchItems17.searchItem("src/Newsletter.csv");
        model.ItemSearchResult itemSearchResult23 = searchItems17.searchItem("model.LoginFailedException: hi!");
        model.ItemSearchResult itemSearchResult25 = searchItems17.searchItem("model.RegistrationFailedException: src/Magazine.csv");
        model.Magazine magazine27 = searchItems17.getMagazine("");
        model.CD cD29 = searchItems17.getCD("src/CD.csv");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "src/Newsletter.csv" + "'", str10, "src/Newsletter.csv");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "src/Book.csv" + "'", str11, "src/Book.csv");
        org.junit.Assert.assertNotNull(login14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(itemSearchResult19);
        org.junit.Assert.assertNotNull(itemSearchResult21);
        org.junit.Assert.assertNotNull(itemSearchResult23);
        org.junit.Assert.assertNotNull(itemSearchResult25);
        org.junit.Assert.assertNull(magazine27);
        org.junit.Assert.assertNull(cD29);
    }

    @Test
    public void test1561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1561");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter54 = null;
        model.PaidNewsletter paidNewsletter55 = null;
        model.VirtualItemSearchResult virtualItemSearchResult56 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter54, paidNewsletter55);
        model.PaidNewsletter paidNewsletter57 = virtualItemSearchResult56.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter58 = new model.UniProvidedNewsletter();
        virtualItemSearchResult56.setUniNewsletter(uniProvidedNewsletter58);
        model.PaidNewsletter paidNewsletter60 = virtualItemSearchResult56.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter61 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter61.title = "hi!";
        virtualItemSearchResult56.uniNewsletter = uniProvidedNewsletter61;
        model.PaidNewsletter paidNewsletter65 = virtualItemSearchResult56.getPaidNewsletter();
        model.UniProvidedNewsletter uniProvidedNewsletter66 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter66.title = "hi!";
        model.VirtualItemContent virtualItemContent70 = new model.VirtualItemContent("hi!");
        java.lang.String str71 = virtualItemContent70.link;
        uniProvidedNewsletter66.content = virtualItemContent70;
        virtualItemSearchResult56.setUniNewsletter(uniProvidedNewsletter66);
        boolean boolean75 = uniProvidedNewsletter66.equals((java.lang.Object) 9042984);
        model.VirtualItemContent virtualItemContent76 = uniProvidedNewsletter66.content;
        uniProvidedNewsletter66.ID = 0;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertNull(paidNewsletter57);
        org.junit.Assert.assertNull(paidNewsletter60);
        org.junit.Assert.assertNull(paidNewsletter65);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(virtualItemContent76);
    }

    @Test
    public void test1562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1562");
        model.Database database0 = model.Database.database;
        java.util.ArrayList<java.lang.String> strList1 = database0.getAllItems();
        model.Login login2 = model.Login.makeLogin(database0);
        model.Database database3 = login2.db;
        model.Database database11 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str12 = database11.getVirtualBookFilePath();
        model.Database.database = database11;
        java.lang.String str14 = database11.virtualItemFilePath;
        java.lang.String str15 = database11.getBookFilePath();
        database11.itemPath = "src/Magazine.csv";
        model.Login login18 = model.Login.makeLogin(database11);
        boolean boolean20 = database11.addItem("src/Client.csv");
        model.SearchVirtualItem searchVirtualItem21 = new model.SearchVirtualItem(database11);
        model.Login login22 = new model.Login(database11);
        login2.db = database11;
        java.lang.String str24 = database11.getBookFilePath();
        org.junit.Assert.assertNotNull(database0);
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(login2);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "src/VirtualBook.csv" + "'", str12, "src/VirtualBook.csv");
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "src/Newsletter.csv" + "'", str14, "src/Newsletter.csv");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "src/Book.csv" + "'", str15, "src/Book.csv");
        org.junit.Assert.assertNotNull(login18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "src/Book.csv" + "'", str24, "src/Book.csv");
    }

    @Test
    public void test1563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1563");
        model.ItemManagement itemManagement0 = new model.ItemManagement();
        model.Item item2 = itemManagement0.selectAnItemFromDatabase((int) (short) 0);
        model.Database database3 = model.Database.database;
        model.Student student4 = new model.Student();
        int int5 = student4.ID;
        model.StudentOnlineResources studentOnlineResources6 = new model.StudentOnlineResources((model.Client) student4);
        student4.ID = '#';
        database3.addClient((model.Client) student4);
        itemManagement0.database = database3;
        model.Magazine magazine12 = new model.Magazine("hi!");
        magazine12.location = "model.RegistrationFailedException: ";
        magazine12.author = "src/VirtualBook.csv";
        boolean boolean17 = magazine12.canBePurchased;
        itemManagement0.addAnItem((model.Item) magazine12);
        model.ItemManagement itemManagement19 = new model.ItemManagement();
        model.Item item21 = itemManagement19.selectAnItemFromDatabase((int) (short) 0);
        model.Database database22 = itemManagement19.database;
        model.BuySpecialItems buySpecialItems23 = new model.BuySpecialItems();
        model.CD cD25 = new model.CD("");
        int int26 = cD25.ID;
        boolean boolean28 = buySpecialItems23.buyAnItem((model.Item) cD25, (double) (short) 0);
        itemManagement19.addAnItem((model.Item) cD25);
        model.Student student30 = new model.Student();
        int int31 = student30.ID;
        model.StudentOnlineResources studentOnlineResources32 = new model.StudentOnlineResources((model.Client) student30);
        model.StudentOnlineResources studentOnlineResources33 = new model.StudentOnlineResources((model.Client) student30);
        model.RentedItem[] rentedItemArray34 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList35 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList35, rentedItemArray34);
        model.BorrowingManager borrowingManager37 = new model.BorrowingManager(rentedItemList35);
        model.Visitor visitor38 = new model.Visitor();
        visitor38.email = "hi!";
        borrowingManager37.client = visitor38;
        studentOnlineResources33.client = visitor38;
        model.Student student43 = new model.Student();
        int int44 = student43.ID;
        model.StudentOnlineResources studentOnlineResources45 = new model.StudentOnlineResources((model.Client) student43);
        model.VirtualBook virtualBook47 = studentOnlineResources45.searchAccessibleBook("");
        java.lang.String str48 = virtualBook47.location;
        model.VirtualItemContent virtualItemContent49 = virtualBook47.content;
        java.lang.String str50 = studentOnlineResources33.readVirtualItem((model.VirtualItem) virtualBook47);
        virtualBook47.canBePurchased = false;
        boolean boolean53 = virtualBook47.canBePurchased;
        itemManagement19.disableAnItem((model.Item) virtualBook47);
        boolean boolean55 = magazine12.equals((java.lang.Object) itemManagement19);
        org.junit.Assert.assertNull(item2);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(item21);
        org.junit.Assert.assertNull(database22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(rentedItemArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(virtualBook47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(virtualItemContent49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test1564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1564");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        virtualBook4.ISBN = "model.LoginFailedException: hi!";
        virtualBook4.publisher = "src/Book.csv";
        model.VirtualItemContent virtualItemContent10 = new model.VirtualItemContent("src/Book.csv");
        virtualBook4.content = virtualItemContent10;
        virtualBook4.showContent();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
    }

    @Test
    public void test1565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1565");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter54 = null;
        model.PaidNewsletter paidNewsletter55 = null;
        model.VirtualItemSearchResult virtualItemSearchResult56 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter54, paidNewsletter55);
        boolean boolean57 = virtualBook4.isBookLost;
        model.VirtualItemContent virtualItemContent58 = virtualBook4.content;
        int int59 = virtualBook4.ID;
        virtualBook4.showContent();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(virtualItemContent58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
    }

    @Test
    public void test1566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1566");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.Visitor visitor5 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList6 = visitor5.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources7 = new model.StudentOnlineResources((model.Client) visitor5);
        model.RentedItem[] rentedItemArray8 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList9 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList9, rentedItemArray8);
        model.BorrowingManager borrowingManager11 = new model.BorrowingManager(rentedItemList9);
        model.Visitor visitor12 = new model.Visitor();
        visitor12.email = "hi!";
        borrowingManager11.client = visitor12;
        studentOnlineResources7.client = visitor12;
        model.UniProvidedNewsletter uniProvidedNewsletter17 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter17.title = "";
        java.lang.String str20 = studentOnlineResources7.readVirtualItem((model.VirtualItem) uniProvidedNewsletter17);
        newsletterSubscriptionManager3.cancelSubscription((model.Newsletter) uniProvidedNewsletter17);
        java.util.ArrayList<model.Newsletter> newsletterList22 = newsletterSubscriptionManager3.newsletterSubscribed;
        model.Client client23 = newsletterSubscriptionManager3.client;
        model.Newsletter[] newsletterArray24 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList25 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList25, newsletterArray24);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager27 = new model.NewsletterSubscriptionManager(newsletterList25);
        model.Client client28 = newsletterSubscriptionManager27.client;
        model.Student student29 = new model.Student();
        int int30 = student29.ID;
        model.StudentOnlineResources studentOnlineResources31 = new model.StudentOnlineResources((model.Client) student29);
        student29.ID = '#';
        java.lang.String str34 = student29.email;
        newsletterSubscriptionManager27.client = student29;
        model.Newsletter[] newsletterArray36 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList37 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList37, newsletterArray36);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager39 = new model.NewsletterSubscriptionManager(newsletterList37);
        newsletterSubscriptionManager27.newsletterSubscribed = newsletterList37;
        model.NewsletterSubscriptionManager newsletterSubscriptionManager41 = new model.NewsletterSubscriptionManager(newsletterList37);
        newsletterSubscriptionManager3.newsletterSubscribed = newsletterList37;
        model.Client client43 = newsletterSubscriptionManager3.client;
        model.Database database44 = model.Database.database;
        model.Student student45 = new model.Student();
        int int46 = student45.ID;
        model.StudentOnlineResources studentOnlineResources47 = new model.StudentOnlineResources((model.Client) student45);
        student45.ID = '#';
        database44.addClient((model.Client) student45);
        java.lang.String str51 = database44.getCDFilePath();
        java.util.ArrayList<java.lang.String> strList52 = database44.getAllItems();
        model.Faculty faculty53 = new model.Faculty();
        faculty53.username = "hi!";
        java.lang.String str56 = faculty53.username;
        database44.addClient((model.Client) faculty53);
        java.lang.String str58 = faculty53.faculty;
        newsletterSubscriptionManager3.client = faculty53;
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertNull(virtualBookList6);
        org.junit.Assert.assertNotNull(rentedItemArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(newsletterList22);
        org.junit.Assert.assertNull(client23);
        org.junit.Assert.assertNotNull(newsletterArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(client28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(newsletterArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(client43);
        org.junit.Assert.assertNotNull(database44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "src/CD.csv" + "'", str51, "src/CD.csv");
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertNull(str58);
    }

    @Test
    public void test1567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1567");
        model.BuySpecialItems buySpecialItems0 = new model.BuySpecialItems();
        model.Book book1 = null;
        model.CD cD3 = new model.CD("");
        model.Magazine magazine4 = null;
        java.util.Collection<model.Book> bookCollection5 = null;
        model.Book book6 = null;
        model.CD cD7 = null;
        model.Magazine magazine8 = null;
        model.Book[] bookArray9 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList10 = new java.util.ArrayList<model.Book>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList10, bookArray9);
        model.CD[] cDArray12 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList13 = new java.util.ArrayList<model.CD>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList13, cDArray12);
        model.Magazine[] magazineArray15 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList16 = new java.util.ArrayList<model.Magazine>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList16, magazineArray15);
        model.ItemSearchResult itemSearchResult18 = new model.ItemSearchResult(book6, cD7, magazine8, (java.util.Collection<model.Book>) bookList10, (java.util.Collection<model.CD>) cDList13, (java.util.Collection<model.Magazine>) magazineList16);
        model.Book book19 = null;
        model.CD cD20 = null;
        model.Magazine magazine21 = null;
        model.Book[] bookArray22 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList23 = new java.util.ArrayList<model.Book>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList23, bookArray22);
        model.CD[] cDArray25 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList26 = new java.util.ArrayList<model.CD>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList26, cDArray25);
        model.Magazine[] magazineArray28 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList29 = new java.util.ArrayList<model.Magazine>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList29, magazineArray28);
        model.ItemSearchResult itemSearchResult31 = new model.ItemSearchResult(book19, cD20, magazine21, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList29);
        itemSearchResult18.similarCD = cDList26;
        model.Book book33 = null;
        model.CD cD34 = null;
        model.Magazine magazine35 = null;
        model.Book[] bookArray36 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList37 = new java.util.ArrayList<model.Book>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList37, bookArray36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        model.Magazine[] magazineArray42 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList43 = new java.util.ArrayList<model.Magazine>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList43, magazineArray42);
        model.ItemSearchResult itemSearchResult45 = new model.ItemSearchResult(book33, cD34, magazine35, (java.util.Collection<model.Book>) bookList37, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book1, cD3, magazine4, bookCollection5, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList43);
        cD3.ID = (short) 10;
        boolean boolean50 = buySpecialItems0.buyAnItem((model.Item) cD3, (double) 0);
        model.LibraryManagementTeam libraryManagementTeam51 = new model.LibraryManagementTeam();
        int int52 = libraryManagementTeam51.ID;
        int int53 = libraryManagementTeam51.accessCode;
        model.Item item54 = null;
        libraryManagementTeam51.addAnItem(item54);
        java.util.ArrayList<model.Item> itemList56 = libraryManagementTeam51.items;
        buySpecialItems0.purchasedItems = itemList56;
        model.BuySpecialItems buySpecialItems58 = new model.BuySpecialItems();
        model.PayDebit payDebit59 = new model.PayDebit();
        buySpecialItems58.paymentAPI = payDebit59;
        model.BuySpecialItems buySpecialItems61 = new model.BuySpecialItems();
        model.Payment payment62 = null;
        buySpecialItems61.paymentAPI = payment62;
        model.PayMobileWallet payMobileWallet64 = new model.PayMobileWallet();
        buySpecialItems61.paymentAPI = payMobileWallet64;
        payMobileWallet64.amountPay = (-1L);
        payMobileWallet64.pay((double) (-1.0f));
        buySpecialItems58.paymentAPI = payMobileWallet64;
        model.PayCredit payCredit71 = new model.PayCredit();
        payCredit71.amountPay = 10;
        payCredit71.pay((double) (-1.0f));
        payCredit71.pay((double) ' ');
        double double78 = payCredit71.amountPay;
        payCredit71.pay((double) (short) 100);
        buySpecialItems58.paymentAPI = payCredit71;
        buySpecialItems0.paymentAPI = payCredit71;
        payCredit71.pay((double) 1719839);
        payCredit71.pay(6713989.0d);
        org.junit.Assert.assertNotNull(bookArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(cDArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(magazineArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(bookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(magazineArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(bookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(magazineArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(itemList56);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 41.0d + "'", double78 == 41.0d);
    }

    @Test
    public void test1568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1568");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.RequestForum requestForum1 = model.RequestForum.createRequestForum();
        model.Request request2 = new model.Request();
        request2.title = "";
        java.lang.String str5 = requestForum1.makeARequest(request2);
        int int6 = requestForum0.assessBooksPriority(request2);
        model.LibraryManagementTeam libraryManagementTeam7 = new model.LibraryManagementTeam();
        int int8 = libraryManagementTeam7.ID;
        int int9 = libraryManagementTeam7.accessCode;
        model.Item item10 = null;
        libraryManagementTeam7.addAnItem(item10);
        java.util.ArrayList<model.Item> itemList12 = libraryManagementTeam7.items;
        requestForum0.managementTeam = libraryManagementTeam7;
        model.Item item15 = libraryManagementTeam7.selectAnItemFromDatabase(0);
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertNotNull(requestForum1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(itemList12);
        org.junit.Assert.assertNull(item15);
    }

    @Test
    public void test1569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1569");
        model.Faculty faculty0 = new model.Faculty();
        faculty0.username = "hi!";
        java.util.Collection<model.Course> courseCollection3 = null;
        faculty0.courses = courseCollection3;
        java.util.Collection<model.Course> courseCollection5 = faculty0.courses;
        int int6 = faculty0.ID;
        java.lang.String str7 = faculty0.faculty;
        model.RentedItem[] rentedItemArray8 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList9 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList9, rentedItemArray8);
        model.BorrowingManager borrowingManager11 = new model.BorrowingManager(rentedItemList9);
        model.Book book12 = null;
        model.CD cD14 = new model.CD("");
        model.Magazine magazine15 = null;
        java.util.Collection<model.Book> bookCollection16 = null;
        model.Book book17 = null;
        model.CD cD18 = null;
        model.Magazine magazine19 = null;
        model.Book[] bookArray20 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList21 = new java.util.ArrayList<model.Book>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList21, bookArray20);
        model.CD[] cDArray23 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList24 = new java.util.ArrayList<model.CD>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList24, cDArray23);
        model.Magazine[] magazineArray26 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList27 = new java.util.ArrayList<model.Magazine>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList27, magazineArray26);
        model.ItemSearchResult itemSearchResult29 = new model.ItemSearchResult(book17, cD18, magazine19, (java.util.Collection<model.Book>) bookList21, (java.util.Collection<model.CD>) cDList24, (java.util.Collection<model.Magazine>) magazineList27);
        model.Book book30 = null;
        model.CD cD31 = null;
        model.Magazine magazine32 = null;
        model.Book[] bookArray33 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList34 = new java.util.ArrayList<model.Book>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList34, bookArray33);
        model.CD[] cDArray36 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList37 = new java.util.ArrayList<model.CD>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList37, cDArray36);
        model.Magazine[] magazineArray39 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList40 = new java.util.ArrayList<model.Magazine>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList40, magazineArray39);
        model.ItemSearchResult itemSearchResult42 = new model.ItemSearchResult(book30, cD31, magazine32, (java.util.Collection<model.Book>) bookList34, (java.util.Collection<model.CD>) cDList37, (java.util.Collection<model.Magazine>) magazineList40);
        itemSearchResult29.similarCD = cDList37;
        model.Book book44 = null;
        model.CD cD45 = null;
        model.Magazine magazine46 = null;
        model.Book[] bookArray47 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList48 = new java.util.ArrayList<model.Book>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList48, bookArray47);
        model.CD[] cDArray50 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList51 = new java.util.ArrayList<model.CD>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList51, cDArray50);
        model.Magazine[] magazineArray53 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList54 = new java.util.ArrayList<model.Magazine>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList54, magazineArray53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult(book44, cD45, magazine46, (java.util.Collection<model.Book>) bookList48, (java.util.Collection<model.CD>) cDList51, (java.util.Collection<model.Magazine>) magazineList54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult(book12, cD14, magazine15, bookCollection16, (java.util.Collection<model.CD>) cDList37, (java.util.Collection<model.Magazine>) magazineList54);
        cD14.ID = (short) 10;
        borrowingManager11.removeRentedItem((model.Item) cD14);
        boolean boolean61 = borrowingManager11.canRent();
        faculty0.borrowManager = borrowingManager11;
        org.junit.Assert.assertNull(courseCollection5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(rentedItemArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(bookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(cDArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(magazineArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(bookArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(cDArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(magazineArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(bookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(cDArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(magazineArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test1570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1570");
        model.ItemManagement itemManagement0 = new model.ItemManagement();
        model.Item item2 = itemManagement0.selectAnItemFromDatabase((int) (short) 0);
        model.Database database3 = model.Database.database;
        model.Student student4 = new model.Student();
        int int5 = student4.ID;
        model.StudentOnlineResources studentOnlineResources6 = new model.StudentOnlineResources((model.Client) student4);
        student4.ID = '#';
        database3.addClient((model.Client) student4);
        itemManagement0.database = database3;
        model.Database database11 = itemManagement0.database;
        model.Register register12 = model.Register.makeRegister(database11);
        model.Database database13 = register12.database;
        org.junit.Assert.assertNull(item2);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(register12);
        org.junit.Assert.assertNotNull(database13);
    }

    @Test
    public void test1571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1571");
        model.BuySpecialItems buySpecialItems0 = new model.BuySpecialItems();
        model.Book book1 = null;
        model.CD cD3 = new model.CD("");
        model.Magazine magazine4 = null;
        java.util.Collection<model.Book> bookCollection5 = null;
        model.Book book6 = null;
        model.CD cD7 = null;
        model.Magazine magazine8 = null;
        model.Book[] bookArray9 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList10 = new java.util.ArrayList<model.Book>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList10, bookArray9);
        model.CD[] cDArray12 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList13 = new java.util.ArrayList<model.CD>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList13, cDArray12);
        model.Magazine[] magazineArray15 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList16 = new java.util.ArrayList<model.Magazine>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList16, magazineArray15);
        model.ItemSearchResult itemSearchResult18 = new model.ItemSearchResult(book6, cD7, magazine8, (java.util.Collection<model.Book>) bookList10, (java.util.Collection<model.CD>) cDList13, (java.util.Collection<model.Magazine>) magazineList16);
        model.Book book19 = null;
        model.CD cD20 = null;
        model.Magazine magazine21 = null;
        model.Book[] bookArray22 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList23 = new java.util.ArrayList<model.Book>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList23, bookArray22);
        model.CD[] cDArray25 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList26 = new java.util.ArrayList<model.CD>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList26, cDArray25);
        model.Magazine[] magazineArray28 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList29 = new java.util.ArrayList<model.Magazine>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList29, magazineArray28);
        model.ItemSearchResult itemSearchResult31 = new model.ItemSearchResult(book19, cD20, magazine21, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList29);
        itemSearchResult18.similarCD = cDList26;
        model.Book book33 = null;
        model.CD cD34 = null;
        model.Magazine magazine35 = null;
        model.Book[] bookArray36 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList37 = new java.util.ArrayList<model.Book>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList37, bookArray36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        model.Magazine[] magazineArray42 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList43 = new java.util.ArrayList<model.Magazine>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList43, magazineArray42);
        model.ItemSearchResult itemSearchResult45 = new model.ItemSearchResult(book33, cD34, magazine35, (java.util.Collection<model.Book>) bookList37, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book1, cD3, magazine4, bookCollection5, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList43);
        cD3.ID = (short) 10;
        boolean boolean50 = buySpecialItems0.buyAnItem((model.Item) cD3, (double) 0);
        model.PayDebit payDebit51 = new model.PayDebit();
        buySpecialItems0.paymentAPI = payDebit51;
        double double53 = payDebit51.amountPay;
        payDebit51.amountPay = (short) 1;
        payDebit51.pay((double) 0);
        org.junit.Assert.assertNotNull(bookArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(cDArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(magazineArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(bookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(magazineArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(bookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(magazineArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
    }

    @Test
    public void test1572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1572");
        model.LibraryManagementTeam libraryManagementTeam0 = new model.LibraryManagementTeam();
        int int1 = libraryManagementTeam0.ID;
        int int2 = libraryManagementTeam0.accessCode;
        libraryManagementTeam0.accessCode = '#';
        model.Student student5 = new model.Student();
        int int6 = student5.ID;
        model.StudentOnlineResources studentOnlineResources7 = new model.StudentOnlineResources((model.Client) student5);
        model.VirtualBook virtualBook9 = studentOnlineResources7.searchAccessibleBook("");
        model.CD cD11 = new model.CD("");
        model.Magazine magazine12 = null;
        model.Book book13 = null;
        model.CD cD14 = null;
        model.Magazine magazine15 = null;
        model.Book[] bookArray16 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList17 = new java.util.ArrayList<model.Book>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList17, bookArray16);
        model.CD[] cDArray19 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList20 = new java.util.ArrayList<model.CD>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList20, cDArray19);
        model.Magazine[] magazineArray22 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList23 = new java.util.ArrayList<model.Magazine>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList23, magazineArray22);
        model.ItemSearchResult itemSearchResult25 = new model.ItemSearchResult(book13, cD14, magazine15, (java.util.Collection<model.Book>) bookList17, (java.util.Collection<model.CD>) cDList20, (java.util.Collection<model.Magazine>) magazineList23);
        model.Book book26 = null;
        model.CD cD27 = null;
        model.Magazine magazine28 = null;
        model.Book[] bookArray29 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList30 = new java.util.ArrayList<model.Book>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList30, bookArray29);
        model.CD[] cDArray32 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList33 = new java.util.ArrayList<model.CD>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList33, cDArray32);
        model.Magazine[] magazineArray35 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList36 = new java.util.ArrayList<model.Magazine>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList36, magazineArray35);
        model.ItemSearchResult itemSearchResult38 = new model.ItemSearchResult(book26, cD27, magazine28, (java.util.Collection<model.Book>) bookList30, (java.util.Collection<model.CD>) cDList33, (java.util.Collection<model.Magazine>) magazineList36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        itemSearchResult38.similarCD = cDList40;
        model.Book book43 = null;
        model.CD cD44 = null;
        model.Magazine magazine45 = null;
        model.Book[] bookArray46 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList47 = new java.util.ArrayList<model.Book>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList47, bookArray46);
        model.CD[] cDArray49 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList50 = new java.util.ArrayList<model.CD>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList50, cDArray49);
        model.Magazine[] magazineArray52 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList53 = new java.util.ArrayList<model.Magazine>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList53, magazineArray52);
        model.ItemSearchResult itemSearchResult55 = new model.ItemSearchResult(book43, cD44, magazine45, (java.util.Collection<model.Book>) bookList47, (java.util.Collection<model.CD>) cDList50, (java.util.Collection<model.Magazine>) magazineList53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult((model.Book) virtualBook9, cD11, magazine12, (java.util.Collection<model.Book>) bookList17, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList53);
        int int57 = virtualBook9.ID;
        model.Database database65 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.util.ArrayList<java.lang.String> strList66 = database65.getAllItems();
        boolean boolean67 = virtualBook9.equals((java.lang.Object) database65);
        int int68 = virtualBook9.edition;
        libraryManagementTeam0.addAnItem((model.Item) virtualBook9);
        java.lang.String str70 = virtualBook9.ISBN;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(virtualBook9);
        org.junit.Assert.assertNotNull(bookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(cDArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(magazineArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(bookArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(cDArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(magazineArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(bookArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(cDArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(magazineArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(database65);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNull(str70);
    }

    @Test
    public void test1573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1573");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.UniProvidedNewsletter uniProvidedNewsletter5 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter5.title = "";
        java.lang.String str8 = uniProvidedNewsletter5.title;
        newsletterSubscriptionManager3.subscribeToUniProvidedNewsletter(uniProvidedNewsletter5, "");
        java.util.ArrayList<model.Newsletter> newsletterList11 = newsletterSubscriptionManager3.newsletterSubscribed;
        model.Visitor visitor12 = new model.Visitor();
        visitor12.email = "hi!";
        newsletterSubscriptionManager3.client = visitor12;
        model.StudentOnlineResources studentOnlineResources16 = new model.StudentOnlineResources((model.Client) visitor12);
        model.Newsletter newsletter18 = studentOnlineResources16.searchSubscribedNewsletter("model.RegistrationFailedException: src/Book.csv");
        model.Client client19 = studentOnlineResources16.client;
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(newsletterList11);
        org.junit.Assert.assertNull(newsletter18);
        org.junit.Assert.assertNotNull(client19);
    }

    @Test
    public void test1574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1574");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.Payment payment1 = rentAndReturnSystem0.paymentAPI;
        model.PayMobileWallet payMobileWallet2 = new model.PayMobileWallet();
        payMobileWallet2.amountPay = 100.0f;
        payMobileWallet2.pay((double) 100L);
        rentAndReturnSystem0.paymentAPI = payMobileWallet2;
        model.Magazine magazine9 = new model.Magazine("");
        java.util.Calendar calendar10 = magazine9.date;
        model.Database database11 = null;
        model.Register register12 = model.Register.makeRegister(database11);
        model.Faculty faculty13 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection14 = faculty13.courses;
        boolean boolean17 = register12.registerAsStaff((model.Staff) faculty13, "src/Book.csv", "src/Book.csv");
        model.Faculty faculty18 = new model.Faculty();
        faculty18.username = "hi!";
        java.lang.String str21 = faculty18.username;
        boolean boolean24 = register12.registerAsStaff((model.Staff) faculty18, "src/CD.csv", "hi!");
        boolean boolean25 = rentAndReturnSystem0.returnAnItem((model.Item) magazine9, (model.Client) faculty18);
        model.BuySpecialItems buySpecialItems26 = new model.BuySpecialItems();
        model.Payment payment27 = null;
        buySpecialItems26.paymentAPI = payment27;
        model.PayMobileWallet payMobileWallet29 = new model.PayMobileWallet();
        buySpecialItems26.paymentAPI = payMobileWallet29;
        payMobileWallet29.amountPay = (-1L);
        payMobileWallet29.pay((double) (-1.0f));
        rentAndReturnSystem0.paymentAPI = payMobileWallet29;
        org.junit.Assert.assertNull(payment1);
        org.junit.Assert.assertNull(calendar10);
        org.junit.Assert.assertNotNull(register12);
        org.junit.Assert.assertNull(courseCollection14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test1575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1575");
        model.ItemManagement itemManagement0 = new model.ItemManagement();
        model.Database database1 = null;
        itemManagement0.database = database1;
        model.Item item4 = itemManagement0.selectAnItemFromDatabase((int) (byte) 100);
        model.Student student5 = new model.Student();
        int int6 = student5.ID;
        model.StudentOnlineResources studentOnlineResources7 = new model.StudentOnlineResources((model.Client) student5);
        model.VirtualBook virtualBook9 = studentOnlineResources7.searchAccessibleBook("");
        java.lang.String str10 = virtualBook9.location;
        itemManagement0.addAnItem((model.Item) virtualBook9);
        model.Student student12 = new model.Student();
        int int13 = student12.ID;
        model.StudentOnlineResources studentOnlineResources14 = new model.StudentOnlineResources((model.Client) student12);
        model.VirtualBook virtualBook16 = studentOnlineResources14.searchAccessibleBook("");
        model.CD cD18 = new model.CD("");
        model.Magazine magazine19 = null;
        model.Book book20 = null;
        model.CD cD21 = null;
        model.Magazine magazine22 = null;
        model.Book[] bookArray23 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList24 = new java.util.ArrayList<model.Book>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList24, bookArray23);
        model.CD[] cDArray26 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList27 = new java.util.ArrayList<model.CD>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList27, cDArray26);
        model.Magazine[] magazineArray29 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList30 = new java.util.ArrayList<model.Magazine>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList30, magazineArray29);
        model.ItemSearchResult itemSearchResult32 = new model.ItemSearchResult(book20, cD21, magazine22, (java.util.Collection<model.Book>) bookList24, (java.util.Collection<model.CD>) cDList27, (java.util.Collection<model.Magazine>) magazineList30);
        model.Book book33 = null;
        model.CD cD34 = null;
        model.Magazine magazine35 = null;
        model.Book[] bookArray36 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList37 = new java.util.ArrayList<model.Book>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList37, bookArray36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        model.Magazine[] magazineArray42 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList43 = new java.util.ArrayList<model.Magazine>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList43, magazineArray42);
        model.ItemSearchResult itemSearchResult45 = new model.ItemSearchResult(book33, cD34, magazine35, (java.util.Collection<model.Book>) bookList37, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList43);
        model.CD[] cDArray46 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList47 = new java.util.ArrayList<model.CD>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList47, cDArray46);
        itemSearchResult45.similarCD = cDList47;
        model.Book book50 = null;
        model.CD cD51 = null;
        model.Magazine magazine52 = null;
        model.Book[] bookArray53 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList54 = new java.util.ArrayList<model.Book>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList54, bookArray53);
        model.CD[] cDArray56 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList57 = new java.util.ArrayList<model.CD>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList57, cDArray56);
        model.Magazine[] magazineArray59 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList60 = new java.util.ArrayList<model.Magazine>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList60, magazineArray59);
        model.ItemSearchResult itemSearchResult62 = new model.ItemSearchResult(book50, cD51, magazine52, (java.util.Collection<model.Book>) bookList54, (java.util.Collection<model.CD>) cDList57, (java.util.Collection<model.Magazine>) magazineList60);
        model.ItemSearchResult itemSearchResult63 = new model.ItemSearchResult((model.Book) virtualBook16, cD18, magazine19, (java.util.Collection<model.Book>) bookList24, (java.util.Collection<model.CD>) cDList47, (java.util.Collection<model.Magazine>) magazineList60);
        model.CD cD64 = itemSearchResult63.cd;
        itemManagement0.addAnItem((model.Item) cD64);
        org.junit.Assert.assertNull(item4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(virtualBook9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(virtualBook16);
        org.junit.Assert.assertNotNull(bookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(cDArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(magazineArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(bookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(magazineArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(cDArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(bookArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(cDArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(magazineArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(cD64);
    }

    @Test
    public void test1576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1576");
        model.Database database0 = model.Database.database;
        model.Student student1 = new model.Student();
        int int2 = student1.ID;
        model.StudentOnlineResources studentOnlineResources3 = new model.StudentOnlineResources((model.Client) student1);
        student1.ID = '#';
        database0.addClient((model.Client) student1);
        java.lang.String str7 = database0.getCDFilePath();
        java.util.ArrayList<java.lang.String> strList8 = database0.getAllItems();
        java.util.List<java.lang.String> strList10 = model.SearchStrategy.findMostSimilarStrings((java.util.Collection<java.lang.String>) strList8, "src/Newsletter.csv");
        java.util.List<java.lang.String> strList12 = model.SearchStrategy.findMostSimilarStrings((java.util.Collection<java.lang.String>) strList8, "model.RentingNotAllowedException: hi!");
        java.util.List<java.lang.String> strList14 = model.SearchStrategy.findMostSimilarStrings((java.util.Collection<java.lang.String>) strList12, "model.RentingNotAllowedException: src/Magazine.csv");
        org.junit.Assert.assertNotNull(database0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "src/CD.csv" + "'", str7, "src/CD.csv");
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList14);
    }

    @Test
    public void test1577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1577");
        int int2 = model.SearchStrategy.countSimilarWords("src/BorrowedItems.csv", "hi!");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test1578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1578");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.Database.database = database7;
        java.lang.String str10 = database7.virtualItemFilePath;
        java.lang.String str11 = database7.getBookFilePath();
        database7.itemPath = "src/Magazine.csv";
        model.Login login14 = model.Login.makeLogin(database7);
        boolean boolean16 = database7.addItem("src/Client.csv");
        model.SearchItems searchItems17 = new model.SearchItems(database7);
        model.CD cD19 = searchItems17.getCD("src/Client.csv");
        model.Book book21 = searchItems17.getBook("src/CD.csv");
        java.util.Collection<model.Book> bookCollection23 = searchItems17.getSimilarBooks("model.RentingNotAllowedException: src/Magazine.csv");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "src/Newsletter.csv" + "'", str10, "src/Newsletter.csv");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "src/Book.csv" + "'", str11, "src/Book.csv");
        org.junit.Assert.assertNotNull(login14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(cD19);
        org.junit.Assert.assertNull(book21);
        org.junit.Assert.assertNotNull(bookCollection23);
    }

    @Test
    public void test1579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1579");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.Database.database = database7;
        java.lang.String str10 = database7.getCDFilePath();
        java.lang.String str11 = database7.getNewspaperFilePath();
        int int12 = database7.getRandomID();
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "src/CD.csv" + "'", str10, "src/CD.csv");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "src/Newsletter.csv" + "'", str11, "src/Newsletter.csv");
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 8119207 + "'", int12 == 8119207);
    }

    @Test
    public void test1580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1580");
        model.Database database0 = model.Database.database;
        model.Student student1 = new model.Student();
        int int2 = student1.ID;
        model.StudentOnlineResources studentOnlineResources3 = new model.StudentOnlineResources((model.Client) student1);
        student1.ID = '#';
        database0.addClient((model.Client) student1);
        java.lang.String str7 = database0.getCDFilePath();
        java.util.ArrayList<java.lang.String> strList8 = database0.getAllItems();
        java.util.List<java.lang.String> strList10 = model.SearchStrategy.findMostSimilarStrings((java.util.Collection<java.lang.String>) strList8, "model.RegistrationFailedException: src/Book.csv");
        java.util.List<java.lang.String> strList12 = model.SearchStrategy.findMostSimilarStrings((java.util.Collection<java.lang.String>) strList10, "hi!");
        org.junit.Assert.assertNotNull(database0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "src/CD.csv" + "'", str7, "src/CD.csv");
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(strList12);
    }

    @Test
    public void test1581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1581");
        model.Faculty faculty0 = new model.Faculty();
        java.lang.String str1 = faculty0.email;
        faculty0.faculty = "src/Newsletter.csv";
        java.util.ArrayList<model.VirtualBook> virtualBookList4 = faculty0.virtualBooksAvailable;
        java.util.ArrayList<model.VirtualBook> virtualBookList5 = faculty0.virtualBooksAvailable;
        java.util.Collection<model.Book> bookCollection6 = faculty0.textbooks;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(virtualBookList4);
        org.junit.Assert.assertNull(virtualBookList5);
        org.junit.Assert.assertNull(bookCollection6);
    }

    @Test
    public void test1582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1582");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.Student student5 = new model.Student();
        int int6 = student5.ID;
        model.StudentOnlineResources studentOnlineResources7 = new model.StudentOnlineResources((model.Client) student5);
        student5.ID = '#';
        java.lang.String str10 = student5.email;
        newsletterSubscriptionManager3.client = student5;
        model.Newsletter[] newsletterArray12 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList13 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList13, newsletterArray12);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager15 = new model.NewsletterSubscriptionManager(newsletterList13);
        newsletterSubscriptionManager3.newsletterSubscribed = newsletterList13;
        java.util.ArrayList<model.Newsletter> newsletterList17 = newsletterSubscriptionManager3.newsletterSubscribed;
        model.Newsletter[] newsletterArray18 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList19 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList19, newsletterArray18);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager21 = new model.NewsletterSubscriptionManager(newsletterList19);
        model.Client client22 = newsletterSubscriptionManager21.client;
        model.Student student23 = new model.Student();
        int int24 = student23.ID;
        model.StudentOnlineResources studentOnlineResources25 = new model.StudentOnlineResources((model.Client) student23);
        student23.ID = '#';
        java.lang.String str28 = student23.email;
        newsletterSubscriptionManager21.client = student23;
        model.Newsletter[] newsletterArray30 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList31 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList31, newsletterArray30);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager33 = new model.NewsletterSubscriptionManager(newsletterList31);
        newsletterSubscriptionManager21.newsletterSubscribed = newsletterList31;
        newsletterSubscriptionManager3.newsletterSubscribed = newsletterList31;
        model.NewsletterSubscriptionManager newsletterSubscriptionManager36 = new model.NewsletterSubscriptionManager(newsletterList31);
        model.Newsletter[] newsletterArray37 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList38 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList38, newsletterArray37);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager40 = new model.NewsletterSubscriptionManager(newsletterList38);
        model.Client client41 = newsletterSubscriptionManager40.client;
        model.PayCredit payCredit42 = new model.PayCredit();
        payCredit42.amountPay = 10;
        newsletterSubscriptionManager40.paymentAPI = payCredit42;
        payCredit42.amountPay = 1;
        payCredit42.amountPay = 20;
        double double50 = payCredit42.amountPay;
        newsletterSubscriptionManager36.paymentAPI = payCredit42;
        double double52 = payCredit42.amountPay;
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(newsletterArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(newsletterList17);
        org.junit.Assert.assertNotNull(newsletterArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(client22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(newsletterArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(newsletterArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(client41);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 20.0d + "'", double50 == 20.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 20.0d + "'", double52 == 20.0d);
    }

    @Test
    public void test1583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1583");
        model.Course course0 = new model.Course();
        java.lang.String str1 = course0.subject;
        course0.subject = "";
        java.lang.String str4 = course0.code;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test1584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1584");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter54 = null;
        model.PaidNewsletter paidNewsletter55 = null;
        model.VirtualItemSearchResult virtualItemSearchResult56 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter54, paidNewsletter55);
        virtualBook4.author = "hi!";
        boolean boolean59 = virtualBook4.isBookLost;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test1585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1585");
        model.Database database7 = model.Database.createDatabase("src/Newsletter.csv", "", "model.RegistrationFailedException: src/Magazine.csv", "model.RegistrationFailedException: ", "model.RentingNotAllowedException: hi!", "src/Newsletter.csv", "model.RegistrationFailedException: src/Book.csv");
        org.junit.Assert.assertNotNull(database7);
    }

    @Test
    public void test1586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1586");
        model.PaidNewsletter paidNewsletter0 = new model.PaidNewsletter();
        model.Student student1 = new model.Student();
        int int2 = student1.ID;
        model.StudentOnlineResources studentOnlineResources3 = new model.StudentOnlineResources((model.Client) student1);
        model.VirtualBook virtualBook5 = studentOnlineResources3.searchAccessibleBook("");
        model.CD cD7 = new model.CD("");
        model.Magazine magazine8 = null;
        model.Book book9 = null;
        model.CD cD10 = null;
        model.Magazine magazine11 = null;
        model.Book[] bookArray12 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList13 = new java.util.ArrayList<model.Book>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList13, bookArray12);
        model.CD[] cDArray15 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList16 = new java.util.ArrayList<model.CD>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList16, cDArray15);
        model.Magazine[] magazineArray18 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList19 = new java.util.ArrayList<model.Magazine>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList19, magazineArray18);
        model.ItemSearchResult itemSearchResult21 = new model.ItemSearchResult(book9, cD10, magazine11, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList16, (java.util.Collection<model.Magazine>) magazineList19);
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        model.CD[] cDArray35 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList36 = new java.util.ArrayList<model.CD>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList36, cDArray35);
        itemSearchResult34.similarCD = cDList36;
        model.Book book39 = null;
        model.CD cD40 = null;
        model.Magazine magazine41 = null;
        model.Book[] bookArray42 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList43 = new java.util.ArrayList<model.Book>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList43, bookArray42);
        model.CD[] cDArray45 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList46 = new java.util.ArrayList<model.CD>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList46, cDArray45);
        model.Magazine[] magazineArray48 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList49 = new java.util.ArrayList<model.Magazine>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList49, magazineArray48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult(book39, cD40, magazine41, (java.util.Collection<model.Book>) bookList43, (java.util.Collection<model.CD>) cDList46, (java.util.Collection<model.Magazine>) magazineList49);
        model.ItemSearchResult itemSearchResult52 = new model.ItemSearchResult((model.Book) virtualBook5, cD7, magazine8, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList36, (java.util.Collection<model.Magazine>) magazineList49);
        int int53 = virtualBook5.ID;
        int int54 = virtualBook5.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter55 = null;
        model.PaidNewsletter paidNewsletter56 = null;
        model.VirtualItemSearchResult virtualItemSearchResult57 = new model.VirtualItemSearchResult(virtualBook5, uniProvidedNewsletter55, paidNewsletter56);
        virtualBook5.author = "hi!";
        virtualBook5.showContent();
        boolean boolean61 = paidNewsletter0.equals((java.lang.Object) virtualBook5);
        int int62 = paidNewsletter0.ID;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(virtualBook5);
        org.junit.Assert.assertNotNull(bookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cDArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(magazineArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(cDArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(bookArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(cDArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(magazineArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 20 + "'", int54 == 20);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
    }

    @Test
    public void test1587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1587");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        boolean boolean4 = borrowingManager3.canRent();
        boolean boolean5 = borrowingManager3.canRent();
        model.RentedItem[] rentedItemArray6 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList7 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList7, rentedItemArray6);
        model.BorrowingManager borrowingManager9 = new model.BorrowingManager(rentedItemList7);
        model.RentedItem[] rentedItemArray10 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList11 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList11, rentedItemArray10);
        model.BorrowingManager borrowingManager13 = new model.BorrowingManager(rentedItemList11);
        model.RentedItem[] rentedItemArray14 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList15 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList15, rentedItemArray14);
        model.BorrowingManager borrowingManager17 = new model.BorrowingManager(rentedItemList15);
        borrowingManager13.physicalItemBorrowed = rentedItemList15;
        borrowingManager9.physicalItemBorrowed = rentedItemList15;
        model.Visitor visitor20 = new model.Visitor();
        model.VirtualBook[] virtualBookArray21 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList22 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList22, virtualBookArray21);
        visitor20.virtualBooksAvailable = virtualBookList22;
        borrowingManager9.client = visitor20;
        model.Faculty faculty26 = new model.Faculty();
        java.lang.String str27 = faculty26.faculty;
        borrowingManager9.client = faculty26;
        model.RentedItem[] rentedItemArray29 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList30 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList30, rentedItemArray29);
        model.BorrowingManager borrowingManager32 = new model.BorrowingManager(rentedItemList30);
        model.RentedItem[] rentedItemArray33 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList34 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList34, rentedItemArray33);
        model.BorrowingManager borrowingManager36 = new model.BorrowingManager(rentedItemList34);
        model.RentedItem[] rentedItemArray37 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList38 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList38, rentedItemArray37);
        model.BorrowingManager borrowingManager40 = new model.BorrowingManager(rentedItemList38);
        borrowingManager36.physicalItemBorrowed = rentedItemList38;
        borrowingManager32.physicalItemBorrowed = rentedItemList38;
        borrowingManager9.physicalItemBorrowed = rentedItemList38;
        java.util.ArrayList<model.RentedItem> rentedItemList44 = borrowingManager9.physicalItemBorrowed;
        borrowingManager3.physicalItemBorrowed = rentedItemList44;
        float float46 = borrowingManager3.amountOwned;
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(rentedItemArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(rentedItemArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(rentedItemArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(virtualBookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(rentedItemArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(rentedItemArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(rentedItemArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(rentedItemList44);
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + 0.0f + "'", float46 == 0.0f);
    }

    @Test
    public void test1588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1588");
        model.SearchBorrowedItem searchBorrowedItem0 = model.SearchBorrowedItem.makeSearchBorrowedItem();
        model.Visitor visitor1 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList2 = visitor1.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources3 = new model.StudentOnlineResources((model.Client) visitor1);
        model.RentedItem[] rentedItemArray4 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList5 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList5, rentedItemArray4);
        model.BorrowingManager borrowingManager7 = new model.BorrowingManager(rentedItemList5);
        model.Visitor visitor8 = new model.Visitor();
        visitor8.email = "hi!";
        borrowingManager7.client = visitor8;
        studentOnlineResources3.client = visitor8;
        model.Student student13 = new model.Student();
        int int14 = student13.ID;
        model.StudentOnlineResources studentOnlineResources15 = new model.StudentOnlineResources((model.Client) student13);
        model.VirtualBook virtualBook17 = studentOnlineResources15.searchAccessibleBook("");
        model.CD cD19 = new model.CD("");
        model.Magazine magazine20 = null;
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.Book book34 = null;
        model.CD cD35 = null;
        model.Magazine magazine36 = null;
        model.Book[] bookArray37 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList38 = new java.util.ArrayList<model.Book>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList38, bookArray37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        model.Magazine[] magazineArray43 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList44 = new java.util.ArrayList<model.Magazine>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList44, magazineArray43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book34, cD35, magazine36, (java.util.Collection<model.Book>) bookList38, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList44);
        model.CD[] cDArray47 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList48 = new java.util.ArrayList<model.CD>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList48, cDArray47);
        itemSearchResult46.similarCD = cDList48;
        model.Book book51 = null;
        model.CD cD52 = null;
        model.Magazine magazine53 = null;
        model.Book[] bookArray54 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList55 = new java.util.ArrayList<model.Book>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList55, bookArray54);
        model.CD[] cDArray57 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList58 = new java.util.ArrayList<model.CD>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList58, cDArray57);
        model.Magazine[] magazineArray60 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList61 = new java.util.ArrayList<model.Magazine>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList61, magazineArray60);
        model.ItemSearchResult itemSearchResult63 = new model.ItemSearchResult(book51, cD52, magazine53, (java.util.Collection<model.Book>) bookList55, (java.util.Collection<model.CD>) cDList58, (java.util.Collection<model.Magazine>) magazineList61);
        model.ItemSearchResult itemSearchResult64 = new model.ItemSearchResult((model.Book) virtualBook17, cD19, magazine20, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList48, (java.util.Collection<model.Magazine>) magazineList61);
        java.lang.String str65 = studentOnlineResources3.readVirtualItem((model.VirtualItem) virtualBook17);
        model.Visitor visitor67 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList68 = visitor67.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources69 = new model.StudentOnlineResources((model.Client) visitor67);
        searchBorrowedItem0.addPhyscialItem((model.Item) virtualBook17, "", (model.Client) visitor67);
        model.SearchBorrowedItem.object = searchBorrowedItem0;
        java.util.ArrayList<model.RentedItem> rentedItemList74 = searchBorrowedItem0.searchBorrowedItem("src/VirtualBook.csv", "src/BorrowedItems.csv");
        model.SearchBorrowedItem.object = searchBorrowedItem0;
        java.util.ArrayList<model.RentedItem> rentedItemList78 = searchBorrowedItem0.searchBorrowedItem("model.RentingNotAllowedException: ", "src/CD.csv");
        org.junit.Assert.assertNotNull(searchBorrowedItem0);
        org.junit.Assert.assertNull(virtualBookList2);
        org.junit.Assert.assertNotNull(rentedItemArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(virtualBook17);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(bookArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(magazineArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(cDArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(bookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(cDArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(magazineArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(virtualBookList68);
        org.junit.Assert.assertNotNull(rentedItemList74);
        org.junit.Assert.assertNotNull(rentedItemList78);
    }

    @Test
    public void test1589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1589");
        model.SearchBorrowedItem searchBorrowedItem0 = model.SearchBorrowedItem.makeSearchBorrowedItem();
        model.Visitor visitor1 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList2 = visitor1.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources3 = new model.StudentOnlineResources((model.Client) visitor1);
        model.RentedItem[] rentedItemArray4 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList5 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList5, rentedItemArray4);
        model.BorrowingManager borrowingManager7 = new model.BorrowingManager(rentedItemList5);
        model.Visitor visitor8 = new model.Visitor();
        visitor8.email = "hi!";
        borrowingManager7.client = visitor8;
        studentOnlineResources3.client = visitor8;
        model.Student student13 = new model.Student();
        int int14 = student13.ID;
        model.StudentOnlineResources studentOnlineResources15 = new model.StudentOnlineResources((model.Client) student13);
        model.VirtualBook virtualBook17 = studentOnlineResources15.searchAccessibleBook("");
        model.CD cD19 = new model.CD("");
        model.Magazine magazine20 = null;
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.Book book34 = null;
        model.CD cD35 = null;
        model.Magazine magazine36 = null;
        model.Book[] bookArray37 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList38 = new java.util.ArrayList<model.Book>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList38, bookArray37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        model.Magazine[] magazineArray43 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList44 = new java.util.ArrayList<model.Magazine>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList44, magazineArray43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book34, cD35, magazine36, (java.util.Collection<model.Book>) bookList38, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList44);
        model.CD[] cDArray47 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList48 = new java.util.ArrayList<model.CD>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList48, cDArray47);
        itemSearchResult46.similarCD = cDList48;
        model.Book book51 = null;
        model.CD cD52 = null;
        model.Magazine magazine53 = null;
        model.Book[] bookArray54 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList55 = new java.util.ArrayList<model.Book>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList55, bookArray54);
        model.CD[] cDArray57 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList58 = new java.util.ArrayList<model.CD>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList58, cDArray57);
        model.Magazine[] magazineArray60 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList61 = new java.util.ArrayList<model.Magazine>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList61, magazineArray60);
        model.ItemSearchResult itemSearchResult63 = new model.ItemSearchResult(book51, cD52, magazine53, (java.util.Collection<model.Book>) bookList55, (java.util.Collection<model.CD>) cDList58, (java.util.Collection<model.Magazine>) magazineList61);
        model.ItemSearchResult itemSearchResult64 = new model.ItemSearchResult((model.Book) virtualBook17, cD19, magazine20, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList48, (java.util.Collection<model.Magazine>) magazineList61);
        java.lang.String str65 = studentOnlineResources3.readVirtualItem((model.VirtualItem) virtualBook17);
        model.Visitor visitor67 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList68 = visitor67.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources69 = new model.StudentOnlineResources((model.Client) visitor67);
        searchBorrowedItem0.addPhyscialItem((model.Item) virtualBook17, "", (model.Client) visitor67);
        model.SearchBorrowedItem.object = searchBorrowedItem0;
        java.util.ArrayList<model.RentedItem> rentedItemList74 = searchBorrowedItem0.searchBorrowedItem("src/VirtualBook.csv", "src/BorrowedItems.csv");
        model.SearchBorrowedItem.object = searchBorrowedItem0;
        java.util.ArrayList<model.RentedItem> rentedItemList78 = searchBorrowedItem0.searchBorrowedItem("src/Book.csv", "src/BorrowedItems.csv");
        org.junit.Assert.assertNotNull(searchBorrowedItem0);
        org.junit.Assert.assertNull(virtualBookList2);
        org.junit.Assert.assertNotNull(rentedItemArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(virtualBook17);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(bookArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(magazineArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(cDArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(bookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(cDArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(magazineArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(virtualBookList68);
        org.junit.Assert.assertNotNull(rentedItemList74);
        org.junit.Assert.assertNotNull(rentedItemList78);
    }

    @Test
    public void test1590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1590");
        model.Database database0 = model.Database.database;
        java.util.ArrayList<java.lang.String> strList1 = database0.getAllItems();
        model.Client client3 = database0.getClient("src/Magazine.csv");
        model.Register register4 = model.Register.makeRegister(database0);
        model.RentAndReturnSystem rentAndReturnSystem5 = new model.RentAndReturnSystem();
        model.Book book6 = null;
        model.CD cD8 = new model.CD("");
        model.Magazine magazine9 = null;
        java.util.Collection<model.Book> bookCollection10 = null;
        model.Book book11 = null;
        model.CD cD12 = null;
        model.Magazine magazine13 = null;
        model.Book[] bookArray14 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList15 = new java.util.ArrayList<model.Book>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList15, bookArray14);
        model.CD[] cDArray17 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList18 = new java.util.ArrayList<model.CD>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList18, cDArray17);
        model.Magazine[] magazineArray20 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList21 = new java.util.ArrayList<model.Magazine>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList21, magazineArray20);
        model.ItemSearchResult itemSearchResult23 = new model.ItemSearchResult(book11, cD12, magazine13, (java.util.Collection<model.Book>) bookList15, (java.util.Collection<model.CD>) cDList18, (java.util.Collection<model.Magazine>) magazineList21);
        model.Book book24 = null;
        model.CD cD25 = null;
        model.Magazine magazine26 = null;
        model.Book[] bookArray27 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList28 = new java.util.ArrayList<model.Book>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList28, bookArray27);
        model.CD[] cDArray30 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList31 = new java.util.ArrayList<model.CD>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList31, cDArray30);
        model.Magazine[] magazineArray33 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList34 = new java.util.ArrayList<model.Magazine>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList34, magazineArray33);
        model.ItemSearchResult itemSearchResult36 = new model.ItemSearchResult(book24, cD25, magazine26, (java.util.Collection<model.Book>) bookList28, (java.util.Collection<model.CD>) cDList31, (java.util.Collection<model.Magazine>) magazineList34);
        itemSearchResult23.similarCD = cDList31;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult(book6, cD8, magazine9, bookCollection10, (java.util.Collection<model.CD>) cDList31, (java.util.Collection<model.Magazine>) magazineList48);
        cD8.ID = (short) 10;
        cD8.canBePurchased = false;
        boolean boolean56 = cD8.canBePurchased;
        model.Faculty faculty57 = new model.Faculty();
        boolean boolean58 = rentAndReturnSystem5.rentAnItem((model.Item) cD8, (model.Client) faculty57);
        model.NonFaculty nonFaculty59 = new model.NonFaculty();
        model.Visitor visitor60 = new model.Visitor();
        model.VirtualBook[] virtualBookArray61 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList62 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList62, virtualBookArray61);
        visitor60.virtualBooksAvailable = virtualBookList62;
        visitor60.username = "";
        model.Visitor visitor67 = new model.Visitor();
        model.VirtualBook[] virtualBookArray68 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList69 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList69, virtualBookArray68);
        visitor67.virtualBooksAvailable = virtualBookList69;
        visitor60.virtualBooksAvailable = virtualBookList69;
        nonFaculty59.virtualBooksAvailable = virtualBookList69;
        faculty57.virtualBooksAvailable = virtualBookList69;
        boolean boolean77 = register4.registerAsStaff((model.Staff) faculty57, "src/Magazine.csv", "src/Book.csv");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean81 = false; // flaky: register4.register("src/Book.csv", "model.RentingNotAllowedException: hi!", "model.RentingNotAllowedException: hi!");
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"model.Database.getClientFilePath()\" because \"this.db\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database0);
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(client3);
        org.junit.Assert.assertNotNull(register4);
        org.junit.Assert.assertNotNull(bookArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(cDArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(magazineArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(bookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(cDArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(magazineArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(virtualBookArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(virtualBookArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test1591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1591");
        int int2 = model.SearchStrategy.countSimilarWords("model.LoginFailedException: hi!", "model.RentingNotAllowedException: hi!");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    }

    @Test
    public void test1592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1592");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Visitor visitor4 = new model.Visitor();
        model.VirtualBook[] virtualBookArray5 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList6 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList6, virtualBookArray5);
        visitor4.virtualBooksAvailable = virtualBookList6;
        newsletterSubscriptionManager3.client = visitor4;
        model.Payment payment10 = newsletterSubscriptionManager3.paymentAPI;
        model.Newsletter[] newsletterArray11 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList12 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList12, newsletterArray11);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager14 = new model.NewsletterSubscriptionManager(newsletterList12);
        model.Client client15 = newsletterSubscriptionManager14.client;
        model.PayCredit payCredit16 = new model.PayCredit();
        payCredit16.amountPay = 10;
        newsletterSubscriptionManager14.paymentAPI = payCredit16;
        newsletterSubscriptionManager3.paymentAPI = payCredit16;
        model.Newsletter[] newsletterArray21 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList22 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList22, newsletterArray21);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager24 = new model.NewsletterSubscriptionManager(newsletterList22);
        model.Client client25 = newsletterSubscriptionManager24.client;
        model.Client client26 = newsletterSubscriptionManager24.client;
        model.Student student27 = new model.Student();
        int int28 = student27.ID;
        model.StudentOnlineResources studentOnlineResources29 = new model.StudentOnlineResources((model.Client) student27);
        model.VirtualBook virtualBook31 = studentOnlineResources29.searchAccessibleBook("");
        model.CD cD33 = new model.CD("");
        model.Magazine magazine34 = null;
        model.Book book35 = null;
        model.CD cD36 = null;
        model.Magazine magazine37 = null;
        model.Book[] bookArray38 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList39 = new java.util.ArrayList<model.Book>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList39, bookArray38);
        model.CD[] cDArray41 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList42 = new java.util.ArrayList<model.CD>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList42, cDArray41);
        model.Magazine[] magazineArray44 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList45 = new java.util.ArrayList<model.Magazine>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList45, magazineArray44);
        model.ItemSearchResult itemSearchResult47 = new model.ItemSearchResult(book35, cD36, magazine37, (java.util.Collection<model.Book>) bookList39, (java.util.Collection<model.CD>) cDList42, (java.util.Collection<model.Magazine>) magazineList45);
        model.Book book48 = null;
        model.CD cD49 = null;
        model.Magazine magazine50 = null;
        model.Book[] bookArray51 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList52 = new java.util.ArrayList<model.Book>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList52, bookArray51);
        model.CD[] cDArray54 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList55 = new java.util.ArrayList<model.CD>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList55, cDArray54);
        model.Magazine[] magazineArray57 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList58 = new java.util.ArrayList<model.Magazine>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList58, magazineArray57);
        model.ItemSearchResult itemSearchResult60 = new model.ItemSearchResult(book48, cD49, magazine50, (java.util.Collection<model.Book>) bookList52, (java.util.Collection<model.CD>) cDList55, (java.util.Collection<model.Magazine>) magazineList58);
        model.CD[] cDArray61 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList62 = new java.util.ArrayList<model.CD>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList62, cDArray61);
        itemSearchResult60.similarCD = cDList62;
        model.Book book65 = null;
        model.CD cD66 = null;
        model.Magazine magazine67 = null;
        model.Book[] bookArray68 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList69 = new java.util.ArrayList<model.Book>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList69, bookArray68);
        model.CD[] cDArray71 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList72 = new java.util.ArrayList<model.CD>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList72, cDArray71);
        model.Magazine[] magazineArray74 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList75 = new java.util.ArrayList<model.Magazine>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList75, magazineArray74);
        model.ItemSearchResult itemSearchResult77 = new model.ItemSearchResult(book65, cD66, magazine67, (java.util.Collection<model.Book>) bookList69, (java.util.Collection<model.CD>) cDList72, (java.util.Collection<model.Magazine>) magazineList75);
        model.ItemSearchResult itemSearchResult78 = new model.ItemSearchResult((model.Book) virtualBook31, cD33, magazine34, (java.util.Collection<model.Book>) bookList39, (java.util.Collection<model.CD>) cDList62, (java.util.Collection<model.Magazine>) magazineList75);
        int int79 = virtualBook31.ID;
        int int80 = virtualBook31.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter81 = null;
        model.PaidNewsletter paidNewsletter82 = null;
        model.VirtualItemSearchResult virtualItemSearchResult83 = new model.VirtualItemSearchResult(virtualBook31, uniProvidedNewsletter81, paidNewsletter82);
        model.PaidNewsletter paidNewsletter84 = virtualItemSearchResult83.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter85 = new model.UniProvidedNewsletter();
        virtualItemSearchResult83.setUniNewsletter(uniProvidedNewsletter85);
        newsletterSubscriptionManager24.cancelSubscription((model.Newsletter) uniProvidedNewsletter85);
        java.util.ArrayList<model.Newsletter> newsletterList88 = newsletterSubscriptionManager24.newsletterSubscribed;
        newsletterSubscriptionManager3.newsletterSubscribed = newsletterList88;
        model.Payment payment90 = newsletterSubscriptionManager3.paymentAPI;
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(virtualBookArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(payment10);
        org.junit.Assert.assertNotNull(newsletterArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(client15);
        org.junit.Assert.assertNotNull(newsletterArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(client25);
        org.junit.Assert.assertNull(client26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(virtualBook31);
        org.junit.Assert.assertNotNull(bookArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(cDArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(magazineArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(bookArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(cDArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(magazineArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(cDArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(bookArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(cDArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(magazineArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 20 + "'", int80 == 20);
        org.junit.Assert.assertNull(paidNewsletter84);
        org.junit.Assert.assertNotNull(newsletterList88);
        org.junit.Assert.assertNotNull(payment90);
    }

    @Test
    public void test1593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1593");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        model.Client client9 = database7.getClient("");
        java.lang.String str10 = database7.getClientFilePath();
        boolean boolean12 = database7.addItem("src/Book.csv");
        java.lang.String str13 = database7.getCDFilePath();
        model.Request request14 = new model.Request();
        java.lang.String str15 = request14.type;
        model.Database database23 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database23;
        model.SearchVirtualItem searchVirtualItem25 = new model.SearchVirtualItem(database23);
        model.RentAndReturnSystem rentAndReturnSystem26 = new model.RentAndReturnSystem();
        model.Book book27 = null;
        model.CD cD29 = new model.CD("");
        model.Magazine magazine30 = null;
        java.util.Collection<model.Book> bookCollection31 = null;
        model.Book book32 = null;
        model.CD cD33 = null;
        model.Magazine magazine34 = null;
        model.Book[] bookArray35 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList36 = new java.util.ArrayList<model.Book>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList36, bookArray35);
        model.CD[] cDArray38 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList39 = new java.util.ArrayList<model.CD>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList39, cDArray38);
        model.Magazine[] magazineArray41 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList42 = new java.util.ArrayList<model.Magazine>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList42, magazineArray41);
        model.ItemSearchResult itemSearchResult44 = new model.ItemSearchResult(book32, cD33, magazine34, (java.util.Collection<model.Book>) bookList36, (java.util.Collection<model.CD>) cDList39, (java.util.Collection<model.Magazine>) magazineList42);
        model.Book book45 = null;
        model.CD cD46 = null;
        model.Magazine magazine47 = null;
        model.Book[] bookArray48 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList49 = new java.util.ArrayList<model.Book>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList49, bookArray48);
        model.CD[] cDArray51 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList52 = new java.util.ArrayList<model.CD>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList52, cDArray51);
        model.Magazine[] magazineArray54 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList55 = new java.util.ArrayList<model.Magazine>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList55, magazineArray54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult(book45, cD46, magazine47, (java.util.Collection<model.Book>) bookList49, (java.util.Collection<model.CD>) cDList52, (java.util.Collection<model.Magazine>) magazineList55);
        itemSearchResult44.similarCD = cDList52;
        model.Book book59 = null;
        model.CD cD60 = null;
        model.Magazine magazine61 = null;
        model.Book[] bookArray62 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList63 = new java.util.ArrayList<model.Book>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList63, bookArray62);
        model.CD[] cDArray65 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList66 = new java.util.ArrayList<model.CD>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList66, cDArray65);
        model.Magazine[] magazineArray68 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList69 = new java.util.ArrayList<model.Magazine>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList69, magazineArray68);
        model.ItemSearchResult itemSearchResult71 = new model.ItemSearchResult(book59, cD60, magazine61, (java.util.Collection<model.Book>) bookList63, (java.util.Collection<model.CD>) cDList66, (java.util.Collection<model.Magazine>) magazineList69);
        model.ItemSearchResult itemSearchResult72 = new model.ItemSearchResult(book27, cD29, magazine30, bookCollection31, (java.util.Collection<model.CD>) cDList52, (java.util.Collection<model.Magazine>) magazineList69);
        cD29.ID = (short) 10;
        cD29.canBePurchased = false;
        boolean boolean77 = cD29.canBePurchased;
        model.Faculty faculty78 = new model.Faculty();
        boolean boolean79 = rentAndReturnSystem26.rentAnItem((model.Item) cD29, (model.Client) faculty78);
        java.lang.String str80 = faculty78.faculty;
        database23.addClient((model.Client) faculty78);
        request14.requestee = faculty78;
        database7.addClient((model.Client) faculty78);
        faculty78.faculty = "model.RegistrationFailedException: src/Magazine.csv";
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(client9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "src/Client.csv" + "'", str10, "src/Client.csv");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "src/CD.csv" + "'", str13, "src/CD.csv");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(bookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(cDArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(magazineArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(bookArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(cDArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(magazineArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(bookArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(cDArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(magazineArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNull(str80);
    }

    @Test
    public void test1594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1594");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        java.lang.String str5 = virtualBook4.location;
        model.VirtualItemContent virtualItemContent6 = virtualBook4.content;
        virtualBook4.ID = 20;
        int int9 = virtualBook4.ID;
        boolean boolean10 = virtualBook4.canBePurchased;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(virtualItemContent6);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1595");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.PayCredit payCredit5 = new model.PayCredit();
        payCredit5.amountPay = 10;
        newsletterSubscriptionManager3.paymentAPI = payCredit5;
        double double9 = payCredit5.amountPay;
        payCredit5.amountPay = (-1.0d);
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
    }

    @Test
    public void test1596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1596");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.VirtualItemContent virtualItemContent5 = virtualBook4.content;
        model.Student student6 = new model.Student();
        int int7 = student6.ID;
        model.StudentOnlineResources studentOnlineResources8 = new model.StudentOnlineResources((model.Client) student6);
        model.VirtualBook virtualBook10 = studentOnlineResources8.searchAccessibleBook("");
        model.CD cD12 = new model.CD("");
        model.Magazine magazine13 = null;
        model.Book book14 = null;
        model.CD cD15 = null;
        model.Magazine magazine16 = null;
        model.Book[] bookArray17 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList18 = new java.util.ArrayList<model.Book>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList18, bookArray17);
        model.CD[] cDArray20 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList21 = new java.util.ArrayList<model.CD>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList21, cDArray20);
        model.Magazine[] magazineArray23 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList24 = new java.util.ArrayList<model.Magazine>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList24, magazineArray23);
        model.ItemSearchResult itemSearchResult26 = new model.ItemSearchResult(book14, cD15, magazine16, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList21, (java.util.Collection<model.Magazine>) magazineList24);
        model.Book book27 = null;
        model.CD cD28 = null;
        model.Magazine magazine29 = null;
        model.Book[] bookArray30 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList31 = new java.util.ArrayList<model.Book>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList31, bookArray30);
        model.CD[] cDArray33 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList34 = new java.util.ArrayList<model.CD>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList34, cDArray33);
        model.Magazine[] magazineArray36 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList37 = new java.util.ArrayList<model.Magazine>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList37, magazineArray36);
        model.ItemSearchResult itemSearchResult39 = new model.ItemSearchResult(book27, cD28, magazine29, (java.util.Collection<model.Book>) bookList31, (java.util.Collection<model.CD>) cDList34, (java.util.Collection<model.Magazine>) magazineList37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        itemSearchResult39.similarCD = cDList41;
        model.Book book44 = null;
        model.CD cD45 = null;
        model.Magazine magazine46 = null;
        model.Book[] bookArray47 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList48 = new java.util.ArrayList<model.Book>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList48, bookArray47);
        model.CD[] cDArray50 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList51 = new java.util.ArrayList<model.CD>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList51, cDArray50);
        model.Magazine[] magazineArray53 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList54 = new java.util.ArrayList<model.Magazine>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList54, magazineArray53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult(book44, cD45, magazine46, (java.util.Collection<model.Book>) bookList48, (java.util.Collection<model.CD>) cDList51, (java.util.Collection<model.Magazine>) magazineList54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult((model.Book) virtualBook10, cD12, magazine13, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList54);
        int int58 = virtualBook10.ID;
        int int59 = virtualBook10.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter60 = null;
        model.PaidNewsletter paidNewsletter61 = null;
        model.VirtualItemSearchResult virtualItemSearchResult62 = new model.VirtualItemSearchResult(virtualBook10, uniProvidedNewsletter60, paidNewsletter61);
        model.PaidNewsletter paidNewsletter63 = virtualItemSearchResult62.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter64 = new model.UniProvidedNewsletter();
        virtualItemSearchResult62.setUniNewsletter(uniProvidedNewsletter64);
        java.lang.String str66 = uniProvidedNewsletter64.title;
        model.PaidNewsletter paidNewsletter67 = null;
        model.VirtualItemSearchResult virtualItemSearchResult68 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter64, paidNewsletter67);
        model.VirtualBook virtualBook69 = virtualItemSearchResult68.virtualBook;
        model.PaidNewsletter paidNewsletter70 = new model.PaidNewsletter();
        virtualItemSearchResult68.setPaidNewsletter(paidNewsletter70);
        paidNewsletter70.subscriptionPrice = 11;
        double double74 = paidNewsletter70.subscriptionPrice;
        model.VirtualItemContent virtualItemContent75 = paidNewsletter70.content;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNull(virtualItemContent5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(virtualBook10);
        org.junit.Assert.assertNotNull(bookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(cDArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(magazineArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(bookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(magazineArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(bookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(cDArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(magazineArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 20 + "'", int59 == 20);
        org.junit.Assert.assertNull(paidNewsletter63);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(virtualBook69);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 11.0d + "'", double74 == 11.0d);
        org.junit.Assert.assertNull(virtualItemContent75);
    }

    @Test
    public void test1597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1597");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.Database.database = database7;
        java.lang.String str10 = database7.virtualItemFilePath;
        java.lang.String str11 = database7.getBookFilePath();
        database7.itemPath = "src/Magazine.csv";
        model.Login login14 = model.Login.makeLogin(database7);
        boolean boolean16 = database7.addItem("src/Client.csv");
        model.SearchItems searchItems17 = new model.SearchItems(database7);
        model.ItemSearchResult itemSearchResult19 = searchItems17.searchItem("hi!");
        model.ItemSearchResult itemSearchResult21 = searchItems17.searchItem("src/Newsletter.csv");
        java.util.Collection<model.Book> bookCollection22 = itemSearchResult21.similarBooks;
        java.util.Collection<model.Book> bookCollection23 = itemSearchResult21.similarBooks;
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "src/Newsletter.csv" + "'", str10, "src/Newsletter.csv");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "src/Book.csv" + "'", str11, "src/Book.csv");
        org.junit.Assert.assertNotNull(login14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(itemSearchResult19);
        org.junit.Assert.assertNotNull(itemSearchResult21);
        org.junit.Assert.assertNotNull(bookCollection22);
        org.junit.Assert.assertNotNull(bookCollection23);
    }

    @Test
    public void test1598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1598");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.edition;
        virtualBook4.author = "";
        model.VirtualItemContent virtualItemContent56 = new model.VirtualItemContent("src/Book.csv");
        java.lang.String str57 = virtualItemContent56.link;
        virtualItemContent56.link = "model.RegistrationFailedException: src/Magazine.csv";
        virtualBook4.content = virtualItemContent56;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "src/Book.csv" + "'", str57, "src/Book.csv");
    }

    @Test
    public void test1599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1599");
        model.PayCredit payCredit0 = new model.PayCredit();
        payCredit0.pay((double) (short) 100);
        payCredit0.amountPay = ' ';
        double double5 = payCredit0.amountPay;
        payCredit0.pay((double) 6713957);
        double double8 = payCredit0.amountPay;
        payCredit0.pay((double) 7607424);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 32.0d + "'", double5 == 32.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 6713989.0d + "'", double8 == 6713989.0d);
    }

    @Test
    public void test1600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1600");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.Book book1 = null;
        model.CD cD3 = new model.CD("");
        model.Magazine magazine4 = null;
        java.util.Collection<model.Book> bookCollection5 = null;
        model.Book book6 = null;
        model.CD cD7 = null;
        model.Magazine magazine8 = null;
        model.Book[] bookArray9 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList10 = new java.util.ArrayList<model.Book>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList10, bookArray9);
        model.CD[] cDArray12 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList13 = new java.util.ArrayList<model.CD>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList13, cDArray12);
        model.Magazine[] magazineArray15 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList16 = new java.util.ArrayList<model.Magazine>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList16, magazineArray15);
        model.ItemSearchResult itemSearchResult18 = new model.ItemSearchResult(book6, cD7, magazine8, (java.util.Collection<model.Book>) bookList10, (java.util.Collection<model.CD>) cDList13, (java.util.Collection<model.Magazine>) magazineList16);
        model.Book book19 = null;
        model.CD cD20 = null;
        model.Magazine magazine21 = null;
        model.Book[] bookArray22 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList23 = new java.util.ArrayList<model.Book>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList23, bookArray22);
        model.CD[] cDArray25 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList26 = new java.util.ArrayList<model.CD>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList26, cDArray25);
        model.Magazine[] magazineArray28 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList29 = new java.util.ArrayList<model.Magazine>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList29, magazineArray28);
        model.ItemSearchResult itemSearchResult31 = new model.ItemSearchResult(book19, cD20, magazine21, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList29);
        itemSearchResult18.similarCD = cDList26;
        model.Book book33 = null;
        model.CD cD34 = null;
        model.Magazine magazine35 = null;
        model.Book[] bookArray36 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList37 = new java.util.ArrayList<model.Book>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList37, bookArray36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        model.Magazine[] magazineArray42 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList43 = new java.util.ArrayList<model.Magazine>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList43, magazineArray42);
        model.ItemSearchResult itemSearchResult45 = new model.ItemSearchResult(book33, cD34, magazine35, (java.util.Collection<model.Book>) bookList37, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book1, cD3, magazine4, bookCollection5, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList43);
        cD3.ID = (short) 10;
        cD3.canBePurchased = false;
        boolean boolean51 = cD3.canBePurchased;
        model.Faculty faculty52 = new model.Faculty();
        boolean boolean53 = rentAndReturnSystem0.rentAnItem((model.Item) cD3, (model.Client) faculty52);
        java.lang.String str54 = faculty52.faculty;
        model.RentedItem[] rentedItemArray55 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList56 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList56, rentedItemArray55);
        model.BorrowingManager borrowingManager58 = new model.BorrowingManager(rentedItemList56);
        boolean boolean59 = borrowingManager58.canRent();
        model.Client client60 = borrowingManager58.client;
        faculty52.borrowManager = borrowingManager58;
        double double62 = borrowingManager58.checkBalanceOwed();
        borrowingManager58.updateBorrowingPrivilages();
        org.junit.Assert.assertNotNull(bookArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(cDArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(magazineArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(bookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(magazineArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(bookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(magazineArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(rentedItemArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(client60);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
    }

    @Test
    public void test1601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1601");
        model.Database database7 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database7;
        model.SearchVirtualItem searchVirtualItem9 = new model.SearchVirtualItem(database7);
        model.VirtualItemSearchResult virtualItemSearchResult11 = searchVirtualItem9.searchVirtualItem("src/VirtualBook.csv");
        model.VirtualItemSearchResult virtualItemSearchResult13 = searchVirtualItem9.searchVirtualItem("src/CD.csv");
        model.Student student14 = new model.Student();
        int int15 = student14.ID;
        model.StudentOnlineResources studentOnlineResources16 = new model.StudentOnlineResources((model.Client) student14);
        model.VirtualBook virtualBook18 = studentOnlineResources16.searchAccessibleBook("");
        model.CD cD20 = new model.CD("");
        model.Magazine magazine21 = null;
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        model.Book book35 = null;
        model.CD cD36 = null;
        model.Magazine magazine37 = null;
        model.Book[] bookArray38 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList39 = new java.util.ArrayList<model.Book>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList39, bookArray38);
        model.CD[] cDArray41 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList42 = new java.util.ArrayList<model.CD>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList42, cDArray41);
        model.Magazine[] magazineArray44 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList45 = new java.util.ArrayList<model.Magazine>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList45, magazineArray44);
        model.ItemSearchResult itemSearchResult47 = new model.ItemSearchResult(book35, cD36, magazine37, (java.util.Collection<model.Book>) bookList39, (java.util.Collection<model.CD>) cDList42, (java.util.Collection<model.Magazine>) magazineList45);
        model.CD[] cDArray48 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList49 = new java.util.ArrayList<model.CD>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList49, cDArray48);
        itemSearchResult47.similarCD = cDList49;
        model.Book book52 = null;
        model.CD cD53 = null;
        model.Magazine magazine54 = null;
        model.Book[] bookArray55 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList56 = new java.util.ArrayList<model.Book>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList56, bookArray55);
        model.CD[] cDArray58 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList59 = new java.util.ArrayList<model.CD>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList59, cDArray58);
        model.Magazine[] magazineArray61 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList62 = new java.util.ArrayList<model.Magazine>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList62, magazineArray61);
        model.ItemSearchResult itemSearchResult64 = new model.ItemSearchResult(book52, cD53, magazine54, (java.util.Collection<model.Book>) bookList56, (java.util.Collection<model.CD>) cDList59, (java.util.Collection<model.Magazine>) magazineList62);
        model.ItemSearchResult itemSearchResult65 = new model.ItemSearchResult((model.Book) virtualBook18, cD20, magazine21, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList49, (java.util.Collection<model.Magazine>) magazineList62);
        int int66 = virtualBook18.ID;
        int int67 = virtualBook18.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter68 = null;
        model.PaidNewsletter paidNewsletter69 = null;
        model.VirtualItemSearchResult virtualItemSearchResult70 = new model.VirtualItemSearchResult(virtualBook18, uniProvidedNewsletter68, paidNewsletter69);
        model.PaidNewsletter paidNewsletter71 = virtualItemSearchResult70.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter72 = new model.UniProvidedNewsletter();
        virtualItemSearchResult70.setUniNewsletter(uniProvidedNewsletter72);
        model.PaidNewsletter paidNewsletter74 = virtualItemSearchResult70.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter75 = virtualItemSearchResult70.uniNewsletter;
        virtualItemSearchResult13.setUniNewsletter(uniProvidedNewsletter75);
        model.VirtualBook virtualBook77 = virtualItemSearchResult13.getVirtualBook();
        model.VirtualBook virtualBook78 = virtualItemSearchResult13.getVirtualBook();
        model.PaidNewsletter paidNewsletter79 = virtualItemSearchResult13.paidNewsletter;
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(virtualItemSearchResult11);
        org.junit.Assert.assertNotNull(virtualItemSearchResult13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(virtualBook18);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(bookArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(cDArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(magazineArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(cDArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(bookArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(cDArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(magazineArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 20 + "'", int67 == 20);
        org.junit.Assert.assertNull(paidNewsletter71);
        org.junit.Assert.assertNull(paidNewsletter74);
        org.junit.Assert.assertNotNull(uniProvidedNewsletter75);
        org.junit.Assert.assertNull(virtualBook77);
        org.junit.Assert.assertNull(virtualBook78);
        org.junit.Assert.assertNull(paidNewsletter79);
    }

    @Test
    public void test1602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1602");
        model.Book book0 = null;
        model.CD cD1 = null;
        model.Magazine magazine2 = null;
        model.Book[] bookArray3 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList4 = new java.util.ArrayList<model.Book>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList4, bookArray3);
        model.CD[] cDArray6 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList7 = new java.util.ArrayList<model.CD>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList7, cDArray6);
        model.Magazine[] magazineArray9 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList10 = new java.util.ArrayList<model.Magazine>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList10, magazineArray9);
        model.ItemSearchResult itemSearchResult12 = new model.ItemSearchResult(book0, cD1, magazine2, (java.util.Collection<model.Book>) bookList4, (java.util.Collection<model.CD>) cDList7, (java.util.Collection<model.Magazine>) magazineList10);
        model.Book book13 = null;
        model.CD cD14 = null;
        model.Magazine magazine15 = null;
        model.Book[] bookArray16 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList17 = new java.util.ArrayList<model.Book>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList17, bookArray16);
        model.CD[] cDArray19 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList20 = new java.util.ArrayList<model.CD>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList20, cDArray19);
        model.Magazine[] magazineArray22 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList23 = new java.util.ArrayList<model.Magazine>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList23, magazineArray22);
        model.ItemSearchResult itemSearchResult25 = new model.ItemSearchResult(book13, cD14, magazine15, (java.util.Collection<model.Book>) bookList17, (java.util.Collection<model.CD>) cDList20, (java.util.Collection<model.Magazine>) magazineList23);
        itemSearchResult12.similarCD = cDList20;
        model.Magazine magazine27 = itemSearchResult12.magazine;
        model.CD cD28 = itemSearchResult12.cd;
        java.util.Collection<model.Book> bookCollection29 = itemSearchResult12.similarBooks;
        model.Student student30 = new model.Student();
        int int31 = student30.ID;
        model.StudentOnlineResources studentOnlineResources32 = new model.StudentOnlineResources((model.Client) student30);
        model.VirtualBook virtualBook34 = studentOnlineResources32.searchAccessibleBook("");
        model.CD cD36 = new model.CD("");
        model.Magazine magazine37 = null;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.Book book51 = null;
        model.CD cD52 = null;
        model.Magazine magazine53 = null;
        model.Book[] bookArray54 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList55 = new java.util.ArrayList<model.Book>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList55, bookArray54);
        model.CD[] cDArray57 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList58 = new java.util.ArrayList<model.CD>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList58, cDArray57);
        model.Magazine[] magazineArray60 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList61 = new java.util.ArrayList<model.Magazine>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList61, magazineArray60);
        model.ItemSearchResult itemSearchResult63 = new model.ItemSearchResult(book51, cD52, magazine53, (java.util.Collection<model.Book>) bookList55, (java.util.Collection<model.CD>) cDList58, (java.util.Collection<model.Magazine>) magazineList61);
        model.CD[] cDArray64 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList65 = new java.util.ArrayList<model.CD>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList65, cDArray64);
        itemSearchResult63.similarCD = cDList65;
        model.Book book68 = null;
        model.CD cD69 = null;
        model.Magazine magazine70 = null;
        model.Book[] bookArray71 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList72 = new java.util.ArrayList<model.Book>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList72, bookArray71);
        model.CD[] cDArray74 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList75 = new java.util.ArrayList<model.CD>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList75, cDArray74);
        model.Magazine[] magazineArray77 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList78 = new java.util.ArrayList<model.Magazine>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList78, magazineArray77);
        model.ItemSearchResult itemSearchResult80 = new model.ItemSearchResult(book68, cD69, magazine70, (java.util.Collection<model.Book>) bookList72, (java.util.Collection<model.CD>) cDList75, (java.util.Collection<model.Magazine>) magazineList78);
        model.ItemSearchResult itemSearchResult81 = new model.ItemSearchResult((model.Book) virtualBook34, cD36, magazine37, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList65, (java.util.Collection<model.Magazine>) magazineList78);
        itemSearchResult12.book = virtualBook34;
        virtualBook34.showContent();
        org.junit.Assert.assertNotNull(bookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(cDArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(magazineArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(bookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(cDArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(magazineArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(magazine27);
        org.junit.Assert.assertNull(cD28);
        org.junit.Assert.assertNotNull(bookCollection29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(virtualBook34);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(bookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(cDArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(magazineArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(cDArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(bookArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(cDArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(magazineArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test1603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1603");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        boolean boolean4 = borrowingManager3.canRent();
        model.Client client5 = borrowingManager3.client;
        model.Student student6 = new model.Student();
        int int7 = student6.ID;
        model.StudentOnlineResources studentOnlineResources8 = new model.StudentOnlineResources((model.Client) student6);
        model.StudentOnlineResources studentOnlineResources9 = new model.StudentOnlineResources((model.Client) student6);
        model.RentedItem[] rentedItemArray10 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList11 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList11, rentedItemArray10);
        model.BorrowingManager borrowingManager13 = new model.BorrowingManager(rentedItemList11);
        model.Visitor visitor14 = new model.Visitor();
        visitor14.email = "hi!";
        borrowingManager13.client = visitor14;
        studentOnlineResources9.client = visitor14;
        model.Client client19 = studentOnlineResources9.client;
        borrowingManager3.client = client19;
        int int21 = borrowingManager3.itemsBorrowedCount;
        borrowingManager3.amountOwned = 0;
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(client5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(rentedItemArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(client19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test1604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1604");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.Payment payment1 = rentAndReturnSystem0.paymentAPI;
        model.PayMobileWallet payMobileWallet2 = new model.PayMobileWallet();
        payMobileWallet2.amountPay = 100.0f;
        payMobileWallet2.pay((double) 100L);
        rentAndReturnSystem0.paymentAPI = payMobileWallet2;
        model.Magazine magazine9 = new model.Magazine("");
        java.util.Calendar calendar10 = magazine9.date;
        model.Database database11 = null;
        model.Register register12 = model.Register.makeRegister(database11);
        model.Faculty faculty13 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection14 = faculty13.courses;
        boolean boolean17 = register12.registerAsStaff((model.Staff) faculty13, "src/Book.csv", "src/Book.csv");
        model.Faculty faculty18 = new model.Faculty();
        faculty18.username = "hi!";
        java.lang.String str21 = faculty18.username;
        boolean boolean24 = register12.registerAsStaff((model.Staff) faculty18, "src/CD.csv", "hi!");
        boolean boolean25 = rentAndReturnSystem0.returnAnItem((model.Item) magazine9, (model.Client) faculty18);
        model.RentAndReturnSystem rentAndReturnSystem26 = new model.RentAndReturnSystem();
        model.Payment payment27 = rentAndReturnSystem26.paymentAPI;
        model.PayMobileWallet payMobileWallet28 = new model.PayMobileWallet();
        payMobileWallet28.amountPay = 100.0f;
        payMobileWallet28.pay((double) 100L);
        rentAndReturnSystem26.paymentAPI = payMobileWallet28;
        rentAndReturnSystem0.paymentAPI = payMobileWallet28;
        model.Newsletter[] newsletterArray35 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList36 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList36, newsletterArray35);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager38 = new model.NewsletterSubscriptionManager(newsletterList36);
        model.Client client39 = newsletterSubscriptionManager38.client;
        model.Student student40 = new model.Student();
        int int41 = student40.ID;
        model.StudentOnlineResources studentOnlineResources42 = new model.StudentOnlineResources((model.Client) student40);
        student40.ID = '#';
        java.lang.String str45 = student40.email;
        newsletterSubscriptionManager38.client = student40;
        model.Newsletter[] newsletterArray47 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList48 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList48, newsletterArray47);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager50 = new model.NewsletterSubscriptionManager(newsletterList48);
        newsletterSubscriptionManager38.newsletterSubscribed = newsletterList48;
        java.util.ArrayList<model.Newsletter> newsletterList52 = newsletterSubscriptionManager38.newsletterSubscribed;
        model.Newsletter[] newsletterArray53 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList54 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList54, newsletterArray53);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager56 = new model.NewsletterSubscriptionManager(newsletterList54);
        model.Client client57 = newsletterSubscriptionManager56.client;
        model.Student student58 = new model.Student();
        int int59 = student58.ID;
        model.StudentOnlineResources studentOnlineResources60 = new model.StudentOnlineResources((model.Client) student58);
        student58.ID = '#';
        java.lang.String str63 = student58.email;
        newsletterSubscriptionManager56.client = student58;
        model.Newsletter[] newsletterArray65 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList66 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList66, newsletterArray65);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager68 = new model.NewsletterSubscriptionManager(newsletterList66);
        newsletterSubscriptionManager56.newsletterSubscribed = newsletterList66;
        newsletterSubscriptionManager38.newsletterSubscribed = newsletterList66;
        model.RentAndReturnSystem rentAndReturnSystem71 = new model.RentAndReturnSystem();
        model.Payment payment72 = rentAndReturnSystem71.paymentAPI;
        model.PayMobileWallet payMobileWallet73 = new model.PayMobileWallet();
        payMobileWallet73.amountPay = 100.0f;
        payMobileWallet73.amountPay = (byte) -1;
        rentAndReturnSystem71.paymentAPI = payMobileWallet73;
        newsletterSubscriptionManager38.paymentAPI = payMobileWallet73;
        payMobileWallet73.pay((double) 8547594);
        rentAndReturnSystem0.paymentAPI = payMobileWallet73;
        model.RentAndReturnSystem rentAndReturnSystem83 = new model.RentAndReturnSystem();
        model.BuySpecialItems buySpecialItems84 = new model.BuySpecialItems();
        model.PayDebit payDebit85 = new model.PayDebit();
        buySpecialItems84.paymentAPI = payDebit85;
        rentAndReturnSystem83.paymentAPI = payDebit85;
        payDebit85.amountPay = 40;
        rentAndReturnSystem0.paymentAPI = payDebit85;
        org.junit.Assert.assertNull(payment1);
        org.junit.Assert.assertNull(calendar10);
        org.junit.Assert.assertNotNull(register12);
        org.junit.Assert.assertNull(courseCollection14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(payment27);
        org.junit.Assert.assertNotNull(newsletterArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(client39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(newsletterArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(newsletterList52);
        org.junit.Assert.assertNotNull(newsletterArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(client57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(newsletterArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(payment72);
    }

    @Test
    public void test1605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1605");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        model.Book book4 = null;
        model.CD cD5 = null;
        model.Magazine magazine6 = null;
        model.Book[] bookArray7 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList8 = new java.util.ArrayList<model.Book>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList8, bookArray7);
        model.CD[] cDArray10 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList11 = new java.util.ArrayList<model.CD>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList11, cDArray10);
        model.Magazine[] magazineArray13 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList14 = new java.util.ArrayList<model.Magazine>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList14, magazineArray13);
        model.ItemSearchResult itemSearchResult16 = new model.ItemSearchResult(book4, cD5, magazine6, (java.util.Collection<model.Book>) bookList8, (java.util.Collection<model.CD>) cDList11, (java.util.Collection<model.Magazine>) magazineList14);
        model.CD[] cDArray17 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList18 = new java.util.ArrayList<model.CD>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList18, cDArray17);
        itemSearchResult16.similarCD = cDList18;
        java.util.Collection<model.Magazine> magazineCollection21 = itemSearchResult16.similarMagazine;
        model.Student student22 = new model.Student();
        int int23 = student22.ID;
        model.StudentOnlineResources studentOnlineResources24 = new model.StudentOnlineResources((model.Client) student22);
        model.StudentOnlineResources studentOnlineResources25 = new model.StudentOnlineResources((model.Client) student22);
        model.RentedItem[] rentedItemArray26 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList27 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList27, rentedItemArray26);
        model.BorrowingManager borrowingManager29 = new model.BorrowingManager(rentedItemList27);
        model.Visitor visitor30 = new model.Visitor();
        visitor30.email = "hi!";
        borrowingManager29.client = visitor30;
        studentOnlineResources25.client = visitor30;
        model.Student student35 = new model.Student();
        int int36 = student35.ID;
        model.StudentOnlineResources studentOnlineResources37 = new model.StudentOnlineResources((model.Client) student35);
        model.VirtualBook virtualBook39 = studentOnlineResources37.searchAccessibleBook("");
        java.lang.String str40 = virtualBook39.location;
        model.VirtualItemContent virtualItemContent41 = virtualBook39.content;
        java.lang.String str42 = studentOnlineResources25.readVirtualItem((model.VirtualItem) virtualBook39);
        itemSearchResult16.book = virtualBook39;
        // The following exception was thrown during execution in test generation
        try {
            borrowingManager3.rentAnItem((model.Item) virtualBook39, "model.RegistrationFailedException: model.RentingNotAllowedException: hi!");
            org.junit.Assert.fail("Expected exception of type model.RentingNotAllowedException; message: Item Not Rentable.");
        } catch (model.RentingNotAllowedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(bookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(cDArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(magazineArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(cDArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(magazineCollection21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(rentedItemArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(virtualBook39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(virtualItemContent41);
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test1606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1606");
        model.LibraryManagementTeam libraryManagementTeam0 = new model.LibraryManagementTeam();
        int int1 = libraryManagementTeam0.ID;
        int int2 = libraryManagementTeam0.accessCode;
        libraryManagementTeam0.accessCode = (short) -1;
        int int5 = libraryManagementTeam0.accessCode;
        model.Item item6 = null;
        // The following exception was thrown during execution in test generation
        try {
            libraryManagementTeam0.enableAnItem(item6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot assign field \"canBePurchased\" because \"item\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    }

    @Test
    public void test1607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1607");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        virtualBook4.canBePurchased = true;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test1608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1608");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        boolean boolean4 = borrowingManager3.canRent();
        model.Client client5 = borrowingManager3.client;
        borrowingManager3.amountOwned = (short) 10;
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(client5);
    }

    @Test
    public void test1609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1609");
        model.Visitor visitor0 = new model.Visitor();
        model.VirtualBook[] virtualBookArray1 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList2 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList2, virtualBookArray1);
        visitor0.virtualBooksAvailable = virtualBookList2;
        model.NonFaculty nonFaculty5 = new model.NonFaculty();
        model.Visitor visitor6 = new model.Visitor();
        model.VirtualBook[] virtualBookArray7 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList8 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList8, virtualBookArray7);
        visitor6.virtualBooksAvailable = virtualBookList8;
        visitor6.username = "";
        model.Visitor visitor13 = new model.Visitor();
        model.VirtualBook[] virtualBookArray14 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList15 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList15, virtualBookArray14);
        visitor13.virtualBooksAvailable = virtualBookList15;
        visitor6.virtualBooksAvailable = virtualBookList15;
        nonFaculty5.virtualBooksAvailable = virtualBookList15;
        visitor0.virtualBooksAvailable = virtualBookList15;
        model.BorrowingManager borrowingManager21 = visitor0.borrowManager;
        org.junit.Assert.assertNotNull(virtualBookArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(virtualBookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(virtualBookArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(borrowingManager21);
    }

    @Test
    public void test1610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1610");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.VirtualItemContent virtualItemContent5 = virtualBook4.content;
        model.Student student6 = new model.Student();
        int int7 = student6.ID;
        model.StudentOnlineResources studentOnlineResources8 = new model.StudentOnlineResources((model.Client) student6);
        model.VirtualBook virtualBook10 = studentOnlineResources8.searchAccessibleBook("");
        model.CD cD12 = new model.CD("");
        model.Magazine magazine13 = null;
        model.Book book14 = null;
        model.CD cD15 = null;
        model.Magazine magazine16 = null;
        model.Book[] bookArray17 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList18 = new java.util.ArrayList<model.Book>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList18, bookArray17);
        model.CD[] cDArray20 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList21 = new java.util.ArrayList<model.CD>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList21, cDArray20);
        model.Magazine[] magazineArray23 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList24 = new java.util.ArrayList<model.Magazine>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList24, magazineArray23);
        model.ItemSearchResult itemSearchResult26 = new model.ItemSearchResult(book14, cD15, magazine16, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList21, (java.util.Collection<model.Magazine>) magazineList24);
        model.Book book27 = null;
        model.CD cD28 = null;
        model.Magazine magazine29 = null;
        model.Book[] bookArray30 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList31 = new java.util.ArrayList<model.Book>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList31, bookArray30);
        model.CD[] cDArray33 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList34 = new java.util.ArrayList<model.CD>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList34, cDArray33);
        model.Magazine[] magazineArray36 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList37 = new java.util.ArrayList<model.Magazine>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList37, magazineArray36);
        model.ItemSearchResult itemSearchResult39 = new model.ItemSearchResult(book27, cD28, magazine29, (java.util.Collection<model.Book>) bookList31, (java.util.Collection<model.CD>) cDList34, (java.util.Collection<model.Magazine>) magazineList37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        itemSearchResult39.similarCD = cDList41;
        model.Book book44 = null;
        model.CD cD45 = null;
        model.Magazine magazine46 = null;
        model.Book[] bookArray47 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList48 = new java.util.ArrayList<model.Book>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList48, bookArray47);
        model.CD[] cDArray50 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList51 = new java.util.ArrayList<model.CD>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList51, cDArray50);
        model.Magazine[] magazineArray53 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList54 = new java.util.ArrayList<model.Magazine>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList54, magazineArray53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult(book44, cD45, magazine46, (java.util.Collection<model.Book>) bookList48, (java.util.Collection<model.CD>) cDList51, (java.util.Collection<model.Magazine>) magazineList54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult((model.Book) virtualBook10, cD12, magazine13, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList54);
        int int58 = virtualBook10.ID;
        int int59 = virtualBook10.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter60 = null;
        model.PaidNewsletter paidNewsletter61 = null;
        model.VirtualItemSearchResult virtualItemSearchResult62 = new model.VirtualItemSearchResult(virtualBook10, uniProvidedNewsletter60, paidNewsletter61);
        model.PaidNewsletter paidNewsletter63 = virtualItemSearchResult62.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter64 = new model.UniProvidedNewsletter();
        virtualItemSearchResult62.setUniNewsletter(uniProvidedNewsletter64);
        java.lang.String str66 = uniProvidedNewsletter64.title;
        model.PaidNewsletter paidNewsletter67 = null;
        model.VirtualItemSearchResult virtualItemSearchResult68 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter64, paidNewsletter67);
        model.VirtualBook virtualBook69 = virtualItemSearchResult68.virtualBook;
        model.PaidNewsletter paidNewsletter70 = new model.PaidNewsletter();
        virtualItemSearchResult68.setPaidNewsletter(paidNewsletter70);
        paidNewsletter70.subscriptionPrice = 'a';
        double double74 = paidNewsletter70.subscriptionPrice;
        paidNewsletter70.subscriptionPrice = 6555598;
        paidNewsletter70.cost = 8289616;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNull(virtualItemContent5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(virtualBook10);
        org.junit.Assert.assertNotNull(bookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(cDArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(magazineArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(bookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(magazineArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(bookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(cDArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(magazineArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 20 + "'", int59 == 20);
        org.junit.Assert.assertNull(paidNewsletter63);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(virtualBook69);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 97.0d + "'", double74 == 97.0d);
    }

    @Test
    public void test1611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1611");
        model.Course course0 = new model.Course();
        java.lang.String str1 = course0.subject;
        course0.code = "";
        course0.subject = "src/Magazine.csv";
        int int6 = course0.year;
        java.lang.String str7 = course0.code;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test1612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1612");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        model.Visitor visitor4 = new model.Visitor();
        visitor4.email = "hi!";
        borrowingManager3.client = visitor4;
        borrowingManager3.updateBorrowingPrivilages();
        boolean boolean9 = borrowingManager3.canRent();
        int int10 = borrowingManager3.itemsBorrowedCount;
        borrowingManager3.updateBorrowingPrivilages();
        double double12 = borrowingManager3.checkBalanceOwed();
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    }

    @Test
    public void test1613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1613");
        model.ItemManagement itemManagement0 = new model.ItemManagement();
        model.Database database1 = null;
        itemManagement0.database = database1;
        model.Student student3 = new model.Student();
        int int4 = student3.ID;
        model.StudentOnlineResources studentOnlineResources5 = new model.StudentOnlineResources((model.Client) student3);
        model.VirtualBook virtualBook7 = studentOnlineResources5.searchAccessibleBook("");
        itemManagement0.disableAnItem((model.Item) virtualBook7);
        model.Item item10 = itemManagement0.selectAnItemFromDatabase(1052342);
        model.Database database11 = itemManagement0.database;
        model.Database database12 = null;
        model.Register register13 = model.Register.makeRegister(database12);
        model.Faculty faculty14 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection15 = faculty14.courses;
        boolean boolean18 = register13.registerAsStaff((model.Staff) faculty14, "src/Book.csv", "src/Book.csv");
        model.Database database19 = model.Database.database;
        model.Student student20 = new model.Student();
        int int21 = student20.ID;
        model.StudentOnlineResources studentOnlineResources22 = new model.StudentOnlineResources((model.Client) student20);
        student20.ID = '#';
        database19.addClient((model.Client) student20);
        student20.email = "hi!";
        boolean boolean30 = register13.registerAsStaff((model.Staff) student20, "src/CD.csv", "src/Book.csv");
        model.Database database38 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str39 = database38.getVirtualBookFilePath();
        register13.database = database38;
        model.Database database48 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str49 = database48.getVirtualBookFilePath();
        model.Database.database = database48;
        register13.database = database48;
        itemManagement0.database = database48;
        int int53 = database48.getRandomID();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(virtualBook7);
        org.junit.Assert.assertNull(item10);
        org.junit.Assert.assertNull(database11);
        org.junit.Assert.assertNotNull(register13);
        org.junit.Assert.assertNull(courseCollection15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "src/VirtualBook.csv" + "'", str39, "src/VirtualBook.csv");
        org.junit.Assert.assertNotNull(database48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "src/VirtualBook.csv" + "'", str49, "src/VirtualBook.csv");
// flaky:         org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3464110 + "'", int53 == 3464110);
    }

    @Test
    public void test1614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1614");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.Book book1 = null;
        model.CD cD3 = new model.CD("");
        model.Magazine magazine4 = null;
        java.util.Collection<model.Book> bookCollection5 = null;
        model.Book book6 = null;
        model.CD cD7 = null;
        model.Magazine magazine8 = null;
        model.Book[] bookArray9 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList10 = new java.util.ArrayList<model.Book>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList10, bookArray9);
        model.CD[] cDArray12 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList13 = new java.util.ArrayList<model.CD>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList13, cDArray12);
        model.Magazine[] magazineArray15 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList16 = new java.util.ArrayList<model.Magazine>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList16, magazineArray15);
        model.ItemSearchResult itemSearchResult18 = new model.ItemSearchResult(book6, cD7, magazine8, (java.util.Collection<model.Book>) bookList10, (java.util.Collection<model.CD>) cDList13, (java.util.Collection<model.Magazine>) magazineList16);
        model.Book book19 = null;
        model.CD cD20 = null;
        model.Magazine magazine21 = null;
        model.Book[] bookArray22 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList23 = new java.util.ArrayList<model.Book>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList23, bookArray22);
        model.CD[] cDArray25 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList26 = new java.util.ArrayList<model.CD>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList26, cDArray25);
        model.Magazine[] magazineArray28 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList29 = new java.util.ArrayList<model.Magazine>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList29, magazineArray28);
        model.ItemSearchResult itemSearchResult31 = new model.ItemSearchResult(book19, cD20, magazine21, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList29);
        itemSearchResult18.similarCD = cDList26;
        model.Book book33 = null;
        model.CD cD34 = null;
        model.Magazine magazine35 = null;
        model.Book[] bookArray36 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList37 = new java.util.ArrayList<model.Book>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList37, bookArray36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        model.Magazine[] magazineArray42 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList43 = new java.util.ArrayList<model.Magazine>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList43, magazineArray42);
        model.ItemSearchResult itemSearchResult45 = new model.ItemSearchResult(book33, cD34, magazine35, (java.util.Collection<model.Book>) bookList37, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book1, cD3, magazine4, bookCollection5, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList43);
        cD3.ID = (short) 10;
        cD3.canBePurchased = false;
        boolean boolean51 = cD3.canBePurchased;
        model.Faculty faculty52 = new model.Faculty();
        boolean boolean53 = rentAndReturnSystem0.rentAnItem((model.Item) cD3, (model.Client) faculty52);
        java.lang.String str54 = faculty52.faculty;
        model.RentedItem[] rentedItemArray55 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList56 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList56, rentedItemArray55);
        model.BorrowingManager borrowingManager58 = new model.BorrowingManager(rentedItemList56);
        boolean boolean59 = borrowingManager58.canRent();
        model.Client client60 = borrowingManager58.client;
        faculty52.borrowManager = borrowingManager58;
        java.util.Collection<model.Course> courseCollection62 = faculty52.courses;
        model.NewsletterSubscriptionManager newsletterSubscriptionManager63 = faculty52.newsletterManager;
        java.util.Collection<model.Book> bookCollection64 = null;
        faculty52.textbooks = bookCollection64;
        faculty52.ID = 100;
        faculty52.username = "model.RegistrationFailedException: ";
        faculty52.faculty = "model.RegistrationFailedException: src/Book.csv";
        org.junit.Assert.assertNotNull(bookArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(cDArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(magazineArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(bookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(magazineArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(bookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(magazineArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(rentedItemArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(client60);
        org.junit.Assert.assertNull(courseCollection62);
        org.junit.Assert.assertNull(newsletterSubscriptionManager63);
    }

    @Test
    public void test1615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1615");
        model.PaidNewsletter paidNewsletter0 = new model.PaidNewsletter();
        model.Student student1 = new model.Student();
        int int2 = student1.ID;
        model.StudentOnlineResources studentOnlineResources3 = new model.StudentOnlineResources((model.Client) student1);
        model.VirtualBook virtualBook5 = studentOnlineResources3.searchAccessibleBook("");
        model.CD cD7 = new model.CD("");
        model.Magazine magazine8 = null;
        model.Book book9 = null;
        model.CD cD10 = null;
        model.Magazine magazine11 = null;
        model.Book[] bookArray12 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList13 = new java.util.ArrayList<model.Book>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList13, bookArray12);
        model.CD[] cDArray15 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList16 = new java.util.ArrayList<model.CD>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList16, cDArray15);
        model.Magazine[] magazineArray18 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList19 = new java.util.ArrayList<model.Magazine>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList19, magazineArray18);
        model.ItemSearchResult itemSearchResult21 = new model.ItemSearchResult(book9, cD10, magazine11, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList16, (java.util.Collection<model.Magazine>) magazineList19);
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        model.CD[] cDArray35 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList36 = new java.util.ArrayList<model.CD>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList36, cDArray35);
        itemSearchResult34.similarCD = cDList36;
        model.Book book39 = null;
        model.CD cD40 = null;
        model.Magazine magazine41 = null;
        model.Book[] bookArray42 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList43 = new java.util.ArrayList<model.Book>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList43, bookArray42);
        model.CD[] cDArray45 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList46 = new java.util.ArrayList<model.CD>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList46, cDArray45);
        model.Magazine[] magazineArray48 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList49 = new java.util.ArrayList<model.Magazine>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList49, magazineArray48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult(book39, cD40, magazine41, (java.util.Collection<model.Book>) bookList43, (java.util.Collection<model.CD>) cDList46, (java.util.Collection<model.Magazine>) magazineList49);
        model.ItemSearchResult itemSearchResult52 = new model.ItemSearchResult((model.Book) virtualBook5, cD7, magazine8, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList36, (java.util.Collection<model.Magazine>) magazineList49);
        int int53 = virtualBook5.ID;
        int int54 = virtualBook5.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter55 = null;
        model.PaidNewsletter paidNewsletter56 = null;
        model.VirtualItemSearchResult virtualItemSearchResult57 = new model.VirtualItemSearchResult(virtualBook5, uniProvidedNewsletter55, paidNewsletter56);
        virtualBook5.author = "hi!";
        virtualBook5.showContent();
        boolean boolean61 = paidNewsletter0.equals((java.lang.Object) virtualBook5);
        paidNewsletter0.subscriptionPrice = 0.0d;
        double double64 = paidNewsletter0.subscriptionPrice;
        paidNewsletter0.subscriptionPrice = 19;
        paidNewsletter0.subscriptionPrice = 39;
        float float69 = paidNewsletter0.cost;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(virtualBook5);
        org.junit.Assert.assertNotNull(bookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cDArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(magazineArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(cDArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(bookArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(cDArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(magazineArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 20 + "'", int54 == 20);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + 0.0f + "'", float69 == 0.0f);
    }

    @Test
    public void test1616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1616");
        model.BuySpecialItems buySpecialItems0 = new model.BuySpecialItems();
        model.Payment payment1 = null;
        buySpecialItems0.paymentAPI = payment1;
        model.PayMobileWallet payMobileWallet3 = new model.PayMobileWallet();
        buySpecialItems0.paymentAPI = payMobileWallet3;
        model.Payment payment5 = buySpecialItems0.paymentAPI;
        model.RentAndReturnSystem rentAndReturnSystem6 = new model.RentAndReturnSystem();
        model.Payment payment7 = rentAndReturnSystem6.paymentAPI;
        model.PayMobileWallet payMobileWallet8 = new model.PayMobileWallet();
        payMobileWallet8.amountPay = 100.0f;
        payMobileWallet8.amountPay = (byte) -1;
        rentAndReturnSystem6.paymentAPI = payMobileWallet8;
        model.Payment payment14 = rentAndReturnSystem6.paymentAPI;
        model.PayCredit payCredit15 = new model.PayCredit();
        payCredit15.pay((double) (short) 100);
        payCredit15.amountPay = ' ';
        double double20 = payCredit15.amountPay;
        rentAndReturnSystem6.paymentAPI = payCredit15;
        payCredit15.pay(0.0d);
        buySpecialItems0.paymentAPI = payCredit15;
        double double25 = payCredit15.amountPay;
        org.junit.Assert.assertNotNull(payment5);
        org.junit.Assert.assertNull(payment7);
        org.junit.Assert.assertNotNull(payment14);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 32.0d + "'", double20 == 32.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 32.0d + "'", double25 == 32.0d);
    }

    @Test
    public void test1617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1617");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        virtualBook4.ISBN = "hi!";
        int int55 = virtualBook4.ID;
        model.VirtualItemContent virtualItemContent57 = new model.VirtualItemContent("hi!");
        virtualBook4.content = virtualItemContent57;
        java.lang.String str59 = virtualBook4.ISBN;
        model.Student student60 = new model.Student();
        student60.viewMyOnlineResource();
        boolean boolean62 = virtualBook4.equals((java.lang.Object) student60);
        virtualBook4.showContent();
        virtualBook4.ID = 7150642;
        virtualBook4.title = "model.RentingNotAllowedException: src/Magazine.csv";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test1618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1618");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.Book book1 = null;
        model.CD cD3 = new model.CD("");
        model.Magazine magazine4 = null;
        java.util.Collection<model.Book> bookCollection5 = null;
        model.Book book6 = null;
        model.CD cD7 = null;
        model.Magazine magazine8 = null;
        model.Book[] bookArray9 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList10 = new java.util.ArrayList<model.Book>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList10, bookArray9);
        model.CD[] cDArray12 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList13 = new java.util.ArrayList<model.CD>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList13, cDArray12);
        model.Magazine[] magazineArray15 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList16 = new java.util.ArrayList<model.Magazine>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList16, magazineArray15);
        model.ItemSearchResult itemSearchResult18 = new model.ItemSearchResult(book6, cD7, magazine8, (java.util.Collection<model.Book>) bookList10, (java.util.Collection<model.CD>) cDList13, (java.util.Collection<model.Magazine>) magazineList16);
        model.Book book19 = null;
        model.CD cD20 = null;
        model.Magazine magazine21 = null;
        model.Book[] bookArray22 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList23 = new java.util.ArrayList<model.Book>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList23, bookArray22);
        model.CD[] cDArray25 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList26 = new java.util.ArrayList<model.CD>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList26, cDArray25);
        model.Magazine[] magazineArray28 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList29 = new java.util.ArrayList<model.Magazine>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList29, magazineArray28);
        model.ItemSearchResult itemSearchResult31 = new model.ItemSearchResult(book19, cD20, magazine21, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList29);
        itemSearchResult18.similarCD = cDList26;
        model.Book book33 = null;
        model.CD cD34 = null;
        model.Magazine magazine35 = null;
        model.Book[] bookArray36 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList37 = new java.util.ArrayList<model.Book>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList37, bookArray36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        model.Magazine[] magazineArray42 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList43 = new java.util.ArrayList<model.Magazine>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList43, magazineArray42);
        model.ItemSearchResult itemSearchResult45 = new model.ItemSearchResult(book33, cD34, magazine35, (java.util.Collection<model.Book>) bookList37, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book1, cD3, magazine4, bookCollection5, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList43);
        cD3.ID = (short) 10;
        cD3.canBePurchased = false;
        boolean boolean51 = cD3.canBePurchased;
        model.Faculty faculty52 = new model.Faculty();
        boolean boolean53 = rentAndReturnSystem0.rentAnItem((model.Item) cD3, (model.Client) faculty52);
        java.lang.String str54 = faculty52.faculty;
        faculty52.username = "";
        model.Faculty faculty57 = new model.Faculty();
        faculty57.username = "hi!";
        java.util.Collection<model.Course> courseCollection60 = null;
        faculty57.courses = courseCollection60;
        java.util.Collection<model.Course> courseCollection62 = faculty57.courses;
        model.Newsletter[] newsletterArray63 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList64 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList64, newsletterArray63);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager66 = new model.NewsletterSubscriptionManager(newsletterList64);
        model.Client client67 = newsletterSubscriptionManager66.client;
        model.Student student68 = new model.Student();
        int int69 = student68.ID;
        model.StudentOnlineResources studentOnlineResources70 = new model.StudentOnlineResources((model.Client) student68);
        student68.ID = '#';
        java.lang.String str73 = student68.email;
        newsletterSubscriptionManager66.client = student68;
        model.Newsletter[] newsletterArray75 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList76 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList76, newsletterArray75);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager78 = new model.NewsletterSubscriptionManager(newsletterList76);
        newsletterSubscriptionManager66.newsletterSubscribed = newsletterList76;
        faculty57.newsletterManager = newsletterSubscriptionManager66;
        java.util.ArrayList<model.VirtualBook> virtualBookList81 = faculty57.virtualBooksAvailable;
        model.NewsletterSubscriptionManager newsletterSubscriptionManager82 = faculty57.newsletterManager;
        model.NewsletterSubscriptionManager newsletterSubscriptionManager83 = faculty57.newsletterManager;
        faculty52.newsletterManager = newsletterSubscriptionManager83;
        java.util.Collection<model.Course> courseCollection85 = faculty52.courses;
        java.util.Collection<model.Course> courseCollection86 = null;
        faculty52.courses = courseCollection86;
        org.junit.Assert.assertNotNull(bookArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(cDArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(magazineArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(bookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(magazineArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(bookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(magazineArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(courseCollection62);
        org.junit.Assert.assertNotNull(newsletterArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(client67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(newsletterArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(virtualBookList81);
        org.junit.Assert.assertNotNull(newsletterSubscriptionManager82);
        org.junit.Assert.assertNotNull(newsletterSubscriptionManager83);
        org.junit.Assert.assertNull(courseCollection85);
    }

    @Test
    public void test1619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1619");
        model.UniProvidedNewsletter uniProvidedNewsletter0 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter0.title = "hi!";
        model.VirtualItemContent virtualItemContent4 = new model.VirtualItemContent("hi!");
        java.lang.String str5 = virtualItemContent4.link;
        uniProvidedNewsletter0.content = virtualItemContent4;
        uniProvidedNewsletter0.title = "src/Newsletter.csv";
        model.VirtualItemContent virtualItemContent9 = uniProvidedNewsletter0.content;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(virtualItemContent9);
    }

    @Test
    public void test1620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1620");
        model.RentingNotAllowedException rentingNotAllowedException1 = new model.RentingNotAllowedException("hi!");
        java.lang.String str2 = rentingNotAllowedException1.message;
        model.RegistrationFailedException registrationFailedException4 = new model.RegistrationFailedException("");
        rentingNotAllowedException1.addSuppressed((java.lang.Throwable) registrationFailedException4);
        java.lang.String str6 = registrationFailedException4.message;
        registrationFailedException4.message = "hi!";
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test1621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1621");
        model.ItemManagement itemManagement0 = new model.ItemManagement();
        model.Database database1 = null;
        itemManagement0.database = database1;
        model.BuySpecialItems buySpecialItems3 = new model.BuySpecialItems();
        model.Book book4 = null;
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        java.util.Collection<model.Book> bookCollection8 = null;
        model.Book book9 = null;
        model.CD cD10 = null;
        model.Magazine magazine11 = null;
        model.Book[] bookArray12 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList13 = new java.util.ArrayList<model.Book>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList13, bookArray12);
        model.CD[] cDArray15 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList16 = new java.util.ArrayList<model.CD>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList16, cDArray15);
        model.Magazine[] magazineArray18 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList19 = new java.util.ArrayList<model.Magazine>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList19, magazineArray18);
        model.ItemSearchResult itemSearchResult21 = new model.ItemSearchResult(book9, cD10, magazine11, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList16, (java.util.Collection<model.Magazine>) magazineList19);
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        itemSearchResult21.similarCD = cDList29;
        model.Book book36 = null;
        model.CD cD37 = null;
        model.Magazine magazine38 = null;
        model.Book[] bookArray39 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList40 = new java.util.ArrayList<model.Book>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList40, bookArray39);
        model.CD[] cDArray42 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList43 = new java.util.ArrayList<model.CD>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList43, cDArray42);
        model.Magazine[] magazineArray45 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList46 = new java.util.ArrayList<model.Magazine>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList46, magazineArray45);
        model.ItemSearchResult itemSearchResult48 = new model.ItemSearchResult(book36, cD37, magazine38, (java.util.Collection<model.Book>) bookList40, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList46);
        model.ItemSearchResult itemSearchResult49 = new model.ItemSearchResult(book4, cD6, magazine7, bookCollection8, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList46);
        cD6.ID = (short) 10;
        boolean boolean53 = buySpecialItems3.buyAnItem((model.Item) cD6, (double) 0);
        itemManagement0.enableAnItem((model.Item) cD6);
        model.Database database55 = model.Database.database;
        model.Student student56 = new model.Student();
        int int57 = student56.ID;
        model.StudentOnlineResources studentOnlineResources58 = new model.StudentOnlineResources((model.Client) student56);
        student56.ID = '#';
        database55.addClient((model.Client) student56);
        itemManagement0.database = database55;
        model.Login login63 = model.Login.makeLogin(database55);
        database55.virtualItemFilePath = "src/Book.csv";
        boolean boolean67 = database55.addItem("src/Magazine.csv");
        java.lang.String str68 = database55.getBookFilePath();
        org.junit.Assert.assertNotNull(bookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cDArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(magazineArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(bookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cDArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(magazineArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(login63);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "src/Book.csv" + "'", str68, "src/Book.csv");
    }

    @Test
    public void test1622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1622");
        model.Book book0 = null;
        model.CD cD1 = null;
        model.Magazine magazine2 = null;
        model.Book[] bookArray3 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList4 = new java.util.ArrayList<model.Book>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList4, bookArray3);
        model.CD[] cDArray6 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList7 = new java.util.ArrayList<model.CD>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList7, cDArray6);
        model.Magazine[] magazineArray9 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList10 = new java.util.ArrayList<model.Magazine>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList10, magazineArray9);
        model.ItemSearchResult itemSearchResult12 = new model.ItemSearchResult(book0, cD1, magazine2, (java.util.Collection<model.Book>) bookList4, (java.util.Collection<model.CD>) cDList7, (java.util.Collection<model.Magazine>) magazineList10);
        model.Book book13 = null;
        model.CD cD14 = null;
        model.Magazine magazine15 = null;
        model.Book[] bookArray16 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList17 = new java.util.ArrayList<model.Book>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList17, bookArray16);
        model.CD[] cDArray19 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList20 = new java.util.ArrayList<model.CD>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList20, cDArray19);
        model.Magazine[] magazineArray22 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList23 = new java.util.ArrayList<model.Magazine>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList23, magazineArray22);
        model.ItemSearchResult itemSearchResult25 = new model.ItemSearchResult(book13, cD14, magazine15, (java.util.Collection<model.Book>) bookList17, (java.util.Collection<model.CD>) cDList20, (java.util.Collection<model.Magazine>) magazineList23);
        itemSearchResult12.similarCD = cDList20;
        model.Magazine magazine27 = null;
        itemSearchResult12.magazine = magazine27;
        java.util.Collection<model.Magazine> magazineCollection29 = itemSearchResult12.similarMagazine;
        java.util.Collection<model.Book> bookCollection30 = itemSearchResult12.similarBooks;
        model.Book book31 = itemSearchResult12.book;
        model.Book book32 = null;
        model.CD cD33 = null;
        model.Magazine magazine34 = null;
        model.Book[] bookArray35 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList36 = new java.util.ArrayList<model.Book>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList36, bookArray35);
        model.CD[] cDArray38 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList39 = new java.util.ArrayList<model.CD>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList39, cDArray38);
        model.Magazine[] magazineArray41 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList42 = new java.util.ArrayList<model.Magazine>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList42, magazineArray41);
        model.ItemSearchResult itemSearchResult44 = new model.ItemSearchResult(book32, cD33, magazine34, (java.util.Collection<model.Book>) bookList36, (java.util.Collection<model.CD>) cDList39, (java.util.Collection<model.Magazine>) magazineList42);
        model.CD[] cDArray45 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList46 = new java.util.ArrayList<model.CD>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList46, cDArray45);
        itemSearchResult44.similarCD = cDList46;
        model.Book book49 = null;
        itemSearchResult44.book = book49;
        model.Book book51 = null;
        model.CD cD52 = null;
        model.Magazine magazine53 = null;
        model.Book[] bookArray54 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList55 = new java.util.ArrayList<model.Book>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList55, bookArray54);
        model.CD[] cDArray57 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList58 = new java.util.ArrayList<model.CD>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList58, cDArray57);
        model.Magazine[] magazineArray60 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList61 = new java.util.ArrayList<model.Magazine>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList61, magazineArray60);
        model.ItemSearchResult itemSearchResult63 = new model.ItemSearchResult(book51, cD52, magazine53, (java.util.Collection<model.Book>) bookList55, (java.util.Collection<model.CD>) cDList58, (java.util.Collection<model.Magazine>) magazineList61);
        itemSearchResult44.similarBooks = bookList55;
        model.Book book65 = itemSearchResult44.book;
        java.util.Collection<model.CD> cDCollection66 = itemSearchResult44.similarCD;
        model.Magazine magazine67 = itemSearchResult44.magazine;
        model.Student student68 = new model.Student();
        int int69 = student68.ID;
        model.StudentOnlineResources studentOnlineResources70 = new model.StudentOnlineResources((model.Client) student68);
        model.VirtualBook virtualBook72 = studentOnlineResources70.searchAccessibleBook("");
        java.lang.String str73 = virtualBook72.location;
        int int74 = virtualBook72.ID;
        virtualBook72.isBookLost = false;
        java.lang.String str77 = virtualBook72.author;
        virtualBook72.edition = 'a';
        itemSearchResult44.book = virtualBook72;
        model.CD cD82 = new model.CD("hi!");
        itemSearchResult44.cd = cD82;
        itemSearchResult12.cd = cD82;
        org.junit.Assert.assertNotNull(bookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(cDArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(magazineArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(bookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(cDArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(magazineArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(magazineCollection29);
        org.junit.Assert.assertNotNull(bookCollection30);
        org.junit.Assert.assertNull(book31);
        org.junit.Assert.assertNotNull(bookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(cDArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(magazineArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(bookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(cDArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(magazineArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(book65);
        org.junit.Assert.assertNotNull(cDCollection66);
        org.junit.Assert.assertNull(magazine67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(virtualBook72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNull(str77);
    }

    @Test
    public void test1623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1623");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.PayCredit payCredit5 = new model.PayCredit();
        payCredit5.amountPay = 10;
        newsletterSubscriptionManager3.paymentAPI = payCredit5;
        double double9 = payCredit5.amountPay;
        payCredit5.amountPay = 41.0d;
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
    }

    @Test
    public void test1624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1624");
        model.Database database0 = null;
        model.Register register1 = model.Register.makeRegister(database0);
        model.Faculty faculty2 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection3 = faculty2.courses;
        boolean boolean6 = register1.registerAsStaff((model.Staff) faculty2, "src/Book.csv", "src/Book.csv");
        model.Database database7 = register1.database;
        model.Database database8 = model.Database.database;
        java.util.ArrayList<java.lang.String> strList9 = database8.getAllItems();
        model.Client client11 = database8.getClient("src/Magazine.csv");
        model.Register register12 = model.Register.makeRegister(database8);
        model.Register register13 = model.Register.makeRegister(database8);
        register1.database = database8;
        model.ItemManagement itemManagement15 = new model.ItemManagement();
        model.Item item17 = itemManagement15.selectAnItemFromDatabase((int) (short) 0);
        model.Database database18 = model.Database.database;
        model.Student student19 = new model.Student();
        int int20 = student19.ID;
        model.StudentOnlineResources studentOnlineResources21 = new model.StudentOnlineResources((model.Client) student19);
        student19.ID = '#';
        database18.addClient((model.Client) student19);
        itemManagement15.database = database18;
        model.Database database26 = itemManagement15.database;
        model.Register register27 = model.Register.makeRegister(database26);
        boolean boolean29 = database26.addItem("model.RegistrationFailedException: src/Book.csv");
        model.Client client31 = database26.getClient("src/CD.csv");
        database8.addClient(client31);
        org.junit.Assert.assertNotNull(register1);
        org.junit.Assert.assertNull(courseCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(client11);
        org.junit.Assert.assertNotNull(register12);
        org.junit.Assert.assertNotNull(register13);
        org.junit.Assert.assertNull(item17);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(register27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(client31);
    }

    @Test
    public void test1625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1625");
        model.Database database7 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database7;
        model.SearchVirtualItem searchVirtualItem9 = new model.SearchVirtualItem(database7);
        model.UniProvidedNewsletter uniProvidedNewsletter11 = searchVirtualItem9.getUniNewsletter("");
        model.VirtualBook virtualBook13 = searchVirtualItem9.getVirtualBook("src/VirtualBook.csv");
        model.VirtualItemSearchResult virtualItemSearchResult15 = searchVirtualItem9.searchVirtualItem("src/Newsletter.csv");
        model.UniProvidedNewsletter uniProvidedNewsletter16 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter16.title = "hi!";
        model.VirtualItemContent virtualItemContent20 = new model.VirtualItemContent("hi!");
        java.lang.String str21 = virtualItemContent20.link;
        uniProvidedNewsletter16.content = virtualItemContent20;
        virtualItemSearchResult15.uniNewsletter = uniProvidedNewsletter16;
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNull(uniProvidedNewsletter11);
        org.junit.Assert.assertNull(virtualBook13);
        org.junit.Assert.assertNotNull(virtualItemSearchResult15);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
    }

    @Test
    public void test1626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1626");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.Visitor visitor5 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList6 = visitor5.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources7 = new model.StudentOnlineResources((model.Client) visitor5);
        model.RentedItem[] rentedItemArray8 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList9 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList9, rentedItemArray8);
        model.BorrowingManager borrowingManager11 = new model.BorrowingManager(rentedItemList9);
        model.Visitor visitor12 = new model.Visitor();
        visitor12.email = "hi!";
        borrowingManager11.client = visitor12;
        studentOnlineResources7.client = visitor12;
        model.UniProvidedNewsletter uniProvidedNewsletter17 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter17.title = "";
        java.lang.String str20 = studentOnlineResources7.readVirtualItem((model.VirtualItem) uniProvidedNewsletter17);
        newsletterSubscriptionManager3.cancelSubscription((model.Newsletter) uniProvidedNewsletter17);
        model.Client client22 = newsletterSubscriptionManager3.client;
        model.BuySpecialItems buySpecialItems23 = new model.BuySpecialItems();
        model.Payment payment24 = null;
        buySpecialItems23.paymentAPI = payment24;
        model.PayMobileWallet payMobileWallet26 = new model.PayMobileWallet();
        buySpecialItems23.paymentAPI = payMobileWallet26;
        model.PayMobileWallet payMobileWallet28 = new model.PayMobileWallet();
        payMobileWallet28.amountPay = 100.0f;
        payMobileWallet28.amountPay = (byte) -1;
        buySpecialItems23.paymentAPI = payMobileWallet28;
        newsletterSubscriptionManager3.paymentAPI = payMobileWallet28;
        model.Payment payment35 = newsletterSubscriptionManager3.paymentAPI;
        model.Client client36 = newsletterSubscriptionManager3.client;
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertNull(virtualBookList6);
        org.junit.Assert.assertNotNull(rentedItemArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(client22);
        org.junit.Assert.assertNotNull(payment35);
        org.junit.Assert.assertNull(client36);
    }

    @Test
    public void test1627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1627");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager4 = new model.NewsletterSubscriptionManager(newsletterList1);
        java.util.ArrayList<model.Newsletter> newsletterList5 = newsletterSubscriptionManager4.newsletterSubscribed;
        model.NewsletterSubscriptionManager newsletterSubscriptionManager6 = new model.NewsletterSubscriptionManager(newsletterList5);
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(newsletterList5);
    }

    @Test
    public void test1628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1628");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        model.Visitor visitor4 = new model.Visitor();
        visitor4.email = "hi!";
        borrowingManager3.client = visitor4;
        float float8 = borrowingManager3.amountOwned;
        model.Client client9 = borrowingManager3.client;
        model.VirtualBook virtualBook11 = new model.VirtualBook("model.RegistrationFailedException: ");
        virtualBook11.ISBN = "model.LoginFailedException: hi!";
        java.time.LocalDate localDate14 = null;
        // The following exception was thrown during execution in test generation
        try {
            borrowingManager3.rentAnItem((model.Item) virtualBook11, localDate14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.toString()\" because \"date\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertNotNull(client9);
    }

    @Test
    public void test1629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1629");
        model.Database database7 = model.Database.createDatabase("src/BorrowedItems.csv", "src/Magazine.csv", "src/Magazine.csv", "model.RegistrationFailedException: src/Book.csv", "src/Client.csv", "model.RegistrationFailedException: src/Magazine.csv", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getBorrowedItemFilePath();
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/BorrowedItems.csv" + "'", str8, "src/BorrowedItems.csv");
    }

    @Test
    public void test1630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1630");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getBookFilePath();
        database7.itemPath = "hi!";
        model.SearchVirtualItem searchVirtualItem11 = new model.SearchVirtualItem(database7);
        model.UniProvidedNewsletter uniProvidedNewsletter13 = searchVirtualItem11.getUniNewsletter("src/Book.csv");
        model.UniProvidedNewsletter uniProvidedNewsletter15 = searchVirtualItem11.getUniNewsletter("");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/Book.csv" + "'", str8, "src/Book.csv");
        org.junit.Assert.assertNull(uniProvidedNewsletter13);
        org.junit.Assert.assertNull(uniProvidedNewsletter15);
    }

    @Test
    public void test1631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1631");
        model.Faculty faculty0 = new model.Faculty();
        java.lang.String str1 = faculty0.faculty;
        java.lang.String str2 = faculty0.faculty;
        model.Book book3 = null;
        model.CD cD4 = null;
        model.Magazine magazine5 = null;
        model.Book[] bookArray6 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList7 = new java.util.ArrayList<model.Book>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList7, bookArray6);
        model.CD[] cDArray9 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList10 = new java.util.ArrayList<model.CD>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList10, cDArray9);
        model.Magazine[] magazineArray12 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList13 = new java.util.ArrayList<model.Magazine>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList13, magazineArray12);
        model.ItemSearchResult itemSearchResult15 = new model.ItemSearchResult(book3, cD4, magazine5, (java.util.Collection<model.Book>) bookList7, (java.util.Collection<model.CD>) cDList10, (java.util.Collection<model.Magazine>) magazineList13);
        model.CD[] cDArray16 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList17 = new java.util.ArrayList<model.CD>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList17, cDArray16);
        itemSearchResult15.similarCD = cDList17;
        model.Book book20 = null;
        itemSearchResult15.book = book20;
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        itemSearchResult15.similarBooks = bookList26;
        faculty0.textbooks = bookList26;
        model.Faculty faculty37 = new model.Faculty();
        java.lang.String str38 = faculty37.faculty;
        java.lang.String str39 = faculty37.faculty;
        model.Book book40 = null;
        model.CD cD41 = null;
        model.Magazine magazine42 = null;
        model.Book[] bookArray43 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList44 = new java.util.ArrayList<model.Book>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList44, bookArray43);
        model.CD[] cDArray46 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList47 = new java.util.ArrayList<model.CD>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList47, cDArray46);
        model.Magazine[] magazineArray49 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList50 = new java.util.ArrayList<model.Magazine>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList50, magazineArray49);
        model.ItemSearchResult itemSearchResult52 = new model.ItemSearchResult(book40, cD41, magazine42, (java.util.Collection<model.Book>) bookList44, (java.util.Collection<model.CD>) cDList47, (java.util.Collection<model.Magazine>) magazineList50);
        model.CD[] cDArray53 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList54 = new java.util.ArrayList<model.CD>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList54, cDArray53);
        itemSearchResult52.similarCD = cDList54;
        model.Book book57 = null;
        itemSearchResult52.book = book57;
        model.Book book59 = null;
        model.CD cD60 = null;
        model.Magazine magazine61 = null;
        model.Book[] bookArray62 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList63 = new java.util.ArrayList<model.Book>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList63, bookArray62);
        model.CD[] cDArray65 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList66 = new java.util.ArrayList<model.CD>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList66, cDArray65);
        model.Magazine[] magazineArray68 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList69 = new java.util.ArrayList<model.Magazine>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList69, magazineArray68);
        model.ItemSearchResult itemSearchResult71 = new model.ItemSearchResult(book59, cD60, magazine61, (java.util.Collection<model.Book>) bookList63, (java.util.Collection<model.CD>) cDList66, (java.util.Collection<model.Magazine>) magazineList69);
        itemSearchResult52.similarBooks = bookList63;
        faculty37.textbooks = bookList63;
        faculty0.textbooks = bookList63;
        java.lang.String str75 = faculty0.email;
        java.lang.String str76 = faculty0.faculty;
        model.NewsletterSubscriptionManager newsletterSubscriptionManager77 = faculty0.newsletterManager;
        model.BorrowingManager borrowingManager78 = faculty0.borrowManager;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(bookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(cDArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(magazineArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cDArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(bookArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(cDArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(magazineArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(cDArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(bookArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(cDArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(magazineArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(newsletterSubscriptionManager77);
        org.junit.Assert.assertNull(borrowingManager78);
    }

    @Test
    public void test1632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1632");
        model.Book book0 = null;
        model.CD cD1 = null;
        model.Magazine magazine2 = null;
        model.Book[] bookArray3 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList4 = new java.util.ArrayList<model.Book>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList4, bookArray3);
        model.CD[] cDArray6 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList7 = new java.util.ArrayList<model.CD>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList7, cDArray6);
        model.Magazine[] magazineArray9 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList10 = new java.util.ArrayList<model.Magazine>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList10, magazineArray9);
        model.ItemSearchResult itemSearchResult12 = new model.ItemSearchResult(book0, cD1, magazine2, (java.util.Collection<model.Book>) bookList4, (java.util.Collection<model.CD>) cDList7, (java.util.Collection<model.Magazine>) magazineList10);
        model.Book book13 = null;
        model.CD cD14 = null;
        model.Magazine magazine15 = null;
        model.Book[] bookArray16 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList17 = new java.util.ArrayList<model.Book>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList17, bookArray16);
        model.CD[] cDArray19 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList20 = new java.util.ArrayList<model.CD>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList20, cDArray19);
        model.Magazine[] magazineArray22 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList23 = new java.util.ArrayList<model.Magazine>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList23, magazineArray22);
        model.ItemSearchResult itemSearchResult25 = new model.ItemSearchResult(book13, cD14, magazine15, (java.util.Collection<model.Book>) bookList17, (java.util.Collection<model.CD>) cDList20, (java.util.Collection<model.Magazine>) magazineList23);
        itemSearchResult12.similarCD = cDList20;
        model.Magazine magazine27 = itemSearchResult12.magazine;
        model.Database database35 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str36 = database35.getVirtualBookFilePath();
        model.Database.database = database35;
        java.lang.String str38 = database35.virtualItemFilePath;
        java.lang.String str39 = database35.getBookFilePath();
        database35.itemPath = "src/Magazine.csv";
        model.Login login42 = model.Login.makeLogin(database35);
        boolean boolean44 = database35.addItem("src/Client.csv");
        model.SearchItems searchItems45 = new model.SearchItems(database35);
        model.ItemSearchResult itemSearchResult47 = searchItems45.searchItem("hi!");
        model.ItemSearchResult itemSearchResult49 = searchItems45.searchItem("src/Newsletter.csv");
        model.ItemSearchResult itemSearchResult51 = searchItems45.searchItem("model.RegistrationFailedException: src/Magazine.csv");
        java.util.Collection<model.Book> bookCollection53 = searchItems45.getSimilarBooks("src/Book.csv");
        itemSearchResult12.similarBooks = bookCollection53;
        model.Book book55 = itemSearchResult12.book;
        org.junit.Assert.assertNotNull(bookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(cDArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(magazineArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(bookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(cDArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(magazineArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(magazine27);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "src/VirtualBook.csv" + "'", str36, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "src/Book.csv" + "'", str38, "src/Book.csv");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "src/Book.csv" + "'", str39, "src/Book.csv");
        org.junit.Assert.assertNotNull(login42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(itemSearchResult47);
        org.junit.Assert.assertNotNull(itemSearchResult49);
        org.junit.Assert.assertNotNull(itemSearchResult51);
        org.junit.Assert.assertNotNull(bookCollection53);
        org.junit.Assert.assertNull(book55);
    }

    @Test
    public void test1633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1633");
        model.RegistrationFailedException registrationFailedException1 = new model.RegistrationFailedException("model.RentingNotAllowedException: src/Magazine.csv");
    }

    @Test
    public void test1634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1634");
        model.Database database7 = model.Database.createDatabase("model.LoginFailedException: hi!", "model.RentingNotAllowedException: hi!", "src/VirtualBook.csv", "src/VirtualBook.csv", "hi!", "", "hi!");
        org.junit.Assert.assertNotNull(database7);
    }

    @Test
    public void test1635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1635");
        model.Database database0 = null;
        model.Register register1 = model.Register.makeRegister(database0);
        model.Faculty faculty2 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection3 = faculty2.courses;
        boolean boolean6 = register1.registerAsStaff((model.Staff) faculty2, "src/Book.csv", "src/Book.csv");
        model.Database database7 = model.Database.database;
        model.Student student8 = new model.Student();
        int int9 = student8.ID;
        model.StudentOnlineResources studentOnlineResources10 = new model.StudentOnlineResources((model.Client) student8);
        student8.ID = '#';
        database7.addClient((model.Client) student8);
        student8.email = "hi!";
        boolean boolean18 = register1.registerAsStaff((model.Staff) student8, "src/CD.csv", "src/Book.csv");
        model.Database database26 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str27 = database26.getVirtualBookFilePath();
        register1.database = database26;
        model.Database database29 = register1.database;
        java.lang.String str30 = database29.getBookFilePath();
        model.Database.database = database29;
        model.SearchVirtualItem searchVirtualItem32 = new model.SearchVirtualItem(database29);
        model.VirtualItemSearchResult virtualItemSearchResult34 = searchVirtualItem32.searchVirtualItem("src/Client.csv");
        model.UniProvidedNewsletter uniProvidedNewsletter36 = searchVirtualItem32.getUniNewsletter("model.RegistrationFailedException: model.RentingNotAllowedException: hi!");
        org.junit.Assert.assertNotNull(register1);
        org.junit.Assert.assertNull(courseCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "src/VirtualBook.csv" + "'", str27, "src/VirtualBook.csv");
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "src/Book.csv" + "'", str30, "src/Book.csv");
        org.junit.Assert.assertNotNull(virtualItemSearchResult34);
        org.junit.Assert.assertNull(uniProvidedNewsletter36);
    }

    @Test
    public void test1636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1636");
        model.ItemManagement itemManagement0 = new model.ItemManagement();
        model.Database database1 = null;
        itemManagement0.database = database1;
        model.Database database10 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        java.lang.String str11 = database10.itemPath;
        itemManagement0.database = database10;
        model.RentAndReturnSystem rentAndReturnSystem13 = new model.RentAndReturnSystem();
        model.Payment payment14 = rentAndReturnSystem13.paymentAPI;
        model.PayMobileWallet payMobileWallet15 = new model.PayMobileWallet();
        payMobileWallet15.amountPay = 100.0f;
        payMobileWallet15.pay((double) 100L);
        rentAndReturnSystem13.paymentAPI = payMobileWallet15;
        model.Magazine magazine22 = new model.Magazine("");
        java.util.Calendar calendar23 = magazine22.date;
        model.Database database24 = null;
        model.Register register25 = model.Register.makeRegister(database24);
        model.Faculty faculty26 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection27 = faculty26.courses;
        boolean boolean30 = register25.registerAsStaff((model.Staff) faculty26, "src/Book.csv", "src/Book.csv");
        model.Faculty faculty31 = new model.Faculty();
        faculty31.username = "hi!";
        java.lang.String str34 = faculty31.username;
        boolean boolean37 = register25.registerAsStaff((model.Staff) faculty31, "src/CD.csv", "hi!");
        boolean boolean38 = rentAndReturnSystem13.returnAnItem((model.Item) magazine22, (model.Client) faculty31);
        itemManagement0.disableAnItem((model.Item) magazine22);
        model.Student student40 = new model.Student();
        int int41 = student40.ID;
        model.StudentOnlineResources studentOnlineResources42 = new model.StudentOnlineResources((model.Client) student40);
        model.VirtualBook virtualBook44 = studentOnlineResources42.searchAccessibleBook("");
        java.lang.String str45 = virtualBook44.location;
        model.VirtualItemContent virtualItemContent46 = virtualBook44.content;
        boolean boolean47 = virtualBook44.isBookLost;
        java.lang.String str48 = virtualBook44.ISBN;
        itemManagement0.disableAnItem((model.Item) virtualBook44);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "src/Magazine.csv" + "'", str11, "src/Magazine.csv");
        org.junit.Assert.assertNull(payment14);
        org.junit.Assert.assertNull(calendar23);
        org.junit.Assert.assertNotNull(register25);
        org.junit.Assert.assertNull(courseCollection27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(virtualBook44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(virtualItemContent46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(str48);
    }

    @Test
    public void test1637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1637");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.Client client5 = newsletterSubscriptionManager3.client;
        model.Student student6 = new model.Student();
        int int7 = student6.ID;
        model.StudentOnlineResources studentOnlineResources8 = new model.StudentOnlineResources((model.Client) student6);
        model.VirtualBook virtualBook10 = studentOnlineResources8.searchAccessibleBook("");
        model.CD cD12 = new model.CD("");
        model.Magazine magazine13 = null;
        model.Book book14 = null;
        model.CD cD15 = null;
        model.Magazine magazine16 = null;
        model.Book[] bookArray17 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList18 = new java.util.ArrayList<model.Book>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList18, bookArray17);
        model.CD[] cDArray20 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList21 = new java.util.ArrayList<model.CD>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList21, cDArray20);
        model.Magazine[] magazineArray23 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList24 = new java.util.ArrayList<model.Magazine>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList24, magazineArray23);
        model.ItemSearchResult itemSearchResult26 = new model.ItemSearchResult(book14, cD15, magazine16, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList21, (java.util.Collection<model.Magazine>) magazineList24);
        model.Book book27 = null;
        model.CD cD28 = null;
        model.Magazine magazine29 = null;
        model.Book[] bookArray30 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList31 = new java.util.ArrayList<model.Book>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList31, bookArray30);
        model.CD[] cDArray33 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList34 = new java.util.ArrayList<model.CD>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList34, cDArray33);
        model.Magazine[] magazineArray36 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList37 = new java.util.ArrayList<model.Magazine>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList37, magazineArray36);
        model.ItemSearchResult itemSearchResult39 = new model.ItemSearchResult(book27, cD28, magazine29, (java.util.Collection<model.Book>) bookList31, (java.util.Collection<model.CD>) cDList34, (java.util.Collection<model.Magazine>) magazineList37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        itemSearchResult39.similarCD = cDList41;
        model.Book book44 = null;
        model.CD cD45 = null;
        model.Magazine magazine46 = null;
        model.Book[] bookArray47 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList48 = new java.util.ArrayList<model.Book>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList48, bookArray47);
        model.CD[] cDArray50 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList51 = new java.util.ArrayList<model.CD>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList51, cDArray50);
        model.Magazine[] magazineArray53 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList54 = new java.util.ArrayList<model.Magazine>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList54, magazineArray53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult(book44, cD45, magazine46, (java.util.Collection<model.Book>) bookList48, (java.util.Collection<model.CD>) cDList51, (java.util.Collection<model.Magazine>) magazineList54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult((model.Book) virtualBook10, cD12, magazine13, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList54);
        int int58 = virtualBook10.ID;
        int int59 = virtualBook10.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter60 = null;
        model.PaidNewsletter paidNewsletter61 = null;
        model.VirtualItemSearchResult virtualItemSearchResult62 = new model.VirtualItemSearchResult(virtualBook10, uniProvidedNewsletter60, paidNewsletter61);
        model.PaidNewsletter paidNewsletter63 = virtualItemSearchResult62.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter64 = new model.UniProvidedNewsletter();
        virtualItemSearchResult62.setUniNewsletter(uniProvidedNewsletter64);
        newsletterSubscriptionManager3.cancelSubscription((model.Newsletter) uniProvidedNewsletter64);
        java.util.ArrayList<model.Newsletter> newsletterList67 = newsletterSubscriptionManager3.newsletterSubscribed;
        model.Newsletter[] newsletterArray68 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList69 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList69, newsletterArray68);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager71 = new model.NewsletterSubscriptionManager(newsletterList69);
        model.Client client72 = newsletterSubscriptionManager71.client;
        model.Student student73 = new model.Student();
        int int74 = student73.ID;
        model.StudentOnlineResources studentOnlineResources75 = new model.StudentOnlineResources((model.Client) student73);
        student73.ID = '#';
        java.lang.String str78 = student73.email;
        newsletterSubscriptionManager71.client = student73;
        model.Newsletter[] newsletterArray80 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList81 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList81, newsletterArray80);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager83 = new model.NewsletterSubscriptionManager(newsletterList81);
        newsletterSubscriptionManager71.newsletterSubscribed = newsletterList81;
        java.util.ArrayList<model.Newsletter> newsletterList85 = newsletterSubscriptionManager71.newsletterSubscribed;
        newsletterSubscriptionManager3.newsletterSubscribed = newsletterList85;
        model.Client client87 = newsletterSubscriptionManager3.client;
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertNull(client5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(virtualBook10);
        org.junit.Assert.assertNotNull(bookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(cDArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(magazineArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(bookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(magazineArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(bookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(cDArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(magazineArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 20 + "'", int59 == 20);
        org.junit.Assert.assertNull(paidNewsletter63);
        org.junit.Assert.assertNotNull(newsletterList67);
        org.junit.Assert.assertNotNull(newsletterArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(client72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(newsletterArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(newsletterList85);
        org.junit.Assert.assertNull(client87);
    }

    @Test
    public void test1638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1638");
        model.LibraryManagementTeam libraryManagementTeam0 = new model.LibraryManagementTeam();
        int int1 = libraryManagementTeam0.ID;
        int int2 = libraryManagementTeam0.accessCode;
        libraryManagementTeam0.accessCode = '#';
        model.Student student5 = new model.Student();
        int int6 = student5.ID;
        model.StudentOnlineResources studentOnlineResources7 = new model.StudentOnlineResources((model.Client) student5);
        model.VirtualBook virtualBook9 = studentOnlineResources7.searchAccessibleBook("");
        model.CD cD11 = new model.CD("");
        model.Magazine magazine12 = null;
        model.Book book13 = null;
        model.CD cD14 = null;
        model.Magazine magazine15 = null;
        model.Book[] bookArray16 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList17 = new java.util.ArrayList<model.Book>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList17, bookArray16);
        model.CD[] cDArray19 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList20 = new java.util.ArrayList<model.CD>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList20, cDArray19);
        model.Magazine[] magazineArray22 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList23 = new java.util.ArrayList<model.Magazine>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList23, magazineArray22);
        model.ItemSearchResult itemSearchResult25 = new model.ItemSearchResult(book13, cD14, magazine15, (java.util.Collection<model.Book>) bookList17, (java.util.Collection<model.CD>) cDList20, (java.util.Collection<model.Magazine>) magazineList23);
        model.Book book26 = null;
        model.CD cD27 = null;
        model.Magazine magazine28 = null;
        model.Book[] bookArray29 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList30 = new java.util.ArrayList<model.Book>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList30, bookArray29);
        model.CD[] cDArray32 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList33 = new java.util.ArrayList<model.CD>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList33, cDArray32);
        model.Magazine[] magazineArray35 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList36 = new java.util.ArrayList<model.Magazine>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList36, magazineArray35);
        model.ItemSearchResult itemSearchResult38 = new model.ItemSearchResult(book26, cD27, magazine28, (java.util.Collection<model.Book>) bookList30, (java.util.Collection<model.CD>) cDList33, (java.util.Collection<model.Magazine>) magazineList36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        itemSearchResult38.similarCD = cDList40;
        model.Book book43 = null;
        model.CD cD44 = null;
        model.Magazine magazine45 = null;
        model.Book[] bookArray46 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList47 = new java.util.ArrayList<model.Book>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList47, bookArray46);
        model.CD[] cDArray49 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList50 = new java.util.ArrayList<model.CD>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList50, cDArray49);
        model.Magazine[] magazineArray52 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList53 = new java.util.ArrayList<model.Magazine>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList53, magazineArray52);
        model.ItemSearchResult itemSearchResult55 = new model.ItemSearchResult(book43, cD44, magazine45, (java.util.Collection<model.Book>) bookList47, (java.util.Collection<model.CD>) cDList50, (java.util.Collection<model.Magazine>) magazineList53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult((model.Book) virtualBook9, cD11, magazine12, (java.util.Collection<model.Book>) bookList17, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList53);
        int int57 = virtualBook9.ID;
        model.Database database65 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.util.ArrayList<java.lang.String> strList66 = database65.getAllItems();
        boolean boolean67 = virtualBook9.equals((java.lang.Object) database65);
        int int68 = virtualBook9.edition;
        libraryManagementTeam0.addAnItem((model.Item) virtualBook9);
        model.ItemManagement itemManagement70 = libraryManagementTeam0.itemManagement;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(virtualBook9);
        org.junit.Assert.assertNotNull(bookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(cDArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(magazineArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(bookArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(cDArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(magazineArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(bookArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(cDArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(magazineArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(database65);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNull(itemManagement70);
    }

    @Test
    public void test1639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1639");
        model.Course course0 = new model.Course();
        java.lang.String str1 = course0.subject;
        course0.code = "";
        int int4 = course0.year;
        course0.subject = "src/CD.csv";
        java.lang.String str7 = course0.code;
        course0.subject = "src/CD.csv";
        course0.code = "";
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test1640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1640");
        model.Book book0 = null;
        model.CD cD1 = null;
        model.Magazine magazine2 = null;
        model.Book[] bookArray3 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList4 = new java.util.ArrayList<model.Book>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList4, bookArray3);
        model.CD[] cDArray6 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList7 = new java.util.ArrayList<model.CD>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList7, cDArray6);
        model.Magazine[] magazineArray9 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList10 = new java.util.ArrayList<model.Magazine>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList10, magazineArray9);
        model.ItemSearchResult itemSearchResult12 = new model.ItemSearchResult(book0, cD1, magazine2, (java.util.Collection<model.Book>) bookList4, (java.util.Collection<model.CD>) cDList7, (java.util.Collection<model.Magazine>) magazineList10);
        model.Book book13 = itemSearchResult12.book;
        model.CD cD15 = new model.CD("");
        boolean boolean16 = cD15.canBePurchased;
        itemSearchResult12.cd = cD15;
        model.Student student18 = new model.Student();
        int int19 = student18.ID;
        model.StudentOnlineResources studentOnlineResources20 = new model.StudentOnlineResources((model.Client) student18);
        model.StudentOnlineResources studentOnlineResources21 = new model.StudentOnlineResources((model.Client) student18);
        model.VirtualBook virtualBook23 = studentOnlineResources21.searchAccessibleBook("src/Book.csv");
        int int24 = virtualBook23.ID;
        model.Newsletter[] newsletterArray25 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList26 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList26, newsletterArray25);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager28 = new model.NewsletterSubscriptionManager(newsletterList26);
        model.Client client29 = newsletterSubscriptionManager28.client;
        model.Visitor visitor30 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList31 = visitor30.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources32 = new model.StudentOnlineResources((model.Client) visitor30);
        model.RentedItem[] rentedItemArray33 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList34 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList34, rentedItemArray33);
        model.BorrowingManager borrowingManager36 = new model.BorrowingManager(rentedItemList34);
        model.Visitor visitor37 = new model.Visitor();
        visitor37.email = "hi!";
        borrowingManager36.client = visitor37;
        studentOnlineResources32.client = visitor37;
        model.UniProvidedNewsletter uniProvidedNewsletter42 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter42.title = "";
        java.lang.String str45 = studentOnlineResources32.readVirtualItem((model.VirtualItem) uniProvidedNewsletter42);
        newsletterSubscriptionManager28.cancelSubscription((model.Newsletter) uniProvidedNewsletter42);
        uniProvidedNewsletter42.cost = 0;
        model.VirtualItemContent virtualItemContent50 = new model.VirtualItemContent("hi!");
        java.lang.String str51 = virtualItemContent50.link;
        java.lang.String str53 = virtualItemContent50.getContent("");
        java.lang.String str55 = virtualItemContent50.getContent("model.RegistrationFailedException: ");
        uniProvidedNewsletter42.content = virtualItemContent50;
        model.UniProvidedNewsletter uniProvidedNewsletter57 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter57.title = "hi!";
        model.VirtualItemContent virtualItemContent61 = new model.VirtualItemContent("hi!");
        java.lang.String str62 = virtualItemContent61.link;
        uniProvidedNewsletter57.content = virtualItemContent61;
        uniProvidedNewsletter42.content = virtualItemContent61;
        virtualBook23.content = virtualItemContent61;
        itemSearchResult12.book = virtualBook23;
        model.ItemManagement itemManagement67 = new model.ItemManagement();
        model.Database database68 = null;
        itemManagement67.database = database68;
        model.Student student70 = new model.Student();
        int int71 = student70.ID;
        model.StudentOnlineResources studentOnlineResources72 = new model.StudentOnlineResources((model.Client) student70);
        model.VirtualBook virtualBook74 = studentOnlineResources72.searchAccessibleBook("");
        itemManagement67.disableAnItem((model.Item) virtualBook74);
        model.Item item77 = itemManagement67.selectAnItemFromDatabase((int) '#');
        model.ItemManagement itemManagement78 = new model.ItemManagement();
        model.Database database79 = null;
        itemManagement78.database = database79;
        model.Student student81 = new model.Student();
        int int82 = student81.ID;
        model.StudentOnlineResources studentOnlineResources83 = new model.StudentOnlineResources((model.Client) student81);
        model.VirtualBook virtualBook85 = studentOnlineResources83.searchAccessibleBook("");
        itemManagement78.disableAnItem((model.Item) virtualBook85);
        itemManagement67.disableAnItem((model.Item) virtualBook85);
        model.Magazine magazine89 = new model.Magazine("");
        java.lang.String str90 = magazine89.publisher;
        itemManagement67.enableAnItem((model.Item) magazine89);
        itemSearchResult12.magazine = magazine89;
        org.junit.Assert.assertNotNull(bookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(cDArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(magazineArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(book13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(virtualBook23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(newsletterArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(client29);
        org.junit.Assert.assertNull(virtualBookList31);
        org.junit.Assert.assertNotNull(rentedItemArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(virtualBook74);
        org.junit.Assert.assertNull(item77);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(virtualBook85);
        org.junit.Assert.assertNull(str90);
    }

    @Test
    public void test1641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1641");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.Visitor visitor5 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList6 = visitor5.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources7 = new model.StudentOnlineResources((model.Client) visitor5);
        model.RentedItem[] rentedItemArray8 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList9 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList9, rentedItemArray8);
        model.BorrowingManager borrowingManager11 = new model.BorrowingManager(rentedItemList9);
        model.Visitor visitor12 = new model.Visitor();
        visitor12.email = "hi!";
        borrowingManager11.client = visitor12;
        studentOnlineResources7.client = visitor12;
        model.UniProvidedNewsletter uniProvidedNewsletter17 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter17.title = "";
        java.lang.String str20 = studentOnlineResources7.readVirtualItem((model.VirtualItem) uniProvidedNewsletter17);
        newsletterSubscriptionManager3.cancelSubscription((model.Newsletter) uniProvidedNewsletter17);
        uniProvidedNewsletter17.cost = 0;
        float float24 = uniProvidedNewsletter17.cost;
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertNull(virtualBookList6);
        org.junit.Assert.assertNotNull(rentedItemArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 0.0f + "'", float24 == 0.0f);
    }

    @Test
    public void test1642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1642");
        model.Database database7 = model.Database.createDatabase("", "src/CD.csv", "model.RegistrationFailedException: src/Magazine.csv", "model.RegistrationFailedException: src/Magazine.csv", "model.RegistrationFailedException: ", "src/Magazine.csv", "hi!");
        int int8 = database7.getRandomID();
        model.Visitor visitor9 = new model.Visitor();
        model.VirtualBook[] virtualBookArray10 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList11 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList11, virtualBookArray10);
        visitor9.virtualBooksAvailable = virtualBookList11;
        visitor9.username = "";
        model.Visitor visitor16 = new model.Visitor();
        model.VirtualBook[] virtualBookArray17 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList18 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList18, virtualBookArray17);
        visitor16.virtualBooksAvailable = virtualBookList18;
        visitor9.virtualBooksAvailable = virtualBookList18;
        database7.addClient((model.Client) visitor9);
        java.lang.String str23 = database7.getBookFilePath();
        org.junit.Assert.assertNotNull(database7);
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 9389975 + "'", int8 == 9389975);
        org.junit.Assert.assertNotNull(virtualBookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(virtualBookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "src/Book.csv" + "'", str23, "src/Book.csv");
    }

    @Test
    public void test1643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1643");
        model.Database database0 = null;
        model.Register register1 = model.Register.makeRegister(database0);
        model.Database database2 = null;
        register1.database = database2;
        model.Database database4 = register1.database;
        model.Faculty faculty5 = new model.Faculty();
        model.BorrowingManager borrowingManager6 = faculty5.borrowManager;
        faculty5.faculty = "model.RegistrationFailedException: src/Magazine.csv";
        boolean boolean11 = register1.registerAsStaff((model.Staff) faculty5, "src/Newsletter.csv", "src/BorrowedItems.csv");
        org.junit.Assert.assertNotNull(register1);
        org.junit.Assert.assertNull(database4);
        org.junit.Assert.assertNull(borrowingManager6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test1644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1644");
        model.LibraryManagementTeam libraryManagementTeam0 = new model.LibraryManagementTeam();
        int int1 = libraryManagementTeam0.ID;
        int int2 = libraryManagementTeam0.accessCode;
        libraryManagementTeam0.accessCode = 'a';
        libraryManagementTeam0.ID = (byte) 1;
        model.ItemManagement itemManagement7 = libraryManagementTeam0.itemManagement;
        libraryManagementTeam0.ID = 10;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(itemManagement7);
    }

    @Test
    public void test1645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1645");
        model.Book book1 = new model.Book("model.RegistrationFailedException: ");
        int int2 = book1.copiesAvailable;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 20 + "'", int2 == 20);
    }

    @Test
    public void test1646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1646");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        virtualBook4.ID = 20;
        virtualBook4.ID = (short) 100;
        virtualBook4.publisher = "model.RegistrationFailedException: src/Book.csv";
        java.lang.String str11 = virtualBook4.title;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test1647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1647");
        model.Database database7 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database7;
        model.SearchVirtualItem searchVirtualItem9 = new model.SearchVirtualItem(database7);
        model.VirtualItemSearchResult virtualItemSearchResult11 = searchVirtualItem9.searchVirtualItem("src/VirtualBook.csv");
        model.VirtualItemSearchResult virtualItemSearchResult13 = searchVirtualItem9.searchVirtualItem("src/CD.csv");
        model.VirtualItemSearchResult virtualItemSearchResult15 = searchVirtualItem9.searchVirtualItem("model.RegistrationFailedException: ");
        model.VirtualItemSearchResult virtualItemSearchResult17 = searchVirtualItem9.searchVirtualItem("src/BorrowedItems.csv");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(virtualItemSearchResult11);
        org.junit.Assert.assertNotNull(virtualItemSearchResult13);
        org.junit.Assert.assertNotNull(virtualItemSearchResult15);
        org.junit.Assert.assertNotNull(virtualItemSearchResult17);
    }

    @Test
    public void test1648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1648");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: src/Magazine.csv", "src/Newsletter.csv", "model.RegistrationFailedException: ", "model.RentingNotAllowedException: ", "src/Newsletter.csv", "src/Newsletter.csv", "model.LoginFailedException: hi!");
        org.junit.Assert.assertNotNull(database7);
    }

    @Test
    public void test1649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1649");
        model.Book book0 = null;
        model.CD cD2 = new model.CD("");
        model.Magazine magazine3 = null;
        java.util.Collection<model.Book> bookCollection4 = null;
        model.Book book5 = null;
        model.CD cD6 = null;
        model.Magazine magazine7 = null;
        model.Book[] bookArray8 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList9 = new java.util.ArrayList<model.Book>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList9, bookArray8);
        model.CD[] cDArray11 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList12 = new java.util.ArrayList<model.CD>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList12, cDArray11);
        model.Magazine[] magazineArray14 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList15 = new java.util.ArrayList<model.Magazine>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList15, magazineArray14);
        model.ItemSearchResult itemSearchResult17 = new model.ItemSearchResult(book5, cD6, magazine7, (java.util.Collection<model.Book>) bookList9, (java.util.Collection<model.CD>) cDList12, (java.util.Collection<model.Magazine>) magazineList15);
        model.Book book18 = null;
        model.CD cD19 = null;
        model.Magazine magazine20 = null;
        model.Book[] bookArray21 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList22 = new java.util.ArrayList<model.Book>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList22, bookArray21);
        model.CD[] cDArray24 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList25 = new java.util.ArrayList<model.CD>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList25, cDArray24);
        model.Magazine[] magazineArray27 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList28 = new java.util.ArrayList<model.Magazine>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList28, magazineArray27);
        model.ItemSearchResult itemSearchResult30 = new model.ItemSearchResult(book18, cD19, magazine20, (java.util.Collection<model.Book>) bookList22, (java.util.Collection<model.CD>) cDList25, (java.util.Collection<model.Magazine>) magazineList28);
        itemSearchResult17.similarCD = cDList25;
        model.Book book32 = null;
        model.CD cD33 = null;
        model.Magazine magazine34 = null;
        model.Book[] bookArray35 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList36 = new java.util.ArrayList<model.Book>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList36, bookArray35);
        model.CD[] cDArray38 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList39 = new java.util.ArrayList<model.CD>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList39, cDArray38);
        model.Magazine[] magazineArray41 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList42 = new java.util.ArrayList<model.Magazine>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList42, magazineArray41);
        model.ItemSearchResult itemSearchResult44 = new model.ItemSearchResult(book32, cD33, magazine34, (java.util.Collection<model.Book>) bookList36, (java.util.Collection<model.CD>) cDList39, (java.util.Collection<model.Magazine>) magazineList42);
        model.ItemSearchResult itemSearchResult45 = new model.ItemSearchResult(book0, cD2, magazine3, bookCollection4, (java.util.Collection<model.CD>) cDList25, (java.util.Collection<model.Magazine>) magazineList42);
        model.Book book46 = null;
        itemSearchResult45.book = book46;
        java.util.Collection<model.Book> bookCollection48 = itemSearchResult45.similarBooks;
        model.Magazine magazine50 = new model.Magazine("");
        itemSearchResult45.magazine = magazine50;
        model.Book book52 = itemSearchResult45.book;
        model.CD cD53 = itemSearchResult45.cd;
        org.junit.Assert.assertNotNull(bookArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(cDArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(magazineArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(bookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(cDArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(magazineArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(bookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(cDArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(magazineArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(bookCollection48);
        org.junit.Assert.assertNull(book52);
        org.junit.Assert.assertNotNull(cD53);
    }

    @Test
    public void test1650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1650");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter54 = null;
        model.PaidNewsletter paidNewsletter55 = null;
        model.VirtualItemSearchResult virtualItemSearchResult56 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter54, paidNewsletter55);
        model.UniProvidedNewsletter uniProvidedNewsletter57 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter57.title = "hi!";
        uniProvidedNewsletter57.title = "";
        virtualItemSearchResult56.uniNewsletter = uniProvidedNewsletter57;
        model.UniProvidedNewsletter uniProvidedNewsletter63 = virtualItemSearchResult56.uniNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter64 = virtualItemSearchResult56.getUniNewsletter();
        model.VirtualBook virtualBook65 = virtualItemSearchResult56.virtualBook;
        model.PaidNewsletter paidNewsletter66 = virtualItemSearchResult56.paidNewsletter;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertNotNull(uniProvidedNewsletter63);
        org.junit.Assert.assertNotNull(uniProvidedNewsletter64);
        org.junit.Assert.assertNotNull(virtualBook65);
        org.junit.Assert.assertNull(paidNewsletter66);
    }

    @Test
    public void test1651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1651");
        model.Course course0 = new model.Course();
        java.lang.String str1 = course0.subject;
        course0.code = "";
        int int4 = course0.year;
        course0.code = "src/Book.csv";
        course0.code = "src/CD.csv";
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test1652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1652");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getBookFilePath();
        database7.itemPath = "hi!";
        model.Database.database = database7;
        java.lang.String str12 = database7.getNewspaperFilePath();
        model.Login login13 = model.Login.makeLogin(database7);
        // The following exception was thrown during execution in test generation
        try {
            model.Client client16 = login13.login("src/Client.csv", "model.RegistrationFailedException: src/Book.csv");
            org.junit.Assert.fail("Expected exception of type model.LoginFailedException; message: Login Failed.");
        } catch (model.LoginFailedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/Book.csv" + "'", str8, "src/Book.csv");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "src/Newsletter.csv" + "'", str12, "src/Newsletter.csv");
        org.junit.Assert.assertNotNull(login13);
    }

    @Test
    public void test1653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1653");
        model.Request request0 = new model.Request();
        java.lang.String str1 = request0.type;
        model.ValidateRegistration validateRegistration2 = new model.ValidateRegistration();
        model.Student student3 = new model.Student();
        student3.viewMyOnlineResource();
        boolean boolean5 = validateRegistration2.validateStaffRegistration((model.Staff) student3);
        request0.requestee = student3;
        request0.title = "";
        request0.type = "model.RentingNotAllowedException: src/Magazine.csv";
        java.lang.String str11 = request0.title;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test1654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1654");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.RequestForum requestForum1 = model.RequestForum.createRequestForum();
        model.Request request2 = new model.Request();
        request2.title = "";
        java.lang.String str5 = requestForum1.makeARequest(request2);
        int int6 = requestForum0.assessBooksPriority(request2);
        model.LibraryManagementTeam libraryManagementTeam7 = new model.LibraryManagementTeam();
        int int8 = libraryManagementTeam7.ID;
        int int9 = libraryManagementTeam7.accessCode;
        model.Item item10 = null;
        libraryManagementTeam7.addAnItem(item10);
        java.util.ArrayList<model.Item> itemList12 = libraryManagementTeam7.items;
        requestForum0.managementTeam = libraryManagementTeam7;
        model.LibraryManagementTeam libraryManagementTeam14 = requestForum0.managementTeam;
        model.Student student15 = new model.Student();
        int int16 = student15.ID;
        model.StudentOnlineResources studentOnlineResources17 = new model.StudentOnlineResources((model.Client) student15);
        model.VirtualBook virtualBook19 = studentOnlineResources17.searchAccessibleBook("");
        model.CD cD21 = new model.CD("");
        model.Magazine magazine22 = null;
        model.Book book23 = null;
        model.CD cD24 = null;
        model.Magazine magazine25 = null;
        model.Book[] bookArray26 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList27 = new java.util.ArrayList<model.Book>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList27, bookArray26);
        model.CD[] cDArray29 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList30 = new java.util.ArrayList<model.CD>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList30, cDArray29);
        model.Magazine[] magazineArray32 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList33 = new java.util.ArrayList<model.Magazine>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList33, magazineArray32);
        model.ItemSearchResult itemSearchResult35 = new model.ItemSearchResult(book23, cD24, magazine25, (java.util.Collection<model.Book>) bookList27, (java.util.Collection<model.CD>) cDList30, (java.util.Collection<model.Magazine>) magazineList33);
        model.Book book36 = null;
        model.CD cD37 = null;
        model.Magazine magazine38 = null;
        model.Book[] bookArray39 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList40 = new java.util.ArrayList<model.Book>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList40, bookArray39);
        model.CD[] cDArray42 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList43 = new java.util.ArrayList<model.CD>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList43, cDArray42);
        model.Magazine[] magazineArray45 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList46 = new java.util.ArrayList<model.Magazine>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList46, magazineArray45);
        model.ItemSearchResult itemSearchResult48 = new model.ItemSearchResult(book36, cD37, magazine38, (java.util.Collection<model.Book>) bookList40, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList46);
        model.CD[] cDArray49 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList50 = new java.util.ArrayList<model.CD>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList50, cDArray49);
        itemSearchResult48.similarCD = cDList50;
        model.Book book53 = null;
        model.CD cD54 = null;
        model.Magazine magazine55 = null;
        model.Book[] bookArray56 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList57 = new java.util.ArrayList<model.Book>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList57, bookArray56);
        model.CD[] cDArray59 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList60 = new java.util.ArrayList<model.CD>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList60, cDArray59);
        model.Magazine[] magazineArray62 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList63 = new java.util.ArrayList<model.Magazine>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList63, magazineArray62);
        model.ItemSearchResult itemSearchResult65 = new model.ItemSearchResult(book53, cD54, magazine55, (java.util.Collection<model.Book>) bookList57, (java.util.Collection<model.CD>) cDList60, (java.util.Collection<model.Magazine>) magazineList63);
        model.ItemSearchResult itemSearchResult66 = new model.ItemSearchResult((model.Book) virtualBook19, cD21, magazine22, (java.util.Collection<model.Book>) bookList27, (java.util.Collection<model.CD>) cDList50, (java.util.Collection<model.Magazine>) magazineList63);
        virtualBook19.ID = (short) 10;
        boolean boolean69 = virtualBook19.isBookLost;
        virtualBook19.showContent();
        libraryManagementTeam14.disableAnItem((model.Item) virtualBook19);
        model.Item item72 = null;
        libraryManagementTeam14.addAnItem(item72);
        model.Item item75 = libraryManagementTeam14.selectAnItemFromDatabase(5252410);
        model.LibraryManagementTeam libraryManagementTeam76 = new model.LibraryManagementTeam();
        libraryManagementTeam76.accessCode = (short) 10;
        model.Magazine magazine80 = new model.Magazine("hi!");
        magazine80.location = "model.RegistrationFailedException: ";
        java.lang.String str83 = magazine80.location;
        libraryManagementTeam76.disableAnItem((model.Item) magazine80);
        magazine80.title = "model.RegistrationFailedException: ";
        libraryManagementTeam14.disableAnItem((model.Item) magazine80);
        libraryManagementTeam14.ID = 7680716;
        libraryManagementTeam14.ID = '#';
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertNotNull(requestForum1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(itemList12);
        org.junit.Assert.assertNotNull(libraryManagementTeam14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(virtualBook19);
        org.junit.Assert.assertNotNull(bookArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(cDArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(magazineArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(bookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cDArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(magazineArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(cDArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(bookArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(cDArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(magazineArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(item75);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "model.RegistrationFailedException: " + "'", str83, "model.RegistrationFailedException: ");
    }

    @Test
    public void test1655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1655");
        model.Visitor visitor0 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList1 = visitor0.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) visitor0);
        java.lang.String str3 = visitor0.email;
        java.lang.String str4 = visitor0.email;
        org.junit.Assert.assertNull(virtualBookList1);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test1656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1656");
        java.lang.String[] strArray7 = new java.lang.String[] { "src/Client.csv", "src/Book.csv", "src/CD.csv", "src/Book.csv", "src/Newsletter.csv", "model.RegistrationFailedException: src/Magazine.csv" };
        model.Item item8 = model.ItemFactory.makeItem("hi!", strArray7);
        // The following exception was thrown during execution in test generation
        try {
            model.VirtualItem virtualItem10 = model.VirtualItemFactory.makeVirtualItem(strArray7, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"src/Client.csv\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNull(item8);
    }

    @Test
    public void test1657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1657");
        model.RentingNotAllowedException rentingNotAllowedException1 = new model.RentingNotAllowedException("src/Magazine.csv");
        rentingNotAllowedException1.message = "model.RegistrationFailedException: model.RentingNotAllowedException: hi!";
    }

    @Test
    public void test1658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1658");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.Database.database = database7;
        java.lang.String str10 = database7.virtualItemFilePath;
        java.lang.String str11 = database7.getBookFilePath();
        database7.itemPath = "src/Magazine.csv";
        model.Login login14 = model.Login.makeLogin(database7);
        boolean boolean16 = database7.addItem("src/Client.csv");
        model.SearchItems searchItems17 = new model.SearchItems(database7);
        model.CD cD19 = searchItems17.getCD("src/Client.csv");
        model.Book book21 = searchItems17.getBook("src/CD.csv");
        java.util.Collection<model.Book> bookCollection23 = searchItems17.getSimilarBooks("hi!");
        model.Book book25 = searchItems17.getBook("src/Newsletter.csv");
        model.ItemSearchResult itemSearchResult27 = searchItems17.searchItem("src/CD.csv");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "src/Book.csv" + "'", str10, "src/Book.csv");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "src/Book.csv" + "'", str11, "src/Book.csv");
        org.junit.Assert.assertNotNull(login14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(cD19);
        org.junit.Assert.assertNull(book21);
        org.junit.Assert.assertNotNull(bookCollection23);
        org.junit.Assert.assertNull(book25);
        org.junit.Assert.assertNotNull(itemSearchResult27);
    }

    @Test
    public void test1659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1659");
        model.SearchBorrowedItem searchBorrowedItem0 = model.SearchBorrowedItem.makeSearchBorrowedItem();
        model.Visitor visitor1 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList2 = visitor1.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources3 = new model.StudentOnlineResources((model.Client) visitor1);
        model.RentedItem[] rentedItemArray4 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList5 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList5, rentedItemArray4);
        model.BorrowingManager borrowingManager7 = new model.BorrowingManager(rentedItemList5);
        model.Visitor visitor8 = new model.Visitor();
        visitor8.email = "hi!";
        borrowingManager7.client = visitor8;
        studentOnlineResources3.client = visitor8;
        model.Student student13 = new model.Student();
        int int14 = student13.ID;
        model.StudentOnlineResources studentOnlineResources15 = new model.StudentOnlineResources((model.Client) student13);
        model.VirtualBook virtualBook17 = studentOnlineResources15.searchAccessibleBook("");
        model.CD cD19 = new model.CD("");
        model.Magazine magazine20 = null;
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.Book book34 = null;
        model.CD cD35 = null;
        model.Magazine magazine36 = null;
        model.Book[] bookArray37 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList38 = new java.util.ArrayList<model.Book>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList38, bookArray37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        model.Magazine[] magazineArray43 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList44 = new java.util.ArrayList<model.Magazine>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList44, magazineArray43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book34, cD35, magazine36, (java.util.Collection<model.Book>) bookList38, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList44);
        model.CD[] cDArray47 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList48 = new java.util.ArrayList<model.CD>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList48, cDArray47);
        itemSearchResult46.similarCD = cDList48;
        model.Book book51 = null;
        model.CD cD52 = null;
        model.Magazine magazine53 = null;
        model.Book[] bookArray54 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList55 = new java.util.ArrayList<model.Book>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList55, bookArray54);
        model.CD[] cDArray57 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList58 = new java.util.ArrayList<model.CD>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList58, cDArray57);
        model.Magazine[] magazineArray60 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList61 = new java.util.ArrayList<model.Magazine>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList61, magazineArray60);
        model.ItemSearchResult itemSearchResult63 = new model.ItemSearchResult(book51, cD52, magazine53, (java.util.Collection<model.Book>) bookList55, (java.util.Collection<model.CD>) cDList58, (java.util.Collection<model.Magazine>) magazineList61);
        model.ItemSearchResult itemSearchResult64 = new model.ItemSearchResult((model.Book) virtualBook17, cD19, magazine20, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList48, (java.util.Collection<model.Magazine>) magazineList61);
        java.lang.String str65 = studentOnlineResources3.readVirtualItem((model.VirtualItem) virtualBook17);
        model.Visitor visitor67 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList68 = visitor67.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources69 = new model.StudentOnlineResources((model.Client) visitor67);
        searchBorrowedItem0.addPhyscialItem((model.Item) virtualBook17, "", (model.Client) visitor67);
        model.SearchBorrowedItem.object = searchBorrowedItem0;
        java.util.ArrayList<model.RentedItem> rentedItemList74 = searchBorrowedItem0.searchBorrowedItem("src/VirtualBook.csv", "src/BorrowedItems.csv");
        searchBorrowedItem0.removeItem("src/Newsletter.csv", "src/Magazine.csv");
        model.UniProvidedNewsletter uniProvidedNewsletter78 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter78.title = "";
        java.lang.String str81 = uniProvidedNewsletter78.title;
        uniProvidedNewsletter78.showContent();
        uniProvidedNewsletter78.showContent();
        model.Faculty faculty85 = new model.Faculty();
        java.lang.String str86 = faculty85.faculty;
        searchBorrowedItem0.addVirtualItem((model.VirtualItem) uniProvidedNewsletter78, "src/Client.csv", (model.Client) faculty85);
        java.util.ArrayList<model.RentedItem> rentedItemList90 = searchBorrowedItem0.searchBorrowedItem("src/Magazine.csv", "src/VirtualBook.csv");
        org.junit.Assert.assertNotNull(searchBorrowedItem0);
        org.junit.Assert.assertNull(virtualBookList2);
        org.junit.Assert.assertNotNull(rentedItemArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(virtualBook17);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(bookArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(magazineArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(cDArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(bookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(cDArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(magazineArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(virtualBookList68);
        org.junit.Assert.assertNotNull(rentedItemList74);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertNotNull(rentedItemList90);
    }

    @Test
    public void test1660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1660");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.Visitor visitor5 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList6 = visitor5.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources7 = new model.StudentOnlineResources((model.Client) visitor5);
        model.RentedItem[] rentedItemArray8 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList9 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList9, rentedItemArray8);
        model.BorrowingManager borrowingManager11 = new model.BorrowingManager(rentedItemList9);
        model.Visitor visitor12 = new model.Visitor();
        visitor12.email = "hi!";
        borrowingManager11.client = visitor12;
        studentOnlineResources7.client = visitor12;
        model.UniProvidedNewsletter uniProvidedNewsletter17 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter17.title = "";
        java.lang.String str20 = studentOnlineResources7.readVirtualItem((model.VirtualItem) uniProvidedNewsletter17);
        newsletterSubscriptionManager3.cancelSubscription((model.Newsletter) uniProvidedNewsletter17);
        java.util.ArrayList<model.Newsletter> newsletterList22 = newsletterSubscriptionManager3.newsletterSubscribed;
        model.Student student23 = new model.Student();
        int int24 = student23.ID;
        model.StudentOnlineResources studentOnlineResources25 = new model.StudentOnlineResources((model.Client) student23);
        model.VirtualBook virtualBook27 = studentOnlineResources25.searchAccessibleBook("");
        model.CD cD29 = new model.CD("");
        model.Magazine magazine30 = null;
        model.Book book31 = null;
        model.CD cD32 = null;
        model.Magazine magazine33 = null;
        model.Book[] bookArray34 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList35 = new java.util.ArrayList<model.Book>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList35, bookArray34);
        model.CD[] cDArray37 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList38 = new java.util.ArrayList<model.CD>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList38, cDArray37);
        model.Magazine[] magazineArray40 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList41 = new java.util.ArrayList<model.Magazine>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList41, magazineArray40);
        model.ItemSearchResult itemSearchResult43 = new model.ItemSearchResult(book31, cD32, magazine33, (java.util.Collection<model.Book>) bookList35, (java.util.Collection<model.CD>) cDList38, (java.util.Collection<model.Magazine>) magazineList41);
        model.Book book44 = null;
        model.CD cD45 = null;
        model.Magazine magazine46 = null;
        model.Book[] bookArray47 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList48 = new java.util.ArrayList<model.Book>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList48, bookArray47);
        model.CD[] cDArray50 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList51 = new java.util.ArrayList<model.CD>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList51, cDArray50);
        model.Magazine[] magazineArray53 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList54 = new java.util.ArrayList<model.Magazine>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList54, magazineArray53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult(book44, cD45, magazine46, (java.util.Collection<model.Book>) bookList48, (java.util.Collection<model.CD>) cDList51, (java.util.Collection<model.Magazine>) magazineList54);
        model.CD[] cDArray57 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList58 = new java.util.ArrayList<model.CD>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList58, cDArray57);
        itemSearchResult56.similarCD = cDList58;
        model.Book book61 = null;
        model.CD cD62 = null;
        model.Magazine magazine63 = null;
        model.Book[] bookArray64 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList65 = new java.util.ArrayList<model.Book>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList65, bookArray64);
        model.CD[] cDArray67 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList68 = new java.util.ArrayList<model.CD>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList68, cDArray67);
        model.Magazine[] magazineArray70 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList71 = new java.util.ArrayList<model.Magazine>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList71, magazineArray70);
        model.ItemSearchResult itemSearchResult73 = new model.ItemSearchResult(book61, cD62, magazine63, (java.util.Collection<model.Book>) bookList65, (java.util.Collection<model.CD>) cDList68, (java.util.Collection<model.Magazine>) magazineList71);
        model.ItemSearchResult itemSearchResult74 = new model.ItemSearchResult((model.Book) virtualBook27, cD29, magazine30, (java.util.Collection<model.Book>) bookList35, (java.util.Collection<model.CD>) cDList58, (java.util.Collection<model.Magazine>) magazineList71);
        int int75 = virtualBook27.ID;
        int int76 = virtualBook27.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter77 = null;
        model.PaidNewsletter paidNewsletter78 = null;
        model.VirtualItemSearchResult virtualItemSearchResult79 = new model.VirtualItemSearchResult(virtualBook27, uniProvidedNewsletter77, paidNewsletter78);
        model.PaidNewsletter paidNewsletter80 = virtualItemSearchResult79.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter81 = new model.UniProvidedNewsletter();
        virtualItemSearchResult79.setUniNewsletter(uniProvidedNewsletter81);
        model.UniProvidedNewsletter uniProvidedNewsletter83 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter83.title = "";
        java.lang.String str86 = uniProvidedNewsletter83.title;
        virtualItemSearchResult79.uniNewsletter = uniProvidedNewsletter83;
        newsletterSubscriptionManager3.cancelSubscription((model.Newsletter) uniProvidedNewsletter83);
        uniProvidedNewsletter83.cost = 8289616;
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertNull(virtualBookList6);
        org.junit.Assert.assertNotNull(rentedItemArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(newsletterList22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(virtualBook27);
        org.junit.Assert.assertNotNull(bookArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(cDArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(magazineArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(bookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(cDArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(magazineArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(cDArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(bookArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(cDArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(magazineArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 20 + "'", int76 == 20);
        org.junit.Assert.assertNull(paidNewsletter80);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
    }

    @Test
    public void test1661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1661");
        model.ItemManagement itemManagement0 = new model.ItemManagement();
        model.Item item2 = itemManagement0.selectAnItemFromDatabase((int) (short) 0);
        model.Database database3 = model.Database.database;
        model.Student student4 = new model.Student();
        int int5 = student4.ID;
        model.StudentOnlineResources studentOnlineResources6 = new model.StudentOnlineResources((model.Client) student4);
        student4.ID = '#';
        database3.addClient((model.Client) student4);
        itemManagement0.database = database3;
        model.Database database11 = itemManagement0.database;
        model.Register register12 = model.Register.makeRegister(database11);
        boolean boolean14 = database11.addItem("model.RegistrationFailedException: src/Book.csv");
        model.Client client16 = database11.getClient("src/BorrowedItems.csv");
        org.junit.Assert.assertNull(item2);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(register12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(client16);
    }

    @Test
    public void test1662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1662");
        java.lang.String[] strArray3 = new java.lang.String[] { "model.RegistrationFailedException: ", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.List<java.lang.String> strList7 = model.SearchStrategy.findMostSimilarStrings((java.util.Collection<java.lang.String>) strList4, "");
        java.util.List<java.lang.String> strList9 = model.SearchStrategy.findMostSimilarStrings((java.util.Collection<java.lang.String>) strList4, "");
        java.util.List<java.lang.String> strList11 = model.SearchStrategy.findMostSimilarStrings((java.util.Collection<java.lang.String>) strList9, "");
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList11);
    }

    @Test
    public void test1663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1663");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        boolean boolean4 = borrowingManager3.canRent();
        model.RentedItem rentedItem5 = null;
        // The following exception was thrown during execution in test generation
        try {
            borrowingManager3.removeRentedItem(rentedItem5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"item\" because \"item\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test1664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1664");
        model.BuySpecialItems buySpecialItems0 = new model.BuySpecialItems();
        model.PayDebit payDebit1 = new model.PayDebit();
        buySpecialItems0.paymentAPI = payDebit1;
        model.BuySpecialItems buySpecialItems3 = new model.BuySpecialItems();
        model.Payment payment4 = null;
        buySpecialItems3.paymentAPI = payment4;
        model.PayMobileWallet payMobileWallet6 = new model.PayMobileWallet();
        buySpecialItems3.paymentAPI = payMobileWallet6;
        payMobileWallet6.amountPay = (-1L);
        payMobileWallet6.pay((double) (-1.0f));
        buySpecialItems0.paymentAPI = payMobileWallet6;
        model.BuySpecialItems buySpecialItems13 = new model.BuySpecialItems();
        model.Book book14 = null;
        model.CD cD16 = new model.CD("");
        model.Magazine magazine17 = null;
        java.util.Collection<model.Book> bookCollection18 = null;
        model.Book book19 = null;
        model.CD cD20 = null;
        model.Magazine magazine21 = null;
        model.Book[] bookArray22 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList23 = new java.util.ArrayList<model.Book>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList23, bookArray22);
        model.CD[] cDArray25 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList26 = new java.util.ArrayList<model.CD>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList26, cDArray25);
        model.Magazine[] magazineArray28 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList29 = new java.util.ArrayList<model.Magazine>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList29, magazineArray28);
        model.ItemSearchResult itemSearchResult31 = new model.ItemSearchResult(book19, cD20, magazine21, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList29);
        model.Book book32 = null;
        model.CD cD33 = null;
        model.Magazine magazine34 = null;
        model.Book[] bookArray35 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList36 = new java.util.ArrayList<model.Book>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList36, bookArray35);
        model.CD[] cDArray38 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList39 = new java.util.ArrayList<model.CD>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList39, cDArray38);
        model.Magazine[] magazineArray41 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList42 = new java.util.ArrayList<model.Magazine>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList42, magazineArray41);
        model.ItemSearchResult itemSearchResult44 = new model.ItemSearchResult(book32, cD33, magazine34, (java.util.Collection<model.Book>) bookList36, (java.util.Collection<model.CD>) cDList39, (java.util.Collection<model.Magazine>) magazineList42);
        itemSearchResult31.similarCD = cDList39;
        model.Book book46 = null;
        model.CD cD47 = null;
        model.Magazine magazine48 = null;
        model.Book[] bookArray49 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList50 = new java.util.ArrayList<model.Book>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList50, bookArray49);
        model.CD[] cDArray52 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList53 = new java.util.ArrayList<model.CD>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList53, cDArray52);
        model.Magazine[] magazineArray55 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList56 = new java.util.ArrayList<model.Magazine>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList56, magazineArray55);
        model.ItemSearchResult itemSearchResult58 = new model.ItemSearchResult(book46, cD47, magazine48, (java.util.Collection<model.Book>) bookList50, (java.util.Collection<model.CD>) cDList53, (java.util.Collection<model.Magazine>) magazineList56);
        model.ItemSearchResult itemSearchResult59 = new model.ItemSearchResult(book14, cD16, magazine17, bookCollection18, (java.util.Collection<model.CD>) cDList39, (java.util.Collection<model.Magazine>) magazineList56);
        cD16.ID = (short) 10;
        boolean boolean63 = buySpecialItems13.buyAnItem((model.Item) cD16, (double) 0);
        model.LibraryManagementTeam libraryManagementTeam64 = new model.LibraryManagementTeam();
        int int65 = libraryManagementTeam64.ID;
        int int66 = libraryManagementTeam64.accessCode;
        model.Item item67 = null;
        libraryManagementTeam64.addAnItem(item67);
        java.util.ArrayList<model.Item> itemList69 = libraryManagementTeam64.items;
        buySpecialItems13.purchasedItems = itemList69;
        model.LibraryManagementTeam libraryManagementTeam71 = new model.LibraryManagementTeam();
        libraryManagementTeam71.accessCode = (byte) 10;
        java.util.ArrayList<model.Item> itemList74 = libraryManagementTeam71.items;
        model.LibraryManagementTeam libraryManagementTeam75 = new model.LibraryManagementTeam();
        libraryManagementTeam75.accessCode = (byte) 10;
        java.util.ArrayList<model.Item> itemList78 = libraryManagementTeam75.items;
        libraryManagementTeam71.items = itemList78;
        buySpecialItems13.purchasedItems = itemList78;
        buySpecialItems0.purchasedItems = itemList78;
        model.BuySpecialItems buySpecialItems82 = new model.BuySpecialItems();
        model.Payment payment83 = null;
        buySpecialItems82.paymentAPI = payment83;
        model.PayMobileWallet payMobileWallet85 = new model.PayMobileWallet();
        buySpecialItems82.paymentAPI = payMobileWallet85;
        payMobileWallet85.pay((double) 'a');
        buySpecialItems0.paymentAPI = payMobileWallet85;
        double double90 = payMobileWallet85.amountPay;
        payMobileWallet85.pay((double) 2648933);
        double double93 = payMobileWallet85.amountPay;
        org.junit.Assert.assertNotNull(bookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(magazineArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(bookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(cDArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(magazineArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(bookArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(cDArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(magazineArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(itemList69);
        org.junit.Assert.assertNotNull(itemList74);
        org.junit.Assert.assertNotNull(itemList78);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 97.0d + "'", double90 == 97.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 2649030.0d + "'", double93 == 2649030.0d);
    }

    @Test
    public void test1665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1665");
        model.Database database7 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.SearchVirtualItem searchVirtualItem8 = new model.SearchVirtualItem(database7);
        int int9 = database7.getRandomID();
        java.lang.String str10 = database7.getMagazineFilePath();
        org.junit.Assert.assertNotNull(database7);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4649131 + "'", int9 == 4649131);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "src/Magazine.csv" + "'", str10, "src/Magazine.csv");
    }

    @Test
    public void test1666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1666");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter54 = null;
        model.PaidNewsletter paidNewsletter55 = null;
        model.VirtualItemSearchResult virtualItemSearchResult56 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter54, paidNewsletter55);
        model.PaidNewsletter paidNewsletter57 = virtualItemSearchResult56.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter58 = new model.UniProvidedNewsletter();
        virtualItemSearchResult56.setUniNewsletter(uniProvidedNewsletter58);
        model.PaidNewsletter paidNewsletter60 = virtualItemSearchResult56.getPaidNewsletter();
        model.VirtualBook virtualBook61 = virtualItemSearchResult56.getVirtualBook();
        model.Newsletter[] newsletterArray62 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList63 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList63, newsletterArray62);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager65 = new model.NewsletterSubscriptionManager(newsletterList63);
        model.Client client66 = newsletterSubscriptionManager65.client;
        model.UniProvidedNewsletter uniProvidedNewsletter67 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter67.title = "";
        java.lang.String str70 = uniProvidedNewsletter67.title;
        newsletterSubscriptionManager65.subscribeToUniProvidedNewsletter(uniProvidedNewsletter67, "");
        virtualItemSearchResult56.setUniNewsletter(uniProvidedNewsletter67);
        int int74 = uniProvidedNewsletter67.ID;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertNull(paidNewsletter57);
        org.junit.Assert.assertNull(paidNewsletter60);
        org.junit.Assert.assertNotNull(virtualBook61);
        org.junit.Assert.assertNotNull(newsletterArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(client66);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
    }

    @Test
    public void test1667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1667");
        model.RentingNotAllowedException rentingNotAllowedException1 = new model.RentingNotAllowedException("hi!");
        java.lang.String str2 = rentingNotAllowedException1.message;
        model.RegistrationFailedException registrationFailedException4 = new model.RegistrationFailedException("");
        rentingNotAllowedException1.addSuppressed((java.lang.Throwable) registrationFailedException4);
        java.lang.Throwable[] throwableArray6 = rentingNotAllowedException1.getSuppressed();
        java.lang.String str7 = rentingNotAllowedException1.message;
        java.lang.String str8 = rentingNotAllowedException1.message;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
    }

    @Test
    public void test1668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1668");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.StudentOnlineResources studentOnlineResources3 = new model.StudentOnlineResources((model.Client) student0);
        model.RentedItem[] rentedItemArray4 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList5 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList5, rentedItemArray4);
        model.BorrowingManager borrowingManager7 = new model.BorrowingManager(rentedItemList5);
        model.Visitor visitor8 = new model.Visitor();
        visitor8.email = "hi!";
        borrowingManager7.client = visitor8;
        studentOnlineResources3.client = visitor8;
        model.Student student13 = new model.Student();
        int int14 = student13.ID;
        model.StudentOnlineResources studentOnlineResources15 = new model.StudentOnlineResources((model.Client) student13);
        model.VirtualBook virtualBook17 = studentOnlineResources15.searchAccessibleBook("");
        java.lang.String str18 = virtualBook17.location;
        model.VirtualItemContent virtualItemContent19 = virtualBook17.content;
        java.lang.String str20 = studentOnlineResources3.readVirtualItem((model.VirtualItem) virtualBook17);
        boolean boolean21 = virtualBook17.isBookLost;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(rentedItemArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(virtualBook17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(virtualItemContent19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1669");
        model.LibraryManagementTeam libraryManagementTeam0 = new model.LibraryManagementTeam();
        int int1 = libraryManagementTeam0.ID;
        int int2 = libraryManagementTeam0.accessCode;
        model.ItemManagement itemManagement3 = new model.ItemManagement();
        model.Database database4 = null;
        itemManagement3.database = database4;
        model.Student student6 = new model.Student();
        int int7 = student6.ID;
        model.StudentOnlineResources studentOnlineResources8 = new model.StudentOnlineResources((model.Client) student6);
        model.VirtualBook virtualBook10 = studentOnlineResources8.searchAccessibleBook("");
        itemManagement3.disableAnItem((model.Item) virtualBook10);
        libraryManagementTeam0.itemManagement = itemManagement3;
        model.Database database20 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str21 = database20.getVirtualBookFilePath();
        model.Database.database = database20;
        java.lang.String str23 = database20.virtualItemFilePath;
        java.lang.String str24 = database20.getBookFilePath();
        database20.itemPath = "src/Magazine.csv";
        model.Login login27 = model.Login.makeLogin(database20);
        java.lang.String str28 = database20.getNewspaperFilePath();
        java.lang.String str29 = database20.getMagazineFilePath();
        boolean boolean31 = database20.addItem("src/Book.csv");
        model.Login login32 = model.Login.makeLogin(database20);
        itemManagement3.database = database20;
        model.Student student34 = new model.Student();
        int int35 = student34.ID;
        model.StudentOnlineResources studentOnlineResources36 = new model.StudentOnlineResources((model.Client) student34);
        java.util.Iterator<model.VirtualItem> virtualItemItor37 = studentOnlineResources36.iterator();
        model.Student student38 = new model.Student();
        int int39 = student38.ID;
        model.StudentOnlineResources studentOnlineResources40 = new model.StudentOnlineResources((model.Client) student38);
        model.VirtualBook virtualBook42 = studentOnlineResources40.searchAccessibleBook("");
        model.CD cD44 = new model.CD("");
        model.Magazine magazine45 = null;
        model.Book book46 = null;
        model.CD cD47 = null;
        model.Magazine magazine48 = null;
        model.Book[] bookArray49 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList50 = new java.util.ArrayList<model.Book>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList50, bookArray49);
        model.CD[] cDArray52 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList53 = new java.util.ArrayList<model.CD>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList53, cDArray52);
        model.Magazine[] magazineArray55 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList56 = new java.util.ArrayList<model.Magazine>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList56, magazineArray55);
        model.ItemSearchResult itemSearchResult58 = new model.ItemSearchResult(book46, cD47, magazine48, (java.util.Collection<model.Book>) bookList50, (java.util.Collection<model.CD>) cDList53, (java.util.Collection<model.Magazine>) magazineList56);
        model.Book book59 = null;
        model.CD cD60 = null;
        model.Magazine magazine61 = null;
        model.Book[] bookArray62 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList63 = new java.util.ArrayList<model.Book>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList63, bookArray62);
        model.CD[] cDArray65 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList66 = new java.util.ArrayList<model.CD>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList66, cDArray65);
        model.Magazine[] magazineArray68 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList69 = new java.util.ArrayList<model.Magazine>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList69, magazineArray68);
        model.ItemSearchResult itemSearchResult71 = new model.ItemSearchResult(book59, cD60, magazine61, (java.util.Collection<model.Book>) bookList63, (java.util.Collection<model.CD>) cDList66, (java.util.Collection<model.Magazine>) magazineList69);
        model.CD[] cDArray72 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList73 = new java.util.ArrayList<model.CD>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList73, cDArray72);
        itemSearchResult71.similarCD = cDList73;
        model.Book book76 = null;
        model.CD cD77 = null;
        model.Magazine magazine78 = null;
        model.Book[] bookArray79 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList80 = new java.util.ArrayList<model.Book>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList80, bookArray79);
        model.CD[] cDArray82 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList83 = new java.util.ArrayList<model.CD>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList83, cDArray82);
        model.Magazine[] magazineArray85 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList86 = new java.util.ArrayList<model.Magazine>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList86, magazineArray85);
        model.ItemSearchResult itemSearchResult88 = new model.ItemSearchResult(book76, cD77, magazine78, (java.util.Collection<model.Book>) bookList80, (java.util.Collection<model.CD>) cDList83, (java.util.Collection<model.Magazine>) magazineList86);
        model.ItemSearchResult itemSearchResult89 = new model.ItemSearchResult((model.Book) virtualBook42, cD44, magazine45, (java.util.Collection<model.Book>) bookList50, (java.util.Collection<model.CD>) cDList73, (java.util.Collection<model.Magazine>) magazineList86);
        java.lang.String str90 = studentOnlineResources36.readVirtualItem((model.VirtualItem) virtualBook42);
        java.lang.String str91 = virtualBook42.publisher;
        virtualBook42.ISBN = "hi!";
        java.lang.String str94 = virtualBook42.publisher;
        itemManagement3.addAnItem((model.Item) virtualBook42);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(virtualBook10);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "src/VirtualBook.csv" + "'", str21, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "src/Book.csv" + "'", str23, "src/Book.csv");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "src/Book.csv" + "'", str24, "src/Book.csv");
        org.junit.Assert.assertNotNull(login27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "src/Newsletter.csv" + "'", str28, "src/Newsletter.csv");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "src/Magazine.csv" + "'", str29, "src/Magazine.csv");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(login32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(virtualItemItor37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(virtualBook42);
        org.junit.Assert.assertNotNull(bookArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(cDArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(magazineArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(bookArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(cDArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(magazineArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(cDArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(bookArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(cDArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(magazineArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNull(str91);
        org.junit.Assert.assertNull(str94);
    }

    @Test
    public void test1670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1670");
        model.PayDebit payDebit0 = new model.PayDebit();
        payDebit0.amountPay = 1.0d;
        double double3 = payDebit0.amountPay;
        double double4 = payDebit0.amountPay;
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
    }

    @Test
    public void test1671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1671");
        model.Faculty faculty0 = new model.Faculty();
        java.lang.String str1 = faculty0.email;
        faculty0.faculty = "src/Newsletter.csv";
        model.Book book4 = null;
        model.CD cD5 = null;
        model.Magazine magazine6 = null;
        model.Book[] bookArray7 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList8 = new java.util.ArrayList<model.Book>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList8, bookArray7);
        model.CD[] cDArray10 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList11 = new java.util.ArrayList<model.CD>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList11, cDArray10);
        model.Magazine[] magazineArray13 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList14 = new java.util.ArrayList<model.Magazine>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList14, magazineArray13);
        model.ItemSearchResult itemSearchResult16 = new model.ItemSearchResult(book4, cD5, magazine6, (java.util.Collection<model.Book>) bookList8, (java.util.Collection<model.CD>) cDList11, (java.util.Collection<model.Magazine>) magazineList14);
        model.CD[] cDArray17 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList18 = new java.util.ArrayList<model.CD>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList18, cDArray17);
        itemSearchResult16.similarCD = cDList18;
        model.Book book21 = null;
        itemSearchResult16.book = book21;
        model.Book book23 = null;
        model.CD cD24 = null;
        model.Magazine magazine25 = null;
        model.Book[] bookArray26 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList27 = new java.util.ArrayList<model.Book>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList27, bookArray26);
        model.CD[] cDArray29 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList30 = new java.util.ArrayList<model.CD>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList30, cDArray29);
        model.Magazine[] magazineArray32 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList33 = new java.util.ArrayList<model.Magazine>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList33, magazineArray32);
        model.ItemSearchResult itemSearchResult35 = new model.ItemSearchResult(book23, cD24, magazine25, (java.util.Collection<model.Book>) bookList27, (java.util.Collection<model.CD>) cDList30, (java.util.Collection<model.Magazine>) magazineList33);
        itemSearchResult16.similarBooks = bookList27;
        model.Magazine[] magazineArray37 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList38 = new java.util.ArrayList<model.Magazine>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList38, magazineArray37);
        itemSearchResult16.similarMagazine = magazineList38;
        model.Book book41 = null;
        model.CD cD43 = new model.CD("");
        model.Magazine magazine44 = null;
        java.util.Collection<model.Book> bookCollection45 = null;
        model.Book book46 = null;
        model.CD cD47 = null;
        model.Magazine magazine48 = null;
        model.Book[] bookArray49 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList50 = new java.util.ArrayList<model.Book>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList50, bookArray49);
        model.CD[] cDArray52 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList53 = new java.util.ArrayList<model.CD>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList53, cDArray52);
        model.Magazine[] magazineArray55 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList56 = new java.util.ArrayList<model.Magazine>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList56, magazineArray55);
        model.ItemSearchResult itemSearchResult58 = new model.ItemSearchResult(book46, cD47, magazine48, (java.util.Collection<model.Book>) bookList50, (java.util.Collection<model.CD>) cDList53, (java.util.Collection<model.Magazine>) magazineList56);
        model.Book book59 = null;
        model.CD cD60 = null;
        model.Magazine magazine61 = null;
        model.Book[] bookArray62 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList63 = new java.util.ArrayList<model.Book>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList63, bookArray62);
        model.CD[] cDArray65 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList66 = new java.util.ArrayList<model.CD>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList66, cDArray65);
        model.Magazine[] magazineArray68 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList69 = new java.util.ArrayList<model.Magazine>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList69, magazineArray68);
        model.ItemSearchResult itemSearchResult71 = new model.ItemSearchResult(book59, cD60, magazine61, (java.util.Collection<model.Book>) bookList63, (java.util.Collection<model.CD>) cDList66, (java.util.Collection<model.Magazine>) magazineList69);
        itemSearchResult58.similarCD = cDList66;
        model.Book book73 = null;
        model.CD cD74 = null;
        model.Magazine magazine75 = null;
        model.Book[] bookArray76 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList77 = new java.util.ArrayList<model.Book>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList77, bookArray76);
        model.CD[] cDArray79 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList80 = new java.util.ArrayList<model.CD>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList80, cDArray79);
        model.Magazine[] magazineArray82 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList83 = new java.util.ArrayList<model.Magazine>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList83, magazineArray82);
        model.ItemSearchResult itemSearchResult85 = new model.ItemSearchResult(book73, cD74, magazine75, (java.util.Collection<model.Book>) bookList77, (java.util.Collection<model.CD>) cDList80, (java.util.Collection<model.Magazine>) magazineList83);
        model.ItemSearchResult itemSearchResult86 = new model.ItemSearchResult(book41, cD43, magazine44, bookCollection45, (java.util.Collection<model.CD>) cDList66, (java.util.Collection<model.Magazine>) magazineList83);
        cD43.ID = (short) 10;
        itemSearchResult16.cd = cD43;
        java.util.Collection<model.Book> bookCollection90 = itemSearchResult16.similarBooks;
        faculty0.textbooks = bookCollection90;
        faculty0.viewMyOnlineResource();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(bookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(cDArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(magazineArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(cDArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(cDArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(magazineArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(magazineArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(bookArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(cDArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(magazineArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(bookArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(cDArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(magazineArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(bookArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(cDArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(magazineArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(bookCollection90);
    }

    @Test
    public void test1672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1672");
        model.Database database7 = model.Database.createDatabase("", "src/CD.csv", "model.RegistrationFailedException: src/Magazine.csv", "model.RegistrationFailedException: src/Magazine.csv", "model.RegistrationFailedException: ", "src/Magazine.csv", "hi!");
        int int8 = database7.getRandomID();
        model.Visitor visitor9 = new model.Visitor();
        model.VirtualBook[] virtualBookArray10 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList11 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList11, virtualBookArray10);
        visitor9.virtualBooksAvailable = virtualBookList11;
        visitor9.username = "";
        model.Visitor visitor16 = new model.Visitor();
        model.VirtualBook[] virtualBookArray17 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList18 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList18, virtualBookArray17);
        visitor16.virtualBooksAvailable = virtualBookList18;
        visitor9.virtualBooksAvailable = virtualBookList18;
        database7.addClient((model.Client) visitor9);
        java.lang.String str23 = database7.virtualItemFilePath;
        java.lang.String str24 = database7.getCDFilePath();
        database7.virtualItemFilePath = "model.RegistrationFailedException: model.RentingNotAllowedException: hi!";
        org.junit.Assert.assertNotNull(database7);
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8329991 + "'", int8 == 8329991);
        org.junit.Assert.assertNotNull(virtualBookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(virtualBookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "src/Book.csv" + "'", str23, "src/Book.csv");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "src/CD.csv" + "'", str24, "src/CD.csv");
    }

    @Test
    public void test1673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1673");
        model.BookOverDueNotif bookOverDueNotif0 = new model.BookOverDueNotif();
        java.lang.String str1 = bookOverDueNotif0.message;
        bookOverDueNotif0.message = "model.RegistrationFailedException: ";
        bookOverDueNotif0.message = "src/Book.csv";
        java.lang.String str6 = bookOverDueNotif0.message;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "src/Book.csv" + "'", str6, "src/Book.csv");
    }

    @Test
    public void test1674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1674");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.Database.database = database7;
        java.lang.String str10 = database7.virtualItemFilePath;
        java.lang.String str11 = database7.getBookFilePath();
        database7.itemPath = "src/Magazine.csv";
        model.Login login14 = model.Login.makeLogin(database7);
        java.lang.String str15 = database7.getNewspaperFilePath();
        java.lang.String str16 = database7.getBorrowedItemFilePath();
        boolean boolean18 = database7.addItem("src/Book.csv");
        model.Client client20 = database7.getClient("src/Book.csv");
        model.Visitor visitor21 = new model.Visitor();
        model.VirtualBook[] virtualBookArray22 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList23 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList23, virtualBookArray22);
        visitor21.virtualBooksAvailable = virtualBookList23;
        model.NonFaculty nonFaculty26 = new model.NonFaculty();
        model.Visitor visitor27 = new model.Visitor();
        model.VirtualBook[] virtualBookArray28 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList29 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList29, virtualBookArray28);
        visitor27.virtualBooksAvailable = virtualBookList29;
        visitor27.username = "";
        model.Visitor visitor34 = new model.Visitor();
        model.VirtualBook[] virtualBookArray35 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList36 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList36, virtualBookArray35);
        visitor34.virtualBooksAvailable = virtualBookList36;
        visitor27.virtualBooksAvailable = virtualBookList36;
        nonFaculty26.virtualBooksAvailable = virtualBookList36;
        visitor21.virtualBooksAvailable = virtualBookList36;
        client20.virtualBooksAvailable = virtualBookList36;
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "model.RegistrationFailedException: model.RentingNotAllowedException: hi!" + "'", str10, "model.RegistrationFailedException: model.RentingNotAllowedException: hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "src/Book.csv" + "'", str11, "src/Book.csv");
        org.junit.Assert.assertNotNull(login14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "src/Newsletter.csv" + "'", str15, "src/Newsletter.csv");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "src/BorrowedItems.csv" + "'", str16, "src/BorrowedItems.csv");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(client20);
        org.junit.Assert.assertNotNull(virtualBookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(virtualBookArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(virtualBookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test1675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1675");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        model.LibraryManagementTeam libraryManagementTeam54 = new model.LibraryManagementTeam();
        libraryManagementTeam54.accessCode = (byte) 10;
        java.util.ArrayList<model.Item> itemList57 = libraryManagementTeam54.items;
        boolean boolean58 = virtualBook4.equals((java.lang.Object) libraryManagementTeam54);
        int int59 = virtualBook4.ID;
        java.time.LocalDate localDate60 = null;
        // The following exception was thrown during execution in test generation
        try {
            model.RentedItem rentedItem61 = new model.RentedItem((model.Item) virtualBook4, localDate60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.format(java.time.format.DateTimeFormatter)\" because \"borrowDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertNotNull(itemList57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
    }

    @Test
    public void test1676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1676");
        model.RegistrationFailedException registrationFailedException1 = new model.RegistrationFailedException("src/Newsletter.csv");
        java.lang.Throwable[] throwableArray2 = registrationFailedException1.getSuppressed();
        registrationFailedException1.message = "src/Client.csv";
        org.junit.Assert.assertNotNull(throwableArray2);
    }

    @Test
    public void test1677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1677");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.UniProvidedNewsletter uniProvidedNewsletter5 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter5.title = "";
        java.lang.String str8 = uniProvidedNewsletter5.title;
        newsletterSubscriptionManager3.subscribeToUniProvidedNewsletter(uniProvidedNewsletter5, "");
        model.Student student11 = new model.Student();
        int int12 = student11.ID;
        model.StudentOnlineResources studentOnlineResources13 = new model.StudentOnlineResources((model.Client) student11);
        model.VirtualBook virtualBook15 = studentOnlineResources13.searchAccessibleBook("");
        model.CD cD17 = new model.CD("");
        model.Magazine magazine18 = null;
        model.Book book19 = null;
        model.CD cD20 = null;
        model.Magazine magazine21 = null;
        model.Book[] bookArray22 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList23 = new java.util.ArrayList<model.Book>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList23, bookArray22);
        model.CD[] cDArray25 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList26 = new java.util.ArrayList<model.CD>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList26, cDArray25);
        model.Magazine[] magazineArray28 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList29 = new java.util.ArrayList<model.Magazine>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList29, magazineArray28);
        model.ItemSearchResult itemSearchResult31 = new model.ItemSearchResult(book19, cD20, magazine21, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList29);
        model.Book book32 = null;
        model.CD cD33 = null;
        model.Magazine magazine34 = null;
        model.Book[] bookArray35 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList36 = new java.util.ArrayList<model.Book>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList36, bookArray35);
        model.CD[] cDArray38 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList39 = new java.util.ArrayList<model.CD>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList39, cDArray38);
        model.Magazine[] magazineArray41 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList42 = new java.util.ArrayList<model.Magazine>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList42, magazineArray41);
        model.ItemSearchResult itemSearchResult44 = new model.ItemSearchResult(book32, cD33, magazine34, (java.util.Collection<model.Book>) bookList36, (java.util.Collection<model.CD>) cDList39, (java.util.Collection<model.Magazine>) magazineList42);
        model.CD[] cDArray45 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList46 = new java.util.ArrayList<model.CD>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList46, cDArray45);
        itemSearchResult44.similarCD = cDList46;
        model.Book book49 = null;
        model.CD cD50 = null;
        model.Magazine magazine51 = null;
        model.Book[] bookArray52 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList53 = new java.util.ArrayList<model.Book>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList53, bookArray52);
        model.CD[] cDArray55 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList56 = new java.util.ArrayList<model.CD>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList56, cDArray55);
        model.Magazine[] magazineArray58 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList59 = new java.util.ArrayList<model.Magazine>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList59, magazineArray58);
        model.ItemSearchResult itemSearchResult61 = new model.ItemSearchResult(book49, cD50, magazine51, (java.util.Collection<model.Book>) bookList53, (java.util.Collection<model.CD>) cDList56, (java.util.Collection<model.Magazine>) magazineList59);
        model.ItemSearchResult itemSearchResult62 = new model.ItemSearchResult((model.Book) virtualBook15, cD17, magazine18, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList46, (java.util.Collection<model.Magazine>) magazineList59);
        int int63 = virtualBook15.ID;
        int int64 = virtualBook15.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter65 = null;
        model.PaidNewsletter paidNewsletter66 = null;
        model.VirtualItemSearchResult virtualItemSearchResult67 = new model.VirtualItemSearchResult(virtualBook15, uniProvidedNewsletter65, paidNewsletter66);
        model.PaidNewsletter paidNewsletter68 = virtualItemSearchResult67.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter69 = new model.UniProvidedNewsletter();
        virtualItemSearchResult67.setUniNewsletter(uniProvidedNewsletter69);
        model.PaidNewsletter paidNewsletter71 = virtualItemSearchResult67.paidNewsletter;
        model.PaidNewsletter paidNewsletter72 = virtualItemSearchResult67.getPaidNewsletter();
        model.VirtualBook virtualBook73 = virtualItemSearchResult67.getVirtualBook();
        model.UniProvidedNewsletter uniProvidedNewsletter74 = virtualItemSearchResult67.uniNewsletter;
        uniProvidedNewsletter74.cost = (byte) 1;
        newsletterSubscriptionManager3.cancelSubscription((model.Newsletter) uniProvidedNewsletter74);
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(virtualBook15);
        org.junit.Assert.assertNotNull(bookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(magazineArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(bookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(cDArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(magazineArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(bookArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(cDArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(magazineArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 20 + "'", int64 == 20);
        org.junit.Assert.assertNull(paidNewsletter68);
        org.junit.Assert.assertNull(paidNewsletter71);
        org.junit.Assert.assertNull(paidNewsletter72);
        org.junit.Assert.assertNotNull(virtualBook73);
        org.junit.Assert.assertNotNull(uniProvidedNewsletter74);
    }

    @Test
    public void test1678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1678");
        model.Book book0 = null;
        model.CD cD1 = null;
        model.Magazine magazine2 = null;
        model.Book[] bookArray3 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList4 = new java.util.ArrayList<model.Book>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList4, bookArray3);
        model.CD[] cDArray6 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList7 = new java.util.ArrayList<model.CD>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList7, cDArray6);
        model.Magazine[] magazineArray9 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList10 = new java.util.ArrayList<model.Magazine>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList10, magazineArray9);
        model.ItemSearchResult itemSearchResult12 = new model.ItemSearchResult(book0, cD1, magazine2, (java.util.Collection<model.Book>) bookList4, (java.util.Collection<model.CD>) cDList7, (java.util.Collection<model.Magazine>) magazineList10);
        model.Book book13 = null;
        model.CD cD14 = null;
        model.Magazine magazine15 = null;
        model.Book[] bookArray16 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList17 = new java.util.ArrayList<model.Book>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList17, bookArray16);
        model.CD[] cDArray19 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList20 = new java.util.ArrayList<model.CD>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList20, cDArray19);
        model.Magazine[] magazineArray22 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList23 = new java.util.ArrayList<model.Magazine>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList23, magazineArray22);
        model.ItemSearchResult itemSearchResult25 = new model.ItemSearchResult(book13, cD14, magazine15, (java.util.Collection<model.Book>) bookList17, (java.util.Collection<model.CD>) cDList20, (java.util.Collection<model.Magazine>) magazineList23);
        itemSearchResult12.similarCD = cDList20;
        model.Magazine magazine27 = null;
        itemSearchResult12.magazine = magazine27;
        java.util.Collection<model.Magazine> magazineCollection29 = itemSearchResult12.similarMagazine;
        model.CD cD30 = itemSearchResult12.cd;
        model.Faculty faculty31 = new model.Faculty();
        java.lang.String str32 = faculty31.faculty;
        java.lang.String str33 = faculty31.faculty;
        model.Book book34 = null;
        model.CD cD35 = null;
        model.Magazine magazine36 = null;
        model.Book[] bookArray37 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList38 = new java.util.ArrayList<model.Book>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList38, bookArray37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        model.Magazine[] magazineArray43 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList44 = new java.util.ArrayList<model.Magazine>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList44, magazineArray43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book34, cD35, magazine36, (java.util.Collection<model.Book>) bookList38, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList44);
        model.CD[] cDArray47 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList48 = new java.util.ArrayList<model.CD>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList48, cDArray47);
        itemSearchResult46.similarCD = cDList48;
        model.Book book51 = null;
        itemSearchResult46.book = book51;
        model.Book book53 = null;
        model.CD cD54 = null;
        model.Magazine magazine55 = null;
        model.Book[] bookArray56 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList57 = new java.util.ArrayList<model.Book>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList57, bookArray56);
        model.CD[] cDArray59 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList60 = new java.util.ArrayList<model.CD>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList60, cDArray59);
        model.Magazine[] magazineArray62 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList63 = new java.util.ArrayList<model.Magazine>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList63, magazineArray62);
        model.ItemSearchResult itemSearchResult65 = new model.ItemSearchResult(book53, cD54, magazine55, (java.util.Collection<model.Book>) bookList57, (java.util.Collection<model.CD>) cDList60, (java.util.Collection<model.Magazine>) magazineList63);
        itemSearchResult46.similarBooks = bookList57;
        faculty31.textbooks = bookList57;
        itemSearchResult12.similarBooks = bookList57;
        org.junit.Assert.assertNotNull(bookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(cDArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(magazineArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(bookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(cDArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(magazineArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(magazineCollection29);
        org.junit.Assert.assertNull(cD30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(bookArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(magazineArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(cDArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(bookArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(cDArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(magazineArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test1679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1679");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.RequestForum requestForum1 = model.RequestForum.createRequestForum();
        model.Request request2 = new model.Request();
        request2.title = "";
        java.lang.String str5 = requestForum1.makeARequest(request2);
        int int6 = requestForum0.assessBooksPriority(request2);
        model.Client client7 = request2.requestee;
        request2.type = "src/BorrowedItems.csv";
        model.Client client10 = request2.requestee;
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertNotNull(requestForum1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(client7);
        org.junit.Assert.assertNull(client10);
    }

    @Test
    public void test1680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1680");
        model.BuySpecialItems buySpecialItems0 = new model.BuySpecialItems();
        model.Payment payment1 = buySpecialItems0.paymentAPI;
        java.util.ArrayList<model.Item> itemList2 = buySpecialItems0.purchasedItems;
        model.Payment payment3 = buySpecialItems0.paymentAPI;
        model.Student student4 = new model.Student();
        int int5 = student4.ID;
        model.StudentOnlineResources studentOnlineResources6 = new model.StudentOnlineResources((model.Client) student4);
        model.VirtualBook virtualBook8 = studentOnlineResources6.searchAccessibleBook("");
        virtualBook8.ID = 20;
        virtualBook8.ID = (short) 100;
        boolean boolean13 = virtualBook8.canBePurchased;
        boolean boolean15 = buySpecialItems0.buyAnItem((model.Item) virtualBook8, (double) 31);
        java.util.Calendar calendar16 = null;
        virtualBook8.date = calendar16;
        virtualBook8.author = "src/Magazine.csv";
        org.junit.Assert.assertNull(payment1);
        org.junit.Assert.assertNotNull(itemList2);
        org.junit.Assert.assertNull(payment3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(virtualBook8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1681");
        model.LibraryManagementTeam libraryManagementTeam0 = new model.LibraryManagementTeam();
        libraryManagementTeam0.accessCode = (byte) 10;
        model.BuySpecialItems buySpecialItems3 = new model.BuySpecialItems();
        model.CD cD5 = new model.CD("");
        int int6 = cD5.ID;
        boolean boolean8 = buySpecialItems3.buyAnItem((model.Item) cD5, (double) (short) 0);
        libraryManagementTeam0.addAnItem((model.Item) cD5);
        java.lang.String str10 = cD5.location;
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1682");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.BuySpecialItems buySpecialItems1 = new model.BuySpecialItems();
        model.PayDebit payDebit2 = new model.PayDebit();
        buySpecialItems1.paymentAPI = payDebit2;
        rentAndReturnSystem0.paymentAPI = payDebit2;
        model.Payment payment5 = rentAndReturnSystem0.paymentAPI;
        model.RentAndReturnSystem rentAndReturnSystem6 = new model.RentAndReturnSystem();
        model.PayCredit payCredit7 = new model.PayCredit();
        rentAndReturnSystem6.paymentAPI = payCredit7;
        payCredit7.pay((double) (short) -1);
        double double11 = payCredit7.amountPay;
        rentAndReturnSystem0.paymentAPI = payCredit7;
        org.junit.Assert.assertNotNull(payment5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-1.0d) + "'", double11 == (-1.0d));
    }

    @Test
    public void test1683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1683");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        model.RentedItem[] rentedItemArray4 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList5 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList5, rentedItemArray4);
        model.BorrowingManager borrowingManager7 = new model.BorrowingManager(rentedItemList5);
        model.RentedItem[] rentedItemArray8 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList9 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList9, rentedItemArray8);
        model.BorrowingManager borrowingManager11 = new model.BorrowingManager(rentedItemList9);
        borrowingManager7.physicalItemBorrowed = rentedItemList9;
        borrowingManager3.physicalItemBorrowed = rentedItemList9;
        model.Visitor visitor14 = new model.Visitor();
        model.VirtualBook[] virtualBookArray15 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList16 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList16, virtualBookArray15);
        visitor14.virtualBooksAvailable = virtualBookList16;
        borrowingManager3.client = visitor14;
        model.Faculty faculty20 = new model.Faculty();
        java.lang.String str21 = faculty20.faculty;
        borrowingManager3.client = faculty20;
        model.RentedItem[] rentedItemArray23 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList24 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList24, rentedItemArray23);
        model.BorrowingManager borrowingManager26 = new model.BorrowingManager(rentedItemList24);
        model.RentedItem[] rentedItemArray27 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList28 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList28, rentedItemArray27);
        model.BorrowingManager borrowingManager30 = new model.BorrowingManager(rentedItemList28);
        model.RentedItem[] rentedItemArray31 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList32 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList32, rentedItemArray31);
        model.BorrowingManager borrowingManager34 = new model.BorrowingManager(rentedItemList32);
        borrowingManager30.physicalItemBorrowed = rentedItemList32;
        borrowingManager26.physicalItemBorrowed = rentedItemList32;
        borrowingManager3.physicalItemBorrowed = rentedItemList32;
        java.util.ArrayList<model.RentedItem> rentedItemList38 = borrowingManager3.physicalItemBorrowed;
        model.BorrowingManager borrowingManager39 = new model.BorrowingManager(rentedItemList38);
        boolean boolean40 = borrowingManager39.canRent();
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(rentedItemArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rentedItemArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(virtualBookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(rentedItemArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(rentedItemArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(rentedItemArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(rentedItemList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test1684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1684");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.util.ArrayList<java.lang.String> strList8 = database7.getAllItems();
        java.lang.String str9 = database7.getBorrowedItemFilePath();
        int int10 = database7.getRandomID();
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "src/BorrowedItems.csv" + "'", str9, "src/BorrowedItems.csv");
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1979322 + "'", int10 == 1979322);
    }

    @Test
    public void test1685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1685");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.Database.database = database7;
        database7.itemPath = "";
        model.Client client13 = database7.getClient("model.RentingNotAllowedException: ");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
        org.junit.Assert.assertNotNull(client13);
    }

    @Test
    public void test1686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1686");
        model.Faculty faculty0 = new model.Faculty();
        faculty0.username = "hi!";
        java.lang.String str3 = faculty0.username;
        model.Course course4 = new model.Course();
        java.lang.String str5 = course4.subject;
        course4.code = "";
        course4.subject = "src/Magazine.csv";
        model.Course course10 = new model.Course();
        java.lang.String str11 = course10.code;
        model.Course course12 = new model.Course();
        java.lang.String str13 = course12.subject;
        java.lang.String str14 = course12.subject;
        java.lang.String str15 = course12.code;
        java.lang.String str16 = course12.code;
        model.Course course17 = new model.Course();
        java.lang.String str18 = course17.code;
        model.Course course19 = new model.Course();
        java.lang.String str20 = course19.subject;
        java.lang.String str21 = course19.subject;
        java.lang.String str22 = course19.code;
        course19.code = "src/VirtualBook.csv";
        model.Course course25 = new model.Course();
        model.Course course26 = new model.Course();
        java.lang.String str27 = course26.subject;
        course26.code = "";
        course26.subject = "src/Magazine.csv";
        int int32 = course26.year;
        model.Course course33 = new model.Course();
        java.lang.String str34 = course33.code;
        java.lang.String str35 = course33.subject;
        course33.subject = "model.RegistrationFailedException: ";
        course33.subject = "src/Magazine.csv";
        model.Course[] courseArray40 = new model.Course[] { course4, course10, course12, course17, course19, course25, course26, course33 };
        java.util.ArrayList<model.Course> courseList41 = new java.util.ArrayList<model.Course>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.Course>) courseList41, courseArray40);
        faculty0.courses = courseList41;
        model.NewsletterSubscriptionManager newsletterSubscriptionManager44 = faculty0.newsletterManager;
        faculty0.faculty = "";
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(courseArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(newsletterSubscriptionManager44);
    }

    @Test
    public void test1687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1687");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.Database.database = database7;
        java.lang.String str10 = database7.virtualItemFilePath;
        model.Login login11 = new model.Login(database7);
        model.Database database12 = login11.db;
        model.SearchClient searchClient13 = model.SearchClient.makeSearchClient(database12);
        java.lang.String str14 = database12.getVirtualBookFilePath();
        java.lang.String str15 = database12.getCDFilePath();
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "model.RegistrationFailedException: model.RentingNotAllowedException: hi!" + "'", str10, "model.RegistrationFailedException: model.RentingNotAllowedException: hi!");
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(searchClient13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "src/VirtualBook.csv" + "'", str14, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "src/CD.csv" + "'", str15, "src/CD.csv");
    }

    @Test
    public void test1688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1688");
        int int2 = model.SearchStrategy.calculateDistance("model.RegistrationFailedException: src/Magazine.csv", "model.RegistrationFailedException: src/Magazine.csv");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test1689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1689");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.Book book1 = null;
        model.CD cD3 = new model.CD("");
        model.Magazine magazine4 = null;
        java.util.Collection<model.Book> bookCollection5 = null;
        model.Book book6 = null;
        model.CD cD7 = null;
        model.Magazine magazine8 = null;
        model.Book[] bookArray9 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList10 = new java.util.ArrayList<model.Book>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList10, bookArray9);
        model.CD[] cDArray12 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList13 = new java.util.ArrayList<model.CD>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList13, cDArray12);
        model.Magazine[] magazineArray15 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList16 = new java.util.ArrayList<model.Magazine>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList16, magazineArray15);
        model.ItemSearchResult itemSearchResult18 = new model.ItemSearchResult(book6, cD7, magazine8, (java.util.Collection<model.Book>) bookList10, (java.util.Collection<model.CD>) cDList13, (java.util.Collection<model.Magazine>) magazineList16);
        model.Book book19 = null;
        model.CD cD20 = null;
        model.Magazine magazine21 = null;
        model.Book[] bookArray22 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList23 = new java.util.ArrayList<model.Book>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList23, bookArray22);
        model.CD[] cDArray25 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList26 = new java.util.ArrayList<model.CD>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList26, cDArray25);
        model.Magazine[] magazineArray28 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList29 = new java.util.ArrayList<model.Magazine>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList29, magazineArray28);
        model.ItemSearchResult itemSearchResult31 = new model.ItemSearchResult(book19, cD20, magazine21, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList29);
        itemSearchResult18.similarCD = cDList26;
        model.Book book33 = null;
        model.CD cD34 = null;
        model.Magazine magazine35 = null;
        model.Book[] bookArray36 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList37 = new java.util.ArrayList<model.Book>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList37, bookArray36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        model.Magazine[] magazineArray42 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList43 = new java.util.ArrayList<model.Magazine>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList43, magazineArray42);
        model.ItemSearchResult itemSearchResult45 = new model.ItemSearchResult(book33, cD34, magazine35, (java.util.Collection<model.Book>) bookList37, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book1, cD3, magazine4, bookCollection5, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList43);
        cD3.ID = (short) 10;
        cD3.canBePurchased = false;
        boolean boolean51 = cD3.canBePurchased;
        model.Faculty faculty52 = new model.Faculty();
        boolean boolean53 = rentAndReturnSystem0.rentAnItem((model.Item) cD3, (model.Client) faculty52);
        java.lang.String str54 = faculty52.faculty;
        model.RentedItem[] rentedItemArray55 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList56 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList56, rentedItemArray55);
        model.BorrowingManager borrowingManager58 = new model.BorrowingManager(rentedItemList56);
        boolean boolean59 = borrowingManager58.canRent();
        model.Client client60 = borrowingManager58.client;
        faculty52.borrowManager = borrowingManager58;
        java.util.Collection<model.Course> courseCollection62 = faculty52.courses;
        model.NewsletterSubscriptionManager newsletterSubscriptionManager63 = faculty52.newsletterManager;
        java.util.Collection<model.Book> bookCollection64 = null;
        faculty52.textbooks = bookCollection64;
        faculty52.ID = 100;
        faculty52.ID = 8273159;
        java.util.Collection<model.Course> courseCollection70 = faculty52.courses;
        org.junit.Assert.assertNotNull(bookArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(cDArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(magazineArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(bookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(magazineArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(bookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(magazineArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(rentedItemArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(client60);
        org.junit.Assert.assertNull(courseCollection62);
        org.junit.Assert.assertNull(newsletterSubscriptionManager63);
        org.junit.Assert.assertNull(courseCollection70);
    }

    @Test
    public void test1690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1690");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        model.SearchClient searchClient8 = model.SearchClient.makeSearchClient(database7);
        java.lang.String str9 = database7.itemPath;
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(searchClient8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test1691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1691");
        model.Database database0 = null;
        model.Register register1 = model.Register.makeRegister(database0);
        model.Faculty faculty2 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection3 = faculty2.courses;
        boolean boolean6 = register1.registerAsStaff((model.Staff) faculty2, "src/Book.csv", "src/Book.csv");
        model.Database database7 = model.Database.database;
        model.Student student8 = new model.Student();
        int int9 = student8.ID;
        model.StudentOnlineResources studentOnlineResources10 = new model.StudentOnlineResources((model.Client) student8);
        student8.ID = '#';
        database7.addClient((model.Client) student8);
        student8.email = "hi!";
        boolean boolean18 = register1.registerAsStaff((model.Staff) student8, "src/CD.csv", "src/Book.csv");
        model.Database database26 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str27 = database26.getVirtualBookFilePath();
        register1.database = database26;
        model.Database database29 = model.Database.database;
        register1.database = database29;
        model.Database database31 = register1.database;
        java.lang.String str32 = database31.getClientFilePath();
        org.junit.Assert.assertNotNull(register1);
        org.junit.Assert.assertNull(courseCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "src/VirtualBook.csv" + "'", str27, "src/VirtualBook.csv");
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "src/Client.csv" + "'", str32, "src/Client.csv");
    }

    @Test
    public void test1692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1692");
        model.Database database0 = null;
        model.Register register1 = model.Register.makeRegister(database0);
        model.Faculty faculty2 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection3 = faculty2.courses;
        boolean boolean6 = register1.registerAsStaff((model.Staff) faculty2, "src/Book.csv", "src/Book.csv");
        model.Database database7 = model.Database.database;
        model.Student student8 = new model.Student();
        int int9 = student8.ID;
        model.StudentOnlineResources studentOnlineResources10 = new model.StudentOnlineResources((model.Client) student8);
        student8.ID = '#';
        database7.addClient((model.Client) student8);
        student8.email = "hi!";
        boolean boolean18 = register1.registerAsStaff((model.Staff) student8, "src/CD.csv", "src/Book.csv");
        model.Database database26 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str27 = database26.getVirtualBookFilePath();
        register1.database = database26;
        java.lang.String str29 = database26.getNewspaperFilePath();
        java.lang.String str30 = database26.getBorrowedItemFilePath();
        java.lang.String str31 = database26.getClientFilePath();
        org.junit.Assert.assertNotNull(register1);
        org.junit.Assert.assertNull(courseCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "src/VirtualBook.csv" + "'", str27, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "src/Newsletter.csv" + "'", str29, "src/Newsletter.csv");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "src/BorrowedItems.csv" + "'", str30, "src/BorrowedItems.csv");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "src/Client.csv" + "'", str31, "src/Client.csv");
    }

    @Test
    public void test1693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1693");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        virtualBook4.ISBN = "hi!";
        int int55 = virtualBook4.ID;
        model.VirtualItemContent virtualItemContent57 = new model.VirtualItemContent("hi!");
        virtualBook4.content = virtualItemContent57;
        java.lang.String str60 = virtualItemContent57.getContent("model.RegistrationFailedException: model.RentingNotAllowedException: hi!");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
    }

    @Test
    public void test1694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1694");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.Visitor visitor5 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList6 = visitor5.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources7 = new model.StudentOnlineResources((model.Client) visitor5);
        model.RentedItem[] rentedItemArray8 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList9 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList9, rentedItemArray8);
        model.BorrowingManager borrowingManager11 = new model.BorrowingManager(rentedItemList9);
        model.Visitor visitor12 = new model.Visitor();
        visitor12.email = "hi!";
        borrowingManager11.client = visitor12;
        studentOnlineResources7.client = visitor12;
        model.UniProvidedNewsletter uniProvidedNewsletter17 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter17.title = "";
        java.lang.String str20 = studentOnlineResources7.readVirtualItem((model.VirtualItem) uniProvidedNewsletter17);
        newsletterSubscriptionManager3.cancelSubscription((model.Newsletter) uniProvidedNewsletter17);
        model.Newsletter newsletter22 = null;
        newsletterSubscriptionManager3.cancelSubscription(newsletter22);
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertNull(virtualBookList6);
        org.junit.Assert.assertNotNull(rentedItemArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test1695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1695");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.Client client5 = studentOnlineResources2.client;
        model.Database database13 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str14 = database13.getVirtualBookFilePath();
        model.Database.database = database13;
        java.lang.String str16 = database13.virtualItemFilePath;
        java.lang.String str17 = database13.getBookFilePath();
        database13.itemPath = "src/Magazine.csv";
        model.Client client21 = database13.getClient("src/CD.csv");
        model.StudentOnlineResources studentOnlineResources22 = new model.StudentOnlineResources(client21);
        model.BorrowingManager borrowingManager23 = client21.borrowManager;
        model.RentedItem[] rentedItemArray24 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList25 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList25, rentedItemArray24);
        model.BorrowingManager borrowingManager27 = new model.BorrowingManager(rentedItemList25);
        model.Book book28 = null;
        model.CD cD30 = new model.CD("");
        model.Magazine magazine31 = null;
        java.util.Collection<model.Book> bookCollection32 = null;
        model.Book book33 = null;
        model.CD cD34 = null;
        model.Magazine magazine35 = null;
        model.Book[] bookArray36 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList37 = new java.util.ArrayList<model.Book>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList37, bookArray36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        model.Magazine[] magazineArray42 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList43 = new java.util.ArrayList<model.Magazine>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList43, magazineArray42);
        model.ItemSearchResult itemSearchResult45 = new model.ItemSearchResult(book33, cD34, magazine35, (java.util.Collection<model.Book>) bookList37, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList43);
        model.Book book46 = null;
        model.CD cD47 = null;
        model.Magazine magazine48 = null;
        model.Book[] bookArray49 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList50 = new java.util.ArrayList<model.Book>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList50, bookArray49);
        model.CD[] cDArray52 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList53 = new java.util.ArrayList<model.CD>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList53, cDArray52);
        model.Magazine[] magazineArray55 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList56 = new java.util.ArrayList<model.Magazine>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList56, magazineArray55);
        model.ItemSearchResult itemSearchResult58 = new model.ItemSearchResult(book46, cD47, magazine48, (java.util.Collection<model.Book>) bookList50, (java.util.Collection<model.CD>) cDList53, (java.util.Collection<model.Magazine>) magazineList56);
        itemSearchResult45.similarCD = cDList53;
        model.Book book60 = null;
        model.CD cD61 = null;
        model.Magazine magazine62 = null;
        model.Book[] bookArray63 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList64 = new java.util.ArrayList<model.Book>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList64, bookArray63);
        model.CD[] cDArray66 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList67 = new java.util.ArrayList<model.CD>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList67, cDArray66);
        model.Magazine[] magazineArray69 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList70 = new java.util.ArrayList<model.Magazine>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList70, magazineArray69);
        model.ItemSearchResult itemSearchResult72 = new model.ItemSearchResult(book60, cD61, magazine62, (java.util.Collection<model.Book>) bookList64, (java.util.Collection<model.CD>) cDList67, (java.util.Collection<model.Magazine>) magazineList70);
        model.ItemSearchResult itemSearchResult73 = new model.ItemSearchResult(book28, cD30, magazine31, bookCollection32, (java.util.Collection<model.CD>) cDList53, (java.util.Collection<model.Magazine>) magazineList70);
        cD30.ID = (short) 10;
        borrowingManager27.removeRentedItem((model.Item) cD30);
        float float77 = borrowingManager27.amountOwned;
        client21.borrowManager = borrowingManager27;
        java.util.ArrayList<model.RentedItem> rentedItemList79 = borrowingManager27.physicalItemBorrowed;
        model.BorrowingManager borrowingManager80 = new model.BorrowingManager(rentedItemList79);
        model.BorrowingManager borrowingManager81 = new model.BorrowingManager(rentedItemList79);
        client5.borrowManager = borrowingManager81;
        model.Client client83 = borrowingManager81.client;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "src/VirtualBook.csv" + "'", str14, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "model.RegistrationFailedException: model.RentingNotAllowedException: hi!" + "'", str16, "model.RegistrationFailedException: model.RentingNotAllowedException: hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "src/Book.csv" + "'", str17, "src/Book.csv");
        org.junit.Assert.assertNotNull(client21);
        org.junit.Assert.assertNull(borrowingManager23);
        org.junit.Assert.assertNotNull(rentedItemArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(bookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(magazineArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(bookArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(cDArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(magazineArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(bookArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(cDArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(magazineArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + float77 + "' != '" + 0.0f + "'", float77 == 0.0f);
        org.junit.Assert.assertNotNull(rentedItemList79);
        org.junit.Assert.assertNull(client83);
    }

    @Test
    public void test1696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1696");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.Book book1 = null;
        model.CD cD3 = new model.CD("");
        model.Magazine magazine4 = null;
        java.util.Collection<model.Book> bookCollection5 = null;
        model.Book book6 = null;
        model.CD cD7 = null;
        model.Magazine magazine8 = null;
        model.Book[] bookArray9 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList10 = new java.util.ArrayList<model.Book>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList10, bookArray9);
        model.CD[] cDArray12 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList13 = new java.util.ArrayList<model.CD>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList13, cDArray12);
        model.Magazine[] magazineArray15 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList16 = new java.util.ArrayList<model.Magazine>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList16, magazineArray15);
        model.ItemSearchResult itemSearchResult18 = new model.ItemSearchResult(book6, cD7, magazine8, (java.util.Collection<model.Book>) bookList10, (java.util.Collection<model.CD>) cDList13, (java.util.Collection<model.Magazine>) magazineList16);
        model.Book book19 = null;
        model.CD cD20 = null;
        model.Magazine magazine21 = null;
        model.Book[] bookArray22 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList23 = new java.util.ArrayList<model.Book>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList23, bookArray22);
        model.CD[] cDArray25 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList26 = new java.util.ArrayList<model.CD>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList26, cDArray25);
        model.Magazine[] magazineArray28 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList29 = new java.util.ArrayList<model.Magazine>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList29, magazineArray28);
        model.ItemSearchResult itemSearchResult31 = new model.ItemSearchResult(book19, cD20, magazine21, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList29);
        itemSearchResult18.similarCD = cDList26;
        model.Book book33 = null;
        model.CD cD34 = null;
        model.Magazine magazine35 = null;
        model.Book[] bookArray36 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList37 = new java.util.ArrayList<model.Book>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList37, bookArray36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        model.Magazine[] magazineArray42 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList43 = new java.util.ArrayList<model.Magazine>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList43, magazineArray42);
        model.ItemSearchResult itemSearchResult45 = new model.ItemSearchResult(book33, cD34, magazine35, (java.util.Collection<model.Book>) bookList37, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book1, cD3, magazine4, bookCollection5, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList43);
        cD3.ID = (short) 10;
        cD3.canBePurchased = false;
        boolean boolean51 = cD3.canBePurchased;
        model.Faculty faculty52 = new model.Faculty();
        boolean boolean53 = rentAndReturnSystem0.rentAnItem((model.Item) cD3, (model.Client) faculty52);
        java.lang.String str54 = faculty52.faculty;
        model.RentedItem[] rentedItemArray55 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList56 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList56, rentedItemArray55);
        model.BorrowingManager borrowingManager58 = new model.BorrowingManager(rentedItemList56);
        boolean boolean59 = borrowingManager58.canRent();
        model.Client client60 = borrowingManager58.client;
        faculty52.borrowManager = borrowingManager58;
        model.StudentOnlineResources studentOnlineResources62 = new model.StudentOnlineResources((model.Client) faculty52);
        model.VirtualBook virtualBook64 = studentOnlineResources62.searchAccessibleBook("src/VirtualBook.csv");
        model.Newsletter newsletter66 = studentOnlineResources62.searchSubscribedNewsletter("");
        org.junit.Assert.assertNotNull(bookArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(cDArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(magazineArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(bookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(magazineArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(bookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(magazineArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(rentedItemArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(client60);
        org.junit.Assert.assertNotNull(virtualBook64);
        org.junit.Assert.assertNull(newsletter66);
    }

    @Test
    public void test1697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1697");
        model.Course course0 = new model.Course();
        java.lang.String str1 = course0.subject;
        course0.code = "";
        int int4 = course0.year;
        course0.subject = "src/CD.csv";
        java.lang.String str7 = course0.code;
        course0.subject = "src/Newsletter.csv";
        java.lang.String str10 = course0.code;
        course0.code = "hi!";
        java.lang.String str13 = course0.code;
        java.lang.String str14 = course0.code;
        course0.year = 29;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test1698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1698");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        model.Visitor visitor4 = new model.Visitor();
        visitor4.email = "hi!";
        borrowingManager3.client = visitor4;
        model.RentedItem[] rentedItemArray8 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList9 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList9, rentedItemArray8);
        model.BorrowingManager borrowingManager11 = new model.BorrowingManager(rentedItemList9);
        model.Visitor visitor12 = new model.Visitor();
        visitor12.email = "hi!";
        borrowingManager11.client = visitor12;
        visitor4.borrowManager = borrowingManager11;
        borrowingManager11.updateBorrowingPrivilages();
        double double18 = borrowingManager11.checkBalanceOwed();
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(rentedItemArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
    }

    @Test
    public void test1699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1699");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        virtualBook4.author = "src/Client.csv";
        java.lang.Class<?> wildcardClass55 = virtualBook4.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1700");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        model.Book book4 = null;
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        java.util.Collection<model.Book> bookCollection8 = null;
        model.Book book9 = null;
        model.CD cD10 = null;
        model.Magazine magazine11 = null;
        model.Book[] bookArray12 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList13 = new java.util.ArrayList<model.Book>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList13, bookArray12);
        model.CD[] cDArray15 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList16 = new java.util.ArrayList<model.CD>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList16, cDArray15);
        model.Magazine[] magazineArray18 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList19 = new java.util.ArrayList<model.Magazine>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList19, magazineArray18);
        model.ItemSearchResult itemSearchResult21 = new model.ItemSearchResult(book9, cD10, magazine11, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList16, (java.util.Collection<model.Magazine>) magazineList19);
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        itemSearchResult21.similarCD = cDList29;
        model.Book book36 = null;
        model.CD cD37 = null;
        model.Magazine magazine38 = null;
        model.Book[] bookArray39 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList40 = new java.util.ArrayList<model.Book>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList40, bookArray39);
        model.CD[] cDArray42 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList43 = new java.util.ArrayList<model.CD>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList43, cDArray42);
        model.Magazine[] magazineArray45 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList46 = new java.util.ArrayList<model.Magazine>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList46, magazineArray45);
        model.ItemSearchResult itemSearchResult48 = new model.ItemSearchResult(book36, cD37, magazine38, (java.util.Collection<model.Book>) bookList40, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList46);
        model.ItemSearchResult itemSearchResult49 = new model.ItemSearchResult(book4, cD6, magazine7, bookCollection8, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList46);
        cD6.ID = (short) 10;
        borrowingManager3.removeRentedItem((model.Item) cD6);
        model.RentedItem[] rentedItemArray53 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList54 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList54, rentedItemArray53);
        borrowingManager3.physicalItemBorrowed = rentedItemList54;
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(bookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cDArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(magazineArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(bookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cDArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(magazineArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(rentedItemArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test1701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1701");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        model.RentedItem[] rentedItemArray4 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList5 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList5, rentedItemArray4);
        model.BorrowingManager borrowingManager7 = new model.BorrowingManager(rentedItemList5);
        model.RentedItem[] rentedItemArray8 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList9 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList9, rentedItemArray8);
        model.BorrowingManager borrowingManager11 = new model.BorrowingManager(rentedItemList9);
        borrowingManager7.physicalItemBorrowed = rentedItemList9;
        borrowingManager3.physicalItemBorrowed = rentedItemList9;
        model.Visitor visitor14 = new model.Visitor();
        model.VirtualBook[] virtualBookArray15 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList16 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList16, virtualBookArray15);
        visitor14.virtualBooksAvailable = virtualBookList16;
        borrowingManager3.client = visitor14;
        model.Faculty faculty20 = new model.Faculty();
        java.lang.String str21 = faculty20.faculty;
        borrowingManager3.client = faculty20;
        model.RentedItem[] rentedItemArray23 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList24 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList24, rentedItemArray23);
        model.BorrowingManager borrowingManager26 = new model.BorrowingManager(rentedItemList24);
        model.RentedItem[] rentedItemArray27 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList28 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList28, rentedItemArray27);
        model.BorrowingManager borrowingManager30 = new model.BorrowingManager(rentedItemList28);
        model.RentedItem[] rentedItemArray31 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList32 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList32, rentedItemArray31);
        model.BorrowingManager borrowingManager34 = new model.BorrowingManager(rentedItemList32);
        borrowingManager30.physicalItemBorrowed = rentedItemList32;
        borrowingManager26.physicalItemBorrowed = rentedItemList32;
        borrowingManager3.physicalItemBorrowed = rentedItemList32;
        java.util.ArrayList<model.RentedItem> rentedItemList38 = borrowingManager3.physicalItemBorrowed;
        model.BorrowingManager borrowingManager39 = new model.BorrowingManager(rentedItemList38);
        model.Book book40 = null;
        model.CD cD42 = new model.CD("");
        model.Magazine magazine43 = null;
        java.util.Collection<model.Book> bookCollection44 = null;
        model.Book book45 = null;
        model.CD cD46 = null;
        model.Magazine magazine47 = null;
        model.Book[] bookArray48 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList49 = new java.util.ArrayList<model.Book>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList49, bookArray48);
        model.CD[] cDArray51 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList52 = new java.util.ArrayList<model.CD>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList52, cDArray51);
        model.Magazine[] magazineArray54 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList55 = new java.util.ArrayList<model.Magazine>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList55, magazineArray54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult(book45, cD46, magazine47, (java.util.Collection<model.Book>) bookList49, (java.util.Collection<model.CD>) cDList52, (java.util.Collection<model.Magazine>) magazineList55);
        model.Book book58 = null;
        model.CD cD59 = null;
        model.Magazine magazine60 = null;
        model.Book[] bookArray61 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList62 = new java.util.ArrayList<model.Book>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList62, bookArray61);
        model.CD[] cDArray64 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList65 = new java.util.ArrayList<model.CD>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList65, cDArray64);
        model.Magazine[] magazineArray67 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList68 = new java.util.ArrayList<model.Magazine>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList68, magazineArray67);
        model.ItemSearchResult itemSearchResult70 = new model.ItemSearchResult(book58, cD59, magazine60, (java.util.Collection<model.Book>) bookList62, (java.util.Collection<model.CD>) cDList65, (java.util.Collection<model.Magazine>) magazineList68);
        itemSearchResult57.similarCD = cDList65;
        model.Book book72 = null;
        model.CD cD73 = null;
        model.Magazine magazine74 = null;
        model.Book[] bookArray75 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList76 = new java.util.ArrayList<model.Book>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList76, bookArray75);
        model.CD[] cDArray78 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList79 = new java.util.ArrayList<model.CD>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList79, cDArray78);
        model.Magazine[] magazineArray81 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList82 = new java.util.ArrayList<model.Magazine>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList82, magazineArray81);
        model.ItemSearchResult itemSearchResult84 = new model.ItemSearchResult(book72, cD73, magazine74, (java.util.Collection<model.Book>) bookList76, (java.util.Collection<model.CD>) cDList79, (java.util.Collection<model.Magazine>) magazineList82);
        model.ItemSearchResult itemSearchResult85 = new model.ItemSearchResult(book40, cD42, magazine43, bookCollection44, (java.util.Collection<model.CD>) cDList65, (java.util.Collection<model.Magazine>) magazineList82);
        // The following exception was thrown during execution in test generation
        try {
            borrowingManager39.rentAnItem((model.Item) cD42, "hi!");
            org.junit.Assert.fail("Expected exception of type model.RentingNotAllowedException; message: Item Not Rentable.");
        } catch (model.RentingNotAllowedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(rentedItemArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rentedItemArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(virtualBookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(rentedItemArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(rentedItemArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(rentedItemArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(rentedItemList38);
        org.junit.Assert.assertNotNull(bookArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(cDArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(magazineArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(bookArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(cDArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(magazineArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(bookArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(cDArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(magazineArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test1702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1702");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.BuySpecialItems buySpecialItems1 = new model.BuySpecialItems();
        model.PayDebit payDebit2 = new model.PayDebit();
        buySpecialItems1.paymentAPI = payDebit2;
        rentAndReturnSystem0.paymentAPI = payDebit2;
        model.Payment payment5 = rentAndReturnSystem0.paymentAPI;
        model.Student student6 = new model.Student();
        int int7 = student6.ID;
        model.StudentOnlineResources studentOnlineResources8 = new model.StudentOnlineResources((model.Client) student6);
        model.VirtualBook virtualBook10 = studentOnlineResources8.searchAccessibleBook("");
        model.CD cD12 = new model.CD("");
        model.Magazine magazine13 = null;
        model.Book book14 = null;
        model.CD cD15 = null;
        model.Magazine magazine16 = null;
        model.Book[] bookArray17 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList18 = new java.util.ArrayList<model.Book>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList18, bookArray17);
        model.CD[] cDArray20 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList21 = new java.util.ArrayList<model.CD>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList21, cDArray20);
        model.Magazine[] magazineArray23 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList24 = new java.util.ArrayList<model.Magazine>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList24, magazineArray23);
        model.ItemSearchResult itemSearchResult26 = new model.ItemSearchResult(book14, cD15, magazine16, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList21, (java.util.Collection<model.Magazine>) magazineList24);
        model.Book book27 = null;
        model.CD cD28 = null;
        model.Magazine magazine29 = null;
        model.Book[] bookArray30 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList31 = new java.util.ArrayList<model.Book>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList31, bookArray30);
        model.CD[] cDArray33 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList34 = new java.util.ArrayList<model.CD>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList34, cDArray33);
        model.Magazine[] magazineArray36 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList37 = new java.util.ArrayList<model.Magazine>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList37, magazineArray36);
        model.ItemSearchResult itemSearchResult39 = new model.ItemSearchResult(book27, cD28, magazine29, (java.util.Collection<model.Book>) bookList31, (java.util.Collection<model.CD>) cDList34, (java.util.Collection<model.Magazine>) magazineList37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        itemSearchResult39.similarCD = cDList41;
        model.Book book44 = null;
        model.CD cD45 = null;
        model.Magazine magazine46 = null;
        model.Book[] bookArray47 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList48 = new java.util.ArrayList<model.Book>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList48, bookArray47);
        model.CD[] cDArray50 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList51 = new java.util.ArrayList<model.CD>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList51, cDArray50);
        model.Magazine[] magazineArray53 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList54 = new java.util.ArrayList<model.Magazine>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList54, magazineArray53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult(book44, cD45, magazine46, (java.util.Collection<model.Book>) bookList48, (java.util.Collection<model.CD>) cDList51, (java.util.Collection<model.Magazine>) magazineList54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult((model.Book) virtualBook10, cD12, magazine13, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList54);
        int int58 = virtualBook10.ID;
        int int59 = virtualBook10.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter60 = null;
        model.PaidNewsletter paidNewsletter61 = null;
        model.VirtualItemSearchResult virtualItemSearchResult62 = new model.VirtualItemSearchResult(virtualBook10, uniProvidedNewsletter60, paidNewsletter61);
        virtualBook10.title = "src/Magazine.csv";
        java.lang.String str65 = virtualBook10.publisher;
        virtualBook10.location = "src/Book.csv";
        model.Faculty faculty68 = new model.Faculty();
        faculty68.username = "hi!";
        java.util.Collection<model.Course> courseCollection71 = null;
        faculty68.courses = courseCollection71;
        java.util.Collection<model.Course> courseCollection73 = faculty68.courses;
        model.Newsletter[] newsletterArray74 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList75 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList75, newsletterArray74);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager77 = new model.NewsletterSubscriptionManager(newsletterList75);
        model.Client client78 = newsletterSubscriptionManager77.client;
        model.Student student79 = new model.Student();
        int int80 = student79.ID;
        model.StudentOnlineResources studentOnlineResources81 = new model.StudentOnlineResources((model.Client) student79);
        student79.ID = '#';
        java.lang.String str84 = student79.email;
        newsletterSubscriptionManager77.client = student79;
        model.Newsletter[] newsletterArray86 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList87 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList87, newsletterArray86);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager89 = new model.NewsletterSubscriptionManager(newsletterList87);
        newsletterSubscriptionManager77.newsletterSubscribed = newsletterList87;
        faculty68.newsletterManager = newsletterSubscriptionManager77;
        java.util.ArrayList<model.VirtualBook> virtualBookList92 = faculty68.virtualBooksAvailable;
        faculty68.email = "src/BorrowedItems.csv";
        boolean boolean95 = rentAndReturnSystem0.returnAnItem((model.Item) virtualBook10, (model.Client) faculty68);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean96 = faculty68.allowedToBorrow();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"model.BorrowingManager.canRent()\" because \"this.borrowManager\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(payment5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(virtualBook10);
        org.junit.Assert.assertNotNull(bookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(cDArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(magazineArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(bookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(magazineArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(bookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(cDArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(magazineArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 20 + "'", int59 == 20);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(courseCollection73);
        org.junit.Assert.assertNotNull(newsletterArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(client78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(newsletterArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNull(virtualBookList92);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test1703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1703");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.Newsletter[] newsletterArray5 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList6 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList6, newsletterArray5);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager8 = new model.NewsletterSubscriptionManager(newsletterList6);
        model.Client client9 = newsletterSubscriptionManager8.client;
        model.UniProvidedNewsletter uniProvidedNewsletter10 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter10.title = "";
        java.lang.String str13 = uniProvidedNewsletter10.title;
        newsletterSubscriptionManager8.subscribeToUniProvidedNewsletter(uniProvidedNewsletter10, "");
        model.Student student16 = new model.Student();
        int int17 = student16.ID;
        model.StudentOnlineResources studentOnlineResources18 = new model.StudentOnlineResources((model.Client) student16);
        model.VirtualBook virtualBook20 = studentOnlineResources18.searchAccessibleBook("");
        model.CD cD22 = new model.CD("");
        model.Magazine magazine23 = null;
        model.Book book24 = null;
        model.CD cD25 = null;
        model.Magazine magazine26 = null;
        model.Book[] bookArray27 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList28 = new java.util.ArrayList<model.Book>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList28, bookArray27);
        model.CD[] cDArray30 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList31 = new java.util.ArrayList<model.CD>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList31, cDArray30);
        model.Magazine[] magazineArray33 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList34 = new java.util.ArrayList<model.Magazine>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList34, magazineArray33);
        model.ItemSearchResult itemSearchResult36 = new model.ItemSearchResult(book24, cD25, magazine26, (java.util.Collection<model.Book>) bookList28, (java.util.Collection<model.CD>) cDList31, (java.util.Collection<model.Magazine>) magazineList34);
        model.Book book37 = null;
        model.CD cD38 = null;
        model.Magazine magazine39 = null;
        model.Book[] bookArray40 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList41 = new java.util.ArrayList<model.Book>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList41, bookArray40);
        model.CD[] cDArray43 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList44 = new java.util.ArrayList<model.CD>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList44, cDArray43);
        model.Magazine[] magazineArray46 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList47 = new java.util.ArrayList<model.Magazine>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList47, magazineArray46);
        model.ItemSearchResult itemSearchResult49 = new model.ItemSearchResult(book37, cD38, magazine39, (java.util.Collection<model.Book>) bookList41, (java.util.Collection<model.CD>) cDList44, (java.util.Collection<model.Magazine>) magazineList47);
        model.CD[] cDArray50 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList51 = new java.util.ArrayList<model.CD>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList51, cDArray50);
        itemSearchResult49.similarCD = cDList51;
        model.Book book54 = null;
        model.CD cD55 = null;
        model.Magazine magazine56 = null;
        model.Book[] bookArray57 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList58 = new java.util.ArrayList<model.Book>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList58, bookArray57);
        model.CD[] cDArray60 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList61 = new java.util.ArrayList<model.CD>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList61, cDArray60);
        model.Magazine[] magazineArray63 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList64 = new java.util.ArrayList<model.Magazine>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList64, magazineArray63);
        model.ItemSearchResult itemSearchResult66 = new model.ItemSearchResult(book54, cD55, magazine56, (java.util.Collection<model.Book>) bookList58, (java.util.Collection<model.CD>) cDList61, (java.util.Collection<model.Magazine>) magazineList64);
        model.ItemSearchResult itemSearchResult67 = new model.ItemSearchResult((model.Book) virtualBook20, cD22, magazine23, (java.util.Collection<model.Book>) bookList28, (java.util.Collection<model.CD>) cDList51, (java.util.Collection<model.Magazine>) magazineList64);
        int int68 = virtualBook20.ID;
        int int69 = virtualBook20.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter70 = null;
        model.PaidNewsletter paidNewsletter71 = null;
        model.VirtualItemSearchResult virtualItemSearchResult72 = new model.VirtualItemSearchResult(virtualBook20, uniProvidedNewsletter70, paidNewsletter71);
        model.PaidNewsletter paidNewsletter73 = virtualItemSearchResult72.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter74 = new model.UniProvidedNewsletter();
        virtualItemSearchResult72.setUniNewsletter(uniProvidedNewsletter74);
        java.lang.String str76 = uniProvidedNewsletter74.title;
        uniProvidedNewsletter74.cost = 0L;
        newsletterSubscriptionManager8.subscribeToUniProvidedNewsletter(uniProvidedNewsletter74, "");
        model.VirtualItemContent virtualItemContent82 = new model.VirtualItemContent("hi!");
        java.lang.String str83 = virtualItemContent82.link;
        java.lang.String str84 = virtualItemContent82.link;
        uniProvidedNewsletter74.content = virtualItemContent82;
        uniProvidedNewsletter74.showContent();
        model.VirtualItemContent virtualItemContent87 = uniProvidedNewsletter74.content;
        uniProvidedNewsletter74.showContent();
        java.lang.String str89 = studentOnlineResources2.readVirtualItem((model.VirtualItem) uniProvidedNewsletter74);
        model.Newsletter newsletter91 = studentOnlineResources2.searchSubscribedNewsletter("src/Client.csv");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(newsletterArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(client9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(virtualBook20);
        org.junit.Assert.assertNotNull(bookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(cDArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(magazineArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(bookArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(cDArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(magazineArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(cDArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(bookArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(cDArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(magazineArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 20 + "'", int69 == 20);
        org.junit.Assert.assertNull(paidNewsletter73);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!" + "'", str83, "hi!");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "hi!" + "'", str84, "hi!");
        org.junit.Assert.assertNotNull(virtualItemContent87);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNull(newsletter91);
    }

    @Test
    public void test1704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1704");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        model.RentedItem[] rentedItemArray4 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList5 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList5, rentedItemArray4);
        model.BorrowingManager borrowingManager7 = new model.BorrowingManager(rentedItemList5);
        model.RentedItem[] rentedItemArray8 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList9 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList9, rentedItemArray8);
        model.BorrowingManager borrowingManager11 = new model.BorrowingManager(rentedItemList9);
        borrowingManager7.physicalItemBorrowed = rentedItemList9;
        borrowingManager3.physicalItemBorrowed = rentedItemList9;
        int int14 = borrowingManager3.itemsBorrowedCount;
        java.util.ArrayList<model.RentedItem> rentedItemList15 = borrowingManager3.physicalItemBorrowed;
        model.BorrowingManager borrowingManager16 = new model.BorrowingManager(rentedItemList15);
        model.Student student17 = new model.Student();
        int int18 = student17.ID;
        model.StudentOnlineResources studentOnlineResources19 = new model.StudentOnlineResources((model.Client) student17);
        model.StudentOnlineResources studentOnlineResources20 = new model.StudentOnlineResources((model.Client) student17);
        student17.ID = 9047933;
        borrowingManager16.client = student17;
        borrowingManager16.amountOwned = 12;
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(rentedItemArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rentedItemArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(rentedItemList15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test1705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1705");
        model.PayCredit payCredit0 = new model.PayCredit();
        payCredit0.amountPay = 10;
        payCredit0.pay((double) (-1.0f));
        payCredit0.pay((double) ' ');
        payCredit0.pay(0.0d);
        double double9 = payCredit0.amountPay;
        payCredit0.amountPay = 1.0f;
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 41.0d + "'", double9 == 41.0d);
    }

    @Test
    public void test1706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1706");
        model.Course course0 = new model.Course();
        java.lang.String str1 = course0.subject;
        course0.code = "model.LoginFailedException: hi!";
        course0.subject = "";
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test1707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1707");
        model.Database database0 = null;
        model.Login login1 = new model.Login(database0);
        // The following exception was thrown during execution in test generation
        try {
            model.Client client4 = login1.login("", "src/Client.csv");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"model.Database.getClientFilePath()\" because \"this.db\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1708");
        model.LoginFailedException loginFailedException1 = new model.LoginFailedException("src/BorrowedItems.csv");
    }

    @Test
    public void test1709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1709");
        model.ItemManagement itemManagement0 = new model.ItemManagement();
        model.Database database1 = null;
        itemManagement0.database = database1;
        model.Item item4 = itemManagement0.selectAnItemFromDatabase((int) '#');
        model.Student student5 = new model.Student();
        int int6 = student5.ID;
        model.StudentOnlineResources studentOnlineResources7 = new model.StudentOnlineResources((model.Client) student5);
        model.VirtualBook virtualBook9 = studentOnlineResources7.searchAccessibleBook("");
        model.CD cD11 = new model.CD("");
        model.Magazine magazine12 = null;
        model.Book book13 = null;
        model.CD cD14 = null;
        model.Magazine magazine15 = null;
        model.Book[] bookArray16 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList17 = new java.util.ArrayList<model.Book>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList17, bookArray16);
        model.CD[] cDArray19 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList20 = new java.util.ArrayList<model.CD>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList20, cDArray19);
        model.Magazine[] magazineArray22 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList23 = new java.util.ArrayList<model.Magazine>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList23, magazineArray22);
        model.ItemSearchResult itemSearchResult25 = new model.ItemSearchResult(book13, cD14, magazine15, (java.util.Collection<model.Book>) bookList17, (java.util.Collection<model.CD>) cDList20, (java.util.Collection<model.Magazine>) magazineList23);
        model.Book book26 = null;
        model.CD cD27 = null;
        model.Magazine magazine28 = null;
        model.Book[] bookArray29 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList30 = new java.util.ArrayList<model.Book>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList30, bookArray29);
        model.CD[] cDArray32 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList33 = new java.util.ArrayList<model.CD>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList33, cDArray32);
        model.Magazine[] magazineArray35 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList36 = new java.util.ArrayList<model.Magazine>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList36, magazineArray35);
        model.ItemSearchResult itemSearchResult38 = new model.ItemSearchResult(book26, cD27, magazine28, (java.util.Collection<model.Book>) bookList30, (java.util.Collection<model.CD>) cDList33, (java.util.Collection<model.Magazine>) magazineList36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        itemSearchResult38.similarCD = cDList40;
        model.Book book43 = null;
        model.CD cD44 = null;
        model.Magazine magazine45 = null;
        model.Book[] bookArray46 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList47 = new java.util.ArrayList<model.Book>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList47, bookArray46);
        model.CD[] cDArray49 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList50 = new java.util.ArrayList<model.CD>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList50, cDArray49);
        model.Magazine[] magazineArray52 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList53 = new java.util.ArrayList<model.Magazine>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList53, magazineArray52);
        model.ItemSearchResult itemSearchResult55 = new model.ItemSearchResult(book43, cD44, magazine45, (java.util.Collection<model.Book>) bookList47, (java.util.Collection<model.CD>) cDList50, (java.util.Collection<model.Magazine>) magazineList53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult((model.Book) virtualBook9, cD11, magazine12, (java.util.Collection<model.Book>) bookList17, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList53);
        virtualBook9.ID = (short) 10;
        virtualBook9.showContent();
        virtualBook9.author = "";
        itemManagement0.disableAnItem((model.Item) virtualBook9);
        model.Database database63 = itemManagement0.database;
        org.junit.Assert.assertNull(item4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(virtualBook9);
        org.junit.Assert.assertNotNull(bookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(cDArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(magazineArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(bookArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(cDArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(magazineArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(bookArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(cDArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(magazineArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(database63);
    }

    @Test
    public void test1710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1710");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        model.RentedItem[] rentedItemArray4 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList5 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList5, rentedItemArray4);
        model.BorrowingManager borrowingManager7 = new model.BorrowingManager(rentedItemList5);
        borrowingManager3.physicalItemBorrowed = rentedItemList5;
        model.BorrowingManager borrowingManager9 = new model.BorrowingManager(rentedItemList5);
        model.BorrowingManager borrowingManager10 = new model.BorrowingManager(rentedItemList5);
        borrowingManager10.amountOwned = (byte) 1;
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(rentedItemArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1711");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.Database.database = database7;
        java.lang.String str10 = database7.virtualItemFilePath;
        model.Login login11 = model.Login.makeLogin(database7);
        model.ItemManagement itemManagement12 = new model.ItemManagement();
        model.Database database13 = null;
        itemManagement12.database = database13;
        model.BuySpecialItems buySpecialItems15 = new model.BuySpecialItems();
        model.Book book16 = null;
        model.CD cD18 = new model.CD("");
        model.Magazine magazine19 = null;
        java.util.Collection<model.Book> bookCollection20 = null;
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.Book book34 = null;
        model.CD cD35 = null;
        model.Magazine magazine36 = null;
        model.Book[] bookArray37 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList38 = new java.util.ArrayList<model.Book>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList38, bookArray37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        model.Magazine[] magazineArray43 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList44 = new java.util.ArrayList<model.Magazine>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList44, magazineArray43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book34, cD35, magazine36, (java.util.Collection<model.Book>) bookList38, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList44);
        itemSearchResult33.similarCD = cDList41;
        model.Book book48 = null;
        model.CD cD49 = null;
        model.Magazine magazine50 = null;
        model.Book[] bookArray51 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList52 = new java.util.ArrayList<model.Book>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList52, bookArray51);
        model.CD[] cDArray54 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList55 = new java.util.ArrayList<model.CD>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList55, cDArray54);
        model.Magazine[] magazineArray57 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList58 = new java.util.ArrayList<model.Magazine>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList58, magazineArray57);
        model.ItemSearchResult itemSearchResult60 = new model.ItemSearchResult(book48, cD49, magazine50, (java.util.Collection<model.Book>) bookList52, (java.util.Collection<model.CD>) cDList55, (java.util.Collection<model.Magazine>) magazineList58);
        model.ItemSearchResult itemSearchResult61 = new model.ItemSearchResult(book16, cD18, magazine19, bookCollection20, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList58);
        cD18.ID = (short) 10;
        boolean boolean65 = buySpecialItems15.buyAnItem((model.Item) cD18, (double) 0);
        itemManagement12.enableAnItem((model.Item) cD18);
        model.Database database67 = model.Database.database;
        model.Student student68 = new model.Student();
        int int69 = student68.ID;
        model.StudentOnlineResources studentOnlineResources70 = new model.StudentOnlineResources((model.Client) student68);
        student68.ID = '#';
        database67.addClient((model.Client) student68);
        itemManagement12.database = database67;
        java.lang.String str75 = database67.getNewspaperFilePath();
        login11.db = database67;
        model.Login login77 = model.Login.makeLogin(database67);
        model.Database database78 = login77.db;
        model.SearchItems searchItems79 = new model.SearchItems(database78);
        java.lang.String str80 = database78.getClientFilePath();
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "model.RegistrationFailedException: model.RentingNotAllowedException: hi!" + "'", str10, "model.RegistrationFailedException: model.RentingNotAllowedException: hi!");
        org.junit.Assert.assertNotNull(login11);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(bookArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(magazineArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(bookArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(cDArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(magazineArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(database67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "src/Newsletter.csv" + "'", str75, "src/Newsletter.csv");
        org.junit.Assert.assertNotNull(login77);
        org.junit.Assert.assertNotNull(database78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "src/Client.csv" + "'", str80, "src/Client.csv");
    }

    @Test
    public void test1712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1712");
        model.Book book0 = null;
        model.CD cD1 = null;
        model.Magazine magazine2 = null;
        model.Book[] bookArray3 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList4 = new java.util.ArrayList<model.Book>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList4, bookArray3);
        model.CD[] cDArray6 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList7 = new java.util.ArrayList<model.CD>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList7, cDArray6);
        model.Magazine[] magazineArray9 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList10 = new java.util.ArrayList<model.Magazine>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList10, magazineArray9);
        model.ItemSearchResult itemSearchResult12 = new model.ItemSearchResult(book0, cD1, magazine2, (java.util.Collection<model.Book>) bookList4, (java.util.Collection<model.CD>) cDList7, (java.util.Collection<model.Magazine>) magazineList10);
        model.CD[] cDArray13 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList14 = new java.util.ArrayList<model.CD>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList14, cDArray13);
        itemSearchResult12.similarCD = cDList14;
        model.CD cD17 = itemSearchResult12.cd;
        model.Book book18 = null;
        model.CD cD20 = new model.CD("");
        model.Magazine magazine21 = null;
        java.util.Collection<model.Book> bookCollection22 = null;
        model.Book book23 = null;
        model.CD cD24 = null;
        model.Magazine magazine25 = null;
        model.Book[] bookArray26 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList27 = new java.util.ArrayList<model.Book>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList27, bookArray26);
        model.CD[] cDArray29 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList30 = new java.util.ArrayList<model.CD>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList30, cDArray29);
        model.Magazine[] magazineArray32 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList33 = new java.util.ArrayList<model.Magazine>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList33, magazineArray32);
        model.ItemSearchResult itemSearchResult35 = new model.ItemSearchResult(book23, cD24, magazine25, (java.util.Collection<model.Book>) bookList27, (java.util.Collection<model.CD>) cDList30, (java.util.Collection<model.Magazine>) magazineList33);
        model.Book book36 = null;
        model.CD cD37 = null;
        model.Magazine magazine38 = null;
        model.Book[] bookArray39 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList40 = new java.util.ArrayList<model.Book>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList40, bookArray39);
        model.CD[] cDArray42 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList43 = new java.util.ArrayList<model.CD>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList43, cDArray42);
        model.Magazine[] magazineArray45 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList46 = new java.util.ArrayList<model.Magazine>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList46, magazineArray45);
        model.ItemSearchResult itemSearchResult48 = new model.ItemSearchResult(book36, cD37, magazine38, (java.util.Collection<model.Book>) bookList40, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList46);
        itemSearchResult35.similarCD = cDList43;
        model.Book book50 = null;
        model.CD cD51 = null;
        model.Magazine magazine52 = null;
        model.Book[] bookArray53 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList54 = new java.util.ArrayList<model.Book>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList54, bookArray53);
        model.CD[] cDArray56 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList57 = new java.util.ArrayList<model.CD>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList57, cDArray56);
        model.Magazine[] magazineArray59 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList60 = new java.util.ArrayList<model.Magazine>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList60, magazineArray59);
        model.ItemSearchResult itemSearchResult62 = new model.ItemSearchResult(book50, cD51, magazine52, (java.util.Collection<model.Book>) bookList54, (java.util.Collection<model.CD>) cDList57, (java.util.Collection<model.Magazine>) magazineList60);
        model.ItemSearchResult itemSearchResult63 = new model.ItemSearchResult(book18, cD20, magazine21, bookCollection22, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList60);
        itemSearchResult12.similarCD = cDList43;
        java.util.Collection<model.Book> bookCollection65 = itemSearchResult12.similarBooks;
        model.CD cD66 = itemSearchResult12.cd;
        model.Book book67 = itemSearchResult12.book;
        org.junit.Assert.assertNotNull(bookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(cDArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(magazineArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(cDArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(cD17);
        org.junit.Assert.assertNotNull(bookArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(cDArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(magazineArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(bookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cDArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(magazineArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(bookArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(cDArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(magazineArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(bookCollection65);
        org.junit.Assert.assertNull(cD66);
        org.junit.Assert.assertNull(book67);
    }

    @Test
    public void test1713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1713");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        model.Book book4 = null;
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        java.util.Collection<model.Book> bookCollection8 = null;
        model.Book book9 = null;
        model.CD cD10 = null;
        model.Magazine magazine11 = null;
        model.Book[] bookArray12 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList13 = new java.util.ArrayList<model.Book>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList13, bookArray12);
        model.CD[] cDArray15 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList16 = new java.util.ArrayList<model.CD>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList16, cDArray15);
        model.Magazine[] magazineArray18 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList19 = new java.util.ArrayList<model.Magazine>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList19, magazineArray18);
        model.ItemSearchResult itemSearchResult21 = new model.ItemSearchResult(book9, cD10, magazine11, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList16, (java.util.Collection<model.Magazine>) magazineList19);
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        itemSearchResult21.similarCD = cDList29;
        model.Book book36 = null;
        model.CD cD37 = null;
        model.Magazine magazine38 = null;
        model.Book[] bookArray39 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList40 = new java.util.ArrayList<model.Book>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList40, bookArray39);
        model.CD[] cDArray42 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList43 = new java.util.ArrayList<model.CD>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList43, cDArray42);
        model.Magazine[] magazineArray45 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList46 = new java.util.ArrayList<model.Magazine>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList46, magazineArray45);
        model.ItemSearchResult itemSearchResult48 = new model.ItemSearchResult(book36, cD37, magazine38, (java.util.Collection<model.Book>) bookList40, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList46);
        model.ItemSearchResult itemSearchResult49 = new model.ItemSearchResult(book4, cD6, magazine7, bookCollection8, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList46);
        cD6.ID = (short) 10;
        borrowingManager3.removeRentedItem((model.Item) cD6);
        float float53 = borrowingManager3.amountOwned;
        borrowingManager3.itemsBorrowedCount = 1;
        borrowingManager3.itemsBorrowedCount = 8547594;
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(bookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cDArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(magazineArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(bookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cDArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(magazineArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + 0.0f + "'", float53 == 0.0f);
    }

    @Test
    public void test1714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1714");
        model.Database database0 = model.Database.database;
        java.util.ArrayList<java.lang.String> strList1 = database0.getAllItems();
        model.Client client3 = database0.getClient("src/Magazine.csv");
        model.Register register4 = model.Register.makeRegister(database0);
        model.Login login5 = new model.Login(database0);
        model.SearchVirtualItem searchVirtualItem6 = new model.SearchVirtualItem(database0);
        org.junit.Assert.assertNotNull(database0);
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(client3);
        org.junit.Assert.assertNotNull(register4);
    }

    @Test
    public void test1715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1715");
        model.BuySpecialItems buySpecialItems0 = new model.BuySpecialItems();
        model.Payment payment1 = buySpecialItems0.paymentAPI;
        model.BuySpecialItems buySpecialItems2 = new model.BuySpecialItems();
        model.Payment payment3 = buySpecialItems2.paymentAPI;
        java.util.ArrayList<model.Item> itemList4 = buySpecialItems2.purchasedItems;
        buySpecialItems0.purchasedItems = itemList4;
        model.BuySpecialItems buySpecialItems6 = new model.BuySpecialItems();
        model.Payment payment7 = null;
        buySpecialItems6.paymentAPI = payment7;
        model.RequestForum requestForum9 = model.RequestForum.createRequestForum();
        model.LibraryManagementTeam libraryManagementTeam10 = new model.LibraryManagementTeam();
        int int11 = libraryManagementTeam10.ID;
        int int12 = libraryManagementTeam10.accessCode;
        model.Item item13 = null;
        libraryManagementTeam10.addAnItem(item13);
        requestForum9.managementTeam = libraryManagementTeam10;
        java.util.ArrayList<model.Item> itemList16 = libraryManagementTeam10.items;
        buySpecialItems6.purchasedItems = itemList16;
        buySpecialItems0.purchasedItems = itemList16;
        java.util.ArrayList<model.Item> itemList19 = buySpecialItems0.purchasedItems;
        model.BuySpecialItems buySpecialItems20 = new model.BuySpecialItems();
        model.Payment payment21 = buySpecialItems20.paymentAPI;
        model.BuySpecialItems buySpecialItems22 = new model.BuySpecialItems();
        model.Payment payment23 = buySpecialItems22.paymentAPI;
        java.util.ArrayList<model.Item> itemList24 = buySpecialItems22.purchasedItems;
        buySpecialItems20.purchasedItems = itemList24;
        model.LibraryManagementTeam libraryManagementTeam26 = new model.LibraryManagementTeam();
        libraryManagementTeam26.accessCode = (byte) 10;
        java.util.ArrayList<model.Item> itemList29 = libraryManagementTeam26.items;
        model.LibraryManagementTeam libraryManagementTeam30 = new model.LibraryManagementTeam();
        libraryManagementTeam30.accessCode = (byte) 10;
        java.util.ArrayList<model.Item> itemList33 = libraryManagementTeam30.items;
        libraryManagementTeam26.items = itemList33;
        buySpecialItems20.purchasedItems = itemList33;
        buySpecialItems0.purchasedItems = itemList33;
        org.junit.Assert.assertNull(payment1);
        org.junit.Assert.assertNull(payment3);
        org.junit.Assert.assertNotNull(itemList4);
        org.junit.Assert.assertNotNull(requestForum9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(itemList16);
        org.junit.Assert.assertNotNull(itemList19);
        org.junit.Assert.assertNull(payment21);
        org.junit.Assert.assertNull(payment23);
        org.junit.Assert.assertNotNull(itemList24);
        org.junit.Assert.assertNotNull(itemList29);
        org.junit.Assert.assertNotNull(itemList33);
    }

    @Test
    public void test1716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1716");
        model.Book book0 = null;
        model.CD cD1 = null;
        model.Magazine magazine2 = null;
        model.Book[] bookArray3 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList4 = new java.util.ArrayList<model.Book>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList4, bookArray3);
        model.CD[] cDArray6 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList7 = new java.util.ArrayList<model.CD>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList7, cDArray6);
        model.Magazine[] magazineArray9 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList10 = new java.util.ArrayList<model.Magazine>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList10, magazineArray9);
        model.ItemSearchResult itemSearchResult12 = new model.ItemSearchResult(book0, cD1, magazine2, (java.util.Collection<model.Book>) bookList4, (java.util.Collection<model.CD>) cDList7, (java.util.Collection<model.Magazine>) magazineList10);
        model.Book book13 = null;
        model.CD cD14 = null;
        model.Magazine magazine15 = null;
        model.Book[] bookArray16 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList17 = new java.util.ArrayList<model.Book>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList17, bookArray16);
        model.CD[] cDArray19 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList20 = new java.util.ArrayList<model.CD>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList20, cDArray19);
        model.Magazine[] magazineArray22 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList23 = new java.util.ArrayList<model.Magazine>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList23, magazineArray22);
        model.ItemSearchResult itemSearchResult25 = new model.ItemSearchResult(book13, cD14, magazine15, (java.util.Collection<model.Book>) bookList17, (java.util.Collection<model.CD>) cDList20, (java.util.Collection<model.Magazine>) magazineList23);
        itemSearchResult12.similarCD = cDList20;
        model.Magazine magazine27 = itemSearchResult12.magazine;
        model.CD cD28 = itemSearchResult12.cd;
        java.util.Collection<model.Book> bookCollection29 = itemSearchResult12.similarBooks;
        model.Student student30 = new model.Student();
        int int31 = student30.ID;
        model.StudentOnlineResources studentOnlineResources32 = new model.StudentOnlineResources((model.Client) student30);
        model.VirtualBook virtualBook34 = studentOnlineResources32.searchAccessibleBook("");
        model.CD cD36 = new model.CD("");
        model.Magazine magazine37 = null;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.Book book51 = null;
        model.CD cD52 = null;
        model.Magazine magazine53 = null;
        model.Book[] bookArray54 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList55 = new java.util.ArrayList<model.Book>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList55, bookArray54);
        model.CD[] cDArray57 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList58 = new java.util.ArrayList<model.CD>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList58, cDArray57);
        model.Magazine[] magazineArray60 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList61 = new java.util.ArrayList<model.Magazine>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList61, magazineArray60);
        model.ItemSearchResult itemSearchResult63 = new model.ItemSearchResult(book51, cD52, magazine53, (java.util.Collection<model.Book>) bookList55, (java.util.Collection<model.CD>) cDList58, (java.util.Collection<model.Magazine>) magazineList61);
        model.CD[] cDArray64 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList65 = new java.util.ArrayList<model.CD>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList65, cDArray64);
        itemSearchResult63.similarCD = cDList65;
        model.Book book68 = null;
        model.CD cD69 = null;
        model.Magazine magazine70 = null;
        model.Book[] bookArray71 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList72 = new java.util.ArrayList<model.Book>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList72, bookArray71);
        model.CD[] cDArray74 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList75 = new java.util.ArrayList<model.CD>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList75, cDArray74);
        model.Magazine[] magazineArray77 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList78 = new java.util.ArrayList<model.Magazine>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList78, magazineArray77);
        model.ItemSearchResult itemSearchResult80 = new model.ItemSearchResult(book68, cD69, magazine70, (java.util.Collection<model.Book>) bookList72, (java.util.Collection<model.CD>) cDList75, (java.util.Collection<model.Magazine>) magazineList78);
        model.ItemSearchResult itemSearchResult81 = new model.ItemSearchResult((model.Book) virtualBook34, cD36, magazine37, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList65, (java.util.Collection<model.Magazine>) magazineList78);
        itemSearchResult12.book = virtualBook34;
        int int83 = virtualBook34.ID;
        java.lang.String str84 = virtualBook34.location;
        org.junit.Assert.assertNotNull(bookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(cDArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(magazineArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(bookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(cDArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(magazineArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(magazine27);
        org.junit.Assert.assertNull(cD28);
        org.junit.Assert.assertNotNull(bookCollection29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(virtualBook34);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(bookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(cDArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(magazineArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(cDArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(bookArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(cDArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(magazineArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNull(str84);
    }

    @Test
    public void test1717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1717");
        model.BuySpecialItems buySpecialItems0 = new model.BuySpecialItems();
        model.Book book1 = null;
        model.CD cD3 = new model.CD("");
        model.Magazine magazine4 = null;
        java.util.Collection<model.Book> bookCollection5 = null;
        model.Book book6 = null;
        model.CD cD7 = null;
        model.Magazine magazine8 = null;
        model.Book[] bookArray9 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList10 = new java.util.ArrayList<model.Book>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList10, bookArray9);
        model.CD[] cDArray12 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList13 = new java.util.ArrayList<model.CD>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList13, cDArray12);
        model.Magazine[] magazineArray15 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList16 = new java.util.ArrayList<model.Magazine>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList16, magazineArray15);
        model.ItemSearchResult itemSearchResult18 = new model.ItemSearchResult(book6, cD7, magazine8, (java.util.Collection<model.Book>) bookList10, (java.util.Collection<model.CD>) cDList13, (java.util.Collection<model.Magazine>) magazineList16);
        model.Book book19 = null;
        model.CD cD20 = null;
        model.Magazine magazine21 = null;
        model.Book[] bookArray22 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList23 = new java.util.ArrayList<model.Book>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList23, bookArray22);
        model.CD[] cDArray25 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList26 = new java.util.ArrayList<model.CD>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList26, cDArray25);
        model.Magazine[] magazineArray28 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList29 = new java.util.ArrayList<model.Magazine>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList29, magazineArray28);
        model.ItemSearchResult itemSearchResult31 = new model.ItemSearchResult(book19, cD20, magazine21, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList29);
        itemSearchResult18.similarCD = cDList26;
        model.Book book33 = null;
        model.CD cD34 = null;
        model.Magazine magazine35 = null;
        model.Book[] bookArray36 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList37 = new java.util.ArrayList<model.Book>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList37, bookArray36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        model.Magazine[] magazineArray42 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList43 = new java.util.ArrayList<model.Magazine>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList43, magazineArray42);
        model.ItemSearchResult itemSearchResult45 = new model.ItemSearchResult(book33, cD34, magazine35, (java.util.Collection<model.Book>) bookList37, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book1, cD3, magazine4, bookCollection5, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList43);
        cD3.ID = (short) 10;
        boolean boolean50 = buySpecialItems0.buyAnItem((model.Item) cD3, (double) 0);
        java.util.ArrayList<model.Item> itemList51 = buySpecialItems0.purchasedItems;
        java.util.ArrayList<model.Item> itemList52 = buySpecialItems0.purchasedItems;
        java.util.ArrayList<model.Item> itemList53 = buySpecialItems0.purchasedItems;
        model.BuySpecialItems buySpecialItems54 = new model.BuySpecialItems();
        model.Payment payment55 = null;
        buySpecialItems54.paymentAPI = payment55;
        model.RequestForum requestForum57 = model.RequestForum.createRequestForum();
        model.LibraryManagementTeam libraryManagementTeam58 = new model.LibraryManagementTeam();
        int int59 = libraryManagementTeam58.ID;
        int int60 = libraryManagementTeam58.accessCode;
        model.Item item61 = null;
        libraryManagementTeam58.addAnItem(item61);
        requestForum57.managementTeam = libraryManagementTeam58;
        java.util.ArrayList<model.Item> itemList64 = libraryManagementTeam58.items;
        buySpecialItems54.purchasedItems = itemList64;
        model.Payment payment66 = buySpecialItems54.paymentAPI;
        model.BuySpecialItems buySpecialItems67 = new model.BuySpecialItems();
        model.Payment payment68 = null;
        buySpecialItems67.paymentAPI = payment68;
        model.Newsletter[] newsletterArray70 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList71 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList71, newsletterArray70);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager73 = new model.NewsletterSubscriptionManager(newsletterList71);
        model.Client client74 = newsletterSubscriptionManager73.client;
        model.PayCredit payCredit75 = new model.PayCredit();
        payCredit75.amountPay = 10;
        newsletterSubscriptionManager73.paymentAPI = payCredit75;
        buySpecialItems67.paymentAPI = payCredit75;
        double double80 = payCredit75.amountPay;
        payCredit75.amountPay = 0;
        buySpecialItems54.paymentAPI = payCredit75;
        java.util.ArrayList<model.Item> itemList84 = buySpecialItems54.purchasedItems;
        buySpecialItems0.purchasedItems = itemList84;
        org.junit.Assert.assertNotNull(bookArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(cDArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(magazineArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(bookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(magazineArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(bookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(magazineArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(itemList51);
        org.junit.Assert.assertNotNull(itemList52);
        org.junit.Assert.assertNotNull(itemList53);
        org.junit.Assert.assertNotNull(requestForum57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(itemList64);
        org.junit.Assert.assertNull(payment66);
        org.junit.Assert.assertNotNull(newsletterArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(client74);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 10.0d + "'", double80 == 10.0d);
        org.junit.Assert.assertNotNull(itemList84);
    }

    @Test
    public void test1718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1718");
        model.VirtualBook virtualBook1 = new model.VirtualBook("src/Magazine.csv");
        virtualBook1.author = "src/CD.csv";
    }

    @Test
    public void test1719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1719");
        int int2 = model.SearchStrategy.countSimilarWords("model.RegistrationFailedException: model.RentingNotAllowedException: hi!", "model.RentingNotAllowedException: ");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    }

    @Test
    public void test1720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1720");
        model.Request request0 = new model.Request();
        java.lang.String str1 = request0.type;
        model.ValidateRegistration validateRegistration2 = new model.ValidateRegistration();
        model.Student student3 = new model.Student();
        student3.viewMyOnlineResource();
        boolean boolean5 = validateRegistration2.validateStaffRegistration((model.Staff) student3);
        request0.requestee = student3;
        request0.title = "";
        request0.title = "model.RegistrationFailedException: model.RentingNotAllowedException: hi!";
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test1721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1721");
        model.Magazine magazine1 = new model.Magazine("model.RentingNotAllowedException: ");
    }

    @Test
    public void test1722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1722");
        model.PayDebit payDebit0 = new model.PayDebit();
        payDebit0.amountPay = 1.0d;
        double double3 = payDebit0.amountPay;
        payDebit0.amountPay = 97;
        payDebit0.pay((double) 6605478);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
    }

    @Test
    public void test1723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1723");
        model.Database database7 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        java.lang.String str8 = database7.getBookFilePath();
        model.Login login9 = model.Login.makeLogin(database7);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/Book.csv" + "'", str8, "src/Book.csv");
        org.junit.Assert.assertNotNull(login9);
    }

    @Test
    public void test1724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1724");
        model.BuySpecialItems buySpecialItems0 = new model.BuySpecialItems();
        model.Book book1 = null;
        model.CD cD3 = new model.CD("");
        model.Magazine magazine4 = null;
        java.util.Collection<model.Book> bookCollection5 = null;
        model.Book book6 = null;
        model.CD cD7 = null;
        model.Magazine magazine8 = null;
        model.Book[] bookArray9 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList10 = new java.util.ArrayList<model.Book>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList10, bookArray9);
        model.CD[] cDArray12 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList13 = new java.util.ArrayList<model.CD>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList13, cDArray12);
        model.Magazine[] magazineArray15 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList16 = new java.util.ArrayList<model.Magazine>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList16, magazineArray15);
        model.ItemSearchResult itemSearchResult18 = new model.ItemSearchResult(book6, cD7, magazine8, (java.util.Collection<model.Book>) bookList10, (java.util.Collection<model.CD>) cDList13, (java.util.Collection<model.Magazine>) magazineList16);
        model.Book book19 = null;
        model.CD cD20 = null;
        model.Magazine magazine21 = null;
        model.Book[] bookArray22 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList23 = new java.util.ArrayList<model.Book>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList23, bookArray22);
        model.CD[] cDArray25 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList26 = new java.util.ArrayList<model.CD>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList26, cDArray25);
        model.Magazine[] magazineArray28 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList29 = new java.util.ArrayList<model.Magazine>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList29, magazineArray28);
        model.ItemSearchResult itemSearchResult31 = new model.ItemSearchResult(book19, cD20, magazine21, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList29);
        itemSearchResult18.similarCD = cDList26;
        model.Book book33 = null;
        model.CD cD34 = null;
        model.Magazine magazine35 = null;
        model.Book[] bookArray36 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList37 = new java.util.ArrayList<model.Book>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList37, bookArray36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        model.Magazine[] magazineArray42 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList43 = new java.util.ArrayList<model.Magazine>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList43, magazineArray42);
        model.ItemSearchResult itemSearchResult45 = new model.ItemSearchResult(book33, cD34, magazine35, (java.util.Collection<model.Book>) bookList37, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book1, cD3, magazine4, bookCollection5, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList43);
        cD3.ID = (short) 10;
        boolean boolean50 = buySpecialItems0.buyAnItem((model.Item) cD3, (double) 0);
        model.PayDebit payDebit51 = new model.PayDebit();
        buySpecialItems0.paymentAPI = payDebit51;
        double double53 = payDebit51.amountPay;
        payDebit51.amountPay = (short) 1;
        payDebit51.pay(0.0d);
        payDebit51.pay((double) 2108587);
        org.junit.Assert.assertNotNull(bookArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(cDArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(magazineArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(bookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(magazineArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(bookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(magazineArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
    }

    @Test
    public void test1725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1725");
        java.lang.String[] strArray1 = null;
        model.Item item2 = model.ItemFactory.makeItem("src/Magazine.csv", strArray1);
        org.junit.Assert.assertNull(item2);
    }

    @Test
    public void test1726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1726");
        model.BuySpecialItems buySpecialItems0 = new model.BuySpecialItems();
        model.Student student1 = new model.Student();
        int int2 = student1.ID;
        model.StudentOnlineResources studentOnlineResources3 = new model.StudentOnlineResources((model.Client) student1);
        model.VirtualBook virtualBook5 = studentOnlineResources3.searchAccessibleBook("");
        model.CD cD7 = new model.CD("");
        model.Magazine magazine8 = null;
        model.Book book9 = null;
        model.CD cD10 = null;
        model.Magazine magazine11 = null;
        model.Book[] bookArray12 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList13 = new java.util.ArrayList<model.Book>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList13, bookArray12);
        model.CD[] cDArray15 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList16 = new java.util.ArrayList<model.CD>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList16, cDArray15);
        model.Magazine[] magazineArray18 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList19 = new java.util.ArrayList<model.Magazine>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList19, magazineArray18);
        model.ItemSearchResult itemSearchResult21 = new model.ItemSearchResult(book9, cD10, magazine11, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList16, (java.util.Collection<model.Magazine>) magazineList19);
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        model.CD[] cDArray35 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList36 = new java.util.ArrayList<model.CD>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList36, cDArray35);
        itemSearchResult34.similarCD = cDList36;
        model.Book book39 = null;
        model.CD cD40 = null;
        model.Magazine magazine41 = null;
        model.Book[] bookArray42 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList43 = new java.util.ArrayList<model.Book>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList43, bookArray42);
        model.CD[] cDArray45 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList46 = new java.util.ArrayList<model.CD>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList46, cDArray45);
        model.Magazine[] magazineArray48 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList49 = new java.util.ArrayList<model.Magazine>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList49, magazineArray48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult(book39, cD40, magazine41, (java.util.Collection<model.Book>) bookList43, (java.util.Collection<model.CD>) cDList46, (java.util.Collection<model.Magazine>) magazineList49);
        model.ItemSearchResult itemSearchResult52 = new model.ItemSearchResult((model.Book) virtualBook5, cD7, magazine8, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList36, (java.util.Collection<model.Magazine>) magazineList49);
        int int53 = virtualBook5.ID;
        int int54 = virtualBook5.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter55 = null;
        model.PaidNewsletter paidNewsletter56 = null;
        model.VirtualItemSearchResult virtualItemSearchResult57 = new model.VirtualItemSearchResult(virtualBook5, uniProvidedNewsletter55, paidNewsletter56);
        boolean boolean59 = buySpecialItems0.buyAnItem((model.Item) virtualBook5, (double) (short) 0);
        model.Visitor visitor60 = new model.Visitor();
        model.StudentOnlineResources studentOnlineResources61 = new model.StudentOnlineResources((model.Client) visitor60);
        model.VirtualBook virtualBook63 = studentOnlineResources61.searchAccessibleBook("src/Book.csv");
        virtualBook63.ISBN = "model.RentingNotAllowedException: src/Magazine.csv";
        boolean boolean67 = buySpecialItems0.buyAnItem((model.Item) virtualBook63, 100.0d);
        model.BuySpecialItems buySpecialItems68 = new model.BuySpecialItems();
        model.Payment payment69 = null;
        buySpecialItems68.paymentAPI = payment69;
        model.PayMobileWallet payMobileWallet71 = new model.PayMobileWallet();
        buySpecialItems68.paymentAPI = payMobileWallet71;
        payMobileWallet71.pay((double) 'a');
        payMobileWallet71.amountPay = 0;
        payMobileWallet71.amountPay = 5517799;
        buySpecialItems0.paymentAPI = payMobileWallet71;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(virtualBook5);
        org.junit.Assert.assertNotNull(bookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cDArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(magazineArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(cDArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(bookArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(cDArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(magazineArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 20 + "'", int54 == 20);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(virtualBook63);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test1727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1727");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter54 = null;
        model.PaidNewsletter paidNewsletter55 = null;
        model.VirtualItemSearchResult virtualItemSearchResult56 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter54, paidNewsletter55);
        model.UniProvidedNewsletter uniProvidedNewsletter57 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter57.title = "hi!";
        uniProvidedNewsletter57.title = "";
        virtualItemSearchResult56.uniNewsletter = uniProvidedNewsletter57;
        model.UniProvidedNewsletter uniProvidedNewsletter63 = virtualItemSearchResult56.uniNewsletter;
        model.PaidNewsletter paidNewsletter64 = virtualItemSearchResult56.getPaidNewsletter();
        model.PaidNewsletter paidNewsletter65 = new model.PaidNewsletter();
        virtualItemSearchResult56.setPaidNewsletter(paidNewsletter65);
        paidNewsletter65.title = "src/Book.csv";
        model.VirtualItemContent virtualItemContent70 = new model.VirtualItemContent("model.RentingNotAllowedException: hi!");
        paidNewsletter65.content = virtualItemContent70;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertNotNull(uniProvidedNewsletter63);
        org.junit.Assert.assertNull(paidNewsletter64);
    }

    @Test
    public void test1728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1728");
        model.BorrowingManager.maxBorrowCount = 5239293;
    }

    @Test
    public void test1729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1729");
        model.Faculty faculty0 = new model.Faculty();
        java.lang.String str1 = faculty0.email;
        faculty0.faculty = "src/Newsletter.csv";
        model.NewsletterSubscriptionManager newsletterSubscriptionManager4 = faculty0.newsletterManager;
        java.util.ArrayList<model.VirtualBook> virtualBookList5 = faculty0.virtualBooksAvailable;
        int int6 = faculty0.ID;
        model.RentAndReturnSystem rentAndReturnSystem7 = new model.RentAndReturnSystem();
        model.Book book8 = null;
        model.CD cD10 = new model.CD("");
        model.Magazine magazine11 = null;
        java.util.Collection<model.Book> bookCollection12 = null;
        model.Book book13 = null;
        model.CD cD14 = null;
        model.Magazine magazine15 = null;
        model.Book[] bookArray16 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList17 = new java.util.ArrayList<model.Book>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList17, bookArray16);
        model.CD[] cDArray19 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList20 = new java.util.ArrayList<model.CD>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList20, cDArray19);
        model.Magazine[] magazineArray22 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList23 = new java.util.ArrayList<model.Magazine>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList23, magazineArray22);
        model.ItemSearchResult itemSearchResult25 = new model.ItemSearchResult(book13, cD14, magazine15, (java.util.Collection<model.Book>) bookList17, (java.util.Collection<model.CD>) cDList20, (java.util.Collection<model.Magazine>) magazineList23);
        model.Book book26 = null;
        model.CD cD27 = null;
        model.Magazine magazine28 = null;
        model.Book[] bookArray29 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList30 = new java.util.ArrayList<model.Book>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList30, bookArray29);
        model.CD[] cDArray32 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList33 = new java.util.ArrayList<model.CD>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList33, cDArray32);
        model.Magazine[] magazineArray35 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList36 = new java.util.ArrayList<model.Magazine>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList36, magazineArray35);
        model.ItemSearchResult itemSearchResult38 = new model.ItemSearchResult(book26, cD27, magazine28, (java.util.Collection<model.Book>) bookList30, (java.util.Collection<model.CD>) cDList33, (java.util.Collection<model.Magazine>) magazineList36);
        itemSearchResult25.similarCD = cDList33;
        model.Book book40 = null;
        model.CD cD41 = null;
        model.Magazine magazine42 = null;
        model.Book[] bookArray43 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList44 = new java.util.ArrayList<model.Book>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList44, bookArray43);
        model.CD[] cDArray46 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList47 = new java.util.ArrayList<model.CD>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList47, cDArray46);
        model.Magazine[] magazineArray49 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList50 = new java.util.ArrayList<model.Magazine>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList50, magazineArray49);
        model.ItemSearchResult itemSearchResult52 = new model.ItemSearchResult(book40, cD41, magazine42, (java.util.Collection<model.Book>) bookList44, (java.util.Collection<model.CD>) cDList47, (java.util.Collection<model.Magazine>) magazineList50);
        model.ItemSearchResult itemSearchResult53 = new model.ItemSearchResult(book8, cD10, magazine11, bookCollection12, (java.util.Collection<model.CD>) cDList33, (java.util.Collection<model.Magazine>) magazineList50);
        cD10.ID = (short) 10;
        cD10.canBePurchased = false;
        boolean boolean58 = cD10.canBePurchased;
        model.Faculty faculty59 = new model.Faculty();
        boolean boolean60 = rentAndReturnSystem7.rentAnItem((model.Item) cD10, (model.Client) faculty59);
        java.lang.String str61 = faculty59.faculty;
        model.RentedItem[] rentedItemArray62 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList63 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList63, rentedItemArray62);
        model.BorrowingManager borrowingManager65 = new model.BorrowingManager(rentedItemList63);
        boolean boolean66 = borrowingManager65.canRent();
        model.Client client67 = borrowingManager65.client;
        faculty59.borrowManager = borrowingManager65;
        borrowingManager65.updateBorrowingPrivilages();
        borrowingManager65.itemsBorrowedCount = (short) 0;
        int int72 = borrowingManager65.itemsBorrowedCount;
        faculty0.borrowManager = borrowingManager65;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(newsletterSubscriptionManager4);
        org.junit.Assert.assertNull(virtualBookList5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(bookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(cDArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(magazineArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(bookArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(cDArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(magazineArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(bookArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(cDArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(magazineArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(rentedItemArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(client67);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
    }

    @Test
    public void test1730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1730");
        model.Course course0 = new model.Course();
        java.lang.String str1 = course0.code;
        java.lang.String str2 = course0.subject;
        course0.subject = "model.RegistrationFailedException: ";
        java.lang.String str5 = course0.subject;
        course0.year = 7208239;
        java.lang.String str8 = course0.subject;
        int int9 = course0.year;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "model.RegistrationFailedException: " + "'", str5, "model.RegistrationFailedException: ");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "model.RegistrationFailedException: " + "'", str8, "model.RegistrationFailedException: ");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7208239 + "'", int9 == 7208239);
    }

    @Test
    public void test1731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1731");
        model.Book book0 = null;
        model.CD cD1 = null;
        model.Magazine magazine2 = null;
        model.Book[] bookArray3 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList4 = new java.util.ArrayList<model.Book>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList4, bookArray3);
        model.CD[] cDArray6 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList7 = new java.util.ArrayList<model.CD>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList7, cDArray6);
        model.Magazine[] magazineArray9 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList10 = new java.util.ArrayList<model.Magazine>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList10, magazineArray9);
        model.ItemSearchResult itemSearchResult12 = new model.ItemSearchResult(book0, cD1, magazine2, (java.util.Collection<model.Book>) bookList4, (java.util.Collection<model.CD>) cDList7, (java.util.Collection<model.Magazine>) magazineList10);
        model.Book book13 = null;
        model.CD cD14 = null;
        model.Magazine magazine15 = null;
        model.Book[] bookArray16 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList17 = new java.util.ArrayList<model.Book>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList17, bookArray16);
        model.CD[] cDArray19 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList20 = new java.util.ArrayList<model.CD>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList20, cDArray19);
        model.Magazine[] magazineArray22 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList23 = new java.util.ArrayList<model.Magazine>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList23, magazineArray22);
        model.ItemSearchResult itemSearchResult25 = new model.ItemSearchResult(book13, cD14, magazine15, (java.util.Collection<model.Book>) bookList17, (java.util.Collection<model.CD>) cDList20, (java.util.Collection<model.Magazine>) magazineList23);
        itemSearchResult12.similarCD = cDList20;
        model.Student student27 = new model.Student();
        int int28 = student27.ID;
        model.StudentOnlineResources studentOnlineResources29 = new model.StudentOnlineResources((model.Client) student27);
        model.VirtualBook virtualBook31 = studentOnlineResources29.searchAccessibleBook("");
        model.CD cD33 = new model.CD("");
        model.Magazine magazine34 = null;
        model.Book book35 = null;
        model.CD cD36 = null;
        model.Magazine magazine37 = null;
        model.Book[] bookArray38 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList39 = new java.util.ArrayList<model.Book>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList39, bookArray38);
        model.CD[] cDArray41 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList42 = new java.util.ArrayList<model.CD>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList42, cDArray41);
        model.Magazine[] magazineArray44 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList45 = new java.util.ArrayList<model.Magazine>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList45, magazineArray44);
        model.ItemSearchResult itemSearchResult47 = new model.ItemSearchResult(book35, cD36, magazine37, (java.util.Collection<model.Book>) bookList39, (java.util.Collection<model.CD>) cDList42, (java.util.Collection<model.Magazine>) magazineList45);
        model.Book book48 = null;
        model.CD cD49 = null;
        model.Magazine magazine50 = null;
        model.Book[] bookArray51 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList52 = new java.util.ArrayList<model.Book>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList52, bookArray51);
        model.CD[] cDArray54 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList55 = new java.util.ArrayList<model.CD>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList55, cDArray54);
        model.Magazine[] magazineArray57 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList58 = new java.util.ArrayList<model.Magazine>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList58, magazineArray57);
        model.ItemSearchResult itemSearchResult60 = new model.ItemSearchResult(book48, cD49, magazine50, (java.util.Collection<model.Book>) bookList52, (java.util.Collection<model.CD>) cDList55, (java.util.Collection<model.Magazine>) magazineList58);
        model.CD[] cDArray61 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList62 = new java.util.ArrayList<model.CD>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList62, cDArray61);
        itemSearchResult60.similarCD = cDList62;
        model.Book book65 = null;
        model.CD cD66 = null;
        model.Magazine magazine67 = null;
        model.Book[] bookArray68 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList69 = new java.util.ArrayList<model.Book>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList69, bookArray68);
        model.CD[] cDArray71 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList72 = new java.util.ArrayList<model.CD>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList72, cDArray71);
        model.Magazine[] magazineArray74 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList75 = new java.util.ArrayList<model.Magazine>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList75, magazineArray74);
        model.ItemSearchResult itemSearchResult77 = new model.ItemSearchResult(book65, cD66, magazine67, (java.util.Collection<model.Book>) bookList69, (java.util.Collection<model.CD>) cDList72, (java.util.Collection<model.Magazine>) magazineList75);
        model.ItemSearchResult itemSearchResult78 = new model.ItemSearchResult((model.Book) virtualBook31, cD33, magazine34, (java.util.Collection<model.Book>) bookList39, (java.util.Collection<model.CD>) cDList62, (java.util.Collection<model.Magazine>) magazineList75);
        int int79 = virtualBook31.ID;
        int int80 = virtualBook31.copiesAvailable;
        model.LibraryManagementTeam libraryManagementTeam81 = new model.LibraryManagementTeam();
        libraryManagementTeam81.accessCode = (byte) 10;
        java.util.ArrayList<model.Item> itemList84 = libraryManagementTeam81.items;
        boolean boolean85 = virtualBook31.equals((java.lang.Object) libraryManagementTeam81);
        java.lang.String str86 = virtualBook31.title;
        java.lang.String str87 = virtualBook31.publisher;
        java.lang.String str88 = virtualBook31.title;
        virtualBook31.ISBN = "src/Newsletter.csv";
        virtualBook31.copiesAvailable = (byte) 10;
        virtualBook31.showContent();
        itemSearchResult12.book = virtualBook31;
        org.junit.Assert.assertNotNull(bookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(cDArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(magazineArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(bookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(cDArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(magazineArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(virtualBook31);
        org.junit.Assert.assertNotNull(bookArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(cDArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(magazineArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(bookArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(cDArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(magazineArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(cDArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(bookArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(cDArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(magazineArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 20 + "'", int80 == 20);
        org.junit.Assert.assertNotNull(itemList84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
    }

    @Test
    public void test1732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1732");
        model.BuySpecialItems buySpecialItems0 = new model.BuySpecialItems();
        model.Book book1 = null;
        model.CD cD3 = new model.CD("");
        model.Magazine magazine4 = null;
        java.util.Collection<model.Book> bookCollection5 = null;
        model.Book book6 = null;
        model.CD cD7 = null;
        model.Magazine magazine8 = null;
        model.Book[] bookArray9 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList10 = new java.util.ArrayList<model.Book>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList10, bookArray9);
        model.CD[] cDArray12 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList13 = new java.util.ArrayList<model.CD>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList13, cDArray12);
        model.Magazine[] magazineArray15 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList16 = new java.util.ArrayList<model.Magazine>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList16, magazineArray15);
        model.ItemSearchResult itemSearchResult18 = new model.ItemSearchResult(book6, cD7, magazine8, (java.util.Collection<model.Book>) bookList10, (java.util.Collection<model.CD>) cDList13, (java.util.Collection<model.Magazine>) magazineList16);
        model.Book book19 = null;
        model.CD cD20 = null;
        model.Magazine magazine21 = null;
        model.Book[] bookArray22 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList23 = new java.util.ArrayList<model.Book>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList23, bookArray22);
        model.CD[] cDArray25 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList26 = new java.util.ArrayList<model.CD>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList26, cDArray25);
        model.Magazine[] magazineArray28 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList29 = new java.util.ArrayList<model.Magazine>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList29, magazineArray28);
        model.ItemSearchResult itemSearchResult31 = new model.ItemSearchResult(book19, cD20, magazine21, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList29);
        itemSearchResult18.similarCD = cDList26;
        model.Book book33 = null;
        model.CD cD34 = null;
        model.Magazine magazine35 = null;
        model.Book[] bookArray36 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList37 = new java.util.ArrayList<model.Book>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList37, bookArray36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        model.Magazine[] magazineArray42 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList43 = new java.util.ArrayList<model.Magazine>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList43, magazineArray42);
        model.ItemSearchResult itemSearchResult45 = new model.ItemSearchResult(book33, cD34, magazine35, (java.util.Collection<model.Book>) bookList37, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book1, cD3, magazine4, bookCollection5, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList43);
        cD3.ID = (short) 10;
        boolean boolean50 = buySpecialItems0.buyAnItem((model.Item) cD3, (double) 0);
        model.PayDebit payDebit51 = new model.PayDebit();
        buySpecialItems0.paymentAPI = payDebit51;
        double double53 = payDebit51.amountPay;
        payDebit51.amountPay = (short) 1;
        payDebit51.amountPay = 31;
        payDebit51.pay((double) (short) -1);
        payDebit51.pay((double) 9055918);
        org.junit.Assert.assertNotNull(bookArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(cDArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(magazineArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(bookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(magazineArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(bookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(magazineArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
    }

    @Test
    public void test1733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1733");
        model.LibraryManagementTeam libraryManagementTeam0 = new model.LibraryManagementTeam();
        int int1 = libraryManagementTeam0.ID;
        int int2 = libraryManagementTeam0.accessCode;
        model.ItemManagement itemManagement3 = new model.ItemManagement();
        model.Database database4 = null;
        itemManagement3.database = database4;
        model.Item item7 = itemManagement3.selectAnItemFromDatabase((int) (byte) 100);
        libraryManagementTeam0.itemManagement = itemManagement3;
        model.Book book9 = null;
        model.CD cD11 = new model.CD("");
        model.Magazine magazine12 = null;
        java.util.Collection<model.Book> bookCollection13 = null;
        model.Book book14 = null;
        model.CD cD15 = null;
        model.Magazine magazine16 = null;
        model.Book[] bookArray17 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList18 = new java.util.ArrayList<model.Book>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList18, bookArray17);
        model.CD[] cDArray20 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList21 = new java.util.ArrayList<model.CD>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList21, cDArray20);
        model.Magazine[] magazineArray23 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList24 = new java.util.ArrayList<model.Magazine>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList24, magazineArray23);
        model.ItemSearchResult itemSearchResult26 = new model.ItemSearchResult(book14, cD15, magazine16, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList21, (java.util.Collection<model.Magazine>) magazineList24);
        model.Book book27 = null;
        model.CD cD28 = null;
        model.Magazine magazine29 = null;
        model.Book[] bookArray30 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList31 = new java.util.ArrayList<model.Book>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList31, bookArray30);
        model.CD[] cDArray33 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList34 = new java.util.ArrayList<model.CD>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList34, cDArray33);
        model.Magazine[] magazineArray36 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList37 = new java.util.ArrayList<model.Magazine>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList37, magazineArray36);
        model.ItemSearchResult itemSearchResult39 = new model.ItemSearchResult(book27, cD28, magazine29, (java.util.Collection<model.Book>) bookList31, (java.util.Collection<model.CD>) cDList34, (java.util.Collection<model.Magazine>) magazineList37);
        itemSearchResult26.similarCD = cDList34;
        model.Book book41 = null;
        model.CD cD42 = null;
        model.Magazine magazine43 = null;
        model.Book[] bookArray44 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList45 = new java.util.ArrayList<model.Book>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList45, bookArray44);
        model.CD[] cDArray47 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList48 = new java.util.ArrayList<model.CD>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList48, cDArray47);
        model.Magazine[] magazineArray50 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList51 = new java.util.ArrayList<model.Magazine>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList51, magazineArray50);
        model.ItemSearchResult itemSearchResult53 = new model.ItemSearchResult(book41, cD42, magazine43, (java.util.Collection<model.Book>) bookList45, (java.util.Collection<model.CD>) cDList48, (java.util.Collection<model.Magazine>) magazineList51);
        model.ItemSearchResult itemSearchResult54 = new model.ItemSearchResult(book9, cD11, magazine12, bookCollection13, (java.util.Collection<model.CD>) cDList34, (java.util.Collection<model.Magazine>) magazineList51);
        cD11.ID = (short) 10;
        cD11.canBePurchased = false;
        cD11.copiesAvailable = 0;
        itemManagement3.addAnItem((model.Item) cD11);
        model.Database database69 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str70 = database69.getVirtualBookFilePath();
        model.Database.database = database69;
        java.lang.String str72 = database69.virtualItemFilePath;
        java.lang.String str73 = database69.getBookFilePath();
        database69.itemPath = "src/Magazine.csv";
        model.Login login76 = model.Login.makeLogin(database69);
        java.lang.String str77 = database69.getNewspaperFilePath();
        java.lang.String str78 = database69.getBorrowedItemFilePath();
        boolean boolean80 = database69.addItem("src/Book.csv");
        java.lang.String str81 = database69.getBorrowedItemFilePath();
        itemManagement3.database = database69;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(item7);
        org.junit.Assert.assertNotNull(bookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(cDArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(magazineArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(bookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(magazineArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(bookArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(cDArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(magazineArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(database69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "src/VirtualBook.csv" + "'", str70, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "model.RegistrationFailedException: model.RentingNotAllowedException: hi!" + "'", str72, "model.RegistrationFailedException: model.RentingNotAllowedException: hi!");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "src/Book.csv" + "'", str73, "src/Book.csv");
        org.junit.Assert.assertNotNull(login76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "src/Newsletter.csv" + "'", str77, "src/Newsletter.csv");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "src/BorrowedItems.csv" + "'", str78, "src/BorrowedItems.csv");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "src/BorrowedItems.csv" + "'", str81, "src/BorrowedItems.csv");
    }

    @Test
    public void test1734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1734");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter54 = null;
        model.PaidNewsletter paidNewsletter55 = null;
        model.VirtualItemSearchResult virtualItemSearchResult56 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter54, paidNewsletter55);
        model.PaidNewsletter paidNewsletter57 = virtualItemSearchResult56.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter58 = new model.UniProvidedNewsletter();
        virtualItemSearchResult56.setUniNewsletter(uniProvidedNewsletter58);
        model.PaidNewsletter paidNewsletter60 = virtualItemSearchResult56.getPaidNewsletter();
        model.PaidNewsletter paidNewsletter61 = virtualItemSearchResult56.getPaidNewsletter();
        model.VirtualBook virtualBook62 = virtualItemSearchResult56.virtualBook;
        virtualBook62.copiesAvailable = 36;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertNull(paidNewsletter57);
        org.junit.Assert.assertNull(paidNewsletter60);
        org.junit.Assert.assertNull(paidNewsletter61);
        org.junit.Assert.assertNotNull(virtualBook62);
    }

    @Test
    public void test1735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1735");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Visitor visitor4 = new model.Visitor();
        model.VirtualBook[] virtualBookArray5 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList6 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList6, virtualBookArray5);
        visitor4.virtualBooksAvailable = virtualBookList6;
        newsletterSubscriptionManager3.client = visitor4;
        model.Payment payment10 = newsletterSubscriptionManager3.paymentAPI;
        model.Newsletter[] newsletterArray11 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList12 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList12, newsletterArray11);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager14 = new model.NewsletterSubscriptionManager(newsletterList12);
        model.Client client15 = newsletterSubscriptionManager14.client;
        model.PayCredit payCredit16 = new model.PayCredit();
        payCredit16.amountPay = 10;
        newsletterSubscriptionManager14.paymentAPI = payCredit16;
        newsletterSubscriptionManager3.paymentAPI = payCredit16;
        model.Newsletter[] newsletterArray21 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList22 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList22, newsletterArray21);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager24 = new model.NewsletterSubscriptionManager(newsletterList22);
        model.Client client25 = newsletterSubscriptionManager24.client;
        model.Client client26 = newsletterSubscriptionManager24.client;
        model.Student student27 = new model.Student();
        int int28 = student27.ID;
        model.StudentOnlineResources studentOnlineResources29 = new model.StudentOnlineResources((model.Client) student27);
        model.VirtualBook virtualBook31 = studentOnlineResources29.searchAccessibleBook("");
        model.CD cD33 = new model.CD("");
        model.Magazine magazine34 = null;
        model.Book book35 = null;
        model.CD cD36 = null;
        model.Magazine magazine37 = null;
        model.Book[] bookArray38 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList39 = new java.util.ArrayList<model.Book>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList39, bookArray38);
        model.CD[] cDArray41 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList42 = new java.util.ArrayList<model.CD>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList42, cDArray41);
        model.Magazine[] magazineArray44 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList45 = new java.util.ArrayList<model.Magazine>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList45, magazineArray44);
        model.ItemSearchResult itemSearchResult47 = new model.ItemSearchResult(book35, cD36, magazine37, (java.util.Collection<model.Book>) bookList39, (java.util.Collection<model.CD>) cDList42, (java.util.Collection<model.Magazine>) magazineList45);
        model.Book book48 = null;
        model.CD cD49 = null;
        model.Magazine magazine50 = null;
        model.Book[] bookArray51 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList52 = new java.util.ArrayList<model.Book>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList52, bookArray51);
        model.CD[] cDArray54 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList55 = new java.util.ArrayList<model.CD>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList55, cDArray54);
        model.Magazine[] magazineArray57 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList58 = new java.util.ArrayList<model.Magazine>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList58, magazineArray57);
        model.ItemSearchResult itemSearchResult60 = new model.ItemSearchResult(book48, cD49, magazine50, (java.util.Collection<model.Book>) bookList52, (java.util.Collection<model.CD>) cDList55, (java.util.Collection<model.Magazine>) magazineList58);
        model.CD[] cDArray61 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList62 = new java.util.ArrayList<model.CD>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList62, cDArray61);
        itemSearchResult60.similarCD = cDList62;
        model.Book book65 = null;
        model.CD cD66 = null;
        model.Magazine magazine67 = null;
        model.Book[] bookArray68 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList69 = new java.util.ArrayList<model.Book>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList69, bookArray68);
        model.CD[] cDArray71 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList72 = new java.util.ArrayList<model.CD>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList72, cDArray71);
        model.Magazine[] magazineArray74 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList75 = new java.util.ArrayList<model.Magazine>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList75, magazineArray74);
        model.ItemSearchResult itemSearchResult77 = new model.ItemSearchResult(book65, cD66, magazine67, (java.util.Collection<model.Book>) bookList69, (java.util.Collection<model.CD>) cDList72, (java.util.Collection<model.Magazine>) magazineList75);
        model.ItemSearchResult itemSearchResult78 = new model.ItemSearchResult((model.Book) virtualBook31, cD33, magazine34, (java.util.Collection<model.Book>) bookList39, (java.util.Collection<model.CD>) cDList62, (java.util.Collection<model.Magazine>) magazineList75);
        int int79 = virtualBook31.ID;
        int int80 = virtualBook31.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter81 = null;
        model.PaidNewsletter paidNewsletter82 = null;
        model.VirtualItemSearchResult virtualItemSearchResult83 = new model.VirtualItemSearchResult(virtualBook31, uniProvidedNewsletter81, paidNewsletter82);
        model.PaidNewsletter paidNewsletter84 = virtualItemSearchResult83.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter85 = new model.UniProvidedNewsletter();
        virtualItemSearchResult83.setUniNewsletter(uniProvidedNewsletter85);
        newsletterSubscriptionManager24.cancelSubscription((model.Newsletter) uniProvidedNewsletter85);
        java.util.ArrayList<model.Newsletter> newsletterList88 = newsletterSubscriptionManager24.newsletterSubscribed;
        newsletterSubscriptionManager3.newsletterSubscribed = newsletterList88;
        model.Newsletter[] newsletterArray90 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList91 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList91, newsletterArray90);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager93 = new model.NewsletterSubscriptionManager(newsletterList91);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager94 = new model.NewsletterSubscriptionManager(newsletterList91);
        java.util.ArrayList<model.Newsletter> newsletterList95 = newsletterSubscriptionManager94.newsletterSubscribed;
        newsletterSubscriptionManager3.newsletterSubscribed = newsletterList95;
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(virtualBookArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(payment10);
        org.junit.Assert.assertNotNull(newsletterArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(client15);
        org.junit.Assert.assertNotNull(newsletterArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(client25);
        org.junit.Assert.assertNull(client26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(virtualBook31);
        org.junit.Assert.assertNotNull(bookArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(cDArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(magazineArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(bookArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(cDArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(magazineArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(cDArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(bookArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(cDArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(magazineArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 20 + "'", int80 == 20);
        org.junit.Assert.assertNull(paidNewsletter84);
        org.junit.Assert.assertNotNull(newsletterList88);
        org.junit.Assert.assertNotNull(newsletterArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(newsletterList95);
    }

    @Test
    public void test1736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1736");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        model.Book book4 = null;
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        java.util.Collection<model.Book> bookCollection8 = null;
        model.Book book9 = null;
        model.CD cD10 = null;
        model.Magazine magazine11 = null;
        model.Book[] bookArray12 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList13 = new java.util.ArrayList<model.Book>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList13, bookArray12);
        model.CD[] cDArray15 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList16 = new java.util.ArrayList<model.CD>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList16, cDArray15);
        model.Magazine[] magazineArray18 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList19 = new java.util.ArrayList<model.Magazine>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList19, magazineArray18);
        model.ItemSearchResult itemSearchResult21 = new model.ItemSearchResult(book9, cD10, magazine11, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList16, (java.util.Collection<model.Magazine>) magazineList19);
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        itemSearchResult21.similarCD = cDList29;
        model.Book book36 = null;
        model.CD cD37 = null;
        model.Magazine magazine38 = null;
        model.Book[] bookArray39 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList40 = new java.util.ArrayList<model.Book>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList40, bookArray39);
        model.CD[] cDArray42 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList43 = new java.util.ArrayList<model.CD>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList43, cDArray42);
        model.Magazine[] magazineArray45 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList46 = new java.util.ArrayList<model.Magazine>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList46, magazineArray45);
        model.ItemSearchResult itemSearchResult48 = new model.ItemSearchResult(book36, cD37, magazine38, (java.util.Collection<model.Book>) bookList40, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList46);
        model.ItemSearchResult itemSearchResult49 = new model.ItemSearchResult(book4, cD6, magazine7, bookCollection8, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList46);
        cD6.ID = (short) 10;
        borrowingManager3.removeRentedItem((model.Item) cD6);
        float float53 = borrowingManager3.amountOwned;
        int int54 = borrowingManager3.itemsBorrowedCount;
        borrowingManager3.updateBorrowingPrivilages();
        model.Magazine magazine57 = new model.Magazine("hi!");
        magazine57.location = "model.RegistrationFailedException: ";
        magazine57.author = "src/VirtualBook.csv";
        magazine57.canBePurchased = true;
        // The following exception was thrown during execution in test generation
        try {
            borrowingManager3.rentAnItem((model.Item) magazine57, "model.RegistrationFailedException: ");
            org.junit.Assert.fail("Expected exception of type java.time.format.DateTimeParseException; message: Text 'model.RegistrationFailedException: ' could not be parsed at index 0");
        } catch (java.time.format.DateTimeParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(bookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cDArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(magazineArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(bookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cDArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(magazineArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + 0.0f + "'", float53 == 0.0f);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
    }

    @Test
    public void test1737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1737");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.Payment payment1 = rentAndReturnSystem0.paymentAPI;
        model.PayMobileWallet payMobileWallet2 = new model.PayMobileWallet();
        payMobileWallet2.amountPay = 100.0f;
        payMobileWallet2.amountPay = (byte) -1;
        rentAndReturnSystem0.paymentAPI = payMobileWallet2;
        model.Payment payment8 = rentAndReturnSystem0.paymentAPI;
        model.PayCredit payCredit9 = new model.PayCredit();
        payCredit9.pay((double) (short) 100);
        payCredit9.amountPay = ' ';
        double double14 = payCredit9.amountPay;
        rentAndReturnSystem0.paymentAPI = payCredit9;
        java.lang.Class<?> wildcardClass16 = payCredit9.getClass();
        org.junit.Assert.assertNull(payment1);
        org.junit.Assert.assertNotNull(payment8);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 32.0d + "'", double14 == 32.0d);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1738");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter54 = null;
        model.PaidNewsletter paidNewsletter55 = null;
        model.VirtualItemSearchResult virtualItemSearchResult56 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter54, paidNewsletter55);
        model.PaidNewsletter paidNewsletter57 = virtualItemSearchResult56.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter58 = virtualItemSearchResult56.getUniNewsletter();
        model.PaidNewsletter paidNewsletter59 = virtualItemSearchResult56.getPaidNewsletter();
        model.VirtualBook virtualBook60 = virtualItemSearchResult56.virtualBook;
        model.PaidNewsletter paidNewsletter61 = virtualItemSearchResult56.getPaidNewsletter();
        model.UniProvidedNewsletter uniProvidedNewsletter62 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter62.title = "hi!";
        model.VirtualItemContent virtualItemContent66 = new model.VirtualItemContent("hi!");
        java.lang.String str67 = virtualItemContent66.link;
        uniProvidedNewsletter62.content = virtualItemContent66;
        model.Request request69 = new model.Request();
        java.lang.String str70 = request69.type;
        request69.title = "model.RegistrationFailedException: src/Magazine.csv";
        java.lang.String str73 = request69.type;
        model.Client client74 = request69.requestee;
        boolean boolean75 = uniProvidedNewsletter62.equals((java.lang.Object) client74);
        virtualItemSearchResult56.uniNewsletter = uniProvidedNewsletter62;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertNull(paidNewsletter57);
        org.junit.Assert.assertNull(uniProvidedNewsletter58);
        org.junit.Assert.assertNull(paidNewsletter59);
        org.junit.Assert.assertNotNull(virtualBook60);
        org.junit.Assert.assertNull(paidNewsletter61);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNull(client74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test1739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1739");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.SearchClient searchClient9 = model.SearchClient.makeSearchClient(database7);
        java.lang.String str10 = database7.getCDFilePath();
        model.SearchVirtualItem searchVirtualItem11 = new model.SearchVirtualItem(database7);
        model.UniProvidedNewsletter uniProvidedNewsletter13 = searchVirtualItem11.getUniNewsletter("model.RegistrationFailedException: ");
        model.UniProvidedNewsletter uniProvidedNewsletter15 = searchVirtualItem11.getUniNewsletter("src/Newsletter.csv");
        model.VirtualBook virtualBook17 = searchVirtualItem11.getVirtualBook("model.RentingNotAllowedException: ");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
        org.junit.Assert.assertNotNull(searchClient9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "src/CD.csv" + "'", str10, "src/CD.csv");
        org.junit.Assert.assertNull(uniProvidedNewsletter13);
        org.junit.Assert.assertNull(uniProvidedNewsletter15);
        org.junit.Assert.assertNull(virtualBook17);
    }

    @Test
    public void test1740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1740");
        model.ItemManagement itemManagement0 = new model.ItemManagement();
        model.Database database1 = null;
        itemManagement0.database = database1;
        model.BuySpecialItems buySpecialItems3 = new model.BuySpecialItems();
        model.Book book4 = null;
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        java.util.Collection<model.Book> bookCollection8 = null;
        model.Book book9 = null;
        model.CD cD10 = null;
        model.Magazine magazine11 = null;
        model.Book[] bookArray12 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList13 = new java.util.ArrayList<model.Book>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList13, bookArray12);
        model.CD[] cDArray15 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList16 = new java.util.ArrayList<model.CD>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList16, cDArray15);
        model.Magazine[] magazineArray18 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList19 = new java.util.ArrayList<model.Magazine>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList19, magazineArray18);
        model.ItemSearchResult itemSearchResult21 = new model.ItemSearchResult(book9, cD10, magazine11, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList16, (java.util.Collection<model.Magazine>) magazineList19);
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        itemSearchResult21.similarCD = cDList29;
        model.Book book36 = null;
        model.CD cD37 = null;
        model.Magazine magazine38 = null;
        model.Book[] bookArray39 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList40 = new java.util.ArrayList<model.Book>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList40, bookArray39);
        model.CD[] cDArray42 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList43 = new java.util.ArrayList<model.CD>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList43, cDArray42);
        model.Magazine[] magazineArray45 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList46 = new java.util.ArrayList<model.Magazine>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList46, magazineArray45);
        model.ItemSearchResult itemSearchResult48 = new model.ItemSearchResult(book36, cD37, magazine38, (java.util.Collection<model.Book>) bookList40, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList46);
        model.ItemSearchResult itemSearchResult49 = new model.ItemSearchResult(book4, cD6, magazine7, bookCollection8, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList46);
        cD6.ID = (short) 10;
        boolean boolean53 = buySpecialItems3.buyAnItem((model.Item) cD6, (double) 0);
        itemManagement0.enableAnItem((model.Item) cD6);
        model.Database database55 = model.Database.database;
        model.Student student56 = new model.Student();
        int int57 = student56.ID;
        model.StudentOnlineResources studentOnlineResources58 = new model.StudentOnlineResources((model.Client) student56);
        student56.ID = '#';
        database55.addClient((model.Client) student56);
        itemManagement0.database = database55;
        model.SearchClient searchClient63 = model.SearchClient.makeSearchClient(database55);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean67 = searchClient63.addClient("src/CD.csv", "model.RentingNotAllowedException: src/Magazine.csv", "model.LoginFailedException: hi!");
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"model.Database.getRandomID()\" because \"this.db\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(bookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cDArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(magazineArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(bookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cDArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(magazineArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(searchClient63);
    }

    @Test
    public void test1741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1741");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        boolean boolean4 = borrowingManager3.canRent();
        model.Client client5 = borrowingManager3.client;
        model.Student student6 = new model.Student();
        int int7 = student6.ID;
        model.StudentOnlineResources studentOnlineResources8 = new model.StudentOnlineResources((model.Client) student6);
        model.StudentOnlineResources studentOnlineResources9 = new model.StudentOnlineResources((model.Client) student6);
        model.RentedItem[] rentedItemArray10 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList11 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList11, rentedItemArray10);
        model.BorrowingManager borrowingManager13 = new model.BorrowingManager(rentedItemList11);
        model.Visitor visitor14 = new model.Visitor();
        visitor14.email = "hi!";
        borrowingManager13.client = visitor14;
        studentOnlineResources9.client = visitor14;
        model.Client client19 = studentOnlineResources9.client;
        borrowingManager3.client = client19;
        borrowingManager3.amountOwned = (byte) 1;
        model.Magazine magazine24 = new model.Magazine("hi!");
        magazine24.location = "model.RegistrationFailedException: ";
        borrowingManager3.removeRentedItem((model.Item) magazine24);
        java.util.ArrayList<model.RentedItem> rentedItemList28 = borrowingManager3.physicalItemBorrowed;
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(client5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(rentedItemArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(client19);
        org.junit.Assert.assertNotNull(rentedItemList28);
    }

    @Test
    public void test1742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1742");
        model.ItemManagement itemManagement0 = new model.ItemManagement();
        model.Database database1 = null;
        itemManagement0.database = database1;
        model.BuySpecialItems buySpecialItems3 = new model.BuySpecialItems();
        model.Book book4 = null;
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        java.util.Collection<model.Book> bookCollection8 = null;
        model.Book book9 = null;
        model.CD cD10 = null;
        model.Magazine magazine11 = null;
        model.Book[] bookArray12 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList13 = new java.util.ArrayList<model.Book>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList13, bookArray12);
        model.CD[] cDArray15 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList16 = new java.util.ArrayList<model.CD>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList16, cDArray15);
        model.Magazine[] magazineArray18 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList19 = new java.util.ArrayList<model.Magazine>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList19, magazineArray18);
        model.ItemSearchResult itemSearchResult21 = new model.ItemSearchResult(book9, cD10, magazine11, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList16, (java.util.Collection<model.Magazine>) magazineList19);
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        itemSearchResult21.similarCD = cDList29;
        model.Book book36 = null;
        model.CD cD37 = null;
        model.Magazine magazine38 = null;
        model.Book[] bookArray39 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList40 = new java.util.ArrayList<model.Book>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList40, bookArray39);
        model.CD[] cDArray42 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList43 = new java.util.ArrayList<model.CD>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList43, cDArray42);
        model.Magazine[] magazineArray45 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList46 = new java.util.ArrayList<model.Magazine>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList46, magazineArray45);
        model.ItemSearchResult itemSearchResult48 = new model.ItemSearchResult(book36, cD37, magazine38, (java.util.Collection<model.Book>) bookList40, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList46);
        model.ItemSearchResult itemSearchResult49 = new model.ItemSearchResult(book4, cD6, magazine7, bookCollection8, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList46);
        cD6.ID = (short) 10;
        boolean boolean53 = buySpecialItems3.buyAnItem((model.Item) cD6, (double) 0);
        itemManagement0.enableAnItem((model.Item) cD6);
        model.Database database55 = model.Database.database;
        model.Student student56 = new model.Student();
        int int57 = student56.ID;
        model.StudentOnlineResources studentOnlineResources58 = new model.StudentOnlineResources((model.Client) student56);
        student56.ID = '#';
        database55.addClient((model.Client) student56);
        itemManagement0.database = database55;
        model.SearchClient searchClient63 = model.SearchClient.makeSearchClient(database55);
        java.lang.String str64 = database55.itemPath;
        org.junit.Assert.assertNotNull(bookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cDArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(magazineArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(bookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cDArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(magazineArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(searchClient63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "src/Magazine.csv" + "'", str64, "src/Magazine.csv");
    }

    @Test
    public void test1743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1743");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.RequestForum requestForum1 = model.RequestForum.createRequestForum();
        model.Request request2 = new model.Request();
        request2.title = "";
        java.lang.String str5 = requestForum1.makeARequest(request2);
        int int6 = requestForum0.assessBooksPriority(request2);
        model.Client client7 = request2.requestee;
        java.lang.String str8 = request2.title;
        java.lang.String str9 = request2.title;
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertNotNull(requestForum1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(client7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test1744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1744");
        model.Magazine magazine1 = new model.Magazine("model.RegistrationFailedException: src/Magazine.csv");
        magazine1.title = "src/Client.csv";
    }

    @Test
    public void test1745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1745");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter54 = null;
        model.PaidNewsletter paidNewsletter55 = null;
        model.VirtualItemSearchResult virtualItemSearchResult56 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter54, paidNewsletter55);
        model.PaidNewsletter paidNewsletter57 = virtualItemSearchResult56.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter58 = new model.UniProvidedNewsletter();
        virtualItemSearchResult56.setUniNewsletter(uniProvidedNewsletter58);
        java.lang.String str60 = uniProvidedNewsletter58.title;
        uniProvidedNewsletter58.cost = 0L;
        float float63 = uniProvidedNewsletter58.cost;
        uniProvidedNewsletter58.cost = 2036676;
        uniProvidedNewsletter58.cost = 100.0f;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertNull(paidNewsletter57);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + 0.0f + "'", float63 == 0.0f);
    }

    @Test
    public void test1746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1746");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        model.Book book4 = null;
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        java.util.Collection<model.Book> bookCollection8 = null;
        model.Book book9 = null;
        model.CD cD10 = null;
        model.Magazine magazine11 = null;
        model.Book[] bookArray12 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList13 = new java.util.ArrayList<model.Book>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList13, bookArray12);
        model.CD[] cDArray15 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList16 = new java.util.ArrayList<model.CD>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList16, cDArray15);
        model.Magazine[] magazineArray18 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList19 = new java.util.ArrayList<model.Magazine>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList19, magazineArray18);
        model.ItemSearchResult itemSearchResult21 = new model.ItemSearchResult(book9, cD10, magazine11, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList16, (java.util.Collection<model.Magazine>) magazineList19);
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        itemSearchResult21.similarCD = cDList29;
        model.Book book36 = null;
        model.CD cD37 = null;
        model.Magazine magazine38 = null;
        model.Book[] bookArray39 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList40 = new java.util.ArrayList<model.Book>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList40, bookArray39);
        model.CD[] cDArray42 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList43 = new java.util.ArrayList<model.CD>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList43, cDArray42);
        model.Magazine[] magazineArray45 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList46 = new java.util.ArrayList<model.Magazine>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList46, magazineArray45);
        model.ItemSearchResult itemSearchResult48 = new model.ItemSearchResult(book36, cD37, magazine38, (java.util.Collection<model.Book>) bookList40, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList46);
        model.ItemSearchResult itemSearchResult49 = new model.ItemSearchResult(book4, cD6, magazine7, bookCollection8, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList46);
        cD6.ID = (short) 10;
        borrowingManager3.removeRentedItem((model.Item) cD6);
        int int53 = borrowingManager3.itemsBorrowedCount;
        model.Item item54 = null;
        borrowingManager3.removeRentedItem(item54);
        float float56 = borrowingManager3.amountOwned;
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(bookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cDArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(magazineArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(bookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cDArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(magazineArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + 0.0f + "'", float56 == 0.0f);
    }

    @Test
    public void test1747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1747");
        model.PayDebit payDebit0 = new model.PayDebit();
        payDebit0.amountPay = 8289616;
        payDebit0.pay((double) 29);
    }

    @Test
    public void test1748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1748");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        virtualBook4.ISBN = "hi!";
        int int55 = virtualBook4.ID;
        model.VirtualItemContent virtualItemContent57 = new model.VirtualItemContent("hi!");
        virtualBook4.content = virtualItemContent57;
        java.lang.String str59 = virtualBook4.ISBN;
        model.VirtualItemContent virtualItemContent61 = new model.VirtualItemContent("hi!");
        java.lang.String str62 = virtualItemContent61.link;
        java.lang.String str64 = virtualItemContent61.getContent("");
        java.lang.String str66 = virtualItemContent61.getContent("model.RegistrationFailedException: ");
        virtualBook4.content = virtualItemContent61;
        model.VirtualItemContent virtualItemContent68 = virtualBook4.content;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertNotNull(virtualItemContent68);
    }

    @Test
    public void test1749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1749");
        model.SearchBorrowedItem searchBorrowedItem0 = model.SearchBorrowedItem.makeSearchBorrowedItem();
        model.Visitor visitor1 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList2 = visitor1.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources3 = new model.StudentOnlineResources((model.Client) visitor1);
        model.RentedItem[] rentedItemArray4 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList5 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList5, rentedItemArray4);
        model.BorrowingManager borrowingManager7 = new model.BorrowingManager(rentedItemList5);
        model.Visitor visitor8 = new model.Visitor();
        visitor8.email = "hi!";
        borrowingManager7.client = visitor8;
        studentOnlineResources3.client = visitor8;
        model.Student student13 = new model.Student();
        int int14 = student13.ID;
        model.StudentOnlineResources studentOnlineResources15 = new model.StudentOnlineResources((model.Client) student13);
        model.VirtualBook virtualBook17 = studentOnlineResources15.searchAccessibleBook("");
        model.CD cD19 = new model.CD("");
        model.Magazine magazine20 = null;
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.Book book34 = null;
        model.CD cD35 = null;
        model.Magazine magazine36 = null;
        model.Book[] bookArray37 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList38 = new java.util.ArrayList<model.Book>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList38, bookArray37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        model.Magazine[] magazineArray43 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList44 = new java.util.ArrayList<model.Magazine>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList44, magazineArray43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book34, cD35, magazine36, (java.util.Collection<model.Book>) bookList38, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList44);
        model.CD[] cDArray47 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList48 = new java.util.ArrayList<model.CD>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList48, cDArray47);
        itemSearchResult46.similarCD = cDList48;
        model.Book book51 = null;
        model.CD cD52 = null;
        model.Magazine magazine53 = null;
        model.Book[] bookArray54 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList55 = new java.util.ArrayList<model.Book>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList55, bookArray54);
        model.CD[] cDArray57 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList58 = new java.util.ArrayList<model.CD>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList58, cDArray57);
        model.Magazine[] magazineArray60 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList61 = new java.util.ArrayList<model.Magazine>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList61, magazineArray60);
        model.ItemSearchResult itemSearchResult63 = new model.ItemSearchResult(book51, cD52, magazine53, (java.util.Collection<model.Book>) bookList55, (java.util.Collection<model.CD>) cDList58, (java.util.Collection<model.Magazine>) magazineList61);
        model.ItemSearchResult itemSearchResult64 = new model.ItemSearchResult((model.Book) virtualBook17, cD19, magazine20, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList48, (java.util.Collection<model.Magazine>) magazineList61);
        java.lang.String str65 = studentOnlineResources3.readVirtualItem((model.VirtualItem) virtualBook17);
        model.Visitor visitor67 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList68 = visitor67.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources69 = new model.StudentOnlineResources((model.Client) visitor67);
        searchBorrowedItem0.addPhyscialItem((model.Item) virtualBook17, "", (model.Client) visitor67);
        java.util.ArrayList<model.VirtualItem> virtualItemList73 = searchBorrowedItem0.searchBorrowedVirtualItem("model.RegistrationFailedException: src/Magazine.csv", "src/Book.csv");
        java.util.ArrayList<model.RentedItem> rentedItemList76 = searchBorrowedItem0.searchBorrowedItem("model.RentingNotAllowedException: hi!", "src/Client.csv");
        searchBorrowedItem0.removeItem("model.RegistrationFailedException: src/Book.csv", "src/Newsletter.csv");
        java.util.ArrayList<model.VirtualItem> virtualItemList82 = searchBorrowedItem0.searchBorrowedVirtualItem("", "src/Magazine.csv");
        model.Student student83 = new model.Student();
        int int84 = student83.ID;
        model.StudentOnlineResources studentOnlineResources85 = new model.StudentOnlineResources((model.Client) student83);
        model.VirtualBook virtualBook87 = studentOnlineResources85.searchAccessibleBook("");
        model.VirtualItemContent virtualItemContent88 = virtualBook87.content;
        java.lang.String str89 = virtualBook87.location;
        virtualBook87.title = "";
        java.lang.String str92 = virtualBook87.author;
        java.lang.String str93 = virtualBook87.title;
        model.Client client95 = null;
        // The following exception was thrown during execution in test generation
        try {
            searchBorrowedItem0.addPhyscialItem((model.Item) virtualBook87, "src/CD.csv", client95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"email\" because \"client\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(searchBorrowedItem0);
        org.junit.Assert.assertNull(virtualBookList2);
        org.junit.Assert.assertNotNull(rentedItemArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(virtualBook17);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(bookArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(magazineArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(cDArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(bookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(cDArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(magazineArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(virtualBookList68);
        org.junit.Assert.assertNotNull(virtualItemList73);
        org.junit.Assert.assertNotNull(rentedItemList76);
        org.junit.Assert.assertNotNull(virtualItemList82);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(virtualBook87);
        org.junit.Assert.assertNull(virtualItemContent88);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "" + "'", str93, "");
    }

    @Test
    public void test1750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1750");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getBookFilePath();
        database7.itemPath = "hi!";
        model.SearchVirtualItem searchVirtualItem11 = new model.SearchVirtualItem(database7);
        model.UniProvidedNewsletter uniProvidedNewsletter13 = searchVirtualItem11.getUniNewsletter("src/Book.csv");
        model.PaidNewsletter paidNewsletter15 = searchVirtualItem11.getPaidNewsletter("model.RegistrationFailedException: src/Book.csv");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass16 = paidNewsletter15.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/Book.csv" + "'", str8, "src/Book.csv");
        org.junit.Assert.assertNull(uniProvidedNewsletter13);
        org.junit.Assert.assertNull(paidNewsletter15);
    }

    @Test
    public void test1751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1751");
        model.SearchBorrowedItem searchBorrowedItem0 = model.SearchBorrowedItem.object;
        searchBorrowedItem0.removeItem("model.RentingNotAllowedException: src/Magazine.csv", "src/BorrowedItems.csv");
        org.junit.Assert.assertNotNull(searchBorrowedItem0);
    }

    @Test
    public void test1752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1752");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getBookFilePath();
        database7.itemPath = "hi!";
        model.SearchVirtualItem searchVirtualItem11 = new model.SearchVirtualItem(database7);
        model.VirtualItemSearchResult virtualItemSearchResult13 = searchVirtualItem11.searchVirtualItem("model.RegistrationFailedException: ");
        model.UniProvidedNewsletter uniProvidedNewsletter14 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter14.title = "";
        java.lang.String str17 = uniProvidedNewsletter14.title;
        uniProvidedNewsletter14.showContent();
        virtualItemSearchResult13.uniNewsletter = uniProvidedNewsletter14;
        model.BuySpecialItems buySpecialItems20 = new model.BuySpecialItems();
        model.Payment payment21 = buySpecialItems20.paymentAPI;
        java.util.ArrayList<model.Item> itemList22 = buySpecialItems20.purchasedItems;
        model.Payment payment23 = buySpecialItems20.paymentAPI;
        model.Student student24 = new model.Student();
        int int25 = student24.ID;
        model.StudentOnlineResources studentOnlineResources26 = new model.StudentOnlineResources((model.Client) student24);
        model.VirtualBook virtualBook28 = studentOnlineResources26.searchAccessibleBook("");
        virtualBook28.ID = 20;
        virtualBook28.ID = (short) 100;
        boolean boolean33 = virtualBook28.canBePurchased;
        boolean boolean35 = buySpecialItems20.buyAnItem((model.Item) virtualBook28, (double) 31);
        virtualItemSearchResult13.setVirtualBook(virtualBook28);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/Book.csv" + "'", str8, "src/Book.csv");
        org.junit.Assert.assertNotNull(virtualItemSearchResult13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(payment21);
        org.junit.Assert.assertNotNull(itemList22);
        org.junit.Assert.assertNull(payment23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(virtualBook28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test1753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1753");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "src/Book.csv", "src/CD.csv" };
        model.Item item6 = model.ItemFactory.makeItem("", strArray5);
        model.Item item7 = model.ItemFactory.makeItem("model.RegistrationFailedException: model.RentingNotAllowedException: hi!", strArray5);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNull(item6);
        org.junit.Assert.assertNull(item7);
    }

    @Test
    public void test1754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1754");
        model.Course course0 = new model.Course();
        int int1 = course0.year;
        course0.code = "";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
    }

    @Test
    public void test1755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1755");
        model.BuySpecialItems buySpecialItems0 = new model.BuySpecialItems();
        model.Payment payment1 = null;
        buySpecialItems0.paymentAPI = payment1;
        model.PayMobileWallet payMobileWallet3 = new model.PayMobileWallet();
        buySpecialItems0.paymentAPI = payMobileWallet3;
        payMobileWallet3.pay((double) 'a');
        payMobileWallet3.pay((double) 2648933);
    }

    @Test
    public void test1756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1756");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.RequestForum requestForum1 = model.RequestForum.createRequestForum();
        model.Request request2 = new model.Request();
        request2.title = "";
        java.lang.String str5 = requestForum1.makeARequest(request2);
        int int6 = requestForum0.assessBooksPriority(request2);
        model.LibraryManagementTeam libraryManagementTeam7 = new model.LibraryManagementTeam();
        int int8 = libraryManagementTeam7.ID;
        int int9 = libraryManagementTeam7.accessCode;
        model.Item item10 = null;
        libraryManagementTeam7.addAnItem(item10);
        java.util.ArrayList<model.Item> itemList12 = libraryManagementTeam7.items;
        requestForum0.managementTeam = libraryManagementTeam7;
        model.LibraryManagementTeam libraryManagementTeam14 = requestForum0.managementTeam;
        int int15 = libraryManagementTeam14.accessCode;
        int int16 = libraryManagementTeam14.ID;
        java.util.ArrayList<model.Item> itemList17 = libraryManagementTeam14.items;
        int int18 = libraryManagementTeam14.accessCode;
        libraryManagementTeam14.ID = 9809433;
        model.Student student21 = new model.Student();
        int int22 = student21.ID;
        model.StudentOnlineResources studentOnlineResources23 = new model.StudentOnlineResources((model.Client) student21);
        model.VirtualBook virtualBook25 = studentOnlineResources23.searchAccessibleBook("");
        model.CD cD27 = new model.CD("");
        model.Magazine magazine28 = null;
        model.Book book29 = null;
        model.CD cD30 = null;
        model.Magazine magazine31 = null;
        model.Book[] bookArray32 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList33 = new java.util.ArrayList<model.Book>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList33, bookArray32);
        model.CD[] cDArray35 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList36 = new java.util.ArrayList<model.CD>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList36, cDArray35);
        model.Magazine[] magazineArray38 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList39 = new java.util.ArrayList<model.Magazine>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList39, magazineArray38);
        model.ItemSearchResult itemSearchResult41 = new model.ItemSearchResult(book29, cD30, magazine31, (java.util.Collection<model.Book>) bookList33, (java.util.Collection<model.CD>) cDList36, (java.util.Collection<model.Magazine>) magazineList39);
        model.Book book42 = null;
        model.CD cD43 = null;
        model.Magazine magazine44 = null;
        model.Book[] bookArray45 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList46 = new java.util.ArrayList<model.Book>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList46, bookArray45);
        model.CD[] cDArray48 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList49 = new java.util.ArrayList<model.CD>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList49, cDArray48);
        model.Magazine[] magazineArray51 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList52 = new java.util.ArrayList<model.Magazine>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList52, magazineArray51);
        model.ItemSearchResult itemSearchResult54 = new model.ItemSearchResult(book42, cD43, magazine44, (java.util.Collection<model.Book>) bookList46, (java.util.Collection<model.CD>) cDList49, (java.util.Collection<model.Magazine>) magazineList52);
        model.CD[] cDArray55 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList56 = new java.util.ArrayList<model.CD>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList56, cDArray55);
        itemSearchResult54.similarCD = cDList56;
        model.Book book59 = null;
        model.CD cD60 = null;
        model.Magazine magazine61 = null;
        model.Book[] bookArray62 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList63 = new java.util.ArrayList<model.Book>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList63, bookArray62);
        model.CD[] cDArray65 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList66 = new java.util.ArrayList<model.CD>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList66, cDArray65);
        model.Magazine[] magazineArray68 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList69 = new java.util.ArrayList<model.Magazine>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList69, magazineArray68);
        model.ItemSearchResult itemSearchResult71 = new model.ItemSearchResult(book59, cD60, magazine61, (java.util.Collection<model.Book>) bookList63, (java.util.Collection<model.CD>) cDList66, (java.util.Collection<model.Magazine>) magazineList69);
        model.ItemSearchResult itemSearchResult72 = new model.ItemSearchResult((model.Book) virtualBook25, cD27, magazine28, (java.util.Collection<model.Book>) bookList33, (java.util.Collection<model.CD>) cDList56, (java.util.Collection<model.Magazine>) magazineList69);
        int int73 = virtualBook25.ID;
        int int74 = virtualBook25.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter75 = null;
        model.PaidNewsletter paidNewsletter76 = null;
        model.VirtualItemSearchResult virtualItemSearchResult77 = new model.VirtualItemSearchResult(virtualBook25, uniProvidedNewsletter75, paidNewsletter76);
        model.PaidNewsletter paidNewsletter78 = virtualItemSearchResult77.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter79 = virtualItemSearchResult77.getUniNewsletter();
        model.PaidNewsletter paidNewsletter80 = virtualItemSearchResult77.getPaidNewsletter();
        model.UniProvidedNewsletter uniProvidedNewsletter81 = virtualItemSearchResult77.getUniNewsletter();
        model.VirtualBook virtualBook82 = virtualItemSearchResult77.virtualBook;
        libraryManagementTeam14.disableAnItem((model.Item) virtualBook82);
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertNotNull(requestForum1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(itemList12);
        org.junit.Assert.assertNotNull(libraryManagementTeam14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(itemList17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(virtualBook25);
        org.junit.Assert.assertNotNull(bookArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(cDArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(magazineArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(bookArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(cDArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(magazineArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(cDArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(bookArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(cDArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(magazineArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 20 + "'", int74 == 20);
        org.junit.Assert.assertNull(paidNewsletter78);
        org.junit.Assert.assertNull(uniProvidedNewsletter79);
        org.junit.Assert.assertNull(paidNewsletter80);
        org.junit.Assert.assertNull(uniProvidedNewsletter81);
        org.junit.Assert.assertNotNull(virtualBook82);
    }

    @Test
    public void test1757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1757");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter54 = null;
        model.PaidNewsletter paidNewsletter55 = null;
        model.VirtualItemSearchResult virtualItemSearchResult56 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter54, paidNewsletter55);
        virtualBook4.author = "hi!";
        java.util.Calendar calendar59 = virtualBook4.date;
        model.VirtualItemContent virtualItemContent61 = new model.VirtualItemContent("model.RentingNotAllowedException: hi!");
        virtualBook4.content = virtualItemContent61;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertNull(calendar59);
    }

    @Test
    public void test1758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1758");
        model.Database database7 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.SearchVirtualItem searchVirtualItem8 = new model.SearchVirtualItem(database7);
        database7.itemPath = "src/Magazine.csv";
        java.lang.String str11 = database7.getMagazineFilePath();
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "src/Magazine.csv" + "'", str11, "src/Magazine.csv");
    }

    @Test
    public void test1759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1759");
        model.ValidateRegistration validateRegistration0 = new model.ValidateRegistration();
        model.Student student1 = new model.Student();
        student1.viewMyOnlineResource();
        boolean boolean3 = validateRegistration0.validateStaffRegistration((model.Staff) student1);
        model.Faculty faculty4 = new model.Faculty();
        boolean boolean5 = validateRegistration0.validateStaffRegistration((model.Staff) faculty4);
        model.Newsletter[] newsletterArray6 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList7 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList7, newsletterArray6);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager9 = new model.NewsletterSubscriptionManager(newsletterList7);
        model.Client client10 = newsletterSubscriptionManager9.client;
        model.Client client11 = newsletterSubscriptionManager9.client;
        model.Student student12 = new model.Student();
        int int13 = student12.ID;
        model.StudentOnlineResources studentOnlineResources14 = new model.StudentOnlineResources((model.Client) student12);
        model.VirtualBook virtualBook16 = studentOnlineResources14.searchAccessibleBook("");
        model.CD cD18 = new model.CD("");
        model.Magazine magazine19 = null;
        model.Book book20 = null;
        model.CD cD21 = null;
        model.Magazine magazine22 = null;
        model.Book[] bookArray23 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList24 = new java.util.ArrayList<model.Book>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList24, bookArray23);
        model.CD[] cDArray26 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList27 = new java.util.ArrayList<model.CD>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList27, cDArray26);
        model.Magazine[] magazineArray29 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList30 = new java.util.ArrayList<model.Magazine>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList30, magazineArray29);
        model.ItemSearchResult itemSearchResult32 = new model.ItemSearchResult(book20, cD21, magazine22, (java.util.Collection<model.Book>) bookList24, (java.util.Collection<model.CD>) cDList27, (java.util.Collection<model.Magazine>) magazineList30);
        model.Book book33 = null;
        model.CD cD34 = null;
        model.Magazine magazine35 = null;
        model.Book[] bookArray36 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList37 = new java.util.ArrayList<model.Book>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList37, bookArray36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        model.Magazine[] magazineArray42 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList43 = new java.util.ArrayList<model.Magazine>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList43, magazineArray42);
        model.ItemSearchResult itemSearchResult45 = new model.ItemSearchResult(book33, cD34, magazine35, (java.util.Collection<model.Book>) bookList37, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList43);
        model.CD[] cDArray46 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList47 = new java.util.ArrayList<model.CD>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList47, cDArray46);
        itemSearchResult45.similarCD = cDList47;
        model.Book book50 = null;
        model.CD cD51 = null;
        model.Magazine magazine52 = null;
        model.Book[] bookArray53 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList54 = new java.util.ArrayList<model.Book>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList54, bookArray53);
        model.CD[] cDArray56 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList57 = new java.util.ArrayList<model.CD>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList57, cDArray56);
        model.Magazine[] magazineArray59 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList60 = new java.util.ArrayList<model.Magazine>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList60, magazineArray59);
        model.ItemSearchResult itemSearchResult62 = new model.ItemSearchResult(book50, cD51, magazine52, (java.util.Collection<model.Book>) bookList54, (java.util.Collection<model.CD>) cDList57, (java.util.Collection<model.Magazine>) magazineList60);
        model.ItemSearchResult itemSearchResult63 = new model.ItemSearchResult((model.Book) virtualBook16, cD18, magazine19, (java.util.Collection<model.Book>) bookList24, (java.util.Collection<model.CD>) cDList47, (java.util.Collection<model.Magazine>) magazineList60);
        int int64 = virtualBook16.ID;
        int int65 = virtualBook16.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter66 = null;
        model.PaidNewsletter paidNewsletter67 = null;
        model.VirtualItemSearchResult virtualItemSearchResult68 = new model.VirtualItemSearchResult(virtualBook16, uniProvidedNewsletter66, paidNewsletter67);
        model.PaidNewsletter paidNewsletter69 = virtualItemSearchResult68.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter70 = new model.UniProvidedNewsletter();
        virtualItemSearchResult68.setUniNewsletter(uniProvidedNewsletter70);
        newsletterSubscriptionManager9.cancelSubscription((model.Newsletter) uniProvidedNewsletter70);
        java.util.ArrayList<model.Newsletter> newsletterList73 = newsletterSubscriptionManager9.newsletterSubscribed;
        java.util.ArrayList<model.Newsletter> newsletterList74 = newsletterSubscriptionManager9.newsletterSubscribed;
        faculty4.newsletterManager = newsletterSubscriptionManager9;
        model.RentAndReturnSystem rentAndReturnSystem76 = new model.RentAndReturnSystem();
        model.Payment payment77 = rentAndReturnSystem76.paymentAPI;
        model.PayMobileWallet payMobileWallet78 = new model.PayMobileWallet();
        payMobileWallet78.amountPay = 100.0f;
        payMobileWallet78.amountPay = (byte) -1;
        rentAndReturnSystem76.paymentAPI = payMobileWallet78;
        payMobileWallet78.amountPay = 0.0d;
        payMobileWallet78.amountPay = 1;
        payMobileWallet78.amountPay = 11;
        newsletterSubscriptionManager9.paymentAPI = payMobileWallet78;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(newsletterArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(client10);
        org.junit.Assert.assertNull(client11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(virtualBook16);
        org.junit.Assert.assertNotNull(bookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(cDArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(magazineArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(bookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(magazineArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(cDArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(bookArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(cDArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(magazineArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 20 + "'", int65 == 20);
        org.junit.Assert.assertNull(paidNewsletter69);
        org.junit.Assert.assertNotNull(newsletterList73);
        org.junit.Assert.assertNotNull(newsletterList74);
        org.junit.Assert.assertNull(payment77);
    }

    @Test
    public void test1760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1760");
        model.Database database0 = null;
        model.Register register1 = model.Register.makeRegister(database0);
        model.Faculty faculty2 = new model.Faculty();
        faculty2.username = "hi!";
        faculty2.faculty = "src/Client.csv";
        boolean boolean9 = register1.registerAsStaff((model.Staff) faculty2, "src/BorrowedItems.csv", "src/VirtualBook.csv");
        java.lang.String str10 = faculty2.username;
        org.junit.Assert.assertNotNull(register1);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test1761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1761");
        model.BuySpecialItems buySpecialItems0 = new model.BuySpecialItems();
        model.Book book1 = null;
        model.CD cD3 = new model.CD("");
        model.Magazine magazine4 = null;
        java.util.Collection<model.Book> bookCollection5 = null;
        model.Book book6 = null;
        model.CD cD7 = null;
        model.Magazine magazine8 = null;
        model.Book[] bookArray9 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList10 = new java.util.ArrayList<model.Book>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList10, bookArray9);
        model.CD[] cDArray12 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList13 = new java.util.ArrayList<model.CD>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList13, cDArray12);
        model.Magazine[] magazineArray15 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList16 = new java.util.ArrayList<model.Magazine>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList16, magazineArray15);
        model.ItemSearchResult itemSearchResult18 = new model.ItemSearchResult(book6, cD7, magazine8, (java.util.Collection<model.Book>) bookList10, (java.util.Collection<model.CD>) cDList13, (java.util.Collection<model.Magazine>) magazineList16);
        model.Book book19 = null;
        model.CD cD20 = null;
        model.Magazine magazine21 = null;
        model.Book[] bookArray22 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList23 = new java.util.ArrayList<model.Book>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList23, bookArray22);
        model.CD[] cDArray25 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList26 = new java.util.ArrayList<model.CD>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList26, cDArray25);
        model.Magazine[] magazineArray28 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList29 = new java.util.ArrayList<model.Magazine>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList29, magazineArray28);
        model.ItemSearchResult itemSearchResult31 = new model.ItemSearchResult(book19, cD20, magazine21, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList29);
        itemSearchResult18.similarCD = cDList26;
        model.Book book33 = null;
        model.CD cD34 = null;
        model.Magazine magazine35 = null;
        model.Book[] bookArray36 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList37 = new java.util.ArrayList<model.Book>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList37, bookArray36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        model.Magazine[] magazineArray42 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList43 = new java.util.ArrayList<model.Magazine>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList43, magazineArray42);
        model.ItemSearchResult itemSearchResult45 = new model.ItemSearchResult(book33, cD34, magazine35, (java.util.Collection<model.Book>) bookList37, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book1, cD3, magazine4, bookCollection5, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList43);
        cD3.ID = (short) 10;
        boolean boolean50 = buySpecialItems0.buyAnItem((model.Item) cD3, (double) 0);
        model.PayDebit payDebit51 = new model.PayDebit();
        buySpecialItems0.paymentAPI = payDebit51;
        double double53 = payDebit51.amountPay;
        payDebit51.pay((double) 9292940);
        org.junit.Assert.assertNotNull(bookArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(cDArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(magazineArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(bookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(magazineArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(bookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(magazineArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
    }

    @Test
    public void test1762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1762");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.StudentOnlineResources studentOnlineResources3 = new model.StudentOnlineResources((model.Client) student0);
        model.Visitor visitor4 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList5 = visitor4.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources6 = new model.StudentOnlineResources((model.Client) visitor4);
        model.RentedItem[] rentedItemArray7 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList8 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList8, rentedItemArray7);
        model.BorrowingManager borrowingManager10 = new model.BorrowingManager(rentedItemList8);
        model.Visitor visitor11 = new model.Visitor();
        visitor11.email = "hi!";
        borrowingManager10.client = visitor11;
        studentOnlineResources6.client = visitor11;
        model.NonFaculty nonFaculty16 = new model.NonFaculty();
        model.Visitor visitor17 = new model.Visitor();
        model.VirtualBook[] virtualBookArray18 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList19 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList19, virtualBookArray18);
        visitor17.virtualBooksAvailable = virtualBookList19;
        visitor17.username = "";
        model.Visitor visitor24 = new model.Visitor();
        model.VirtualBook[] virtualBookArray25 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList26 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList26, virtualBookArray25);
        visitor24.virtualBooksAvailable = virtualBookList26;
        visitor17.virtualBooksAvailable = virtualBookList26;
        nonFaculty16.virtualBooksAvailable = virtualBookList26;
        visitor11.virtualBooksAvailable = virtualBookList26;
        student0.virtualBooksAvailable = virtualBookList26;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(virtualBookList5);
        org.junit.Assert.assertNotNull(rentedItemArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(virtualBookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(virtualBookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test1763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1763");
        model.Database database7 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database7;
        model.SearchVirtualItem searchVirtualItem9 = new model.SearchVirtualItem(database7);
        model.VirtualItemSearchResult virtualItemSearchResult11 = searchVirtualItem9.searchVirtualItem("src/VirtualBook.csv");
        model.VirtualItemSearchResult virtualItemSearchResult13 = searchVirtualItem9.searchVirtualItem("src/CD.csv");
        model.Student student14 = new model.Student();
        int int15 = student14.ID;
        model.StudentOnlineResources studentOnlineResources16 = new model.StudentOnlineResources((model.Client) student14);
        model.VirtualBook virtualBook18 = studentOnlineResources16.searchAccessibleBook("");
        model.CD cD20 = new model.CD("");
        model.Magazine magazine21 = null;
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        model.Book book35 = null;
        model.CD cD36 = null;
        model.Magazine magazine37 = null;
        model.Book[] bookArray38 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList39 = new java.util.ArrayList<model.Book>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList39, bookArray38);
        model.CD[] cDArray41 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList42 = new java.util.ArrayList<model.CD>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList42, cDArray41);
        model.Magazine[] magazineArray44 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList45 = new java.util.ArrayList<model.Magazine>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList45, magazineArray44);
        model.ItemSearchResult itemSearchResult47 = new model.ItemSearchResult(book35, cD36, magazine37, (java.util.Collection<model.Book>) bookList39, (java.util.Collection<model.CD>) cDList42, (java.util.Collection<model.Magazine>) magazineList45);
        model.CD[] cDArray48 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList49 = new java.util.ArrayList<model.CD>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList49, cDArray48);
        itemSearchResult47.similarCD = cDList49;
        model.Book book52 = null;
        model.CD cD53 = null;
        model.Magazine magazine54 = null;
        model.Book[] bookArray55 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList56 = new java.util.ArrayList<model.Book>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList56, bookArray55);
        model.CD[] cDArray58 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList59 = new java.util.ArrayList<model.CD>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList59, cDArray58);
        model.Magazine[] magazineArray61 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList62 = new java.util.ArrayList<model.Magazine>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList62, magazineArray61);
        model.ItemSearchResult itemSearchResult64 = new model.ItemSearchResult(book52, cD53, magazine54, (java.util.Collection<model.Book>) bookList56, (java.util.Collection<model.CD>) cDList59, (java.util.Collection<model.Magazine>) magazineList62);
        model.ItemSearchResult itemSearchResult65 = new model.ItemSearchResult((model.Book) virtualBook18, cD20, magazine21, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList49, (java.util.Collection<model.Magazine>) magazineList62);
        int int66 = virtualBook18.ID;
        int int67 = virtualBook18.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter68 = null;
        model.PaidNewsletter paidNewsletter69 = null;
        model.VirtualItemSearchResult virtualItemSearchResult70 = new model.VirtualItemSearchResult(virtualBook18, uniProvidedNewsletter68, paidNewsletter69);
        model.PaidNewsletter paidNewsletter71 = virtualItemSearchResult70.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter72 = new model.UniProvidedNewsletter();
        virtualItemSearchResult70.setUniNewsletter(uniProvidedNewsletter72);
        model.PaidNewsletter paidNewsletter74 = virtualItemSearchResult70.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter75 = virtualItemSearchResult70.uniNewsletter;
        virtualItemSearchResult13.setUniNewsletter(uniProvidedNewsletter75);
        float float77 = uniProvidedNewsletter75.cost;
        java.lang.String str78 = uniProvidedNewsletter75.title;
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(virtualItemSearchResult11);
        org.junit.Assert.assertNotNull(virtualItemSearchResult13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(virtualBook18);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(bookArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(cDArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(magazineArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(cDArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(bookArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(cDArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(magazineArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 20 + "'", int67 == 20);
        org.junit.Assert.assertNull(paidNewsletter71);
        org.junit.Assert.assertNull(paidNewsletter74);
        org.junit.Assert.assertNotNull(uniProvidedNewsletter75);
        org.junit.Assert.assertTrue("'" + float77 + "' != '" + 0.0f + "'", float77 == 0.0f);
        org.junit.Assert.assertNull(str78);
    }

    @Test
    public void test1764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1764");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.VirtualItemContent virtualItemContent5 = virtualBook4.content;
        model.Student student6 = new model.Student();
        int int7 = student6.ID;
        model.StudentOnlineResources studentOnlineResources8 = new model.StudentOnlineResources((model.Client) student6);
        model.VirtualBook virtualBook10 = studentOnlineResources8.searchAccessibleBook("");
        model.CD cD12 = new model.CD("");
        model.Magazine magazine13 = null;
        model.Book book14 = null;
        model.CD cD15 = null;
        model.Magazine magazine16 = null;
        model.Book[] bookArray17 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList18 = new java.util.ArrayList<model.Book>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList18, bookArray17);
        model.CD[] cDArray20 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList21 = new java.util.ArrayList<model.CD>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList21, cDArray20);
        model.Magazine[] magazineArray23 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList24 = new java.util.ArrayList<model.Magazine>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList24, magazineArray23);
        model.ItemSearchResult itemSearchResult26 = new model.ItemSearchResult(book14, cD15, magazine16, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList21, (java.util.Collection<model.Magazine>) magazineList24);
        model.Book book27 = null;
        model.CD cD28 = null;
        model.Magazine magazine29 = null;
        model.Book[] bookArray30 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList31 = new java.util.ArrayList<model.Book>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList31, bookArray30);
        model.CD[] cDArray33 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList34 = new java.util.ArrayList<model.CD>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList34, cDArray33);
        model.Magazine[] magazineArray36 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList37 = new java.util.ArrayList<model.Magazine>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList37, magazineArray36);
        model.ItemSearchResult itemSearchResult39 = new model.ItemSearchResult(book27, cD28, magazine29, (java.util.Collection<model.Book>) bookList31, (java.util.Collection<model.CD>) cDList34, (java.util.Collection<model.Magazine>) magazineList37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        itemSearchResult39.similarCD = cDList41;
        model.Book book44 = null;
        model.CD cD45 = null;
        model.Magazine magazine46 = null;
        model.Book[] bookArray47 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList48 = new java.util.ArrayList<model.Book>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList48, bookArray47);
        model.CD[] cDArray50 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList51 = new java.util.ArrayList<model.CD>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList51, cDArray50);
        model.Magazine[] magazineArray53 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList54 = new java.util.ArrayList<model.Magazine>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList54, magazineArray53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult(book44, cD45, magazine46, (java.util.Collection<model.Book>) bookList48, (java.util.Collection<model.CD>) cDList51, (java.util.Collection<model.Magazine>) magazineList54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult((model.Book) virtualBook10, cD12, magazine13, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList54);
        int int58 = virtualBook10.ID;
        int int59 = virtualBook10.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter60 = null;
        model.PaidNewsletter paidNewsletter61 = null;
        model.VirtualItemSearchResult virtualItemSearchResult62 = new model.VirtualItemSearchResult(virtualBook10, uniProvidedNewsletter60, paidNewsletter61);
        model.PaidNewsletter paidNewsletter63 = virtualItemSearchResult62.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter64 = new model.UniProvidedNewsletter();
        virtualItemSearchResult62.setUniNewsletter(uniProvidedNewsletter64);
        java.lang.String str66 = uniProvidedNewsletter64.title;
        model.PaidNewsletter paidNewsletter67 = null;
        model.VirtualItemSearchResult virtualItemSearchResult68 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter64, paidNewsletter67);
        virtualBook4.showContent();
        java.lang.Class<?> wildcardClass70 = virtualBook4.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNull(virtualItemContent5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(virtualBook10);
        org.junit.Assert.assertNotNull(bookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(cDArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(magazineArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(bookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(magazineArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(bookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(cDArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(magazineArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 20 + "'", int59 == 20);
        org.junit.Assert.assertNull(paidNewsletter63);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1765");
        model.Database database0 = null;
        model.Register register1 = model.Register.makeRegister(database0);
        model.Faculty faculty2 = new model.Faculty();
        faculty2.username = "hi!";
        java.util.Collection<model.Course> courseCollection5 = null;
        faculty2.courses = courseCollection5;
        java.util.Collection<model.Course> courseCollection7 = faculty2.courses;
        model.Newsletter[] newsletterArray8 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList9 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList9, newsletterArray8);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager11 = new model.NewsletterSubscriptionManager(newsletterList9);
        model.Client client12 = newsletterSubscriptionManager11.client;
        model.Student student13 = new model.Student();
        int int14 = student13.ID;
        model.StudentOnlineResources studentOnlineResources15 = new model.StudentOnlineResources((model.Client) student13);
        student13.ID = '#';
        java.lang.String str18 = student13.email;
        newsletterSubscriptionManager11.client = student13;
        model.Newsletter[] newsletterArray20 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList21 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList21, newsletterArray20);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager23 = new model.NewsletterSubscriptionManager(newsletterList21);
        newsletterSubscriptionManager11.newsletterSubscribed = newsletterList21;
        faculty2.newsletterManager = newsletterSubscriptionManager11;
        model.Newsletter[] newsletterArray26 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList27 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList27, newsletterArray26);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager29 = new model.NewsletterSubscriptionManager(newsletterList27);
        model.Client client30 = newsletterSubscriptionManager29.client;
        model.Student student31 = new model.Student();
        int int32 = student31.ID;
        model.StudentOnlineResources studentOnlineResources33 = new model.StudentOnlineResources((model.Client) student31);
        student31.ID = '#';
        java.lang.String str36 = student31.email;
        newsletterSubscriptionManager29.client = student31;
        student31.ID = (short) 1;
        newsletterSubscriptionManager11.client = student31;
        int int41 = student31.ID;
        java.lang.String str42 = student31.username;
        boolean boolean45 = register1.registerAsStaff((model.Staff) student31, "src/BorrowedItems.csv", "model.RegistrationFailedException: model.RentingNotAllowedException: hi!");
        model.Database database53 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database53;
        model.SearchVirtualItem searchVirtualItem55 = new model.SearchVirtualItem(database53);
        model.Database.database = database53;
        java.lang.String str57 = database53.virtualItemFilePath;
        boolean boolean59 = database53.addItem("");
        register1.database = database53;
        org.junit.Assert.assertNotNull(register1);
        org.junit.Assert.assertNull(courseCollection7);
        org.junit.Assert.assertNotNull(newsletterArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(client12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(newsletterArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(newsletterArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(client30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "model.RegistrationFailedException: model.RentingNotAllowedException: hi!" + "'", str57, "model.RegistrationFailedException: model.RentingNotAllowedException: hi!");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test1766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1766");
        model.Database database7 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database7;
        model.SearchVirtualItem searchVirtualItem9 = new model.SearchVirtualItem(database7);
        model.Database.database = database7;
        model.Login login11 = new model.Login(database7);
        model.Database database12 = login11.db;
        model.Database database13 = login11.db;
        int int14 = database13.getRandomID();
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(database13);
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3118378 + "'", int14 == 3118378);
    }

    @Test
    public void test1767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1767");
        model.ItemManagement itemManagement0 = new model.ItemManagement();
        model.Database database1 = null;
        itemManagement0.database = database1;
        model.BuySpecialItems buySpecialItems3 = new model.BuySpecialItems();
        model.Book book4 = null;
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        java.util.Collection<model.Book> bookCollection8 = null;
        model.Book book9 = null;
        model.CD cD10 = null;
        model.Magazine magazine11 = null;
        model.Book[] bookArray12 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList13 = new java.util.ArrayList<model.Book>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList13, bookArray12);
        model.CD[] cDArray15 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList16 = new java.util.ArrayList<model.CD>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList16, cDArray15);
        model.Magazine[] magazineArray18 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList19 = new java.util.ArrayList<model.Magazine>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList19, magazineArray18);
        model.ItemSearchResult itemSearchResult21 = new model.ItemSearchResult(book9, cD10, magazine11, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList16, (java.util.Collection<model.Magazine>) magazineList19);
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        itemSearchResult21.similarCD = cDList29;
        model.Book book36 = null;
        model.CD cD37 = null;
        model.Magazine magazine38 = null;
        model.Book[] bookArray39 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList40 = new java.util.ArrayList<model.Book>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList40, bookArray39);
        model.CD[] cDArray42 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList43 = new java.util.ArrayList<model.CD>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList43, cDArray42);
        model.Magazine[] magazineArray45 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList46 = new java.util.ArrayList<model.Magazine>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList46, magazineArray45);
        model.ItemSearchResult itemSearchResult48 = new model.ItemSearchResult(book36, cD37, magazine38, (java.util.Collection<model.Book>) bookList40, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList46);
        model.ItemSearchResult itemSearchResult49 = new model.ItemSearchResult(book4, cD6, magazine7, bookCollection8, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList46);
        cD6.ID = (short) 10;
        boolean boolean53 = buySpecialItems3.buyAnItem((model.Item) cD6, (double) 0);
        itemManagement0.enableAnItem((model.Item) cD6);
        model.Database database62 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str63 = database62.getVirtualBookFilePath();
        model.Database.database = database62;
        java.lang.String str65 = database62.virtualItemFilePath;
        itemManagement0.database = database62;
        model.Database database74 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database74;
        model.SearchVirtualItem searchVirtualItem76 = new model.SearchVirtualItem(database74);
        model.VirtualItemSearchResult virtualItemSearchResult78 = searchVirtualItem76.searchVirtualItem("src/VirtualBook.csv");
        model.Student student79 = new model.Student();
        int int80 = student79.ID;
        model.StudentOnlineResources studentOnlineResources81 = new model.StudentOnlineResources((model.Client) student79);
        model.VirtualBook virtualBook83 = studentOnlineResources81.searchAccessibleBook("");
        java.lang.String str84 = virtualBook83.location;
        int int85 = virtualBook83.ID;
        virtualBook83.isBookLost = false;
        virtualItemSearchResult78.virtualBook = virtualBook83;
        model.VirtualBook virtualBook89 = virtualItemSearchResult78.getVirtualBook();
        model.VirtualItemContent virtualItemContent90 = virtualBook89.content;
        itemManagement0.enableAnItem((model.Item) virtualBook89);
        int int92 = virtualBook89.edition;
        boolean boolean93 = virtualBook89.canBePurchased;
        virtualBook89.publisher = "src/CD.csv";
        org.junit.Assert.assertNotNull(bookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cDArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(magazineArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(bookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cDArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(magazineArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(database62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "src/VirtualBook.csv" + "'", str63, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "model.RegistrationFailedException: model.RentingNotAllowedException: hi!" + "'", str65, "model.RegistrationFailedException: model.RentingNotAllowedException: hi!");
        org.junit.Assert.assertNotNull(database74);
        org.junit.Assert.assertNotNull(virtualItemSearchResult78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(virtualBook83);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(virtualBook89);
        org.junit.Assert.assertNull(virtualItemContent90);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test1768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1768");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        java.lang.String str54 = virtualBook4.author;
        virtualBook4.showContent();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertNull(str54);
    }

    @Test
    public void test1769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1769");
        model.RegistrationFailedException registrationFailedException1 = new model.RegistrationFailedException("src/Book.csv");
        model.RegistrationFailedException registrationFailedException3 = new model.RegistrationFailedException("model.RegistrationFailedException: ");
        registrationFailedException1.addSuppressed((java.lang.Throwable) registrationFailedException3);
        java.lang.Throwable[] throwableArray5 = registrationFailedException1.getSuppressed();
        java.lang.String str6 = registrationFailedException1.toString();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "model.RegistrationFailedException: src/Book.csv" + "'", str6, "model.RegistrationFailedException: src/Book.csv");
    }

    @Test
    public void test1770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1770");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.VirtualItemContent virtualItemContent5 = virtualBook4.content;
        model.Student student6 = new model.Student();
        int int7 = student6.ID;
        model.StudentOnlineResources studentOnlineResources8 = new model.StudentOnlineResources((model.Client) student6);
        model.VirtualBook virtualBook10 = studentOnlineResources8.searchAccessibleBook("");
        model.CD cD12 = new model.CD("");
        model.Magazine magazine13 = null;
        model.Book book14 = null;
        model.CD cD15 = null;
        model.Magazine magazine16 = null;
        model.Book[] bookArray17 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList18 = new java.util.ArrayList<model.Book>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList18, bookArray17);
        model.CD[] cDArray20 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList21 = new java.util.ArrayList<model.CD>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList21, cDArray20);
        model.Magazine[] magazineArray23 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList24 = new java.util.ArrayList<model.Magazine>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList24, magazineArray23);
        model.ItemSearchResult itemSearchResult26 = new model.ItemSearchResult(book14, cD15, magazine16, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList21, (java.util.Collection<model.Magazine>) magazineList24);
        model.Book book27 = null;
        model.CD cD28 = null;
        model.Magazine magazine29 = null;
        model.Book[] bookArray30 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList31 = new java.util.ArrayList<model.Book>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList31, bookArray30);
        model.CD[] cDArray33 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList34 = new java.util.ArrayList<model.CD>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList34, cDArray33);
        model.Magazine[] magazineArray36 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList37 = new java.util.ArrayList<model.Magazine>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList37, magazineArray36);
        model.ItemSearchResult itemSearchResult39 = new model.ItemSearchResult(book27, cD28, magazine29, (java.util.Collection<model.Book>) bookList31, (java.util.Collection<model.CD>) cDList34, (java.util.Collection<model.Magazine>) magazineList37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        itemSearchResult39.similarCD = cDList41;
        model.Book book44 = null;
        model.CD cD45 = null;
        model.Magazine magazine46 = null;
        model.Book[] bookArray47 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList48 = new java.util.ArrayList<model.Book>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList48, bookArray47);
        model.CD[] cDArray50 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList51 = new java.util.ArrayList<model.CD>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList51, cDArray50);
        model.Magazine[] magazineArray53 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList54 = new java.util.ArrayList<model.Magazine>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList54, magazineArray53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult(book44, cD45, magazine46, (java.util.Collection<model.Book>) bookList48, (java.util.Collection<model.CD>) cDList51, (java.util.Collection<model.Magazine>) magazineList54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult((model.Book) virtualBook10, cD12, magazine13, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList54);
        int int58 = virtualBook10.ID;
        int int59 = virtualBook10.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter60 = null;
        model.PaidNewsletter paidNewsletter61 = null;
        model.VirtualItemSearchResult virtualItemSearchResult62 = new model.VirtualItemSearchResult(virtualBook10, uniProvidedNewsletter60, paidNewsletter61);
        model.PaidNewsletter paidNewsletter63 = virtualItemSearchResult62.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter64 = new model.UniProvidedNewsletter();
        virtualItemSearchResult62.setUniNewsletter(uniProvidedNewsletter64);
        java.lang.String str66 = uniProvidedNewsletter64.title;
        model.PaidNewsletter paidNewsletter67 = null;
        model.VirtualItemSearchResult virtualItemSearchResult68 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter64, paidNewsletter67);
        model.VirtualBook virtualBook69 = virtualItemSearchResult68.virtualBook;
        model.PaidNewsletter paidNewsletter70 = new model.PaidNewsletter();
        virtualItemSearchResult68.setPaidNewsletter(paidNewsletter70);
        model.UniProvidedNewsletter uniProvidedNewsletter72 = virtualItemSearchResult68.uniNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter73 = virtualItemSearchResult68.getUniNewsletter();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNull(virtualItemContent5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(virtualBook10);
        org.junit.Assert.assertNotNull(bookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(cDArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(magazineArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(bookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(magazineArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(bookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(cDArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(magazineArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 20 + "'", int59 == 20);
        org.junit.Assert.assertNull(paidNewsletter63);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(virtualBook69);
        org.junit.Assert.assertNotNull(uniProvidedNewsletter72);
        org.junit.Assert.assertNotNull(uniProvidedNewsletter73);
    }

    @Test
    public void test1771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1771");
        model.BorrowingManager.maxBorrowCount = 2689259;
    }

    @Test
    public void test1772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1772");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.RequestForum requestForum1 = model.RequestForum.createRequestForum();
        model.Request request2 = new model.Request();
        request2.title = "";
        java.lang.String str5 = requestForum1.makeARequest(request2);
        int int6 = requestForum0.assessBooksPriority(request2);
        model.LibraryManagementTeam libraryManagementTeam7 = new model.LibraryManagementTeam();
        int int8 = libraryManagementTeam7.ID;
        int int9 = libraryManagementTeam7.accessCode;
        model.Item item10 = null;
        libraryManagementTeam7.addAnItem(item10);
        java.util.ArrayList<model.Item> itemList12 = libraryManagementTeam7.items;
        requestForum0.managementTeam = libraryManagementTeam7;
        model.LibraryManagementTeam libraryManagementTeam14 = new model.LibraryManagementTeam();
        int int15 = libraryManagementTeam14.ID;
        int int16 = libraryManagementTeam14.accessCode;
        model.ItemManagement itemManagement17 = new model.ItemManagement();
        model.Database database18 = null;
        itemManagement17.database = database18;
        model.Student student20 = new model.Student();
        int int21 = student20.ID;
        model.StudentOnlineResources studentOnlineResources22 = new model.StudentOnlineResources((model.Client) student20);
        model.VirtualBook virtualBook24 = studentOnlineResources22.searchAccessibleBook("");
        itemManagement17.disableAnItem((model.Item) virtualBook24);
        libraryManagementTeam14.itemManagement = itemManagement17;
        requestForum0.managementTeam = libraryManagementTeam14;
        model.RequestForum requestForum28 = model.RequestForum.createRequestForum();
        model.Request request29 = new model.Request();
        request29.title = "";
        java.lang.String str32 = requestForum28.makeARequest(request29);
        model.LibraryManagementTeam libraryManagementTeam33 = new model.LibraryManagementTeam();
        int int34 = libraryManagementTeam33.ID;
        model.Magazine magazine36 = new model.Magazine("");
        java.util.Calendar calendar37 = magazine36.date;
        magazine36.author = "model.RegistrationFailedException: ";
        libraryManagementTeam33.disableAnItem((model.Item) magazine36);
        requestForum28.managementTeam = libraryManagementTeam33;
        model.RequestForum requestForum42 = model.RequestForum.createRequestForum();
        model.Request request43 = new model.Request();
        request43.title = "";
        java.lang.String str46 = requestForum42.makeARequest(request43);
        model.Client client47 = request43.requestee;
        java.lang.String str48 = requestForum28.makeARequest(request43);
        int int49 = requestForum0.assessBooksPriority(request43);
        model.LibraryManagementTeam libraryManagementTeam50 = new model.LibraryManagementTeam();
        int int51 = libraryManagementTeam50.ID;
        model.Magazine magazine53 = new model.Magazine("");
        java.util.Calendar calendar54 = magazine53.date;
        magazine53.author = "model.RegistrationFailedException: ";
        libraryManagementTeam50.disableAnItem((model.Item) magazine53);
        java.util.Collection<model.Request> requestCollection58 = libraryManagementTeam50.bookRequests;
        model.Item item59 = null;
        libraryManagementTeam50.addAnItem(item59);
        requestForum0.managementTeam = libraryManagementTeam50;
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertNotNull(requestForum1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(itemList12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(virtualBook24);
        org.junit.Assert.assertNotNull(requestForum28);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNull(calendar37);
        org.junit.Assert.assertNotNull(requestForum42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNull(client47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNull(calendar54);
        org.junit.Assert.assertNull(requestCollection58);
    }

    @Test
    public void test1773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1773");
        model.VirtualItemContent virtualItemContent1 = new model.VirtualItemContent("model.RegistrationFailedException: src/Magazine.csv");
        java.lang.String str2 = virtualItemContent1.link;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "model.RegistrationFailedException: src/Magazine.csv" + "'", str2, "model.RegistrationFailedException: src/Magazine.csv");
    }

    @Test
    public void test1774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1774");
        model.Database database7 = model.Database.createDatabase("model.LoginFailedException: hi!", "model.RentingNotAllowedException: src/Magazine.csv", "model.RentingNotAllowedException: src/Magazine.csv", "model.RentingNotAllowedException: hi!", "src/Client.csv", "src/CD.csv", "src/CD.csv");
        org.junit.Assert.assertNotNull(database7);
    }

    @Test
    public void test1775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1775");
        model.Database database7 = model.Database.createDatabase("src/VirtualBook.csv", "model.RegistrationFailedException: ", "src/BorrowedItems.csv", "src/Magazine.csv", "src/Magazine.csv", "src/VirtualBook.csv", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getBorrowedItemFilePath();
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/BorrowedItems.csv" + "'", str8, "src/BorrowedItems.csv");
    }

    @Test
    public void test1776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1776");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.Book book1 = null;
        model.CD cD3 = new model.CD("");
        model.Magazine magazine4 = null;
        java.util.Collection<model.Book> bookCollection5 = null;
        model.Book book6 = null;
        model.CD cD7 = null;
        model.Magazine magazine8 = null;
        model.Book[] bookArray9 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList10 = new java.util.ArrayList<model.Book>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList10, bookArray9);
        model.CD[] cDArray12 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList13 = new java.util.ArrayList<model.CD>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList13, cDArray12);
        model.Magazine[] magazineArray15 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList16 = new java.util.ArrayList<model.Magazine>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList16, magazineArray15);
        model.ItemSearchResult itemSearchResult18 = new model.ItemSearchResult(book6, cD7, magazine8, (java.util.Collection<model.Book>) bookList10, (java.util.Collection<model.CD>) cDList13, (java.util.Collection<model.Magazine>) magazineList16);
        model.Book book19 = null;
        model.CD cD20 = null;
        model.Magazine magazine21 = null;
        model.Book[] bookArray22 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList23 = new java.util.ArrayList<model.Book>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList23, bookArray22);
        model.CD[] cDArray25 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList26 = new java.util.ArrayList<model.CD>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList26, cDArray25);
        model.Magazine[] magazineArray28 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList29 = new java.util.ArrayList<model.Magazine>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList29, magazineArray28);
        model.ItemSearchResult itemSearchResult31 = new model.ItemSearchResult(book19, cD20, magazine21, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList29);
        itemSearchResult18.similarCD = cDList26;
        model.Book book33 = null;
        model.CD cD34 = null;
        model.Magazine magazine35 = null;
        model.Book[] bookArray36 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList37 = new java.util.ArrayList<model.Book>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList37, bookArray36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        model.Magazine[] magazineArray42 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList43 = new java.util.ArrayList<model.Magazine>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList43, magazineArray42);
        model.ItemSearchResult itemSearchResult45 = new model.ItemSearchResult(book33, cD34, magazine35, (java.util.Collection<model.Book>) bookList37, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book1, cD3, magazine4, bookCollection5, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList43);
        cD3.ID = (short) 10;
        cD3.canBePurchased = false;
        boolean boolean51 = cD3.canBePurchased;
        model.Faculty faculty52 = new model.Faculty();
        boolean boolean53 = rentAndReturnSystem0.rentAnItem((model.Item) cD3, (model.Client) faculty52);
        java.lang.String str54 = faculty52.faculty;
        model.RentedItem[] rentedItemArray55 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList56 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList56, rentedItemArray55);
        model.BorrowingManager borrowingManager58 = new model.BorrowingManager(rentedItemList56);
        boolean boolean59 = borrowingManager58.canRent();
        model.Client client60 = borrowingManager58.client;
        faculty52.borrowManager = borrowingManager58;
        java.util.ArrayList<model.VirtualBook> virtualBookList62 = faculty52.virtualBooksAvailable;
        int int63 = faculty52.ID;
        org.junit.Assert.assertNotNull(bookArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(cDArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(magazineArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(bookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(magazineArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(bookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(magazineArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(rentedItemArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(client60);
        org.junit.Assert.assertNull(virtualBookList62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
    }

    @Test
    public void test1777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1777");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        java.util.Iterator<model.VirtualItem> virtualItemItor3 = studentOnlineResources2.iterator();
        model.VirtualItem virtualItem4 = null;
        java.lang.String str5 = studentOnlineResources2.readVirtualItem(virtualItem4);
        model.Student student6 = new model.Student();
        int int7 = student6.ID;
        model.StudentOnlineResources studentOnlineResources8 = new model.StudentOnlineResources((model.Client) student6);
        model.VirtualBook virtualBook10 = studentOnlineResources8.searchAccessibleBook("");
        model.CD cD12 = new model.CD("");
        model.Magazine magazine13 = null;
        model.Book book14 = null;
        model.CD cD15 = null;
        model.Magazine magazine16 = null;
        model.Book[] bookArray17 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList18 = new java.util.ArrayList<model.Book>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList18, bookArray17);
        model.CD[] cDArray20 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList21 = new java.util.ArrayList<model.CD>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList21, cDArray20);
        model.Magazine[] magazineArray23 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList24 = new java.util.ArrayList<model.Magazine>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList24, magazineArray23);
        model.ItemSearchResult itemSearchResult26 = new model.ItemSearchResult(book14, cD15, magazine16, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList21, (java.util.Collection<model.Magazine>) magazineList24);
        model.Book book27 = null;
        model.CD cD28 = null;
        model.Magazine magazine29 = null;
        model.Book[] bookArray30 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList31 = new java.util.ArrayList<model.Book>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList31, bookArray30);
        model.CD[] cDArray33 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList34 = new java.util.ArrayList<model.CD>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList34, cDArray33);
        model.Magazine[] magazineArray36 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList37 = new java.util.ArrayList<model.Magazine>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList37, magazineArray36);
        model.ItemSearchResult itemSearchResult39 = new model.ItemSearchResult(book27, cD28, magazine29, (java.util.Collection<model.Book>) bookList31, (java.util.Collection<model.CD>) cDList34, (java.util.Collection<model.Magazine>) magazineList37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        itemSearchResult39.similarCD = cDList41;
        model.Book book44 = null;
        model.CD cD45 = null;
        model.Magazine magazine46 = null;
        model.Book[] bookArray47 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList48 = new java.util.ArrayList<model.Book>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList48, bookArray47);
        model.CD[] cDArray50 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList51 = new java.util.ArrayList<model.CD>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList51, cDArray50);
        model.Magazine[] magazineArray53 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList54 = new java.util.ArrayList<model.Magazine>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList54, magazineArray53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult(book44, cD45, magazine46, (java.util.Collection<model.Book>) bookList48, (java.util.Collection<model.CD>) cDList51, (java.util.Collection<model.Magazine>) magazineList54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult((model.Book) virtualBook10, cD12, magazine13, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList54);
        int int58 = virtualBook10.ID;
        int int59 = virtualBook10.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter60 = null;
        model.PaidNewsletter paidNewsletter61 = null;
        model.VirtualItemSearchResult virtualItemSearchResult62 = new model.VirtualItemSearchResult(virtualBook10, uniProvidedNewsletter60, paidNewsletter61);
        java.lang.String str63 = studentOnlineResources2.readVirtualItem((model.VirtualItem) paidNewsletter61);
        model.UniProvidedNewsletter uniProvidedNewsletter64 = new model.UniProvidedNewsletter();
        java.lang.String str65 = studentOnlineResources2.readVirtualItem((model.VirtualItem) uniProvidedNewsletter64);
        model.Client client66 = studentOnlineResources2.client;
        model.RentedItem[] rentedItemArray67 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList68 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList68, rentedItemArray67);
        model.BorrowingManager borrowingManager70 = new model.BorrowingManager(rentedItemList68);
        boolean boolean71 = borrowingManager70.canRent();
        model.Client client72 = borrowingManager70.client;
        model.Student student73 = new model.Student();
        int int74 = student73.ID;
        model.StudentOnlineResources studentOnlineResources75 = new model.StudentOnlineResources((model.Client) student73);
        model.StudentOnlineResources studentOnlineResources76 = new model.StudentOnlineResources((model.Client) student73);
        model.RentedItem[] rentedItemArray77 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList78 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList78, rentedItemArray77);
        model.BorrowingManager borrowingManager80 = new model.BorrowingManager(rentedItemList78);
        model.Visitor visitor81 = new model.Visitor();
        visitor81.email = "hi!";
        borrowingManager80.client = visitor81;
        studentOnlineResources76.client = visitor81;
        model.Client client86 = studentOnlineResources76.client;
        borrowingManager70.client = client86;
        client86.email = "src/CD.csv";
        studentOnlineResources2.client = client86;
        java.util.ArrayList<model.VirtualBook> virtualBookList91 = client86.virtualBooksAvailable;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(virtualItemItor3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(virtualBook10);
        org.junit.Assert.assertNotNull(bookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(cDArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(magazineArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(bookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(magazineArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(bookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(cDArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(magazineArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 20 + "'", int59 == 20);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(client66);
        org.junit.Assert.assertNotNull(rentedItemArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(client72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(rentedItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(client86);
        org.junit.Assert.assertNull(virtualBookList91);
    }

    @Test
    public void test1778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1778");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.Request request1 = new model.Request();
        request1.title = "";
        java.lang.String str4 = requestForum0.makeARequest(request1);
        request1.title = "hi!";
        model.RentAndReturnSystem rentAndReturnSystem7 = new model.RentAndReturnSystem();
        model.Book book8 = null;
        model.CD cD10 = new model.CD("");
        model.Magazine magazine11 = null;
        java.util.Collection<model.Book> bookCollection12 = null;
        model.Book book13 = null;
        model.CD cD14 = null;
        model.Magazine magazine15 = null;
        model.Book[] bookArray16 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList17 = new java.util.ArrayList<model.Book>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList17, bookArray16);
        model.CD[] cDArray19 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList20 = new java.util.ArrayList<model.CD>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList20, cDArray19);
        model.Magazine[] magazineArray22 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList23 = new java.util.ArrayList<model.Magazine>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList23, magazineArray22);
        model.ItemSearchResult itemSearchResult25 = new model.ItemSearchResult(book13, cD14, magazine15, (java.util.Collection<model.Book>) bookList17, (java.util.Collection<model.CD>) cDList20, (java.util.Collection<model.Magazine>) magazineList23);
        model.Book book26 = null;
        model.CD cD27 = null;
        model.Magazine magazine28 = null;
        model.Book[] bookArray29 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList30 = new java.util.ArrayList<model.Book>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList30, bookArray29);
        model.CD[] cDArray32 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList33 = new java.util.ArrayList<model.CD>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList33, cDArray32);
        model.Magazine[] magazineArray35 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList36 = new java.util.ArrayList<model.Magazine>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList36, magazineArray35);
        model.ItemSearchResult itemSearchResult38 = new model.ItemSearchResult(book26, cD27, magazine28, (java.util.Collection<model.Book>) bookList30, (java.util.Collection<model.CD>) cDList33, (java.util.Collection<model.Magazine>) magazineList36);
        itemSearchResult25.similarCD = cDList33;
        model.Book book40 = null;
        model.CD cD41 = null;
        model.Magazine magazine42 = null;
        model.Book[] bookArray43 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList44 = new java.util.ArrayList<model.Book>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList44, bookArray43);
        model.CD[] cDArray46 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList47 = new java.util.ArrayList<model.CD>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList47, cDArray46);
        model.Magazine[] magazineArray49 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList50 = new java.util.ArrayList<model.Magazine>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList50, magazineArray49);
        model.ItemSearchResult itemSearchResult52 = new model.ItemSearchResult(book40, cD41, magazine42, (java.util.Collection<model.Book>) bookList44, (java.util.Collection<model.CD>) cDList47, (java.util.Collection<model.Magazine>) magazineList50);
        model.ItemSearchResult itemSearchResult53 = new model.ItemSearchResult(book8, cD10, magazine11, bookCollection12, (java.util.Collection<model.CD>) cDList33, (java.util.Collection<model.Magazine>) magazineList50);
        cD10.ID = (short) 10;
        cD10.canBePurchased = false;
        boolean boolean58 = cD10.canBePurchased;
        model.Faculty faculty59 = new model.Faculty();
        boolean boolean60 = rentAndReturnSystem7.rentAnItem((model.Item) cD10, (model.Client) faculty59);
        java.lang.String str61 = faculty59.faculty;
        request1.requestee = faculty59;
        model.RentedItem[] rentedItemArray63 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList64 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList64, rentedItemArray63);
        model.BorrowingManager borrowingManager66 = new model.BorrowingManager(rentedItemList64);
        boolean boolean67 = borrowingManager66.canRent();
        model.Client client68 = borrowingManager66.client;
        model.Student student69 = new model.Student();
        int int70 = student69.ID;
        model.StudentOnlineResources studentOnlineResources71 = new model.StudentOnlineResources((model.Client) student69);
        model.StudentOnlineResources studentOnlineResources72 = new model.StudentOnlineResources((model.Client) student69);
        model.RentedItem[] rentedItemArray73 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList74 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList74, rentedItemArray73);
        model.BorrowingManager borrowingManager76 = new model.BorrowingManager(rentedItemList74);
        model.Visitor visitor77 = new model.Visitor();
        visitor77.email = "hi!";
        borrowingManager76.client = visitor77;
        studentOnlineResources72.client = visitor77;
        model.Client client82 = studentOnlineResources72.client;
        borrowingManager66.client = client82;
        java.lang.String str84 = client82.email;
        request1.requestee = client82;
        model.Client client86 = request1.requestee;
        java.lang.String str87 = client86.username;
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(bookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(cDArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(magazineArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(bookArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(cDArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(magazineArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(bookArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(cDArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(magazineArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(rentedItemArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(client68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(rentedItemArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(client82);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "hi!" + "'", str84, "hi!");
        org.junit.Assert.assertNotNull(client86);
        org.junit.Assert.assertNull(str87);
    }

    @Test
    public void test1779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1779");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.Database.database = database7;
        java.lang.String str10 = database7.virtualItemFilePath;
        java.lang.String str11 = database7.getBookFilePath();
        database7.itemPath = "src/Magazine.csv";
        model.Login login14 = model.Login.makeLogin(database7);
        boolean boolean16 = database7.addItem("src/Client.csv");
        model.SearchItems searchItems17 = new model.SearchItems(database7);
        model.CD cD19 = searchItems17.getCD("src/Client.csv");
        model.Book book21 = searchItems17.getBook("src/CD.csv");
        model.Magazine magazine23 = searchItems17.getMagazine("src/BorrowedItems.csv");
        model.Book book25 = searchItems17.getBook("model.RentingNotAllowedException: src/Magazine.csv");
        java.util.Collection<model.Book> bookCollection27 = searchItems17.getSimilarBooks("model.RentingNotAllowedException: src/Magazine.csv");
        model.Magazine magazine29 = searchItems17.getMagazine("model.RegistrationFailedException: src/Book.csv");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "model.RegistrationFailedException: model.RentingNotAllowedException: hi!" + "'", str10, "model.RegistrationFailedException: model.RentingNotAllowedException: hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "src/Book.csv" + "'", str11, "src/Book.csv");
        org.junit.Assert.assertNotNull(login14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(cD19);
        org.junit.Assert.assertNull(book21);
        org.junit.Assert.assertNull(magazine23);
        org.junit.Assert.assertNull(book25);
        org.junit.Assert.assertNotNull(bookCollection27);
        org.junit.Assert.assertNull(magazine29);
    }

    @Test
    public void test1780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1780");
        model.LibraryManagementTeam libraryManagementTeam0 = new model.LibraryManagementTeam();
        int int1 = libraryManagementTeam0.ID;
        int int2 = libraryManagementTeam0.accessCode;
        model.ItemManagement itemManagement3 = new model.ItemManagement();
        model.Database database4 = null;
        itemManagement3.database = database4;
        model.Student student6 = new model.Student();
        int int7 = student6.ID;
        model.StudentOnlineResources studentOnlineResources8 = new model.StudentOnlineResources((model.Client) student6);
        model.VirtualBook virtualBook10 = studentOnlineResources8.searchAccessibleBook("");
        itemManagement3.disableAnItem((model.Item) virtualBook10);
        libraryManagementTeam0.itemManagement = itemManagement3;
        model.Book book13 = null;
        model.CD cD14 = null;
        model.Magazine magazine15 = null;
        model.Book[] bookArray16 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList17 = new java.util.ArrayList<model.Book>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList17, bookArray16);
        model.CD[] cDArray19 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList20 = new java.util.ArrayList<model.CD>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList20, cDArray19);
        model.Magazine[] magazineArray22 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList23 = new java.util.ArrayList<model.Magazine>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList23, magazineArray22);
        model.ItemSearchResult itemSearchResult25 = new model.ItemSearchResult(book13, cD14, magazine15, (java.util.Collection<model.Book>) bookList17, (java.util.Collection<model.CD>) cDList20, (java.util.Collection<model.Magazine>) magazineList23);
        model.CD[] cDArray26 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList27 = new java.util.ArrayList<model.CD>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList27, cDArray26);
        itemSearchResult25.similarCD = cDList27;
        model.Book book30 = null;
        itemSearchResult25.book = book30;
        model.Book book32 = null;
        model.CD cD33 = null;
        model.Magazine magazine34 = null;
        model.Book[] bookArray35 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList36 = new java.util.ArrayList<model.Book>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList36, bookArray35);
        model.CD[] cDArray38 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList39 = new java.util.ArrayList<model.CD>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList39, cDArray38);
        model.Magazine[] magazineArray41 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList42 = new java.util.ArrayList<model.Magazine>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList42, magazineArray41);
        model.ItemSearchResult itemSearchResult44 = new model.ItemSearchResult(book32, cD33, magazine34, (java.util.Collection<model.Book>) bookList36, (java.util.Collection<model.CD>) cDList39, (java.util.Collection<model.Magazine>) magazineList42);
        itemSearchResult25.similarBooks = bookList36;
        model.Book book46 = itemSearchResult25.book;
        java.util.Collection<model.CD> cDCollection47 = itemSearchResult25.similarCD;
        model.Magazine magazine48 = itemSearchResult25.magazine;
        model.Student student49 = new model.Student();
        int int50 = student49.ID;
        model.StudentOnlineResources studentOnlineResources51 = new model.StudentOnlineResources((model.Client) student49);
        model.VirtualBook virtualBook53 = studentOnlineResources51.searchAccessibleBook("");
        java.lang.String str54 = virtualBook53.location;
        int int55 = virtualBook53.ID;
        virtualBook53.isBookLost = false;
        java.lang.String str58 = virtualBook53.author;
        virtualBook53.edition = 'a';
        itemSearchResult25.book = virtualBook53;
        itemManagement3.enableAnItem((model.Item) virtualBook53);
        virtualBook53.isBookLost = true;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(virtualBook10);
        org.junit.Assert.assertNotNull(bookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(cDArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(magazineArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(bookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(cDArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(magazineArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(book46);
        org.junit.Assert.assertNotNull(cDCollection47);
        org.junit.Assert.assertNull(magazine48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(virtualBook53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNull(str58);
    }

    @Test
    public void test1781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1781");
        model.LibraryManagementTeam libraryManagementTeam0 = new model.LibraryManagementTeam();
        int int1 = libraryManagementTeam0.ID;
        int int2 = libraryManagementTeam0.accessCode;
        model.ItemManagement itemManagement3 = new model.ItemManagement();
        model.Database database4 = null;
        itemManagement3.database = database4;
        model.Student student6 = new model.Student();
        int int7 = student6.ID;
        model.StudentOnlineResources studentOnlineResources8 = new model.StudentOnlineResources((model.Client) student6);
        model.VirtualBook virtualBook10 = studentOnlineResources8.searchAccessibleBook("");
        itemManagement3.disableAnItem((model.Item) virtualBook10);
        libraryManagementTeam0.itemManagement = itemManagement3;
        model.Book book13 = null;
        model.CD cD14 = null;
        model.Magazine magazine15 = null;
        model.Book[] bookArray16 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList17 = new java.util.ArrayList<model.Book>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList17, bookArray16);
        model.CD[] cDArray19 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList20 = new java.util.ArrayList<model.CD>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList20, cDArray19);
        model.Magazine[] magazineArray22 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList23 = new java.util.ArrayList<model.Magazine>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList23, magazineArray22);
        model.ItemSearchResult itemSearchResult25 = new model.ItemSearchResult(book13, cD14, magazine15, (java.util.Collection<model.Book>) bookList17, (java.util.Collection<model.CD>) cDList20, (java.util.Collection<model.Magazine>) magazineList23);
        model.CD[] cDArray26 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList27 = new java.util.ArrayList<model.CD>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList27, cDArray26);
        itemSearchResult25.similarCD = cDList27;
        model.Book book30 = null;
        itemSearchResult25.book = book30;
        model.Book book32 = null;
        model.CD cD33 = null;
        model.Magazine magazine34 = null;
        model.Book[] bookArray35 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList36 = new java.util.ArrayList<model.Book>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList36, bookArray35);
        model.CD[] cDArray38 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList39 = new java.util.ArrayList<model.CD>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList39, cDArray38);
        model.Magazine[] magazineArray41 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList42 = new java.util.ArrayList<model.Magazine>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList42, magazineArray41);
        model.ItemSearchResult itemSearchResult44 = new model.ItemSearchResult(book32, cD33, magazine34, (java.util.Collection<model.Book>) bookList36, (java.util.Collection<model.CD>) cDList39, (java.util.Collection<model.Magazine>) magazineList42);
        itemSearchResult25.similarBooks = bookList36;
        model.Book book46 = itemSearchResult25.book;
        java.util.Collection<model.CD> cDCollection47 = itemSearchResult25.similarCD;
        model.Magazine magazine48 = itemSearchResult25.magazine;
        model.Student student49 = new model.Student();
        int int50 = student49.ID;
        model.StudentOnlineResources studentOnlineResources51 = new model.StudentOnlineResources((model.Client) student49);
        model.VirtualBook virtualBook53 = studentOnlineResources51.searchAccessibleBook("");
        java.lang.String str54 = virtualBook53.location;
        int int55 = virtualBook53.ID;
        virtualBook53.isBookLost = false;
        java.lang.String str58 = virtualBook53.author;
        virtualBook53.edition = 'a';
        itemSearchResult25.book = virtualBook53;
        itemManagement3.enableAnItem((model.Item) virtualBook53);
        virtualBook53.location = "hi!";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(virtualBook10);
        org.junit.Assert.assertNotNull(bookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(cDArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(magazineArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(bookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(cDArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(magazineArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(book46);
        org.junit.Assert.assertNotNull(cDCollection47);
        org.junit.Assert.assertNull(magazine48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(virtualBook53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNull(str58);
    }

    @Test
    public void test1782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1782");
        model.ItemManagement itemManagement0 = new model.ItemManagement();
        model.Database database1 = null;
        itemManagement0.database = database1;
        model.Student student3 = new model.Student();
        int int4 = student3.ID;
        model.StudentOnlineResources studentOnlineResources5 = new model.StudentOnlineResources((model.Client) student3);
        model.VirtualBook virtualBook7 = studentOnlineResources5.searchAccessibleBook("");
        itemManagement0.disableAnItem((model.Item) virtualBook7);
        model.Student student9 = new model.Student();
        int int10 = student9.ID;
        model.StudentOnlineResources studentOnlineResources11 = new model.StudentOnlineResources((model.Client) student9);
        model.VirtualBook virtualBook13 = studentOnlineResources11.searchAccessibleBook("");
        int int14 = virtualBook13.ID;
        model.VirtualItemContent virtualItemContent15 = virtualBook13.content;
        itemManagement0.disableAnItem((model.Item) virtualBook13);
        virtualBook13.ISBN = "model.RentingNotAllowedException: src/Magazine.csv";
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(virtualBook7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(virtualBook13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(virtualItemContent15);
    }

    @Test
    public void test1783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1783");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.VirtualItemContent virtualItemContent5 = virtualBook4.content;
        model.Student student6 = new model.Student();
        int int7 = student6.ID;
        model.StudentOnlineResources studentOnlineResources8 = new model.StudentOnlineResources((model.Client) student6);
        model.VirtualBook virtualBook10 = studentOnlineResources8.searchAccessibleBook("");
        model.CD cD12 = new model.CD("");
        model.Magazine magazine13 = null;
        model.Book book14 = null;
        model.CD cD15 = null;
        model.Magazine magazine16 = null;
        model.Book[] bookArray17 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList18 = new java.util.ArrayList<model.Book>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList18, bookArray17);
        model.CD[] cDArray20 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList21 = new java.util.ArrayList<model.CD>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList21, cDArray20);
        model.Magazine[] magazineArray23 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList24 = new java.util.ArrayList<model.Magazine>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList24, magazineArray23);
        model.ItemSearchResult itemSearchResult26 = new model.ItemSearchResult(book14, cD15, magazine16, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList21, (java.util.Collection<model.Magazine>) magazineList24);
        model.Book book27 = null;
        model.CD cD28 = null;
        model.Magazine magazine29 = null;
        model.Book[] bookArray30 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList31 = new java.util.ArrayList<model.Book>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList31, bookArray30);
        model.CD[] cDArray33 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList34 = new java.util.ArrayList<model.CD>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList34, cDArray33);
        model.Magazine[] magazineArray36 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList37 = new java.util.ArrayList<model.Magazine>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList37, magazineArray36);
        model.ItemSearchResult itemSearchResult39 = new model.ItemSearchResult(book27, cD28, magazine29, (java.util.Collection<model.Book>) bookList31, (java.util.Collection<model.CD>) cDList34, (java.util.Collection<model.Magazine>) magazineList37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        itemSearchResult39.similarCD = cDList41;
        model.Book book44 = null;
        model.CD cD45 = null;
        model.Magazine magazine46 = null;
        model.Book[] bookArray47 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList48 = new java.util.ArrayList<model.Book>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList48, bookArray47);
        model.CD[] cDArray50 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList51 = new java.util.ArrayList<model.CD>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList51, cDArray50);
        model.Magazine[] magazineArray53 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList54 = new java.util.ArrayList<model.Magazine>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList54, magazineArray53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult(book44, cD45, magazine46, (java.util.Collection<model.Book>) bookList48, (java.util.Collection<model.CD>) cDList51, (java.util.Collection<model.Magazine>) magazineList54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult((model.Book) virtualBook10, cD12, magazine13, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList54);
        int int58 = virtualBook10.ID;
        int int59 = virtualBook10.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter60 = null;
        model.PaidNewsletter paidNewsletter61 = null;
        model.VirtualItemSearchResult virtualItemSearchResult62 = new model.VirtualItemSearchResult(virtualBook10, uniProvidedNewsletter60, paidNewsletter61);
        model.PaidNewsletter paidNewsletter63 = virtualItemSearchResult62.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter64 = new model.UniProvidedNewsletter();
        virtualItemSearchResult62.setUniNewsletter(uniProvidedNewsletter64);
        java.lang.String str66 = uniProvidedNewsletter64.title;
        model.PaidNewsletter paidNewsletter67 = null;
        model.VirtualItemSearchResult virtualItemSearchResult68 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter64, paidNewsletter67);
        model.VirtualBook virtualBook69 = virtualItemSearchResult68.virtualBook;
        model.VirtualBook virtualBook70 = virtualItemSearchResult68.virtualBook;
        model.PaidNewsletter paidNewsletter71 = virtualItemSearchResult68.getPaidNewsletter();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNull(virtualItemContent5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(virtualBook10);
        org.junit.Assert.assertNotNull(bookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(cDArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(magazineArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(bookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(magazineArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(bookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(cDArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(magazineArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 20 + "'", int59 == 20);
        org.junit.Assert.assertNull(paidNewsletter63);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(virtualBook69);
        org.junit.Assert.assertNotNull(virtualBook70);
        org.junit.Assert.assertNull(paidNewsletter71);
    }

    @Test
    public void test1784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1784");
        model.ItemManagement itemManagement0 = new model.ItemManagement();
        model.Item item2 = itemManagement0.selectAnItemFromDatabase((int) (short) 0);
        model.Database database3 = model.Database.database;
        model.Student student4 = new model.Student();
        int int5 = student4.ID;
        model.StudentOnlineResources studentOnlineResources6 = new model.StudentOnlineResources((model.Client) student4);
        student4.ID = '#';
        database3.addClient((model.Client) student4);
        itemManagement0.database = database3;
        model.Magazine magazine12 = new model.Magazine("hi!");
        magazine12.location = "model.RegistrationFailedException: ";
        magazine12.author = "src/VirtualBook.csv";
        boolean boolean17 = magazine12.canBePurchased;
        itemManagement0.addAnItem((model.Item) magazine12);
        model.Database database26 = model.Database.createDatabase("", "src/Book.csv", "model.RegistrationFailedException: src/Book.csv", "model.RentingNotAllowedException: ", "src/VirtualBook.csv", "", "model.RentingNotAllowedException: ");
        itemManagement0.database = database26;
        model.Database database28 = model.Database.database;
        java.util.ArrayList<java.lang.String> strList29 = database28.getAllItems();
        model.Client client31 = database28.getClient("src/Magazine.csv");
        model.Register register32 = model.Register.makeRegister(database28);
        model.Database.database = database28;
        itemManagement0.database = database28;
        org.junit.Assert.assertNull(item2);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(client31);
        org.junit.Assert.assertNotNull(register32);
    }

    @Test
    public void test1785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1785");
        model.LibraryManagementTeam libraryManagementTeam0 = new model.LibraryManagementTeam();
        int int1 = libraryManagementTeam0.ID;
        int int2 = libraryManagementTeam0.accessCode;
        libraryManagementTeam0.accessCode = (short) -1;
        libraryManagementTeam0.ID = '#';
        model.Book book7 = null;
        model.CD cD8 = null;
        model.Magazine magazine9 = null;
        model.Book[] bookArray10 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList11 = new java.util.ArrayList<model.Book>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList11, bookArray10);
        model.CD[] cDArray13 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList14 = new java.util.ArrayList<model.CD>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList14, cDArray13);
        model.Magazine[] magazineArray16 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList17 = new java.util.ArrayList<model.Magazine>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList17, magazineArray16);
        model.ItemSearchResult itemSearchResult19 = new model.ItemSearchResult(book7, cD8, magazine9, (java.util.Collection<model.Book>) bookList11, (java.util.Collection<model.CD>) cDList14, (java.util.Collection<model.Magazine>) magazineList17);
        model.CD[] cDArray20 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList21 = new java.util.ArrayList<model.CD>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList21, cDArray20);
        itemSearchResult19.similarCD = cDList21;
        model.Book book24 = null;
        itemSearchResult19.book = book24;
        model.Book book26 = null;
        model.CD cD27 = null;
        model.Magazine magazine28 = null;
        model.Book[] bookArray29 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList30 = new java.util.ArrayList<model.Book>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList30, bookArray29);
        model.CD[] cDArray32 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList33 = new java.util.ArrayList<model.CD>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList33, cDArray32);
        model.Magazine[] magazineArray35 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList36 = new java.util.ArrayList<model.Magazine>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList36, magazineArray35);
        model.ItemSearchResult itemSearchResult38 = new model.ItemSearchResult(book26, cD27, magazine28, (java.util.Collection<model.Book>) bookList30, (java.util.Collection<model.CD>) cDList33, (java.util.Collection<model.Magazine>) magazineList36);
        itemSearchResult19.similarBooks = bookList30;
        model.Magazine magazine41 = new model.Magazine("src/Book.csv");
        itemSearchResult19.magazine = magazine41;
        model.Magazine magazine43 = itemSearchResult19.magazine;
        libraryManagementTeam0.disableAnItem((model.Item) magazine43);
        java.util.Calendar calendar45 = magazine43.date;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(bookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(cDArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(magazineArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(cDArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(bookArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(cDArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(magazineArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(magazine43);
        org.junit.Assert.assertNull(calendar45);
    }

    @Test
    public void test1786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1786");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getBookFilePath();
        database7.itemPath = "hi!";
        model.SearchVirtualItem searchVirtualItem11 = new model.SearchVirtualItem(database7);
        model.UniProvidedNewsletter uniProvidedNewsletter13 = searchVirtualItem11.getUniNewsletter("src/Book.csv");
        model.PaidNewsletter paidNewsletter15 = searchVirtualItem11.getPaidNewsletter("model.RegistrationFailedException: src/Book.csv");
        model.PaidNewsletter paidNewsletter17 = searchVirtualItem11.getPaidNewsletter("model.RentingNotAllowedException: src/Magazine.csv");
        model.PaidNewsletter paidNewsletter19 = searchVirtualItem11.getPaidNewsletter("model.RegistrationFailedException: model.RentingNotAllowedException: hi!");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/Book.csv" + "'", str8, "src/Book.csv");
        org.junit.Assert.assertNull(uniProvidedNewsletter13);
        org.junit.Assert.assertNull(paidNewsletter15);
        org.junit.Assert.assertNull(paidNewsletter17);
        org.junit.Assert.assertNull(paidNewsletter19);
    }

    @Test
    public void test1787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1787");
        model.SearchBorrowedItem searchBorrowedItem0 = model.SearchBorrowedItem.makeSearchBorrowedItem();
        searchBorrowedItem0.removeItem("src/Book.csv", "");
        model.Student student4 = new model.Student();
        int int5 = student4.ID;
        model.StudentOnlineResources studentOnlineResources6 = new model.StudentOnlineResources((model.Client) student4);
        model.VirtualBook virtualBook8 = studentOnlineResources6.searchAccessibleBook("");
        java.lang.String str9 = virtualBook8.location;
        int int10 = virtualBook8.ID;
        virtualBook8.isBookLost = false;
        model.RentedItem[] rentedItemArray14 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList15 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList15, rentedItemArray14);
        model.BorrowingManager borrowingManager17 = new model.BorrowingManager(rentedItemList15);
        model.Book book18 = null;
        model.CD cD20 = new model.CD("");
        model.Magazine magazine21 = null;
        java.util.Collection<model.Book> bookCollection22 = null;
        model.Book book23 = null;
        model.CD cD24 = null;
        model.Magazine magazine25 = null;
        model.Book[] bookArray26 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList27 = new java.util.ArrayList<model.Book>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList27, bookArray26);
        model.CD[] cDArray29 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList30 = new java.util.ArrayList<model.CD>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList30, cDArray29);
        model.Magazine[] magazineArray32 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList33 = new java.util.ArrayList<model.Magazine>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList33, magazineArray32);
        model.ItemSearchResult itemSearchResult35 = new model.ItemSearchResult(book23, cD24, magazine25, (java.util.Collection<model.Book>) bookList27, (java.util.Collection<model.CD>) cDList30, (java.util.Collection<model.Magazine>) magazineList33);
        model.Book book36 = null;
        model.CD cD37 = null;
        model.Magazine magazine38 = null;
        model.Book[] bookArray39 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList40 = new java.util.ArrayList<model.Book>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList40, bookArray39);
        model.CD[] cDArray42 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList43 = new java.util.ArrayList<model.CD>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList43, cDArray42);
        model.Magazine[] magazineArray45 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList46 = new java.util.ArrayList<model.Magazine>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList46, magazineArray45);
        model.ItemSearchResult itemSearchResult48 = new model.ItemSearchResult(book36, cD37, magazine38, (java.util.Collection<model.Book>) bookList40, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList46);
        itemSearchResult35.similarCD = cDList43;
        model.Book book50 = null;
        model.CD cD51 = null;
        model.Magazine magazine52 = null;
        model.Book[] bookArray53 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList54 = new java.util.ArrayList<model.Book>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList54, bookArray53);
        model.CD[] cDArray56 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList57 = new java.util.ArrayList<model.CD>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList57, cDArray56);
        model.Magazine[] magazineArray59 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList60 = new java.util.ArrayList<model.Magazine>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList60, magazineArray59);
        model.ItemSearchResult itemSearchResult62 = new model.ItemSearchResult(book50, cD51, magazine52, (java.util.Collection<model.Book>) bookList54, (java.util.Collection<model.CD>) cDList57, (java.util.Collection<model.Magazine>) magazineList60);
        model.ItemSearchResult itemSearchResult63 = new model.ItemSearchResult(book18, cD20, magazine21, bookCollection22, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList60);
        cD20.ID = (short) 10;
        borrowingManager17.removeRentedItem((model.Item) cD20);
        model.Client client67 = borrowingManager17.client;
        model.Visitor visitor68 = new model.Visitor();
        borrowingManager17.client = visitor68;
        searchBorrowedItem0.addPhyscialItem((model.Item) virtualBook8, "", (model.Client) visitor68);
        java.util.ArrayList<model.VirtualItem> virtualItemList73 = searchBorrowedItem0.searchBorrowedVirtualItem("src/BorrowedItems.csv", "src/CD.csv");
        model.Student student74 = new model.Student();
        int int75 = student74.ID;
        model.StudentOnlineResources studentOnlineResources76 = new model.StudentOnlineResources((model.Client) student74);
        model.VirtualBook virtualBook78 = studentOnlineResources76.searchAccessibleBook("");
        virtualBook78.ID = 20;
        virtualBook78.ID = (short) 100;
        boolean boolean83 = virtualBook78.canBePurchased;
        model.Visitor visitor85 = new model.Visitor();
        model.VirtualBook[] virtualBookArray86 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList87 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList87, virtualBookArray86);
        visitor85.virtualBooksAvailable = virtualBookList87;
        searchBorrowedItem0.addPhyscialItem((model.Item) virtualBook78, "src/VirtualBook.csv", (model.Client) visitor85);
        virtualBook78.canBePurchased = false;
        org.junit.Assert.assertNotNull(searchBorrowedItem0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(virtualBook8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(rentedItemArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(bookArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(cDArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(magazineArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(bookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cDArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(magazineArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(bookArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(cDArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(magazineArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(client67);
        org.junit.Assert.assertNotNull(virtualItemList73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(virtualBook78);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(virtualBookArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test1788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1788");
        model.Faculty faculty0 = new model.Faculty();
        faculty0.username = "hi!";
        java.lang.String str3 = faculty0.username;
        model.Course course4 = new model.Course();
        java.lang.String str5 = course4.subject;
        course4.code = "";
        course4.subject = "src/Magazine.csv";
        model.Course course10 = new model.Course();
        java.lang.String str11 = course10.code;
        model.Course course12 = new model.Course();
        java.lang.String str13 = course12.subject;
        java.lang.String str14 = course12.subject;
        java.lang.String str15 = course12.code;
        java.lang.String str16 = course12.code;
        model.Course course17 = new model.Course();
        java.lang.String str18 = course17.code;
        model.Course course19 = new model.Course();
        java.lang.String str20 = course19.subject;
        java.lang.String str21 = course19.subject;
        java.lang.String str22 = course19.code;
        course19.code = "src/VirtualBook.csv";
        model.Course course25 = new model.Course();
        model.Course course26 = new model.Course();
        java.lang.String str27 = course26.subject;
        course26.code = "";
        course26.subject = "src/Magazine.csv";
        int int32 = course26.year;
        model.Course course33 = new model.Course();
        java.lang.String str34 = course33.code;
        java.lang.String str35 = course33.subject;
        course33.subject = "model.RegistrationFailedException: ";
        course33.subject = "src/Magazine.csv";
        model.Course[] courseArray40 = new model.Course[] { course4, course10, course12, course17, course19, course25, course26, course33 };
        java.util.ArrayList<model.Course> courseList41 = new java.util.ArrayList<model.Course>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.Course>) courseList41, courseArray40);
        faculty0.courses = courseList41;
        java.util.Collection<model.Course> courseCollection44 = faculty0.courses;
        java.util.Collection<model.Course> courseCollection45 = faculty0.courses;
        java.util.ArrayList<model.VirtualBook> virtualBookList46 = faculty0.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources47 = new model.StudentOnlineResources((model.Client) faculty0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(courseArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(courseCollection44);
        org.junit.Assert.assertNotNull(courseCollection45);
        org.junit.Assert.assertNull(virtualBookList46);
    }

    @Test
    public void test1789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1789");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.Database.database = database7;
        java.lang.String str10 = database7.virtualItemFilePath;
        java.lang.String str11 = database7.getBookFilePath();
        database7.itemPath = "src/Magazine.csv";
        model.Login login14 = model.Login.makeLogin(database7);
        boolean boolean16 = database7.addItem("src/Client.csv");
        model.SearchItems searchItems17 = new model.SearchItems(database7);
        model.CD cD19 = searchItems17.getCD("src/Client.csv");
        java.util.Collection<model.Book> bookCollection21 = searchItems17.getSimilarBooks("src/Book.csv");
        model.ItemSearchResult itemSearchResult23 = searchItems17.searchItem("model.LoginFailedException: hi!");
        java.util.Collection<model.Book> bookCollection25 = searchItems17.getSimilarBooks("model.RentingNotAllowedException: hi!");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "model.RegistrationFailedException: model.RentingNotAllowedException: hi!" + "'", str10, "model.RegistrationFailedException: model.RentingNotAllowedException: hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "src/Book.csv" + "'", str11, "src/Book.csv");
        org.junit.Assert.assertNotNull(login14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(cD19);
        org.junit.Assert.assertNotNull(bookCollection21);
        org.junit.Assert.assertNotNull(itemSearchResult23);
        org.junit.Assert.assertNotNull(bookCollection25);
    }

    @Test
    public void test1790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1790");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.Student student5 = new model.Student();
        int int6 = student5.ID;
        model.StudentOnlineResources studentOnlineResources7 = new model.StudentOnlineResources((model.Client) student5);
        student5.ID = '#';
        java.lang.String str10 = student5.email;
        newsletterSubscriptionManager3.client = student5;
        model.Newsletter[] newsletterArray12 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList13 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList13, newsletterArray12);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager15 = new model.NewsletterSubscriptionManager(newsletterList13);
        newsletterSubscriptionManager3.newsletterSubscribed = newsletterList13;
        model.NewsletterSubscriptionManager newsletterSubscriptionManager17 = new model.NewsletterSubscriptionManager(newsletterList13);
        model.Visitor visitor18 = new model.Visitor();
        model.VirtualBook[] virtualBookArray19 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList20 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList20, virtualBookArray19);
        visitor18.virtualBooksAvailable = virtualBookList20;
        visitor18.viewMyOnlineResource();
        newsletterSubscriptionManager17.client = visitor18;
        model.Student student25 = new model.Student();
        student25.viewMyOnlineResource();
        student25.viewMyOnlineResource();
        newsletterSubscriptionManager17.client = student25;
        model.ValidateRegistration validateRegistration29 = new model.ValidateRegistration();
        model.Student student30 = new model.Student();
        student30.viewMyOnlineResource();
        boolean boolean32 = validateRegistration29.validateStaffRegistration((model.Staff) student30);
        model.Faculty faculty33 = new model.Faculty();
        boolean boolean34 = validateRegistration29.validateStaffRegistration((model.Staff) faculty33);
        java.util.Collection<model.Book> bookCollection35 = null;
        faculty33.textbooks = bookCollection35;
        newsletterSubscriptionManager17.client = faculty33;
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(newsletterArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(virtualBookArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test1791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1791");
        model.Database database0 = null;
        model.Login login1 = new model.Login(database0);
        model.Database database9 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str10 = database9.getBookFilePath();
        database9.itemPath = "hi!";
        model.Database.database = database9;
        java.lang.String str14 = database9.getNewspaperFilePath();
        login1.db = database9;
        int int16 = database9.getRandomID();
        model.Database.database = database9;
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "src/Book.csv" + "'", str10, "src/Book.csv");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "src/Newsletter.csv" + "'", str14, "src/Newsletter.csv");
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 4583201 + "'", int16 == 4583201);
    }

    @Test
    public void test1792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1792");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.BuySpecialItems buySpecialItems1 = new model.BuySpecialItems();
        model.PayDebit payDebit2 = new model.PayDebit();
        buySpecialItems1.paymentAPI = payDebit2;
        rentAndReturnSystem0.paymentAPI = payDebit2;
        model.Payment payment5 = rentAndReturnSystem0.paymentAPI;
        model.Student student6 = new model.Student();
        int int7 = student6.ID;
        model.StudentOnlineResources studentOnlineResources8 = new model.StudentOnlineResources((model.Client) student6);
        model.VirtualBook virtualBook10 = studentOnlineResources8.searchAccessibleBook("");
        model.CD cD12 = new model.CD("");
        model.Magazine magazine13 = null;
        model.Book book14 = null;
        model.CD cD15 = null;
        model.Magazine magazine16 = null;
        model.Book[] bookArray17 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList18 = new java.util.ArrayList<model.Book>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList18, bookArray17);
        model.CD[] cDArray20 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList21 = new java.util.ArrayList<model.CD>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList21, cDArray20);
        model.Magazine[] magazineArray23 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList24 = new java.util.ArrayList<model.Magazine>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList24, magazineArray23);
        model.ItemSearchResult itemSearchResult26 = new model.ItemSearchResult(book14, cD15, magazine16, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList21, (java.util.Collection<model.Magazine>) magazineList24);
        model.Book book27 = null;
        model.CD cD28 = null;
        model.Magazine magazine29 = null;
        model.Book[] bookArray30 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList31 = new java.util.ArrayList<model.Book>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList31, bookArray30);
        model.CD[] cDArray33 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList34 = new java.util.ArrayList<model.CD>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList34, cDArray33);
        model.Magazine[] magazineArray36 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList37 = new java.util.ArrayList<model.Magazine>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList37, magazineArray36);
        model.ItemSearchResult itemSearchResult39 = new model.ItemSearchResult(book27, cD28, magazine29, (java.util.Collection<model.Book>) bookList31, (java.util.Collection<model.CD>) cDList34, (java.util.Collection<model.Magazine>) magazineList37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        itemSearchResult39.similarCD = cDList41;
        model.Book book44 = null;
        model.CD cD45 = null;
        model.Magazine magazine46 = null;
        model.Book[] bookArray47 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList48 = new java.util.ArrayList<model.Book>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList48, bookArray47);
        model.CD[] cDArray50 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList51 = new java.util.ArrayList<model.CD>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList51, cDArray50);
        model.Magazine[] magazineArray53 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList54 = new java.util.ArrayList<model.Magazine>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList54, magazineArray53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult(book44, cD45, magazine46, (java.util.Collection<model.Book>) bookList48, (java.util.Collection<model.CD>) cDList51, (java.util.Collection<model.Magazine>) magazineList54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult((model.Book) virtualBook10, cD12, magazine13, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList54);
        int int58 = virtualBook10.ID;
        int int59 = virtualBook10.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter60 = null;
        model.PaidNewsletter paidNewsletter61 = null;
        model.VirtualItemSearchResult virtualItemSearchResult62 = new model.VirtualItemSearchResult(virtualBook10, uniProvidedNewsletter60, paidNewsletter61);
        virtualBook10.title = "src/Magazine.csv";
        java.lang.String str65 = virtualBook10.publisher;
        virtualBook10.location = "src/Book.csv";
        model.Faculty faculty68 = new model.Faculty();
        faculty68.username = "hi!";
        java.util.Collection<model.Course> courseCollection71 = null;
        faculty68.courses = courseCollection71;
        java.util.Collection<model.Course> courseCollection73 = faculty68.courses;
        model.Newsletter[] newsletterArray74 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList75 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList75, newsletterArray74);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager77 = new model.NewsletterSubscriptionManager(newsletterList75);
        model.Client client78 = newsletterSubscriptionManager77.client;
        model.Student student79 = new model.Student();
        int int80 = student79.ID;
        model.StudentOnlineResources studentOnlineResources81 = new model.StudentOnlineResources((model.Client) student79);
        student79.ID = '#';
        java.lang.String str84 = student79.email;
        newsletterSubscriptionManager77.client = student79;
        model.Newsletter[] newsletterArray86 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList87 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList87, newsletterArray86);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager89 = new model.NewsletterSubscriptionManager(newsletterList87);
        newsletterSubscriptionManager77.newsletterSubscribed = newsletterList87;
        faculty68.newsletterManager = newsletterSubscriptionManager77;
        java.util.ArrayList<model.VirtualBook> virtualBookList92 = faculty68.virtualBooksAvailable;
        faculty68.email = "src/BorrowedItems.csv";
        boolean boolean95 = rentAndReturnSystem0.returnAnItem((model.Item) virtualBook10, (model.Client) faculty68);
        virtualBook10.location = "src/CD.csv";
        org.junit.Assert.assertNotNull(payment5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(virtualBook10);
        org.junit.Assert.assertNotNull(bookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(cDArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(magazineArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(bookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(magazineArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(bookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(cDArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(magazineArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 20 + "'", int59 == 20);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(courseCollection73);
        org.junit.Assert.assertNotNull(newsletterArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(client78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(newsletterArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNull(virtualBookList92);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test1793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1793");
        int int2 = model.SearchStrategy.countSimilarWords("model.RentingNotAllowedException: ", "model.RentingNotAllowedException: hi!");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    }

    @Test
    public void test1794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1794");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        model.Book book4 = null;
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        java.util.Collection<model.Book> bookCollection8 = null;
        model.Book book9 = null;
        model.CD cD10 = null;
        model.Magazine magazine11 = null;
        model.Book[] bookArray12 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList13 = new java.util.ArrayList<model.Book>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList13, bookArray12);
        model.CD[] cDArray15 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList16 = new java.util.ArrayList<model.CD>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList16, cDArray15);
        model.Magazine[] magazineArray18 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList19 = new java.util.ArrayList<model.Magazine>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList19, magazineArray18);
        model.ItemSearchResult itemSearchResult21 = new model.ItemSearchResult(book9, cD10, magazine11, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList16, (java.util.Collection<model.Magazine>) magazineList19);
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        itemSearchResult21.similarCD = cDList29;
        model.Book book36 = null;
        model.CD cD37 = null;
        model.Magazine magazine38 = null;
        model.Book[] bookArray39 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList40 = new java.util.ArrayList<model.Book>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList40, bookArray39);
        model.CD[] cDArray42 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList43 = new java.util.ArrayList<model.CD>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList43, cDArray42);
        model.Magazine[] magazineArray45 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList46 = new java.util.ArrayList<model.Magazine>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList46, magazineArray45);
        model.ItemSearchResult itemSearchResult48 = new model.ItemSearchResult(book36, cD37, magazine38, (java.util.Collection<model.Book>) bookList40, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList46);
        model.ItemSearchResult itemSearchResult49 = new model.ItemSearchResult(book4, cD6, magazine7, bookCollection8, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList46);
        cD6.ID = (short) 10;
        borrowingManager3.removeRentedItem((model.Item) cD6);
        model.Client client53 = borrowingManager3.client;
        java.util.ArrayList<model.RentedItem> rentedItemList54 = borrowingManager3.physicalItemBorrowed;
        double double55 = borrowingManager3.checkBalanceOwed();
        java.util.ArrayList<model.RentedItem> rentedItemList56 = borrowingManager3.physicalItemBorrowed;
        model.VirtualBook virtualBook58 = new model.VirtualBook("model.LoginFailedException: hi!");
        java.time.LocalDate localDate59 = null;
        // The following exception was thrown during execution in test generation
        try {
            borrowingManager3.rentAnItem((model.Item) virtualBook58, localDate59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.toString()\" because \"date\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(bookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cDArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(magazineArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(bookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cDArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(magazineArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(client53);
        org.junit.Assert.assertNotNull(rentedItemList54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(rentedItemList56);
    }

    @Test
    public void test1795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1795");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.Payment payment1 = rentAndReturnSystem0.paymentAPI;
        model.PayMobileWallet payMobileWallet2 = new model.PayMobileWallet();
        payMobileWallet2.amountPay = 100.0f;
        payMobileWallet2.pay((double) 100L);
        rentAndReturnSystem0.paymentAPI = payMobileWallet2;
        model.Payment payment8 = rentAndReturnSystem0.paymentAPI;
        payment8.pay((double) (-1L));
        org.junit.Assert.assertNull(payment1);
        org.junit.Assert.assertNotNull(payment8);
    }

    @Test
    public void test1796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1796");
        model.SearchBorrowedItem searchBorrowedItem0 = model.SearchBorrowedItem.makeSearchBorrowedItem();
        model.Visitor visitor1 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList2 = visitor1.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources3 = new model.StudentOnlineResources((model.Client) visitor1);
        model.RentedItem[] rentedItemArray4 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList5 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList5, rentedItemArray4);
        model.BorrowingManager borrowingManager7 = new model.BorrowingManager(rentedItemList5);
        model.Visitor visitor8 = new model.Visitor();
        visitor8.email = "hi!";
        borrowingManager7.client = visitor8;
        studentOnlineResources3.client = visitor8;
        model.Student student13 = new model.Student();
        int int14 = student13.ID;
        model.StudentOnlineResources studentOnlineResources15 = new model.StudentOnlineResources((model.Client) student13);
        model.VirtualBook virtualBook17 = studentOnlineResources15.searchAccessibleBook("");
        model.CD cD19 = new model.CD("");
        model.Magazine magazine20 = null;
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.Book book34 = null;
        model.CD cD35 = null;
        model.Magazine magazine36 = null;
        model.Book[] bookArray37 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList38 = new java.util.ArrayList<model.Book>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList38, bookArray37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        model.Magazine[] magazineArray43 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList44 = new java.util.ArrayList<model.Magazine>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList44, magazineArray43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book34, cD35, magazine36, (java.util.Collection<model.Book>) bookList38, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList44);
        model.CD[] cDArray47 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList48 = new java.util.ArrayList<model.CD>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList48, cDArray47);
        itemSearchResult46.similarCD = cDList48;
        model.Book book51 = null;
        model.CD cD52 = null;
        model.Magazine magazine53 = null;
        model.Book[] bookArray54 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList55 = new java.util.ArrayList<model.Book>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList55, bookArray54);
        model.CD[] cDArray57 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList58 = new java.util.ArrayList<model.CD>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList58, cDArray57);
        model.Magazine[] magazineArray60 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList61 = new java.util.ArrayList<model.Magazine>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList61, magazineArray60);
        model.ItemSearchResult itemSearchResult63 = new model.ItemSearchResult(book51, cD52, magazine53, (java.util.Collection<model.Book>) bookList55, (java.util.Collection<model.CD>) cDList58, (java.util.Collection<model.Magazine>) magazineList61);
        model.ItemSearchResult itemSearchResult64 = new model.ItemSearchResult((model.Book) virtualBook17, cD19, magazine20, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList48, (java.util.Collection<model.Magazine>) magazineList61);
        java.lang.String str65 = studentOnlineResources3.readVirtualItem((model.VirtualItem) virtualBook17);
        model.Visitor visitor67 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList68 = visitor67.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources69 = new model.StudentOnlineResources((model.Client) visitor67);
        searchBorrowedItem0.addPhyscialItem((model.Item) virtualBook17, "", (model.Client) visitor67);
        searchBorrowedItem0.removeItem("src/VirtualBook.csv", "src/Book.csv");
        model.SearchBorrowedItem.object = searchBorrowedItem0;
        java.util.ArrayList<model.RentedItem> rentedItemList77 = searchBorrowedItem0.searchBorrowedItem("model.RegistrationFailedException: ", "src/Client.csv");
        model.SearchBorrowedItem.object = searchBorrowedItem0;
        model.SearchBorrowedItem.object = searchBorrowedItem0;
        org.junit.Assert.assertNotNull(searchBorrowedItem0);
        org.junit.Assert.assertNull(virtualBookList2);
        org.junit.Assert.assertNotNull(rentedItemArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(virtualBook17);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(bookArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(magazineArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(cDArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(bookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(cDArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(magazineArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(virtualBookList68);
        org.junit.Assert.assertNotNull(rentedItemList77);
    }

    @Test
    public void test1797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1797");
        model.Faculty faculty0 = new model.Faculty();
        faculty0.username = "hi!";
        java.util.Collection<model.Course> courseCollection3 = null;
        faculty0.courses = courseCollection3;
        faculty0.viewMyOnlineResource();
    }

    @Test
    public void test1798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1798");
        model.Book book0 = null;
        model.CD cD1 = null;
        model.Magazine magazine2 = null;
        model.Book[] bookArray3 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList4 = new java.util.ArrayList<model.Book>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList4, bookArray3);
        model.CD[] cDArray6 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList7 = new java.util.ArrayList<model.CD>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList7, cDArray6);
        model.Magazine[] magazineArray9 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList10 = new java.util.ArrayList<model.Magazine>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList10, magazineArray9);
        model.ItemSearchResult itemSearchResult12 = new model.ItemSearchResult(book0, cD1, magazine2, (java.util.Collection<model.Book>) bookList4, (java.util.Collection<model.CD>) cDList7, (java.util.Collection<model.Magazine>) magazineList10);
        model.Book book13 = null;
        model.CD cD14 = null;
        model.Magazine magazine15 = null;
        model.Book[] bookArray16 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList17 = new java.util.ArrayList<model.Book>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList17, bookArray16);
        model.CD[] cDArray19 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList20 = new java.util.ArrayList<model.CD>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList20, cDArray19);
        model.Magazine[] magazineArray22 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList23 = new java.util.ArrayList<model.Magazine>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList23, magazineArray22);
        model.ItemSearchResult itemSearchResult25 = new model.ItemSearchResult(book13, cD14, magazine15, (java.util.Collection<model.Book>) bookList17, (java.util.Collection<model.CD>) cDList20, (java.util.Collection<model.Magazine>) magazineList23);
        itemSearchResult12.similarCD = cDList20;
        model.Magazine magazine27 = itemSearchResult12.magazine;
        model.LibraryManagementTeam libraryManagementTeam28 = new model.LibraryManagementTeam();
        libraryManagementTeam28.accessCode = (byte) 10;
        model.BuySpecialItems buySpecialItems31 = new model.BuySpecialItems();
        model.CD cD33 = new model.CD("");
        int int34 = cD33.ID;
        boolean boolean36 = buySpecialItems31.buyAnItem((model.Item) cD33, (double) (short) 0);
        libraryManagementTeam28.addAnItem((model.Item) cD33);
        itemSearchResult12.cd = cD33;
        java.util.Collection<model.CD> cDCollection39 = itemSearchResult12.similarCD;
        org.junit.Assert.assertNotNull(bookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(cDArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(magazineArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(bookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(cDArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(magazineArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(magazine27);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(cDCollection39);
    }

    @Test
    public void test1799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1799");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.Database.database = database7;
        java.lang.String str10 = database7.virtualItemFilePath;
        java.lang.String str11 = database7.getBookFilePath();
        database7.itemPath = "src/Magazine.csv";
        model.Login login14 = model.Login.makeLogin(database7);
        java.lang.String str15 = database7.getNewspaperFilePath();
        java.lang.String str16 = database7.getMagazineFilePath();
        model.SearchClient searchClient17 = model.SearchClient.makeSearchClient(database7);
        java.lang.String str18 = database7.getNewspaperFilePath();
        model.SearchClient searchClient19 = model.SearchClient.makeSearchClient(database7);
        java.lang.String str20 = database7.getNewspaperFilePath();
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "model.RegistrationFailedException: model.RentingNotAllowedException: hi!" + "'", str10, "model.RegistrationFailedException: model.RentingNotAllowedException: hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "src/Book.csv" + "'", str11, "src/Book.csv");
        org.junit.Assert.assertNotNull(login14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "src/Newsletter.csv" + "'", str15, "src/Newsletter.csv");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "src/Magazine.csv" + "'", str16, "src/Magazine.csv");
        org.junit.Assert.assertNotNull(searchClient17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "src/Newsletter.csv" + "'", str18, "src/Newsletter.csv");
        org.junit.Assert.assertNotNull(searchClient19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "src/Newsletter.csv" + "'", str20, "src/Newsletter.csv");
    }

    @Test
    public void test1800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1800");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        java.lang.String str5 = virtualBook4.location;
        int int6 = virtualBook4.ID;
        virtualBook4.isBookLost = false;
        java.lang.String str9 = virtualBook4.author;
        virtualBook4.isBookLost = true;
        int int12 = virtualBook4.copiesAvailable;
        virtualBook4.location = "model.LoginFailedException: hi!";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 20 + "'", int12 == 20);
    }

    @Test
    public void test1801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1801");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getBookFilePath();
        database7.itemPath = "hi!";
        model.Database.database = database7;
        java.lang.String str12 = database7.getBookFilePath();
        java.lang.String str13 = database7.getMagazineFilePath();
        java.util.ArrayList<java.lang.String> strList14 = database7.getAllItems();
        java.util.ArrayList<java.lang.String> strList15 = database7.getAllItems();
        java.util.ArrayList<java.lang.String> strList16 = database7.getAllItems();
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/Book.csv" + "'", str8, "src/Book.csv");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "src/Book.csv" + "'", str12, "src/Book.csv");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "src/Magazine.csv" + "'", str13, "src/Magazine.csv");
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
    }

    @Test
    public void test1802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1802");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        model.SearchClient searchClient8 = model.SearchClient.makeSearchClient(database7);
        java.lang.String str9 = database7.getCDFilePath();
        int int10 = database7.getRandomID();
        model.SearchItems searchItems11 = new model.SearchItems(database7);
        java.lang.String str12 = database7.itemPath;
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(searchClient8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "src/CD.csv" + "'", str9, "src/CD.csv");
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 6461584 + "'", int10 == 6461584);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test1803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1803");
        model.Database database7 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database7;
        model.SearchVirtualItem searchVirtualItem9 = new model.SearchVirtualItem(database7);
        model.UniProvidedNewsletter uniProvidedNewsletter11 = searchVirtualItem9.getUniNewsletter("");
        model.UniProvidedNewsletter uniProvidedNewsletter13 = searchVirtualItem9.getUniNewsletter("hi!");
        model.VirtualItemSearchResult virtualItemSearchResult15 = searchVirtualItem9.searchVirtualItem("src/Magazine.csv");
        model.UniProvidedNewsletter uniProvidedNewsletter17 = searchVirtualItem9.getUniNewsletter("");
        model.VirtualItemSearchResult virtualItemSearchResult19 = searchVirtualItem9.searchVirtualItem("model.RegistrationFailedException: ");
        model.PaidNewsletter paidNewsletter20 = virtualItemSearchResult19.getPaidNewsletter();
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNull(uniProvidedNewsletter11);
        org.junit.Assert.assertNull(uniProvidedNewsletter13);
        org.junit.Assert.assertNotNull(virtualItemSearchResult15);
        org.junit.Assert.assertNull(uniProvidedNewsletter17);
        org.junit.Assert.assertNotNull(virtualItemSearchResult19);
        org.junit.Assert.assertNull(paidNewsletter20);
    }

    @Test
    public void test1804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1804");
        model.LibraryManagementTeam libraryManagementTeam0 = new model.LibraryManagementTeam();
        model.LibraryManagementTeam libraryManagementTeam1 = new model.LibraryManagementTeam();
        libraryManagementTeam1.accessCode = (short) 10;
        model.Magazine magazine5 = new model.Magazine("hi!");
        magazine5.location = "model.RegistrationFailedException: ";
        java.lang.String str8 = magazine5.location;
        libraryManagementTeam1.disableAnItem((model.Item) magazine5);
        libraryManagementTeam0.addAnItem((model.Item) magazine5);
        java.time.LocalDate localDate11 = null;
        // The following exception was thrown during execution in test generation
        try {
            model.RentedItem rentedItem12 = new model.RentedItem((model.Item) magazine5, localDate11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.format(java.time.format.DateTimeFormatter)\" because \"borrowDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "model.RegistrationFailedException: " + "'", str8, "model.RegistrationFailedException: ");
    }

    @Test
    public void test1805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1805");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.BuySpecialItems buySpecialItems1 = new model.BuySpecialItems();
        model.PayDebit payDebit2 = new model.PayDebit();
        buySpecialItems1.paymentAPI = payDebit2;
        rentAndReturnSystem0.paymentAPI = payDebit2;
        model.Payment payment5 = rentAndReturnSystem0.paymentAPI;
        model.ItemManagement itemManagement6 = new model.ItemManagement();
        model.Item item8 = itemManagement6.selectAnItemFromDatabase((int) (short) 0);
        model.Database database9 = itemManagement6.database;
        model.BuySpecialItems buySpecialItems10 = new model.BuySpecialItems();
        model.CD cD12 = new model.CD("");
        int int13 = cD12.ID;
        boolean boolean15 = buySpecialItems10.buyAnItem((model.Item) cD12, (double) (short) 0);
        itemManagement6.addAnItem((model.Item) cD12);
        model.Student student17 = new model.Student();
        int int18 = student17.ID;
        model.StudentOnlineResources studentOnlineResources19 = new model.StudentOnlineResources((model.Client) student17);
        model.VirtualBook virtualBook21 = studentOnlineResources19.searchAccessibleBook("");
        model.CD cD23 = new model.CD("");
        model.Magazine magazine24 = null;
        model.Book book25 = null;
        model.CD cD26 = null;
        model.Magazine magazine27 = null;
        model.Book[] bookArray28 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList29 = new java.util.ArrayList<model.Book>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList29, bookArray28);
        model.CD[] cDArray31 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList32 = new java.util.ArrayList<model.CD>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList32, cDArray31);
        model.Magazine[] magazineArray34 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList35 = new java.util.ArrayList<model.Magazine>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList35, magazineArray34);
        model.ItemSearchResult itemSearchResult37 = new model.ItemSearchResult(book25, cD26, magazine27, (java.util.Collection<model.Book>) bookList29, (java.util.Collection<model.CD>) cDList32, (java.util.Collection<model.Magazine>) magazineList35);
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.CD[] cDArray51 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList52 = new java.util.ArrayList<model.CD>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList52, cDArray51);
        itemSearchResult50.similarCD = cDList52;
        model.Book book55 = null;
        model.CD cD56 = null;
        model.Magazine magazine57 = null;
        model.Book[] bookArray58 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList59 = new java.util.ArrayList<model.Book>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList59, bookArray58);
        model.CD[] cDArray61 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList62 = new java.util.ArrayList<model.CD>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList62, cDArray61);
        model.Magazine[] magazineArray64 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList65 = new java.util.ArrayList<model.Magazine>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList65, magazineArray64);
        model.ItemSearchResult itemSearchResult67 = new model.ItemSearchResult(book55, cD56, magazine57, (java.util.Collection<model.Book>) bookList59, (java.util.Collection<model.CD>) cDList62, (java.util.Collection<model.Magazine>) magazineList65);
        model.ItemSearchResult itemSearchResult68 = new model.ItemSearchResult((model.Book) virtualBook21, cD23, magazine24, (java.util.Collection<model.Book>) bookList29, (java.util.Collection<model.CD>) cDList52, (java.util.Collection<model.Magazine>) magazineList65);
        int int69 = virtualBook21.ID;
        int int70 = virtualBook21.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter71 = null;
        model.PaidNewsletter paidNewsletter72 = null;
        model.VirtualItemSearchResult virtualItemSearchResult73 = new model.VirtualItemSearchResult(virtualBook21, uniProvidedNewsletter71, paidNewsletter72);
        model.PaidNewsletter paidNewsletter74 = virtualItemSearchResult73.getPaidNewsletter();
        model.PaidNewsletter paidNewsletter75 = virtualItemSearchResult73.getPaidNewsletter();
        model.VirtualBook virtualBook76 = virtualItemSearchResult73.getVirtualBook();
        itemManagement6.enableAnItem((model.Item) virtualBook76);
        model.Faculty faculty78 = new model.Faculty();
        java.lang.String str79 = faculty78.faculty;
        java.lang.String str80 = faculty78.faculty;
        faculty78.viewMyOnlineResource();
        java.util.Collection<model.Course> courseCollection82 = faculty78.courses;
        boolean boolean83 = rentAndReturnSystem0.returnAnItem((model.Item) virtualBook76, (model.Client) faculty78);
        model.PayCredit payCredit84 = new model.PayCredit();
        payCredit84.pay((double) (short) 100);
        payCredit84.amountPay = ' ';
        double double89 = payCredit84.amountPay;
        payCredit84.pay((double) 12);
        double double92 = payCredit84.amountPay;
        rentAndReturnSystem0.paymentAPI = payCredit84;
        model.Payment payment94 = null;
        rentAndReturnSystem0.paymentAPI = payment94;
        org.junit.Assert.assertNotNull(payment5);
        org.junit.Assert.assertNull(item8);
        org.junit.Assert.assertNull(database9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(virtualBook21);
        org.junit.Assert.assertNotNull(bookArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(cDArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(magazineArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(cDArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(bookArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(cDArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(magazineArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 20 + "'", int70 == 20);
        org.junit.Assert.assertNull(paidNewsletter74);
        org.junit.Assert.assertNull(paidNewsletter75);
        org.junit.Assert.assertNotNull(virtualBook76);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNull(courseCollection82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 32.0d + "'", double89 == 32.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 44.0d + "'", double92 == 44.0d);
    }

    @Test
    public void test1806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1806");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getBookFilePath();
        database7.itemPath = "hi!";
        model.SearchVirtualItem searchVirtualItem11 = new model.SearchVirtualItem(database7);
        model.UniProvidedNewsletter uniProvidedNewsletter13 = searchVirtualItem11.getUniNewsletter("src/Book.csv");
        model.UniProvidedNewsletter uniProvidedNewsletter15 = searchVirtualItem11.getUniNewsletter("model.RegistrationFailedException: src/Magazine.csv");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/Book.csv" + "'", str8, "src/Book.csv");
        org.junit.Assert.assertNull(uniProvidedNewsletter13);
        org.junit.Assert.assertNull(uniProvidedNewsletter15);
    }

    @Test
    public void test1807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1807");
        model.PaidNewsletter paidNewsletter0 = new model.PaidNewsletter();
        model.Student student1 = new model.Student();
        int int2 = student1.ID;
        model.StudentOnlineResources studentOnlineResources3 = new model.StudentOnlineResources((model.Client) student1);
        model.VirtualBook virtualBook5 = studentOnlineResources3.searchAccessibleBook("");
        model.CD cD7 = new model.CD("");
        model.Magazine magazine8 = null;
        model.Book book9 = null;
        model.CD cD10 = null;
        model.Magazine magazine11 = null;
        model.Book[] bookArray12 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList13 = new java.util.ArrayList<model.Book>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList13, bookArray12);
        model.CD[] cDArray15 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList16 = new java.util.ArrayList<model.CD>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList16, cDArray15);
        model.Magazine[] magazineArray18 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList19 = new java.util.ArrayList<model.Magazine>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList19, magazineArray18);
        model.ItemSearchResult itemSearchResult21 = new model.ItemSearchResult(book9, cD10, magazine11, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList16, (java.util.Collection<model.Magazine>) magazineList19);
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        model.CD[] cDArray35 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList36 = new java.util.ArrayList<model.CD>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList36, cDArray35);
        itemSearchResult34.similarCD = cDList36;
        model.Book book39 = null;
        model.CD cD40 = null;
        model.Magazine magazine41 = null;
        model.Book[] bookArray42 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList43 = new java.util.ArrayList<model.Book>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList43, bookArray42);
        model.CD[] cDArray45 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList46 = new java.util.ArrayList<model.CD>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList46, cDArray45);
        model.Magazine[] magazineArray48 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList49 = new java.util.ArrayList<model.Magazine>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList49, magazineArray48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult(book39, cD40, magazine41, (java.util.Collection<model.Book>) bookList43, (java.util.Collection<model.CD>) cDList46, (java.util.Collection<model.Magazine>) magazineList49);
        model.ItemSearchResult itemSearchResult52 = new model.ItemSearchResult((model.Book) virtualBook5, cD7, magazine8, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList36, (java.util.Collection<model.Magazine>) magazineList49);
        int int53 = virtualBook5.ID;
        int int54 = virtualBook5.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter55 = null;
        model.PaidNewsletter paidNewsletter56 = null;
        model.VirtualItemSearchResult virtualItemSearchResult57 = new model.VirtualItemSearchResult(virtualBook5, uniProvidedNewsletter55, paidNewsletter56);
        virtualBook5.author = "hi!";
        virtualBook5.showContent();
        boolean boolean61 = paidNewsletter0.equals((java.lang.Object) virtualBook5);
        java.lang.String str62 = virtualBook5.ISBN;
        virtualBook5.ID = 4211142;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(virtualBook5);
        org.junit.Assert.assertNotNull(bookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cDArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(magazineArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(cDArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(bookArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(cDArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(magazineArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 20 + "'", int54 == 20);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(str62);
    }

    @Test
    public void test1808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1808");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        model.RentedItem[] rentedItemArray4 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList5 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList5, rentedItemArray4);
        model.BorrowingManager borrowingManager7 = new model.BorrowingManager(rentedItemList5);
        model.RentedItem[] rentedItemArray8 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList9 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList9, rentedItemArray8);
        model.BorrowingManager borrowingManager11 = new model.BorrowingManager(rentedItemList9);
        borrowingManager7.physicalItemBorrowed = rentedItemList9;
        borrowingManager3.physicalItemBorrowed = rentedItemList9;
        model.Visitor visitor14 = new model.Visitor();
        model.VirtualBook[] virtualBookArray15 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList16 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList16, virtualBookArray15);
        visitor14.virtualBooksAvailable = virtualBookList16;
        borrowingManager3.client = visitor14;
        model.Faculty faculty20 = new model.Faculty();
        java.lang.String str21 = faculty20.faculty;
        borrowingManager3.client = faculty20;
        model.Newsletter[] newsletterArray23 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList24 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList24, newsletterArray23);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager26 = new model.NewsletterSubscriptionManager(newsletterList24);
        model.Client client27 = newsletterSubscriptionManager26.client;
        model.UniProvidedNewsletter uniProvidedNewsletter28 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter28.title = "";
        java.lang.String str31 = uniProvidedNewsletter28.title;
        newsletterSubscriptionManager26.subscribeToUniProvidedNewsletter(uniProvidedNewsletter28, "");
        java.util.ArrayList<model.Newsletter> newsletterList34 = newsletterSubscriptionManager26.newsletterSubscribed;
        model.Visitor visitor35 = new model.Visitor();
        visitor35.email = "hi!";
        newsletterSubscriptionManager26.client = visitor35;
        model.RentedItem[] rentedItemArray39 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList40 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList40, rentedItemArray39);
        model.BorrowingManager borrowingManager42 = new model.BorrowingManager(rentedItemList40);
        model.Book book43 = null;
        model.CD cD45 = new model.CD("");
        model.Magazine magazine46 = null;
        java.util.Collection<model.Book> bookCollection47 = null;
        model.Book book48 = null;
        model.CD cD49 = null;
        model.Magazine magazine50 = null;
        model.Book[] bookArray51 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList52 = new java.util.ArrayList<model.Book>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList52, bookArray51);
        model.CD[] cDArray54 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList55 = new java.util.ArrayList<model.CD>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList55, cDArray54);
        model.Magazine[] magazineArray57 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList58 = new java.util.ArrayList<model.Magazine>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList58, magazineArray57);
        model.ItemSearchResult itemSearchResult60 = new model.ItemSearchResult(book48, cD49, magazine50, (java.util.Collection<model.Book>) bookList52, (java.util.Collection<model.CD>) cDList55, (java.util.Collection<model.Magazine>) magazineList58);
        model.Book book61 = null;
        model.CD cD62 = null;
        model.Magazine magazine63 = null;
        model.Book[] bookArray64 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList65 = new java.util.ArrayList<model.Book>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList65, bookArray64);
        model.CD[] cDArray67 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList68 = new java.util.ArrayList<model.CD>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList68, cDArray67);
        model.Magazine[] magazineArray70 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList71 = new java.util.ArrayList<model.Magazine>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList71, magazineArray70);
        model.ItemSearchResult itemSearchResult73 = new model.ItemSearchResult(book61, cD62, magazine63, (java.util.Collection<model.Book>) bookList65, (java.util.Collection<model.CD>) cDList68, (java.util.Collection<model.Magazine>) magazineList71);
        itemSearchResult60.similarCD = cDList68;
        model.Book book75 = null;
        model.CD cD76 = null;
        model.Magazine magazine77 = null;
        model.Book[] bookArray78 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList79 = new java.util.ArrayList<model.Book>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList79, bookArray78);
        model.CD[] cDArray81 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList82 = new java.util.ArrayList<model.CD>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList82, cDArray81);
        model.Magazine[] magazineArray84 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList85 = new java.util.ArrayList<model.Magazine>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList85, magazineArray84);
        model.ItemSearchResult itemSearchResult87 = new model.ItemSearchResult(book75, cD76, magazine77, (java.util.Collection<model.Book>) bookList79, (java.util.Collection<model.CD>) cDList82, (java.util.Collection<model.Magazine>) magazineList85);
        model.ItemSearchResult itemSearchResult88 = new model.ItemSearchResult(book43, cD45, magazine46, bookCollection47, (java.util.Collection<model.CD>) cDList68, (java.util.Collection<model.Magazine>) magazineList85);
        cD45.ID = (short) 10;
        borrowingManager42.removeRentedItem((model.Item) cD45);
        float float92 = borrowingManager42.amountOwned;
        float float93 = borrowingManager42.amountOwned;
        borrowingManager42.amountOwned = '#';
        visitor35.borrowManager = borrowingManager42;
        faculty20.borrowManager = borrowingManager42;
        java.lang.String str98 = faculty20.faculty;
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(rentedItemArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rentedItemArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(virtualBookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(newsletterArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(client27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(newsletterList34);
        org.junit.Assert.assertNotNull(rentedItemArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(bookArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(cDArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(magazineArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(bookArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(cDArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(magazineArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(bookArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(cDArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(magazineArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + float92 + "' != '" + 0.0f + "'", float92 == 0.0f);
        org.junit.Assert.assertTrue("'" + float93 + "' != '" + 0.0f + "'", float93 == 0.0f);
        org.junit.Assert.assertNull(str98);
    }

    @Test
    public void test1809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1809");
        model.ItemManagement itemManagement0 = new model.ItemManagement();
        model.Database database1 = null;
        itemManagement0.database = database1;
        model.Student student3 = new model.Student();
        int int4 = student3.ID;
        model.StudentOnlineResources studentOnlineResources5 = new model.StudentOnlineResources((model.Client) student3);
        model.VirtualBook virtualBook7 = studentOnlineResources5.searchAccessibleBook("");
        itemManagement0.disableAnItem((model.Item) virtualBook7);
        model.Item item10 = itemManagement0.selectAnItemFromDatabase((int) '#');
        model.BuySpecialItems buySpecialItems11 = new model.BuySpecialItems();
        model.Payment payment12 = buySpecialItems11.paymentAPI;
        java.util.ArrayList<model.Item> itemList13 = buySpecialItems11.purchasedItems;
        model.Payment payment14 = buySpecialItems11.paymentAPI;
        model.Student student15 = new model.Student();
        int int16 = student15.ID;
        model.StudentOnlineResources studentOnlineResources17 = new model.StudentOnlineResources((model.Client) student15);
        model.VirtualBook virtualBook19 = studentOnlineResources17.searchAccessibleBook("");
        virtualBook19.ID = 20;
        virtualBook19.ID = (short) 100;
        boolean boolean24 = virtualBook19.canBePurchased;
        boolean boolean26 = buySpecialItems11.buyAnItem((model.Item) virtualBook19, (double) 31);
        itemManagement0.enableAnItem((model.Item) virtualBook19);
        virtualBook19.copiesAvailable = 8981991;
        virtualBook19.title = "model.RegistrationFailedException: src/Book.csv";
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(virtualBook7);
        org.junit.Assert.assertNull(item10);
        org.junit.Assert.assertNull(payment12);
        org.junit.Assert.assertNotNull(itemList13);
        org.junit.Assert.assertNull(payment14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(virtualBook19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test1810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1810");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.Database.database = database7;
        java.lang.String str10 = database7.getCDFilePath();
        java.lang.String str11 = database7.itemPath;
        database7.virtualItemFilePath = "model.RegistrationFailedException: ";
        model.Faculty faculty14 = new model.Faculty();
        java.lang.String str15 = faculty14.email;
        model.Faculty faculty16 = new model.Faculty();
        faculty16.username = "hi!";
        java.lang.String str19 = faculty16.username;
        model.Course course20 = new model.Course();
        java.lang.String str21 = course20.subject;
        course20.code = "";
        course20.subject = "src/Magazine.csv";
        model.Course course26 = new model.Course();
        java.lang.String str27 = course26.code;
        model.Course course28 = new model.Course();
        java.lang.String str29 = course28.subject;
        java.lang.String str30 = course28.subject;
        java.lang.String str31 = course28.code;
        java.lang.String str32 = course28.code;
        model.Course course33 = new model.Course();
        java.lang.String str34 = course33.code;
        model.Course course35 = new model.Course();
        java.lang.String str36 = course35.subject;
        java.lang.String str37 = course35.subject;
        java.lang.String str38 = course35.code;
        course35.code = "src/VirtualBook.csv";
        model.Course course41 = new model.Course();
        model.Course course42 = new model.Course();
        java.lang.String str43 = course42.subject;
        course42.code = "";
        course42.subject = "src/Magazine.csv";
        int int48 = course42.year;
        model.Course course49 = new model.Course();
        java.lang.String str50 = course49.code;
        java.lang.String str51 = course49.subject;
        course49.subject = "model.RegistrationFailedException: ";
        course49.subject = "src/Magazine.csv";
        model.Course[] courseArray56 = new model.Course[] { course20, course26, course28, course33, course35, course41, course42, course49 };
        java.util.ArrayList<model.Course> courseList57 = new java.util.ArrayList<model.Course>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<model.Course>) courseList57, courseArray56);
        faculty16.courses = courseList57;
        java.util.Collection<model.Course> courseCollection60 = faculty16.courses;
        java.util.Collection<model.Course> courseCollection61 = faculty16.courses;
        faculty14.courses = courseCollection61;
        model.StudentOnlineResources studentOnlineResources63 = new model.StudentOnlineResources((model.Client) faculty14);
        database7.addClient((model.Client) faculty14);
        java.lang.Class<?> wildcardClass65 = faculty14.getClass();
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "src/CD.csv" + "'", str10, "src/CD.csv");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "model.RegistrationFailedException: src/Book.csv" + "'", str11, "model.RegistrationFailedException: src/Book.csv");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(courseArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(courseCollection60);
        org.junit.Assert.assertNotNull(courseCollection61);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1811");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        virtualBook4.ISBN = "hi!";
        int int55 = virtualBook4.ID;
        model.LibraryManagementTeam libraryManagementTeam56 = new model.LibraryManagementTeam();
        libraryManagementTeam56.accessCode = (byte) 10;
        boolean boolean59 = virtualBook4.equals((java.lang.Object) libraryManagementTeam56);
        java.lang.String str60 = virtualBook4.publisher;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(str60);
    }

    @Test
    public void test1812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1812");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.VirtualItemContent virtualItemContent5 = virtualBook4.content;
        model.Student student6 = new model.Student();
        int int7 = student6.ID;
        model.StudentOnlineResources studentOnlineResources8 = new model.StudentOnlineResources((model.Client) student6);
        model.VirtualBook virtualBook10 = studentOnlineResources8.searchAccessibleBook("");
        model.CD cD12 = new model.CD("");
        model.Magazine magazine13 = null;
        model.Book book14 = null;
        model.CD cD15 = null;
        model.Magazine magazine16 = null;
        model.Book[] bookArray17 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList18 = new java.util.ArrayList<model.Book>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList18, bookArray17);
        model.CD[] cDArray20 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList21 = new java.util.ArrayList<model.CD>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList21, cDArray20);
        model.Magazine[] magazineArray23 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList24 = new java.util.ArrayList<model.Magazine>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList24, magazineArray23);
        model.ItemSearchResult itemSearchResult26 = new model.ItemSearchResult(book14, cD15, magazine16, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList21, (java.util.Collection<model.Magazine>) magazineList24);
        model.Book book27 = null;
        model.CD cD28 = null;
        model.Magazine magazine29 = null;
        model.Book[] bookArray30 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList31 = new java.util.ArrayList<model.Book>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList31, bookArray30);
        model.CD[] cDArray33 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList34 = new java.util.ArrayList<model.CD>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList34, cDArray33);
        model.Magazine[] magazineArray36 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList37 = new java.util.ArrayList<model.Magazine>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList37, magazineArray36);
        model.ItemSearchResult itemSearchResult39 = new model.ItemSearchResult(book27, cD28, magazine29, (java.util.Collection<model.Book>) bookList31, (java.util.Collection<model.CD>) cDList34, (java.util.Collection<model.Magazine>) magazineList37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        itemSearchResult39.similarCD = cDList41;
        model.Book book44 = null;
        model.CD cD45 = null;
        model.Magazine magazine46 = null;
        model.Book[] bookArray47 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList48 = new java.util.ArrayList<model.Book>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList48, bookArray47);
        model.CD[] cDArray50 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList51 = new java.util.ArrayList<model.CD>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList51, cDArray50);
        model.Magazine[] magazineArray53 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList54 = new java.util.ArrayList<model.Magazine>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList54, magazineArray53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult(book44, cD45, magazine46, (java.util.Collection<model.Book>) bookList48, (java.util.Collection<model.CD>) cDList51, (java.util.Collection<model.Magazine>) magazineList54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult((model.Book) virtualBook10, cD12, magazine13, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList54);
        int int58 = virtualBook10.ID;
        int int59 = virtualBook10.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter60 = null;
        model.PaidNewsletter paidNewsletter61 = null;
        model.VirtualItemSearchResult virtualItemSearchResult62 = new model.VirtualItemSearchResult(virtualBook10, uniProvidedNewsletter60, paidNewsletter61);
        model.PaidNewsletter paidNewsletter63 = virtualItemSearchResult62.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter64 = new model.UniProvidedNewsletter();
        virtualItemSearchResult62.setUniNewsletter(uniProvidedNewsletter64);
        java.lang.String str66 = uniProvidedNewsletter64.title;
        model.PaidNewsletter paidNewsletter67 = null;
        model.VirtualItemSearchResult virtualItemSearchResult68 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter64, paidNewsletter67);
        model.VirtualBook virtualBook69 = virtualItemSearchResult68.virtualBook;
        model.PaidNewsletter paidNewsletter70 = new model.PaidNewsletter();
        virtualItemSearchResult68.setPaidNewsletter(paidNewsletter70);
        paidNewsletter70.showContent();
        paidNewsletter70.title = "model.RegistrationFailedException: ";
        double double75 = paidNewsletter70.subscriptionPrice;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNull(virtualItemContent5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(virtualBook10);
        org.junit.Assert.assertNotNull(bookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(cDArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(magazineArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(bookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(magazineArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(bookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(cDArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(magazineArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 20 + "'", int59 == 20);
        org.junit.Assert.assertNull(paidNewsletter63);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(virtualBook69);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
    }

    @Test
    public void test1813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1813");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.UniProvidedNewsletter uniProvidedNewsletter5 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter5.title = "";
        java.lang.String str8 = uniProvidedNewsletter5.title;
        newsletterSubscriptionManager3.subscribeToUniProvidedNewsletter(uniProvidedNewsletter5, "");
        model.Student student11 = new model.Student();
        int int12 = student11.ID;
        model.StudentOnlineResources studentOnlineResources13 = new model.StudentOnlineResources((model.Client) student11);
        model.VirtualBook virtualBook15 = studentOnlineResources13.searchAccessibleBook("");
        model.CD cD17 = new model.CD("");
        model.Magazine magazine18 = null;
        model.Book book19 = null;
        model.CD cD20 = null;
        model.Magazine magazine21 = null;
        model.Book[] bookArray22 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList23 = new java.util.ArrayList<model.Book>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList23, bookArray22);
        model.CD[] cDArray25 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList26 = new java.util.ArrayList<model.CD>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList26, cDArray25);
        model.Magazine[] magazineArray28 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList29 = new java.util.ArrayList<model.Magazine>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList29, magazineArray28);
        model.ItemSearchResult itemSearchResult31 = new model.ItemSearchResult(book19, cD20, magazine21, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList29);
        model.Book book32 = null;
        model.CD cD33 = null;
        model.Magazine magazine34 = null;
        model.Book[] bookArray35 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList36 = new java.util.ArrayList<model.Book>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList36, bookArray35);
        model.CD[] cDArray38 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList39 = new java.util.ArrayList<model.CD>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList39, cDArray38);
        model.Magazine[] magazineArray41 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList42 = new java.util.ArrayList<model.Magazine>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList42, magazineArray41);
        model.ItemSearchResult itemSearchResult44 = new model.ItemSearchResult(book32, cD33, magazine34, (java.util.Collection<model.Book>) bookList36, (java.util.Collection<model.CD>) cDList39, (java.util.Collection<model.Magazine>) magazineList42);
        model.CD[] cDArray45 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList46 = new java.util.ArrayList<model.CD>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList46, cDArray45);
        itemSearchResult44.similarCD = cDList46;
        model.Book book49 = null;
        model.CD cD50 = null;
        model.Magazine magazine51 = null;
        model.Book[] bookArray52 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList53 = new java.util.ArrayList<model.Book>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList53, bookArray52);
        model.CD[] cDArray55 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList56 = new java.util.ArrayList<model.CD>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList56, cDArray55);
        model.Magazine[] magazineArray58 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList59 = new java.util.ArrayList<model.Magazine>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList59, magazineArray58);
        model.ItemSearchResult itemSearchResult61 = new model.ItemSearchResult(book49, cD50, magazine51, (java.util.Collection<model.Book>) bookList53, (java.util.Collection<model.CD>) cDList56, (java.util.Collection<model.Magazine>) magazineList59);
        model.ItemSearchResult itemSearchResult62 = new model.ItemSearchResult((model.Book) virtualBook15, cD17, magazine18, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList46, (java.util.Collection<model.Magazine>) magazineList59);
        int int63 = virtualBook15.ID;
        int int64 = virtualBook15.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter65 = null;
        model.PaidNewsletter paidNewsletter66 = null;
        model.VirtualItemSearchResult virtualItemSearchResult67 = new model.VirtualItemSearchResult(virtualBook15, uniProvidedNewsletter65, paidNewsletter66);
        model.PaidNewsletter paidNewsletter68 = virtualItemSearchResult67.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter69 = new model.UniProvidedNewsletter();
        virtualItemSearchResult67.setUniNewsletter(uniProvidedNewsletter69);
        java.lang.String str71 = uniProvidedNewsletter69.title;
        uniProvidedNewsletter69.cost = 0L;
        newsletterSubscriptionManager3.subscribeToUniProvidedNewsletter(uniProvidedNewsletter69, "");
        model.VirtualItemContent virtualItemContent77 = new model.VirtualItemContent("hi!");
        java.lang.String str78 = virtualItemContent77.link;
        java.lang.String str79 = virtualItemContent77.link;
        uniProvidedNewsletter69.content = virtualItemContent77;
        uniProvidedNewsletter69.showContent();
        model.VirtualItemContent virtualItemContent82 = uniProvidedNewsletter69.content;
        java.lang.String str84 = virtualItemContent82.getContent("src/BorrowedItems.csv");
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(virtualBook15);
        org.junit.Assert.assertNotNull(bookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(magazineArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(bookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(cDArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(magazineArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(bookArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(cDArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(magazineArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 20 + "'", int64 == 20);
        org.junit.Assert.assertNull(paidNewsletter68);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertNotNull(virtualItemContent82);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "hi!" + "'", str84, "hi!");
    }

    @Test
    public void test1814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1814");
        model.LibraryManagementTeam libraryManagementTeam0 = model.LibraryManagementTeam.createLibraryManagementTeam();
        java.util.ArrayList<model.Item> itemList1 = libraryManagementTeam0.items;
        model.ItemManagement itemManagement2 = libraryManagementTeam0.itemManagement;
        model.Book book4 = new model.Book("model.RegistrationFailedException: ");
        book4.publisher = "model.RegistrationFailedException: src/Magazine.csv";
        java.lang.String str7 = book4.location;
        libraryManagementTeam0.addAnItem((model.Item) book4);
        model.ItemManagement itemManagement9 = libraryManagementTeam0.itemManagement;
        org.junit.Assert.assertNotNull(libraryManagementTeam0);
        org.junit.Assert.assertNotNull(itemList1);
        org.junit.Assert.assertNull(itemManagement2);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(itemManagement9);
    }

    @Test
    public void test1815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1815");
        model.Database database7 = model.Database.createDatabase("", "src/Book.csv", "model.RegistrationFailedException: src/Book.csv", "model.RentingNotAllowedException: ", "src/VirtualBook.csv", "", "model.RentingNotAllowedException: ");
        java.lang.String str8 = database7.getNewspaperFilePath();
        int int9 = database7.getRandomID();
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/Newsletter.csv" + "'", str8, "src/Newsletter.csv");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2107453 + "'", int9 == 2107453);
    }

    @Test
    public void test1816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1816");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Visitor visitor4 = new model.Visitor();
        model.VirtualBook[] virtualBookArray5 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList6 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList6, virtualBookArray5);
        visitor4.virtualBooksAvailable = virtualBookList6;
        newsletterSubscriptionManager3.client = visitor4;
        model.Payment payment10 = newsletterSubscriptionManager3.paymentAPI;
        model.Newsletter[] newsletterArray11 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList12 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList12, newsletterArray11);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager14 = new model.NewsletterSubscriptionManager(newsletterList12);
        model.Client client15 = newsletterSubscriptionManager14.client;
        model.PayCredit payCredit16 = new model.PayCredit();
        payCredit16.amountPay = 10;
        newsletterSubscriptionManager14.paymentAPI = payCredit16;
        newsletterSubscriptionManager3.paymentAPI = payCredit16;
        payCredit16.pay(2108586.0d);
        payCredit16.pay((double) 6464637);
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(virtualBookArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(payment10);
        org.junit.Assert.assertNotNull(newsletterArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(client15);
    }

    @Test
    public void test1817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1817");
        model.ValidateRegistration validateRegistration0 = new model.ValidateRegistration();
        model.Student student1 = new model.Student();
        int int2 = student1.ID;
        model.StudentOnlineResources studentOnlineResources3 = new model.StudentOnlineResources((model.Client) student1);
        student1.ID = '#';
        java.lang.String str6 = student1.email;
        boolean boolean7 = validateRegistration0.validateStaffRegistration((model.Staff) student1);
        model.Database database8 = model.Database.database;
        model.Student student9 = new model.Student();
        int int10 = student9.ID;
        model.StudentOnlineResources studentOnlineResources11 = new model.StudentOnlineResources((model.Client) student9);
        student9.ID = '#';
        database8.addClient((model.Client) student9);
        java.lang.String str15 = database8.getCDFilePath();
        java.util.ArrayList<java.lang.String> strList16 = database8.getAllItems();
        model.Faculty faculty17 = new model.Faculty();
        faculty17.username = "hi!";
        java.lang.String str20 = faculty17.username;
        database8.addClient((model.Client) faculty17);
        java.lang.String str22 = faculty17.faculty;
        model.BorrowingManager borrowingManager23 = null;
        faculty17.borrowManager = borrowingManager23;
        boolean boolean25 = validateRegistration0.validateStaffRegistration((model.Staff) faculty17);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "src/CD.csv" + "'", str15, "src/CD.csv");
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test1818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1818");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        boolean boolean4 = borrowingManager3.canRent();
        model.Client client5 = borrowingManager3.client;
        model.Student student6 = new model.Student();
        int int7 = student6.ID;
        model.StudentOnlineResources studentOnlineResources8 = new model.StudentOnlineResources((model.Client) student6);
        model.StudentOnlineResources studentOnlineResources9 = new model.StudentOnlineResources((model.Client) student6);
        model.RentedItem[] rentedItemArray10 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList11 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList11, rentedItemArray10);
        model.BorrowingManager borrowingManager13 = new model.BorrowingManager(rentedItemList11);
        model.Visitor visitor14 = new model.Visitor();
        visitor14.email = "hi!";
        borrowingManager13.client = visitor14;
        studentOnlineResources9.client = visitor14;
        model.Client client19 = studentOnlineResources9.client;
        borrowingManager3.client = client19;
        borrowingManager3.amountOwned = (byte) 1;
        model.Magazine magazine24 = new model.Magazine("hi!");
        magazine24.location = "model.RegistrationFailedException: ";
        borrowingManager3.removeRentedItem((model.Item) magazine24);
        int int28 = magazine24.copiesAvailable;
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(client5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(rentedItemArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(client19);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 20 + "'", int28 == 20);
    }

    @Test
    public void test1819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1819");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        virtualBook4.ISBN = "hi!";
        int int55 = virtualBook4.ID;
        model.VirtualItemContent virtualItemContent57 = new model.VirtualItemContent("hi!");
        virtualBook4.content = virtualItemContent57;
        java.lang.String str59 = virtualBook4.ISBN;
        virtualBook4.isBookLost = true;
        model.VirtualItemContent virtualItemContent62 = virtualBook4.content;
        java.lang.String str63 = virtualBook4.author;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertNotNull(virtualItemContent62);
        org.junit.Assert.assertNull(str63);
    }

    @Test
    public void test1820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1820");
        model.SearchBorrowedItem searchBorrowedItem0 = model.SearchBorrowedItem.object;
        searchBorrowedItem0.removeItem("src/Client.csv", "");
        java.util.ArrayList<model.RentedItem> rentedItemList6 = searchBorrowedItem0.searchBorrowedItem("hi!", "model.RegistrationFailedException: src/Magazine.csv");
        searchBorrowedItem0.removeItem("src/CD.csv", "");
        java.util.ArrayList<model.RentedItem> rentedItemList12 = searchBorrowedItem0.searchBorrowedItem("src/Magazine.csv", "");
        org.junit.Assert.assertNotNull(searchBorrowedItem0);
        org.junit.Assert.assertNotNull(rentedItemList6);
        org.junit.Assert.assertNotNull(rentedItemList12);
    }

    @Test
    public void test1821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1821");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.LibraryManagementTeam libraryManagementTeam1 = requestForum0.managementTeam;
        model.LibraryManagementTeam libraryManagementTeam2 = new model.LibraryManagementTeam();
        int int3 = libraryManagementTeam2.ID;
        int int4 = libraryManagementTeam2.accessCode;
        requestForum0.managementTeam = libraryManagementTeam2;
        model.LibraryManagementTeam libraryManagementTeam6 = new model.LibraryManagementTeam();
        int int7 = libraryManagementTeam6.ID;
        model.Magazine magazine9 = new model.Magazine("");
        java.util.Calendar calendar10 = magazine9.date;
        magazine9.author = "model.RegistrationFailedException: ";
        libraryManagementTeam6.disableAnItem((model.Item) magazine9);
        model.RequestForum requestForum14 = model.RequestForum.createRequestForum();
        model.RequestForum requestForum15 = model.RequestForum.createRequestForum();
        model.Request request16 = new model.Request();
        request16.title = "";
        java.lang.String str19 = requestForum15.makeARequest(request16);
        int int20 = requestForum14.assessBooksPriority(request16);
        java.lang.String str21 = request16.type;
        java.lang.String str22 = request16.type;
        java.lang.String str23 = request16.type;
        model.RequestForum requestForum24 = model.RequestForum.createRequestForum();
        model.Request request25 = new model.Request();
        request25.title = "";
        java.lang.String str28 = requestForum24.makeARequest(request25);
        model.LibraryManagementTeam libraryManagementTeam29 = requestForum24.managementTeam;
        model.RequestForum requestForum30 = model.RequestForum.createRequestForum();
        model.Request request31 = new model.Request();
        request31.title = "";
        java.lang.String str34 = requestForum30.makeARequest(request31);
        model.Client client35 = request31.requestee;
        int int36 = requestForum24.assessBooksPriority(request31);
        java.lang.String str37 = request31.type;
        model.Request request38 = new model.Request();
        java.lang.String str39 = request38.type;
        request38.title = "model.RegistrationFailedException: src/Magazine.csv";
        model.RequestForum requestForum42 = model.RequestForum.createRequestForum();
        model.RequestForum requestForum43 = model.RequestForum.createRequestForum();
        model.Request request44 = new model.Request();
        request44.title = "";
        java.lang.String str47 = requestForum43.makeARequest(request44);
        int int48 = requestForum42.assessBooksPriority(request44);
        java.lang.String str49 = request44.type;
        java.lang.String str50 = request44.type;
        model.Request request51 = new model.Request();
        java.lang.String str52 = request51.type;
        model.ValidateRegistration validateRegistration53 = new model.ValidateRegistration();
        model.Student student54 = new model.Student();
        student54.viewMyOnlineResource();
        boolean boolean56 = validateRegistration53.validateStaffRegistration((model.Staff) student54);
        request51.requestee = student54;
        request51.title = "hi!";
        model.RequestForum requestForum60 = model.RequestForum.createRequestForum();
        model.RequestForum requestForum61 = model.RequestForum.createRequestForum();
        model.Request request62 = new model.Request();
        request62.title = "";
        java.lang.String str65 = requestForum61.makeARequest(request62);
        int int66 = requestForum60.assessBooksPriority(request62);
        java.lang.String str67 = request62.type;
        java.lang.String str68 = request62.type;
        model.RequestForum requestForum69 = model.RequestForum.createRequestForum();
        model.Request request70 = new model.Request();
        request70.title = "";
        java.lang.String str73 = requestForum69.makeARequest(request70);
        model.LibraryManagementTeam libraryManagementTeam74 = requestForum69.managementTeam;
        model.RequestForum requestForum75 = model.RequestForum.createRequestForum();
        model.Request request76 = new model.Request();
        request76.title = "";
        java.lang.String str79 = requestForum75.makeARequest(request76);
        model.Client client80 = request76.requestee;
        int int81 = requestForum69.assessBooksPriority(request76);
        java.lang.String str82 = request76.type;
        model.Request[] requestArray83 = new model.Request[] { request16, request31, request38, request44, request51, request62, request76 };
        java.util.ArrayList<model.Request> requestList84 = new java.util.ArrayList<model.Request>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<model.Request>) requestList84, requestArray83);
        libraryManagementTeam6.bookRequests = requestList84;
        requestForum0.managementTeam = libraryManagementTeam6;
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertNotNull(libraryManagementTeam1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(calendar10);
        org.junit.Assert.assertNotNull(requestForum14);
        org.junit.Assert.assertNotNull(requestForum15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(requestForum24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(libraryManagementTeam29);
        org.junit.Assert.assertNotNull(requestForum30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(client35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(requestForum42);
        org.junit.Assert.assertNotNull(requestForum43);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(requestForum60);
        org.junit.Assert.assertNotNull(requestForum61);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(requestForum69);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertNotNull(libraryManagementTeam74);
        org.junit.Assert.assertNotNull(requestForum75);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertNull(client80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNotNull(requestArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test1822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1822");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        java.util.Iterator<model.VirtualItem> virtualItemItor3 = studentOnlineResources2.iterator();
        model.VirtualItem virtualItem4 = null;
        java.lang.String str5 = studentOnlineResources2.readVirtualItem(virtualItem4);
        model.Student student6 = new model.Student();
        int int7 = student6.ID;
        model.StudentOnlineResources studentOnlineResources8 = new model.StudentOnlineResources((model.Client) student6);
        model.VirtualBook virtualBook10 = studentOnlineResources8.searchAccessibleBook("");
        model.CD cD12 = new model.CD("");
        model.Magazine magazine13 = null;
        model.Book book14 = null;
        model.CD cD15 = null;
        model.Magazine magazine16 = null;
        model.Book[] bookArray17 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList18 = new java.util.ArrayList<model.Book>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList18, bookArray17);
        model.CD[] cDArray20 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList21 = new java.util.ArrayList<model.CD>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList21, cDArray20);
        model.Magazine[] magazineArray23 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList24 = new java.util.ArrayList<model.Magazine>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList24, magazineArray23);
        model.ItemSearchResult itemSearchResult26 = new model.ItemSearchResult(book14, cD15, magazine16, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList21, (java.util.Collection<model.Magazine>) magazineList24);
        model.Book book27 = null;
        model.CD cD28 = null;
        model.Magazine magazine29 = null;
        model.Book[] bookArray30 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList31 = new java.util.ArrayList<model.Book>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList31, bookArray30);
        model.CD[] cDArray33 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList34 = new java.util.ArrayList<model.CD>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList34, cDArray33);
        model.Magazine[] magazineArray36 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList37 = new java.util.ArrayList<model.Magazine>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList37, magazineArray36);
        model.ItemSearchResult itemSearchResult39 = new model.ItemSearchResult(book27, cD28, magazine29, (java.util.Collection<model.Book>) bookList31, (java.util.Collection<model.CD>) cDList34, (java.util.Collection<model.Magazine>) magazineList37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        itemSearchResult39.similarCD = cDList41;
        model.Book book44 = null;
        model.CD cD45 = null;
        model.Magazine magazine46 = null;
        model.Book[] bookArray47 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList48 = new java.util.ArrayList<model.Book>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList48, bookArray47);
        model.CD[] cDArray50 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList51 = new java.util.ArrayList<model.CD>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList51, cDArray50);
        model.Magazine[] magazineArray53 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList54 = new java.util.ArrayList<model.Magazine>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList54, magazineArray53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult(book44, cD45, magazine46, (java.util.Collection<model.Book>) bookList48, (java.util.Collection<model.CD>) cDList51, (java.util.Collection<model.Magazine>) magazineList54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult((model.Book) virtualBook10, cD12, magazine13, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList54);
        int int58 = virtualBook10.ID;
        int int59 = virtualBook10.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter60 = null;
        model.PaidNewsletter paidNewsletter61 = null;
        model.VirtualItemSearchResult virtualItemSearchResult62 = new model.VirtualItemSearchResult(virtualBook10, uniProvidedNewsletter60, paidNewsletter61);
        java.lang.String str63 = studentOnlineResources2.readVirtualItem((model.VirtualItem) paidNewsletter61);
        model.UniProvidedNewsletter uniProvidedNewsletter64 = new model.UniProvidedNewsletter();
        java.lang.String str65 = studentOnlineResources2.readVirtualItem((model.VirtualItem) uniProvidedNewsletter64);
        model.VirtualBook virtualBook67 = studentOnlineResources2.searchAccessibleBook("model.LoginFailedException: hi!");
        model.Newsletter newsletter69 = studentOnlineResources2.searchSubscribedNewsletter("model.RentingNotAllowedException: ");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(virtualItemItor3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(virtualBook10);
        org.junit.Assert.assertNotNull(bookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(cDArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(magazineArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(bookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(magazineArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(bookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(cDArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(magazineArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 20 + "'", int59 == 20);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(virtualBook67);
        org.junit.Assert.assertNull(newsletter69);
    }

    @Test
    public void test1823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1823");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        virtualBook4.ISBN = "hi!";
        int int55 = virtualBook4.ID;
        int int56 = virtualBook4.copiesAvailable;
        virtualBook4.publisher = "src/CD.csv";
        virtualBook4.showContent();
        virtualBook4.ID = 8289616;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 20 + "'", int56 == 20);
    }

    @Test
    public void test1824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1824");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.StudentOnlineResources studentOnlineResources3 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook5 = studentOnlineResources3.searchAccessibleBook("src/Book.csv");
        int int6 = virtualBook5.ID;
        java.lang.String str7 = virtualBook5.ISBN;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1825");
        model.Database database0 = null;
        model.Register register1 = model.Register.makeRegister(database0);
        model.Faculty faculty2 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection3 = faculty2.courses;
        boolean boolean6 = register1.registerAsStaff((model.Staff) faculty2, "src/Book.csv", "src/Book.csv");
        model.Database database7 = model.Database.database;
        model.Student student8 = new model.Student();
        int int9 = student8.ID;
        model.StudentOnlineResources studentOnlineResources10 = new model.StudentOnlineResources((model.Client) student8);
        student8.ID = '#';
        database7.addClient((model.Client) student8);
        student8.email = "hi!";
        boolean boolean18 = register1.registerAsStaff((model.Staff) student8, "src/CD.csv", "src/Book.csv");
        model.Database database26 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str27 = database26.getVirtualBookFilePath();
        register1.database = database26;
        model.Database database36 = model.Database.createDatabase("", "src/CD.csv", "model.RegistrationFailedException: src/Magazine.csv", "model.RegistrationFailedException: src/Magazine.csv", "model.RegistrationFailedException: ", "src/Magazine.csv", "hi!");
        register1.database = database36;
        model.SearchClient searchClient38 = model.SearchClient.makeSearchClient(database36);
        java.lang.String str39 = database36.getCDFilePath();
        java.lang.String str40 = database36.virtualItemFilePath;
        org.junit.Assert.assertNotNull(register1);
        org.junit.Assert.assertNull(courseCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "src/VirtualBook.csv" + "'", str27, "src/VirtualBook.csv");
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(searchClient38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "src/CD.csv" + "'", str39, "src/CD.csv");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "model.RegistrationFailedException: " + "'", str40, "model.RegistrationFailedException: ");
    }

    @Test
    public void test1826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1826");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.Book book1 = null;
        model.CD cD3 = new model.CD("");
        model.Magazine magazine4 = null;
        java.util.Collection<model.Book> bookCollection5 = null;
        model.Book book6 = null;
        model.CD cD7 = null;
        model.Magazine magazine8 = null;
        model.Book[] bookArray9 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList10 = new java.util.ArrayList<model.Book>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList10, bookArray9);
        model.CD[] cDArray12 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList13 = new java.util.ArrayList<model.CD>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList13, cDArray12);
        model.Magazine[] magazineArray15 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList16 = new java.util.ArrayList<model.Magazine>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList16, magazineArray15);
        model.ItemSearchResult itemSearchResult18 = new model.ItemSearchResult(book6, cD7, magazine8, (java.util.Collection<model.Book>) bookList10, (java.util.Collection<model.CD>) cDList13, (java.util.Collection<model.Magazine>) magazineList16);
        model.Book book19 = null;
        model.CD cD20 = null;
        model.Magazine magazine21 = null;
        model.Book[] bookArray22 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList23 = new java.util.ArrayList<model.Book>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList23, bookArray22);
        model.CD[] cDArray25 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList26 = new java.util.ArrayList<model.CD>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList26, cDArray25);
        model.Magazine[] magazineArray28 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList29 = new java.util.ArrayList<model.Magazine>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList29, magazineArray28);
        model.ItemSearchResult itemSearchResult31 = new model.ItemSearchResult(book19, cD20, magazine21, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList29);
        itemSearchResult18.similarCD = cDList26;
        model.Book book33 = null;
        model.CD cD34 = null;
        model.Magazine magazine35 = null;
        model.Book[] bookArray36 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList37 = new java.util.ArrayList<model.Book>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList37, bookArray36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        model.Magazine[] magazineArray42 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList43 = new java.util.ArrayList<model.Magazine>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList43, magazineArray42);
        model.ItemSearchResult itemSearchResult45 = new model.ItemSearchResult(book33, cD34, magazine35, (java.util.Collection<model.Book>) bookList37, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book1, cD3, magazine4, bookCollection5, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList43);
        cD3.ID = (short) 10;
        cD3.canBePurchased = false;
        boolean boolean51 = cD3.canBePurchased;
        model.Faculty faculty52 = new model.Faculty();
        boolean boolean53 = rentAndReturnSystem0.rentAnItem((model.Item) cD3, (model.Client) faculty52);
        java.lang.String str54 = faculty52.faculty;
        model.RentedItem[] rentedItemArray55 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList56 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList56, rentedItemArray55);
        model.BorrowingManager borrowingManager58 = new model.BorrowingManager(rentedItemList56);
        boolean boolean59 = borrowingManager58.canRent();
        model.Client client60 = borrowingManager58.client;
        faculty52.borrowManager = borrowingManager58;
        borrowingManager58.updateBorrowingPrivilages();
        model.Client client63 = borrowingManager58.client;
        org.junit.Assert.assertNotNull(bookArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(cDArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(magazineArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(bookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(magazineArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(bookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(magazineArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(rentedItemArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(client60);
        org.junit.Assert.assertNull(client63);
    }

    @Test
    public void test1827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1827");
        model.SearchBorrowedItem searchBorrowedItem0 = model.SearchBorrowedItem.makeSearchBorrowedItem();
        model.Visitor visitor1 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList2 = visitor1.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources3 = new model.StudentOnlineResources((model.Client) visitor1);
        model.RentedItem[] rentedItemArray4 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList5 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList5, rentedItemArray4);
        model.BorrowingManager borrowingManager7 = new model.BorrowingManager(rentedItemList5);
        model.Visitor visitor8 = new model.Visitor();
        visitor8.email = "hi!";
        borrowingManager7.client = visitor8;
        studentOnlineResources3.client = visitor8;
        model.Student student13 = new model.Student();
        int int14 = student13.ID;
        model.StudentOnlineResources studentOnlineResources15 = new model.StudentOnlineResources((model.Client) student13);
        model.VirtualBook virtualBook17 = studentOnlineResources15.searchAccessibleBook("");
        model.CD cD19 = new model.CD("");
        model.Magazine magazine20 = null;
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.Book book34 = null;
        model.CD cD35 = null;
        model.Magazine magazine36 = null;
        model.Book[] bookArray37 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList38 = new java.util.ArrayList<model.Book>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList38, bookArray37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        model.Magazine[] magazineArray43 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList44 = new java.util.ArrayList<model.Magazine>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList44, magazineArray43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book34, cD35, magazine36, (java.util.Collection<model.Book>) bookList38, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList44);
        model.CD[] cDArray47 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList48 = new java.util.ArrayList<model.CD>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList48, cDArray47);
        itemSearchResult46.similarCD = cDList48;
        model.Book book51 = null;
        model.CD cD52 = null;
        model.Magazine magazine53 = null;
        model.Book[] bookArray54 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList55 = new java.util.ArrayList<model.Book>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList55, bookArray54);
        model.CD[] cDArray57 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList58 = new java.util.ArrayList<model.CD>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList58, cDArray57);
        model.Magazine[] magazineArray60 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList61 = new java.util.ArrayList<model.Magazine>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList61, magazineArray60);
        model.ItemSearchResult itemSearchResult63 = new model.ItemSearchResult(book51, cD52, magazine53, (java.util.Collection<model.Book>) bookList55, (java.util.Collection<model.CD>) cDList58, (java.util.Collection<model.Magazine>) magazineList61);
        model.ItemSearchResult itemSearchResult64 = new model.ItemSearchResult((model.Book) virtualBook17, cD19, magazine20, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList48, (java.util.Collection<model.Magazine>) magazineList61);
        java.lang.String str65 = studentOnlineResources3.readVirtualItem((model.VirtualItem) virtualBook17);
        model.Visitor visitor67 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList68 = visitor67.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources69 = new model.StudentOnlineResources((model.Client) visitor67);
        searchBorrowedItem0.addPhyscialItem((model.Item) virtualBook17, "", (model.Client) visitor67);
        java.util.ArrayList<model.VirtualItem> virtualItemList73 = searchBorrowedItem0.searchBorrowedVirtualItem("model.RegistrationFailedException: src/Magazine.csv", "src/Book.csv");
        java.util.ArrayList<model.VirtualItem> virtualItemList76 = searchBorrowedItem0.searchBorrowedVirtualItem("model.RegistrationFailedException: ", "model.RentingNotAllowedException: hi!");
        searchBorrowedItem0.removeItem("model.LoginFailedException: hi!", "model.LoginFailedException: hi!");
        model.SearchBorrowedItem.object = searchBorrowedItem0;
        org.junit.Assert.assertNotNull(searchBorrowedItem0);
        org.junit.Assert.assertNull(virtualBookList2);
        org.junit.Assert.assertNotNull(rentedItemArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(virtualBook17);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(bookArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(magazineArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(cDArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(bookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(cDArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(magazineArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(virtualBookList68);
        org.junit.Assert.assertNotNull(virtualItemList73);
        org.junit.Assert.assertNotNull(virtualItemList76);
    }

    @Test
    public void test1828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1828");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.BuySpecialItems buySpecialItems1 = new model.BuySpecialItems();
        model.PayDebit payDebit2 = new model.PayDebit();
        buySpecialItems1.paymentAPI = payDebit2;
        rentAndReturnSystem0.paymentAPI = payDebit2;
        model.Payment payment5 = rentAndReturnSystem0.paymentAPI;
        model.RentAndReturnSystem rentAndReturnSystem6 = new model.RentAndReturnSystem();
        model.Payment payment7 = rentAndReturnSystem6.paymentAPI;
        model.PayMobileWallet payMobileWallet8 = new model.PayMobileWallet();
        payMobileWallet8.amountPay = 100.0f;
        payMobileWallet8.amountPay = (byte) -1;
        rentAndReturnSystem6.paymentAPI = payMobileWallet8;
        model.Payment payment14 = rentAndReturnSystem6.paymentAPI;
        rentAndReturnSystem0.paymentAPI = payment14;
        org.junit.Assert.assertNotNull(payment5);
        org.junit.Assert.assertNull(payment7);
        org.junit.Assert.assertNotNull(payment14);
    }

    @Test
    public void test1829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1829");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        java.lang.String str5 = virtualBook4.location;
        java.lang.String str6 = virtualBook4.title;
        java.lang.String str7 = virtualBook4.author;
        boolean boolean8 = virtualBook4.canBePurchased;
        virtualBook4.ID = 4749527;
        virtualBook4.ID = (byte) 10;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1830");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.RequestForum requestForum1 = model.RequestForum.createRequestForum();
        model.Request request2 = new model.Request();
        request2.title = "";
        java.lang.String str5 = requestForum1.makeARequest(request2);
        int int6 = requestForum0.assessBooksPriority(request2);
        model.LibraryManagementTeam libraryManagementTeam7 = new model.LibraryManagementTeam();
        int int8 = libraryManagementTeam7.ID;
        int int9 = libraryManagementTeam7.accessCode;
        model.Item item10 = null;
        libraryManagementTeam7.addAnItem(item10);
        java.util.ArrayList<model.Item> itemList12 = libraryManagementTeam7.items;
        requestForum0.managementTeam = libraryManagementTeam7;
        model.RequestForum requestForum14 = model.RequestForum.createRequestForum();
        model.RequestForum requestForum15 = model.RequestForum.createRequestForum();
        model.Request request16 = new model.Request();
        request16.title = "";
        java.lang.String str19 = requestForum15.makeARequest(request16);
        int int20 = requestForum14.assessBooksPriority(request16);
        model.Client client21 = request16.requestee;
        java.lang.String str22 = requestForum0.makeARequest(request16);
        model.RequestForum requestForum23 = model.RequestForum.createRequestForum();
        model.Request request24 = new model.Request();
        request24.title = "";
        java.lang.String str27 = requestForum23.makeARequest(request24);
        model.LibraryManagementTeam libraryManagementTeam28 = new model.LibraryManagementTeam();
        int int29 = libraryManagementTeam28.ID;
        model.Magazine magazine31 = new model.Magazine("");
        java.util.Calendar calendar32 = magazine31.date;
        magazine31.author = "model.RegistrationFailedException: ";
        libraryManagementTeam28.disableAnItem((model.Item) magazine31);
        requestForum23.managementTeam = libraryManagementTeam28;
        model.RequestForum requestForum37 = model.RequestForum.createRequestForum();
        model.Request request38 = new model.Request();
        request38.title = "";
        java.lang.String str41 = requestForum37.makeARequest(request38);
        model.Client client42 = request38.requestee;
        java.lang.String str43 = requestForum23.makeARequest(request38);
        model.RequestForum requestForum44 = model.RequestForum.createRequestForum();
        model.Request request45 = new model.Request();
        request45.title = "";
        java.lang.String str48 = requestForum44.makeARequest(request45);
        model.LibraryManagementTeam libraryManagementTeam49 = requestForum44.managementTeam;
        model.RequestForum requestForum50 = model.RequestForum.createRequestForum();
        model.Request request51 = new model.Request();
        request51.title = "";
        java.lang.String str54 = requestForum50.makeARequest(request51);
        model.Client client55 = request51.requestee;
        int int56 = requestForum44.assessBooksPriority(request51);
        request51.type = "model.RegistrationFailedException: ";
        int int59 = requestForum23.assessBooksPriority(request51);
        java.lang.String str60 = requestForum0.makeARequest(request51);
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertNotNull(requestForum1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(itemList12);
        org.junit.Assert.assertNotNull(requestForum14);
        org.junit.Assert.assertNotNull(requestForum15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(client21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(requestForum23);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(calendar32);
        org.junit.Assert.assertNotNull(requestForum37);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNull(client42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(requestForum44);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNotNull(libraryManagementTeam49);
        org.junit.Assert.assertNotNull(requestForum50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNull(client55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
    }

    @Test
    public void test1831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1831");
        model.PayMobileWallet payMobileWallet0 = new model.PayMobileWallet();
        payMobileWallet0.amountPay = 100.0f;
        payMobileWallet0.amountPay = 41.0d;
        payMobileWallet0.pay(41.0d);
        double double7 = payMobileWallet0.amountPay;
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 82.0d + "'", double7 == 82.0d);
    }

    @Test
    public void test1832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1832");
        java.lang.String[] strArray7 = new java.lang.String[] { "src/Client.csv", "src/Book.csv", "src/CD.csv", "src/Book.csv", "src/Newsletter.csv", "model.RegistrationFailedException: src/Magazine.csv" };
        model.Item item8 = model.ItemFactory.makeItem("hi!", strArray7);
        // The following exception was thrown during execution in test generation
        try {
            model.VirtualItem virtualItem10 = model.VirtualItemFactory.makeVirtualItem(strArray7, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"src/Client.csv\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNull(item8);
    }

    @Test
    public void test1833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1833");
        model.BuySpecialItems buySpecialItems0 = new model.BuySpecialItems();
        model.Payment payment1 = buySpecialItems0.paymentAPI;
        java.util.ArrayList<model.Item> itemList2 = buySpecialItems0.purchasedItems;
        model.Payment payment3 = buySpecialItems0.paymentAPI;
        model.Student student4 = new model.Student();
        int int5 = student4.ID;
        model.StudentOnlineResources studentOnlineResources6 = new model.StudentOnlineResources((model.Client) student4);
        model.VirtualBook virtualBook8 = studentOnlineResources6.searchAccessibleBook("");
        virtualBook8.ID = 20;
        virtualBook8.ID = (short) 100;
        boolean boolean13 = virtualBook8.canBePurchased;
        boolean boolean15 = buySpecialItems0.buyAnItem((model.Item) virtualBook8, (double) 31);
        model.PayCredit payCredit16 = new model.PayCredit();
        payCredit16.amountPay = 10;
        payCredit16.pay((double) (-1.0f));
        payCredit16.pay((double) ' ');
        double double23 = payCredit16.amountPay;
        buySpecialItems0.paymentAPI = payCredit16;
        model.PayMobileWallet payMobileWallet25 = new model.PayMobileWallet();
        payMobileWallet25.amountPay = 100.0f;
        payMobileWallet25.amountPay = 41.0d;
        payMobileWallet25.pay(41.0d);
        buySpecialItems0.paymentAPI = payMobileWallet25;
        model.Payment payment33 = buySpecialItems0.paymentAPI;
        model.RentAndReturnSystem rentAndReturnSystem34 = new model.RentAndReturnSystem();
        model.Payment payment35 = rentAndReturnSystem34.paymentAPI;
        model.PayMobileWallet payMobileWallet36 = new model.PayMobileWallet();
        payMobileWallet36.amountPay = 100.0f;
        payMobileWallet36.pay((double) 100L);
        rentAndReturnSystem34.paymentAPI = payMobileWallet36;
        model.PayCredit payCredit42 = new model.PayCredit();
        payCredit42.amountPay = 10;
        rentAndReturnSystem34.paymentAPI = payCredit42;
        model.RentAndReturnSystem rentAndReturnSystem46 = new model.RentAndReturnSystem();
        model.Payment payment47 = rentAndReturnSystem46.paymentAPI;
        model.PayMobileWallet payMobileWallet48 = new model.PayMobileWallet();
        payMobileWallet48.amountPay = 100.0f;
        payMobileWallet48.amountPay = (byte) -1;
        rentAndReturnSystem46.paymentAPI = payMobileWallet48;
        payMobileWallet48.amountPay = 0.0d;
        payMobileWallet48.amountPay = 1;
        rentAndReturnSystem34.paymentAPI = payMobileWallet48;
        buySpecialItems0.paymentAPI = payMobileWallet48;
        org.junit.Assert.assertNull(payment1);
        org.junit.Assert.assertNotNull(itemList2);
        org.junit.Assert.assertNull(payment3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(virtualBook8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 41.0d + "'", double23 == 41.0d);
        org.junit.Assert.assertNotNull(payment33);
        org.junit.Assert.assertNull(payment35);
        org.junit.Assert.assertNull(payment47);
    }

    @Test
    public void test1834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1834");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.StudentOnlineResources studentOnlineResources3 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook5 = studentOnlineResources3.searchAccessibleBook("src/Book.csv");
        int int6 = virtualBook5.ID;
        model.Newsletter[] newsletterArray7 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList8 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList8, newsletterArray7);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager10 = new model.NewsletterSubscriptionManager(newsletterList8);
        model.Client client11 = newsletterSubscriptionManager10.client;
        model.Visitor visitor12 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList13 = visitor12.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources14 = new model.StudentOnlineResources((model.Client) visitor12);
        model.RentedItem[] rentedItemArray15 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList16 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList16, rentedItemArray15);
        model.BorrowingManager borrowingManager18 = new model.BorrowingManager(rentedItemList16);
        model.Visitor visitor19 = new model.Visitor();
        visitor19.email = "hi!";
        borrowingManager18.client = visitor19;
        studentOnlineResources14.client = visitor19;
        model.UniProvidedNewsletter uniProvidedNewsletter24 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter24.title = "";
        java.lang.String str27 = studentOnlineResources14.readVirtualItem((model.VirtualItem) uniProvidedNewsletter24);
        newsletterSubscriptionManager10.cancelSubscription((model.Newsletter) uniProvidedNewsletter24);
        uniProvidedNewsletter24.cost = 0;
        model.VirtualItemContent virtualItemContent32 = new model.VirtualItemContent("hi!");
        java.lang.String str33 = virtualItemContent32.link;
        java.lang.String str35 = virtualItemContent32.getContent("");
        java.lang.String str37 = virtualItemContent32.getContent("model.RegistrationFailedException: ");
        uniProvidedNewsletter24.content = virtualItemContent32;
        model.UniProvidedNewsletter uniProvidedNewsletter39 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter39.title = "hi!";
        model.VirtualItemContent virtualItemContent43 = new model.VirtualItemContent("hi!");
        java.lang.String str44 = virtualItemContent43.link;
        uniProvidedNewsletter39.content = virtualItemContent43;
        uniProvidedNewsletter24.content = virtualItemContent43;
        virtualBook5.content = virtualItemContent43;
        java.lang.String str48 = virtualItemContent43.link;
        java.lang.String str50 = virtualItemContent43.getContent("model.RegistrationFailedException: src/Magazine.csv");
        java.lang.String str52 = virtualItemContent43.getContent("src/Newsletter.csv");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(newsletterArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(client11);
        org.junit.Assert.assertNull(virtualBookList13);
        org.junit.Assert.assertNotNull(rentedItemArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
    }

    @Test
    public void test1835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1835");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getBookFilePath();
        database7.itemPath = "hi!";
        model.SearchVirtualItem searchVirtualItem11 = new model.SearchVirtualItem(database7);
        model.VirtualItemSearchResult virtualItemSearchResult13 = searchVirtualItem11.searchVirtualItem("model.RegistrationFailedException: ");
        model.UniProvidedNewsletter uniProvidedNewsletter14 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter14.title = "";
        java.lang.String str17 = uniProvidedNewsletter14.title;
        uniProvidedNewsletter14.showContent();
        virtualItemSearchResult13.uniNewsletter = uniProvidedNewsletter14;
        model.Student student20 = new model.Student();
        int int21 = student20.ID;
        model.StudentOnlineResources studentOnlineResources22 = new model.StudentOnlineResources((model.Client) student20);
        model.VirtualBook virtualBook24 = studentOnlineResources22.searchAccessibleBook("");
        model.CD cD26 = new model.CD("");
        model.Magazine magazine27 = null;
        model.Book book28 = null;
        model.CD cD29 = null;
        model.Magazine magazine30 = null;
        model.Book[] bookArray31 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList32 = new java.util.ArrayList<model.Book>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList32, bookArray31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        model.Magazine[] magazineArray37 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList38 = new java.util.ArrayList<model.Magazine>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList38, magazineArray37);
        model.ItemSearchResult itemSearchResult40 = new model.ItemSearchResult(book28, cD29, magazine30, (java.util.Collection<model.Book>) bookList32, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList38);
        model.Book book41 = null;
        model.CD cD42 = null;
        model.Magazine magazine43 = null;
        model.Book[] bookArray44 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList45 = new java.util.ArrayList<model.Book>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList45, bookArray44);
        model.CD[] cDArray47 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList48 = new java.util.ArrayList<model.CD>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList48, cDArray47);
        model.Magazine[] magazineArray50 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList51 = new java.util.ArrayList<model.Magazine>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList51, magazineArray50);
        model.ItemSearchResult itemSearchResult53 = new model.ItemSearchResult(book41, cD42, magazine43, (java.util.Collection<model.Book>) bookList45, (java.util.Collection<model.CD>) cDList48, (java.util.Collection<model.Magazine>) magazineList51);
        model.CD[] cDArray54 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList55 = new java.util.ArrayList<model.CD>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList55, cDArray54);
        itemSearchResult53.similarCD = cDList55;
        model.Book book58 = null;
        model.CD cD59 = null;
        model.Magazine magazine60 = null;
        model.Book[] bookArray61 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList62 = new java.util.ArrayList<model.Book>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList62, bookArray61);
        model.CD[] cDArray64 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList65 = new java.util.ArrayList<model.CD>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList65, cDArray64);
        model.Magazine[] magazineArray67 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList68 = new java.util.ArrayList<model.Magazine>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList68, magazineArray67);
        model.ItemSearchResult itemSearchResult70 = new model.ItemSearchResult(book58, cD59, magazine60, (java.util.Collection<model.Book>) bookList62, (java.util.Collection<model.CD>) cDList65, (java.util.Collection<model.Magazine>) magazineList68);
        model.ItemSearchResult itemSearchResult71 = new model.ItemSearchResult((model.Book) virtualBook24, cD26, magazine27, (java.util.Collection<model.Book>) bookList32, (java.util.Collection<model.CD>) cDList55, (java.util.Collection<model.Magazine>) magazineList68);
        int int72 = virtualBook24.ID;
        int int73 = virtualBook24.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter74 = null;
        model.PaidNewsletter paidNewsletter75 = null;
        model.VirtualItemSearchResult virtualItemSearchResult76 = new model.VirtualItemSearchResult(virtualBook24, uniProvidedNewsletter74, paidNewsletter75);
        model.PaidNewsletter paidNewsletter77 = virtualItemSearchResult76.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter78 = new model.UniProvidedNewsletter();
        virtualItemSearchResult76.setUniNewsletter(uniProvidedNewsletter78);
        java.lang.String str80 = uniProvidedNewsletter78.title;
        uniProvidedNewsletter78.cost = 0L;
        float float83 = uniProvidedNewsletter78.cost;
        uniProvidedNewsletter78.showContent();
        virtualItemSearchResult13.setUniNewsletter(uniProvidedNewsletter78);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/Book.csv" + "'", str8, "src/Book.csv");
        org.junit.Assert.assertNotNull(virtualItemSearchResult13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(virtualBook24);
        org.junit.Assert.assertNotNull(bookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(magazineArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(bookArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(cDArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(magazineArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(cDArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(bookArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(cDArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(magazineArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 20 + "'", int73 == 20);
        org.junit.Assert.assertNull(paidNewsletter77);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertTrue("'" + float83 + "' != '" + 0.0f + "'", float83 == 0.0f);
    }

    @Test
    public void test1836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1836");
        model.Database database0 = model.Database.database;
        java.util.ArrayList<java.lang.String> strList1 = database0.getAllItems();
        model.Client client3 = database0.getClient("src/Magazine.csv");
        model.Register register4 = model.Register.makeRegister(database0);
        java.lang.String str5 = database0.getNewspaperFilePath();
        int int6 = database0.getRandomID();
        org.junit.Assert.assertNotNull(database0);
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(client3);
        org.junit.Assert.assertNotNull(register4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "src/Newsletter.csv" + "'", str5, "src/Newsletter.csv");
// flaky:         org.junit.Assert.assertTrue("'" + int6 + "' != '" + 3200146 + "'", int6 == 3200146);
    }

    @Test
    public void test1837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1837");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.Student student5 = new model.Student();
        int int6 = student5.ID;
        model.StudentOnlineResources studentOnlineResources7 = new model.StudentOnlineResources((model.Client) student5);
        student5.ID = '#';
        java.lang.String str10 = student5.email;
        newsletterSubscriptionManager3.client = student5;
        model.Client client12 = newsletterSubscriptionManager3.client;
        model.Student student13 = new model.Student();
        int int14 = student13.ID;
        model.StudentOnlineResources studentOnlineResources15 = new model.StudentOnlineResources((model.Client) student13);
        model.VirtualBook virtualBook17 = studentOnlineResources15.searchAccessibleBook("");
        model.CD cD19 = new model.CD("");
        model.Magazine magazine20 = null;
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.Book book34 = null;
        model.CD cD35 = null;
        model.Magazine magazine36 = null;
        model.Book[] bookArray37 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList38 = new java.util.ArrayList<model.Book>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList38, bookArray37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        model.Magazine[] magazineArray43 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList44 = new java.util.ArrayList<model.Magazine>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList44, magazineArray43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book34, cD35, magazine36, (java.util.Collection<model.Book>) bookList38, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList44);
        model.CD[] cDArray47 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList48 = new java.util.ArrayList<model.CD>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList48, cDArray47);
        itemSearchResult46.similarCD = cDList48;
        model.Book book51 = null;
        model.CD cD52 = null;
        model.Magazine magazine53 = null;
        model.Book[] bookArray54 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList55 = new java.util.ArrayList<model.Book>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList55, bookArray54);
        model.CD[] cDArray57 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList58 = new java.util.ArrayList<model.CD>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList58, cDArray57);
        model.Magazine[] magazineArray60 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList61 = new java.util.ArrayList<model.Magazine>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList61, magazineArray60);
        model.ItemSearchResult itemSearchResult63 = new model.ItemSearchResult(book51, cD52, magazine53, (java.util.Collection<model.Book>) bookList55, (java.util.Collection<model.CD>) cDList58, (java.util.Collection<model.Magazine>) magazineList61);
        model.ItemSearchResult itemSearchResult64 = new model.ItemSearchResult((model.Book) virtualBook17, cD19, magazine20, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList48, (java.util.Collection<model.Magazine>) magazineList61);
        int int65 = virtualBook17.ID;
        int int66 = virtualBook17.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter67 = null;
        model.PaidNewsletter paidNewsletter68 = null;
        model.VirtualItemSearchResult virtualItemSearchResult69 = new model.VirtualItemSearchResult(virtualBook17, uniProvidedNewsletter67, paidNewsletter68);
        model.PaidNewsletter paidNewsletter70 = virtualItemSearchResult69.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter71 = new model.UniProvidedNewsletter();
        virtualItemSearchResult69.setUniNewsletter(uniProvidedNewsletter71);
        java.lang.String str73 = uniProvidedNewsletter71.title;
        newsletterSubscriptionManager3.subscribeToUniProvidedNewsletter(uniProvidedNewsletter71, "model.RegistrationFailedException: ");
        java.util.ArrayList<model.Newsletter> newsletterList76 = newsletterSubscriptionManager3.newsletterSubscribed;
        model.Client client77 = newsletterSubscriptionManager3.client;
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(client12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(virtualBook17);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(bookArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(magazineArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(cDArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(bookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(cDArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(magazineArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 20 + "'", int66 == 20);
        org.junit.Assert.assertNull(paidNewsletter70);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(newsletterList76);
        org.junit.Assert.assertNotNull(client77);
    }

    @Test
    public void test1838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1838");
        model.SearchBorrowedItem searchBorrowedItem0 = model.SearchBorrowedItem.makeSearchBorrowedItem();
        model.Visitor visitor1 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList2 = visitor1.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources3 = new model.StudentOnlineResources((model.Client) visitor1);
        model.RentedItem[] rentedItemArray4 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList5 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList5, rentedItemArray4);
        model.BorrowingManager borrowingManager7 = new model.BorrowingManager(rentedItemList5);
        model.Visitor visitor8 = new model.Visitor();
        visitor8.email = "hi!";
        borrowingManager7.client = visitor8;
        studentOnlineResources3.client = visitor8;
        model.Student student13 = new model.Student();
        int int14 = student13.ID;
        model.StudentOnlineResources studentOnlineResources15 = new model.StudentOnlineResources((model.Client) student13);
        model.VirtualBook virtualBook17 = studentOnlineResources15.searchAccessibleBook("");
        model.CD cD19 = new model.CD("");
        model.Magazine magazine20 = null;
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.Book book34 = null;
        model.CD cD35 = null;
        model.Magazine magazine36 = null;
        model.Book[] bookArray37 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList38 = new java.util.ArrayList<model.Book>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList38, bookArray37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        model.Magazine[] magazineArray43 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList44 = new java.util.ArrayList<model.Magazine>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList44, magazineArray43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book34, cD35, magazine36, (java.util.Collection<model.Book>) bookList38, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList44);
        model.CD[] cDArray47 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList48 = new java.util.ArrayList<model.CD>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList48, cDArray47);
        itemSearchResult46.similarCD = cDList48;
        model.Book book51 = null;
        model.CD cD52 = null;
        model.Magazine magazine53 = null;
        model.Book[] bookArray54 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList55 = new java.util.ArrayList<model.Book>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList55, bookArray54);
        model.CD[] cDArray57 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList58 = new java.util.ArrayList<model.CD>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList58, cDArray57);
        model.Magazine[] magazineArray60 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList61 = new java.util.ArrayList<model.Magazine>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList61, magazineArray60);
        model.ItemSearchResult itemSearchResult63 = new model.ItemSearchResult(book51, cD52, magazine53, (java.util.Collection<model.Book>) bookList55, (java.util.Collection<model.CD>) cDList58, (java.util.Collection<model.Magazine>) magazineList61);
        model.ItemSearchResult itemSearchResult64 = new model.ItemSearchResult((model.Book) virtualBook17, cD19, magazine20, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList48, (java.util.Collection<model.Magazine>) magazineList61);
        java.lang.String str65 = studentOnlineResources3.readVirtualItem((model.VirtualItem) virtualBook17);
        model.Visitor visitor67 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList68 = visitor67.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources69 = new model.StudentOnlineResources((model.Client) visitor67);
        searchBorrowedItem0.addPhyscialItem((model.Item) virtualBook17, "", (model.Client) visitor67);
        model.SearchBorrowedItem.object = searchBorrowedItem0;
        java.util.ArrayList<model.RentedItem> rentedItemList74 = searchBorrowedItem0.searchBorrowedItem("src/VirtualBook.csv", "src/BorrowedItems.csv");
        searchBorrowedItem0.removeItem("src/Newsletter.csv", "src/Magazine.csv");
        searchBorrowedItem0.removeItem("model.RegistrationFailedException: src/Magazine.csv", "model.RentingNotAllowedException: src/Magazine.csv");
        java.util.ArrayList<model.RentedItem> rentedItemList83 = searchBorrowedItem0.searchBorrowedItem("hi!", "src/CD.csv");
        org.junit.Assert.assertNotNull(searchBorrowedItem0);
        org.junit.Assert.assertNull(virtualBookList2);
        org.junit.Assert.assertNotNull(rentedItemArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(virtualBook17);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(bookArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(magazineArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(cDArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(bookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(cDArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(magazineArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(virtualBookList68);
        org.junit.Assert.assertNotNull(rentedItemList74);
        org.junit.Assert.assertNotNull(rentedItemList83);
    }

    @Test
    public void test1839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1839");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getBookFilePath();
        database7.itemPath = "hi!";
        model.SearchVirtualItem searchVirtualItem11 = new model.SearchVirtualItem(database7);
        model.PaidNewsletter paidNewsletter13 = searchVirtualItem11.getPaidNewsletter("src/BorrowedItems.csv");
        model.VirtualBook virtualBook15 = searchVirtualItem11.getVirtualBook("model.RegistrationFailedException: model.RentingNotAllowedException: hi!");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/Book.csv" + "'", str8, "src/Book.csv");
        org.junit.Assert.assertNull(paidNewsletter13);
        org.junit.Assert.assertNull(virtualBook15);
    }

    @Test
    public void test1840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1840");
        model.BuySpecialItems buySpecialItems0 = new model.BuySpecialItems();
        model.Book book1 = null;
        model.CD cD3 = new model.CD("");
        model.Magazine magazine4 = null;
        java.util.Collection<model.Book> bookCollection5 = null;
        model.Book book6 = null;
        model.CD cD7 = null;
        model.Magazine magazine8 = null;
        model.Book[] bookArray9 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList10 = new java.util.ArrayList<model.Book>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList10, bookArray9);
        model.CD[] cDArray12 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList13 = new java.util.ArrayList<model.CD>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList13, cDArray12);
        model.Magazine[] magazineArray15 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList16 = new java.util.ArrayList<model.Magazine>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList16, magazineArray15);
        model.ItemSearchResult itemSearchResult18 = new model.ItemSearchResult(book6, cD7, magazine8, (java.util.Collection<model.Book>) bookList10, (java.util.Collection<model.CD>) cDList13, (java.util.Collection<model.Magazine>) magazineList16);
        model.Book book19 = null;
        model.CD cD20 = null;
        model.Magazine magazine21 = null;
        model.Book[] bookArray22 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList23 = new java.util.ArrayList<model.Book>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList23, bookArray22);
        model.CD[] cDArray25 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList26 = new java.util.ArrayList<model.CD>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList26, cDArray25);
        model.Magazine[] magazineArray28 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList29 = new java.util.ArrayList<model.Magazine>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList29, magazineArray28);
        model.ItemSearchResult itemSearchResult31 = new model.ItemSearchResult(book19, cD20, magazine21, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList29);
        itemSearchResult18.similarCD = cDList26;
        model.Book book33 = null;
        model.CD cD34 = null;
        model.Magazine magazine35 = null;
        model.Book[] bookArray36 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList37 = new java.util.ArrayList<model.Book>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList37, bookArray36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        model.Magazine[] magazineArray42 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList43 = new java.util.ArrayList<model.Magazine>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList43, magazineArray42);
        model.ItemSearchResult itemSearchResult45 = new model.ItemSearchResult(book33, cD34, magazine35, (java.util.Collection<model.Book>) bookList37, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book1, cD3, magazine4, bookCollection5, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList43);
        cD3.ID = (short) 10;
        boolean boolean50 = buySpecialItems0.buyAnItem((model.Item) cD3, (double) 0);
        model.PayDebit payDebit51 = new model.PayDebit();
        buySpecialItems0.paymentAPI = payDebit51;
        double double53 = payDebit51.amountPay;
        payDebit51.amountPay = (short) 1;
        payDebit51.pay((double) 97);
        payDebit51.pay((double) 0.0f);
        double double60 = payDebit51.amountPay;
        org.junit.Assert.assertNotNull(bookArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(cDArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(magazineArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(bookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(magazineArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(bookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(magazineArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 98.0d + "'", double60 == 98.0d);
    }

    @Test
    public void test1841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1841");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.Database.database = database7;
        java.lang.String str10 = database7.virtualItemFilePath;
        java.lang.String str11 = database7.getBookFilePath();
        database7.itemPath = "src/Magazine.csv";
        model.Login login14 = model.Login.makeLogin(database7);
        boolean boolean16 = database7.addItem("src/Client.csv");
        model.SearchItems searchItems17 = new model.SearchItems(database7);
        model.ItemSearchResult itemSearchResult19 = searchItems17.searchItem("hi!");
        model.ItemSearchResult itemSearchResult21 = searchItems17.searchItem("src/Newsletter.csv");
        model.ItemSearchResult itemSearchResult23 = searchItems17.searchItem("model.LoginFailedException: hi!");
        model.ItemSearchResult itemSearchResult25 = searchItems17.searchItem("model.RegistrationFailedException: src/Magazine.csv");
        model.Book book27 = searchItems17.getBook("src/Newsletter.csv");
        java.util.Collection<model.Book> bookCollection29 = searchItems17.getSimilarBooks("");
        model.CD cD31 = searchItems17.getCD("model.RentingNotAllowedException: ");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "model.RegistrationFailedException: " + "'", str10, "model.RegistrationFailedException: ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "src/Book.csv" + "'", str11, "src/Book.csv");
        org.junit.Assert.assertNotNull(login14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(itemSearchResult19);
        org.junit.Assert.assertNotNull(itemSearchResult21);
        org.junit.Assert.assertNotNull(itemSearchResult23);
        org.junit.Assert.assertNotNull(itemSearchResult25);
        org.junit.Assert.assertNull(book27);
        org.junit.Assert.assertNotNull(bookCollection29);
        org.junit.Assert.assertNull(cD31);
    }

    @Test
    public void test1842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1842");
        model.Database database7 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database7;
        model.SearchVirtualItem searchVirtualItem9 = new model.SearchVirtualItem(database7);
        model.RentAndReturnSystem rentAndReturnSystem10 = new model.RentAndReturnSystem();
        model.Book book11 = null;
        model.CD cD13 = new model.CD("");
        model.Magazine magazine14 = null;
        java.util.Collection<model.Book> bookCollection15 = null;
        model.Book book16 = null;
        model.CD cD17 = null;
        model.Magazine magazine18 = null;
        model.Book[] bookArray19 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList20 = new java.util.ArrayList<model.Book>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList20, bookArray19);
        model.CD[] cDArray22 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList23 = new java.util.ArrayList<model.CD>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList23, cDArray22);
        model.Magazine[] magazineArray25 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList26 = new java.util.ArrayList<model.Magazine>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList26, magazineArray25);
        model.ItemSearchResult itemSearchResult28 = new model.ItemSearchResult(book16, cD17, magazine18, (java.util.Collection<model.Book>) bookList20, (java.util.Collection<model.CD>) cDList23, (java.util.Collection<model.Magazine>) magazineList26);
        model.Book book29 = null;
        model.CD cD30 = null;
        model.Magazine magazine31 = null;
        model.Book[] bookArray32 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList33 = new java.util.ArrayList<model.Book>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList33, bookArray32);
        model.CD[] cDArray35 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList36 = new java.util.ArrayList<model.CD>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList36, cDArray35);
        model.Magazine[] magazineArray38 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList39 = new java.util.ArrayList<model.Magazine>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList39, magazineArray38);
        model.ItemSearchResult itemSearchResult41 = new model.ItemSearchResult(book29, cD30, magazine31, (java.util.Collection<model.Book>) bookList33, (java.util.Collection<model.CD>) cDList36, (java.util.Collection<model.Magazine>) magazineList39);
        itemSearchResult28.similarCD = cDList36;
        model.Book book43 = null;
        model.CD cD44 = null;
        model.Magazine magazine45 = null;
        model.Book[] bookArray46 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList47 = new java.util.ArrayList<model.Book>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList47, bookArray46);
        model.CD[] cDArray49 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList50 = new java.util.ArrayList<model.CD>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList50, cDArray49);
        model.Magazine[] magazineArray52 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList53 = new java.util.ArrayList<model.Magazine>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList53, magazineArray52);
        model.ItemSearchResult itemSearchResult55 = new model.ItemSearchResult(book43, cD44, magazine45, (java.util.Collection<model.Book>) bookList47, (java.util.Collection<model.CD>) cDList50, (java.util.Collection<model.Magazine>) magazineList53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult(book11, cD13, magazine14, bookCollection15, (java.util.Collection<model.CD>) cDList36, (java.util.Collection<model.Magazine>) magazineList53);
        cD13.ID = (short) 10;
        cD13.canBePurchased = false;
        boolean boolean61 = cD13.canBePurchased;
        model.Faculty faculty62 = new model.Faculty();
        boolean boolean63 = rentAndReturnSystem10.rentAnItem((model.Item) cD13, (model.Client) faculty62);
        java.lang.String str64 = faculty62.faculty;
        database7.addClient((model.Client) faculty62);
        faculty62.faculty = "src/VirtualBook.csv";
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(bookArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(cDArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(magazineArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(bookArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(cDArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(magazineArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(bookArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(cDArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(magazineArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(str64);
    }

    @Test
    public void test1843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1843");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        boolean boolean4 = borrowingManager3.canRent();
        model.Client client5 = borrowingManager3.client;
        model.Student student6 = new model.Student();
        int int7 = student6.ID;
        model.StudentOnlineResources studentOnlineResources8 = new model.StudentOnlineResources((model.Client) student6);
        model.StudentOnlineResources studentOnlineResources9 = new model.StudentOnlineResources((model.Client) student6);
        model.RentedItem[] rentedItemArray10 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList11 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList11, rentedItemArray10);
        model.BorrowingManager borrowingManager13 = new model.BorrowingManager(rentedItemList11);
        model.Visitor visitor14 = new model.Visitor();
        visitor14.email = "hi!";
        borrowingManager13.client = visitor14;
        studentOnlineResources9.client = visitor14;
        model.Client client19 = studentOnlineResources9.client;
        borrowingManager3.client = client19;
        int int21 = borrowingManager3.itemsBorrowedCount;
        boolean boolean22 = borrowingManager3.canRent();
        model.Client client23 = borrowingManager3.client;
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(client5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(rentedItemArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(client19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(client23);
    }

    @Test
    public void test1844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1844");
        model.Database database7 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.SearchClient searchClient8 = model.SearchClient.makeSearchClient(database7);
        java.lang.String str9 = database7.getCDFilePath();
        model.Register register10 = model.Register.makeRegister(database7);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(searchClient8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "src/CD.csv" + "'", str9, "src/CD.csv");
        org.junit.Assert.assertNotNull(register10);
    }

    @Test
    public void test1845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1845");
        model.Faculty faculty0 = new model.Faculty();
        model.BorrowingManager borrowingManager1 = faculty0.borrowManager;
        faculty0.faculty = "model.RegistrationFailedException: src/Magazine.csv";
        java.util.Collection<model.Book> bookCollection4 = faculty0.textbooks;
        faculty0.ID = 27;
        org.junit.Assert.assertNull(borrowingManager1);
        org.junit.Assert.assertNull(bookCollection4);
    }

    @Test
    public void test1846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1846");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.Student student5 = new model.Student();
        int int6 = student5.ID;
        model.StudentOnlineResources studentOnlineResources7 = new model.StudentOnlineResources((model.Client) student5);
        student5.ID = '#';
        java.lang.String str10 = student5.email;
        newsletterSubscriptionManager3.client = student5;
        model.Client client12 = newsletterSubscriptionManager3.client;
        model.Client client13 = newsletterSubscriptionManager3.client;
        java.util.ArrayList<model.Newsletter> newsletterList14 = newsletterSubscriptionManager3.newsletterSubscribed;
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(client12);
        org.junit.Assert.assertNotNull(client13);
        org.junit.Assert.assertNotNull(newsletterList14);
    }

    @Test
    public void test1847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1847");
        java.lang.String[] strArray3 = new java.lang.String[] { "model.RegistrationFailedException: ", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.List<java.lang.String> strList7 = model.SearchStrategy.findMostSimilarStrings((java.util.Collection<java.lang.String>) strList4, "");
        java.util.List<java.lang.String> strList9 = model.SearchStrategy.findMostSimilarStrings((java.util.Collection<java.lang.String>) strList4, "");
        java.util.List<java.lang.String> strList11 = model.SearchStrategy.findMostSimilarStrings((java.util.Collection<java.lang.String>) strList4, "model.RegistrationFailedException: src/Book.csv");
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList11);
    }

    @Test
    public void test1848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1848");
        model.Book book0 = null;
        model.CD cD2 = new model.CD("");
        model.Magazine magazine3 = null;
        java.util.Collection<model.Book> bookCollection4 = null;
        model.Book book5 = null;
        model.CD cD6 = null;
        model.Magazine magazine7 = null;
        model.Book[] bookArray8 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList9 = new java.util.ArrayList<model.Book>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList9, bookArray8);
        model.CD[] cDArray11 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList12 = new java.util.ArrayList<model.CD>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList12, cDArray11);
        model.Magazine[] magazineArray14 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList15 = new java.util.ArrayList<model.Magazine>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList15, magazineArray14);
        model.ItemSearchResult itemSearchResult17 = new model.ItemSearchResult(book5, cD6, magazine7, (java.util.Collection<model.Book>) bookList9, (java.util.Collection<model.CD>) cDList12, (java.util.Collection<model.Magazine>) magazineList15);
        model.Book book18 = null;
        model.CD cD19 = null;
        model.Magazine magazine20 = null;
        model.Book[] bookArray21 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList22 = new java.util.ArrayList<model.Book>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList22, bookArray21);
        model.CD[] cDArray24 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList25 = new java.util.ArrayList<model.CD>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList25, cDArray24);
        model.Magazine[] magazineArray27 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList28 = new java.util.ArrayList<model.Magazine>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList28, magazineArray27);
        model.ItemSearchResult itemSearchResult30 = new model.ItemSearchResult(book18, cD19, magazine20, (java.util.Collection<model.Book>) bookList22, (java.util.Collection<model.CD>) cDList25, (java.util.Collection<model.Magazine>) magazineList28);
        itemSearchResult17.similarCD = cDList25;
        model.Book book32 = null;
        model.CD cD33 = null;
        model.Magazine magazine34 = null;
        model.Book[] bookArray35 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList36 = new java.util.ArrayList<model.Book>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList36, bookArray35);
        model.CD[] cDArray38 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList39 = new java.util.ArrayList<model.CD>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList39, cDArray38);
        model.Magazine[] magazineArray41 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList42 = new java.util.ArrayList<model.Magazine>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList42, magazineArray41);
        model.ItemSearchResult itemSearchResult44 = new model.ItemSearchResult(book32, cD33, magazine34, (java.util.Collection<model.Book>) bookList36, (java.util.Collection<model.CD>) cDList39, (java.util.Collection<model.Magazine>) magazineList42);
        model.ItemSearchResult itemSearchResult45 = new model.ItemSearchResult(book0, cD2, magazine3, bookCollection4, (java.util.Collection<model.CD>) cDList25, (java.util.Collection<model.Magazine>) magazineList42);
        model.Book book46 = null;
        itemSearchResult45.book = book46;
        java.util.Collection<model.Book> bookCollection48 = itemSearchResult45.similarBooks;
        model.Book book49 = null;
        model.CD cD51 = new model.CD("");
        model.Magazine magazine52 = null;
        java.util.Collection<model.Book> bookCollection53 = null;
        model.Book book54 = null;
        model.CD cD55 = null;
        model.Magazine magazine56 = null;
        model.Book[] bookArray57 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList58 = new java.util.ArrayList<model.Book>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList58, bookArray57);
        model.CD[] cDArray60 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList61 = new java.util.ArrayList<model.CD>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList61, cDArray60);
        model.Magazine[] magazineArray63 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList64 = new java.util.ArrayList<model.Magazine>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList64, magazineArray63);
        model.ItemSearchResult itemSearchResult66 = new model.ItemSearchResult(book54, cD55, magazine56, (java.util.Collection<model.Book>) bookList58, (java.util.Collection<model.CD>) cDList61, (java.util.Collection<model.Magazine>) magazineList64);
        model.Book book67 = null;
        model.CD cD68 = null;
        model.Magazine magazine69 = null;
        model.Book[] bookArray70 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList71 = new java.util.ArrayList<model.Book>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList71, bookArray70);
        model.CD[] cDArray73 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList74 = new java.util.ArrayList<model.CD>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList74, cDArray73);
        model.Magazine[] magazineArray76 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList77 = new java.util.ArrayList<model.Magazine>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList77, magazineArray76);
        model.ItemSearchResult itemSearchResult79 = new model.ItemSearchResult(book67, cD68, magazine69, (java.util.Collection<model.Book>) bookList71, (java.util.Collection<model.CD>) cDList74, (java.util.Collection<model.Magazine>) magazineList77);
        itemSearchResult66.similarCD = cDList74;
        model.Book book81 = null;
        model.CD cD82 = null;
        model.Magazine magazine83 = null;
        model.Book[] bookArray84 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList85 = new java.util.ArrayList<model.Book>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList85, bookArray84);
        model.CD[] cDArray87 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList88 = new java.util.ArrayList<model.CD>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList88, cDArray87);
        model.Magazine[] magazineArray90 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList91 = new java.util.ArrayList<model.Magazine>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList91, magazineArray90);
        model.ItemSearchResult itemSearchResult93 = new model.ItemSearchResult(book81, cD82, magazine83, (java.util.Collection<model.Book>) bookList85, (java.util.Collection<model.CD>) cDList88, (java.util.Collection<model.Magazine>) magazineList91);
        model.ItemSearchResult itemSearchResult94 = new model.ItemSearchResult(book49, cD51, magazine52, bookCollection53, (java.util.Collection<model.CD>) cDList74, (java.util.Collection<model.Magazine>) magazineList91);
        cD51.ID = (short) 10;
        itemSearchResult45.cd = cD51;
        model.CD cD98 = itemSearchResult45.cd;
        int int99 = cD98.ID;
        org.junit.Assert.assertNotNull(bookArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(cDArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(magazineArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(bookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(cDArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(magazineArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(bookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(cDArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(magazineArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(bookCollection48);
        org.junit.Assert.assertNotNull(bookArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(cDArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(magazineArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(bookArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(cDArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(magazineArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(bookArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(cDArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(magazineArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(cD98);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 10 + "'", int99 == 10);
    }

    @Test
    public void test1849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1849");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.RequestForum requestForum1 = model.RequestForum.createRequestForum();
        model.Request request2 = new model.Request();
        request2.title = "";
        java.lang.String str5 = requestForum1.makeARequest(request2);
        int int6 = requestForum0.assessBooksPriority(request2);
        model.LibraryManagementTeam libraryManagementTeam7 = new model.LibraryManagementTeam();
        int int8 = libraryManagementTeam7.ID;
        int int9 = libraryManagementTeam7.accessCode;
        model.Item item10 = null;
        libraryManagementTeam7.addAnItem(item10);
        java.util.ArrayList<model.Item> itemList12 = libraryManagementTeam7.items;
        requestForum0.managementTeam = libraryManagementTeam7;
        model.RequestForum requestForum14 = model.RequestForum.createRequestForum();
        model.RequestForum requestForum15 = model.RequestForum.createRequestForum();
        model.Request request16 = new model.Request();
        request16.title = "";
        java.lang.String str19 = requestForum15.makeARequest(request16);
        int int20 = requestForum14.assessBooksPriority(request16);
        model.Client client21 = request16.requestee;
        java.lang.String str22 = requestForum0.makeARequest(request16);
        model.Request request23 = new model.Request();
        java.lang.String str24 = request23.type;
        model.Database database32 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database32;
        model.SearchVirtualItem searchVirtualItem34 = new model.SearchVirtualItem(database32);
        model.RentAndReturnSystem rentAndReturnSystem35 = new model.RentAndReturnSystem();
        model.Book book36 = null;
        model.CD cD38 = new model.CD("");
        model.Magazine magazine39 = null;
        java.util.Collection<model.Book> bookCollection40 = null;
        model.Book book41 = null;
        model.CD cD42 = null;
        model.Magazine magazine43 = null;
        model.Book[] bookArray44 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList45 = new java.util.ArrayList<model.Book>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList45, bookArray44);
        model.CD[] cDArray47 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList48 = new java.util.ArrayList<model.CD>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList48, cDArray47);
        model.Magazine[] magazineArray50 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList51 = new java.util.ArrayList<model.Magazine>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList51, magazineArray50);
        model.ItemSearchResult itemSearchResult53 = new model.ItemSearchResult(book41, cD42, magazine43, (java.util.Collection<model.Book>) bookList45, (java.util.Collection<model.CD>) cDList48, (java.util.Collection<model.Magazine>) magazineList51);
        model.Book book54 = null;
        model.CD cD55 = null;
        model.Magazine magazine56 = null;
        model.Book[] bookArray57 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList58 = new java.util.ArrayList<model.Book>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList58, bookArray57);
        model.CD[] cDArray60 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList61 = new java.util.ArrayList<model.CD>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList61, cDArray60);
        model.Magazine[] magazineArray63 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList64 = new java.util.ArrayList<model.Magazine>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList64, magazineArray63);
        model.ItemSearchResult itemSearchResult66 = new model.ItemSearchResult(book54, cD55, magazine56, (java.util.Collection<model.Book>) bookList58, (java.util.Collection<model.CD>) cDList61, (java.util.Collection<model.Magazine>) magazineList64);
        itemSearchResult53.similarCD = cDList61;
        model.Book book68 = null;
        model.CD cD69 = null;
        model.Magazine magazine70 = null;
        model.Book[] bookArray71 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList72 = new java.util.ArrayList<model.Book>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList72, bookArray71);
        model.CD[] cDArray74 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList75 = new java.util.ArrayList<model.CD>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList75, cDArray74);
        model.Magazine[] magazineArray77 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList78 = new java.util.ArrayList<model.Magazine>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList78, magazineArray77);
        model.ItemSearchResult itemSearchResult80 = new model.ItemSearchResult(book68, cD69, magazine70, (java.util.Collection<model.Book>) bookList72, (java.util.Collection<model.CD>) cDList75, (java.util.Collection<model.Magazine>) magazineList78);
        model.ItemSearchResult itemSearchResult81 = new model.ItemSearchResult(book36, cD38, magazine39, bookCollection40, (java.util.Collection<model.CD>) cDList61, (java.util.Collection<model.Magazine>) magazineList78);
        cD38.ID = (short) 10;
        cD38.canBePurchased = false;
        boolean boolean86 = cD38.canBePurchased;
        model.Faculty faculty87 = new model.Faculty();
        boolean boolean88 = rentAndReturnSystem35.rentAnItem((model.Item) cD38, (model.Client) faculty87);
        java.lang.String str89 = faculty87.faculty;
        database32.addClient((model.Client) faculty87);
        request23.requestee = faculty87;
        java.lang.String str92 = requestForum0.makeARequest(request23);
        model.Client client93 = request23.requestee;
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertNotNull(requestForum1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(itemList12);
        org.junit.Assert.assertNotNull(requestForum14);
        org.junit.Assert.assertNotNull(requestForum15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(client21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(database32);
        org.junit.Assert.assertNotNull(bookArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(cDArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(magazineArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(bookArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(cDArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(magazineArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(bookArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(cDArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(magazineArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "" + "'", str92, "");
        org.junit.Assert.assertNotNull(client93);
    }

    @Test
    public void test1850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1850");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter54 = null;
        model.PaidNewsletter paidNewsletter55 = null;
        model.VirtualItemSearchResult virtualItemSearchResult56 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter54, paidNewsletter55);
        model.PaidNewsletter paidNewsletter57 = virtualItemSearchResult56.getPaidNewsletter();
        model.PaidNewsletter paidNewsletter58 = virtualItemSearchResult56.getPaidNewsletter();
        model.VirtualBook virtualBook59 = virtualItemSearchResult56.getVirtualBook();
        boolean boolean60 = virtualBook59.isBookLost;
        virtualBook59.location = "model.RegistrationFailedException: model.RentingNotAllowedException: hi!";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertNull(paidNewsletter57);
        org.junit.Assert.assertNull(paidNewsletter58);
        org.junit.Assert.assertNotNull(virtualBook59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test1851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1851");
        model.PayMobileWallet payMobileWallet0 = new model.PayMobileWallet();
        payMobileWallet0.amountPay = 100.0f;
        payMobileWallet0.amountPay = 41.0d;
        payMobileWallet0.pay(41.0d);
        payMobileWallet0.pay((-1.0d));
        payMobileWallet0.pay((double) 7680716);
        payMobileWallet0.amountPay = 5069014;
    }

    @Test
    public void test1852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1852");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.VirtualItemContent virtualItemContent5 = virtualBook4.content;
        model.Student student6 = new model.Student();
        int int7 = student6.ID;
        model.StudentOnlineResources studentOnlineResources8 = new model.StudentOnlineResources((model.Client) student6);
        model.VirtualBook virtualBook10 = studentOnlineResources8.searchAccessibleBook("");
        model.CD cD12 = new model.CD("");
        model.Magazine magazine13 = null;
        model.Book book14 = null;
        model.CD cD15 = null;
        model.Magazine magazine16 = null;
        model.Book[] bookArray17 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList18 = new java.util.ArrayList<model.Book>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList18, bookArray17);
        model.CD[] cDArray20 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList21 = new java.util.ArrayList<model.CD>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList21, cDArray20);
        model.Magazine[] magazineArray23 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList24 = new java.util.ArrayList<model.Magazine>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList24, magazineArray23);
        model.ItemSearchResult itemSearchResult26 = new model.ItemSearchResult(book14, cD15, magazine16, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList21, (java.util.Collection<model.Magazine>) magazineList24);
        model.Book book27 = null;
        model.CD cD28 = null;
        model.Magazine magazine29 = null;
        model.Book[] bookArray30 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList31 = new java.util.ArrayList<model.Book>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList31, bookArray30);
        model.CD[] cDArray33 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList34 = new java.util.ArrayList<model.CD>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList34, cDArray33);
        model.Magazine[] magazineArray36 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList37 = new java.util.ArrayList<model.Magazine>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList37, magazineArray36);
        model.ItemSearchResult itemSearchResult39 = new model.ItemSearchResult(book27, cD28, magazine29, (java.util.Collection<model.Book>) bookList31, (java.util.Collection<model.CD>) cDList34, (java.util.Collection<model.Magazine>) magazineList37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        itemSearchResult39.similarCD = cDList41;
        model.Book book44 = null;
        model.CD cD45 = null;
        model.Magazine magazine46 = null;
        model.Book[] bookArray47 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList48 = new java.util.ArrayList<model.Book>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList48, bookArray47);
        model.CD[] cDArray50 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList51 = new java.util.ArrayList<model.CD>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList51, cDArray50);
        model.Magazine[] magazineArray53 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList54 = new java.util.ArrayList<model.Magazine>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList54, magazineArray53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult(book44, cD45, magazine46, (java.util.Collection<model.Book>) bookList48, (java.util.Collection<model.CD>) cDList51, (java.util.Collection<model.Magazine>) magazineList54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult((model.Book) virtualBook10, cD12, magazine13, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList54);
        int int58 = virtualBook10.ID;
        int int59 = virtualBook10.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter60 = null;
        model.PaidNewsletter paidNewsletter61 = null;
        model.VirtualItemSearchResult virtualItemSearchResult62 = new model.VirtualItemSearchResult(virtualBook10, uniProvidedNewsletter60, paidNewsletter61);
        model.PaidNewsletter paidNewsletter63 = virtualItemSearchResult62.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter64 = new model.UniProvidedNewsletter();
        virtualItemSearchResult62.setUniNewsletter(uniProvidedNewsletter64);
        java.lang.String str66 = uniProvidedNewsletter64.title;
        model.PaidNewsletter paidNewsletter67 = null;
        model.VirtualItemSearchResult virtualItemSearchResult68 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter64, paidNewsletter67);
        model.VirtualItemContent virtualItemContent70 = new model.VirtualItemContent("hi!");
        java.lang.String str71 = virtualItemContent70.link;
        java.lang.String str73 = virtualItemContent70.getContent("");
        java.lang.String str75 = virtualItemContent70.getContent("model.RegistrationFailedException: ");
        java.lang.String str76 = virtualItemContent70.link;
        virtualBook4.content = virtualItemContent70;
        java.lang.String str78 = virtualBook4.title;
        int int79 = virtualBook4.ID;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNull(virtualItemContent5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(virtualBook10);
        org.junit.Assert.assertNotNull(bookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(cDArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(magazineArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(bookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(magazineArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(bookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(cDArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(magazineArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 20 + "'", int59 == 20);
        org.junit.Assert.assertNull(paidNewsletter63);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
    }

    @Test
    public void test1853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1853");
        model.Database database0 = null;
        model.Register register1 = model.Register.makeRegister(database0);
        model.ValidateRegistration validateRegistration2 = new model.ValidateRegistration();
        model.Student student3 = new model.Student();
        student3.viewMyOnlineResource();
        boolean boolean5 = validateRegistration2.validateStaffRegistration((model.Staff) student3);
        boolean boolean8 = register1.registerAsStaff((model.Staff) student3, "", "");
        student3.username = "src/Client.csv";
        model.RentedItem[] rentedItemArray11 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList12 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList12, rentedItemArray11);
        model.BorrowingManager borrowingManager14 = new model.BorrowingManager(rentedItemList12);
        model.RentedItem[] rentedItemArray15 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList16 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList16, rentedItemArray15);
        model.BorrowingManager borrowingManager18 = new model.BorrowingManager(rentedItemList16);
        model.RentedItem[] rentedItemArray19 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList20 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList20, rentedItemArray19);
        model.BorrowingManager borrowingManager22 = new model.BorrowingManager(rentedItemList20);
        borrowingManager18.physicalItemBorrowed = rentedItemList20;
        borrowingManager14.physicalItemBorrowed = rentedItemList20;
        model.Visitor visitor25 = new model.Visitor();
        model.VirtualBook[] virtualBookArray26 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList27 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList27, virtualBookArray26);
        visitor25.virtualBooksAvailable = virtualBookList27;
        borrowingManager14.client = visitor25;
        model.Faculty faculty31 = new model.Faculty();
        java.lang.String str32 = faculty31.faculty;
        borrowingManager14.client = faculty31;
        model.RentedItem[] rentedItemArray34 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList35 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList35, rentedItemArray34);
        model.BorrowingManager borrowingManager37 = new model.BorrowingManager(rentedItemList35);
        model.RentedItem[] rentedItemArray38 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList39 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList39, rentedItemArray38);
        model.BorrowingManager borrowingManager41 = new model.BorrowingManager(rentedItemList39);
        model.RentedItem[] rentedItemArray42 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList43 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList43, rentedItemArray42);
        model.BorrowingManager borrowingManager45 = new model.BorrowingManager(rentedItemList43);
        borrowingManager41.physicalItemBorrowed = rentedItemList43;
        borrowingManager37.physicalItemBorrowed = rentedItemList43;
        borrowingManager14.physicalItemBorrowed = rentedItemList43;
        borrowingManager14.itemsBorrowedCount = (byte) 0;
        student3.borrowManager = borrowingManager14;
        java.util.ArrayList<model.RentedItem> rentedItemList52 = borrowingManager14.physicalItemBorrowed;
        boolean boolean53 = borrowingManager14.canRent();
        boolean boolean54 = borrowingManager14.canRent();
        org.junit.Assert.assertNotNull(register1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(rentedItemArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(rentedItemArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(rentedItemArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(virtualBookArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(rentedItemArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(rentedItemArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(rentedItemArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(rentedItemList52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test1854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1854");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter54 = null;
        model.PaidNewsletter paidNewsletter55 = null;
        model.VirtualItemSearchResult virtualItemSearchResult56 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter54, paidNewsletter55);
        model.PaidNewsletter paidNewsletter57 = virtualItemSearchResult56.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter58 = new model.UniProvidedNewsletter();
        virtualItemSearchResult56.setUniNewsletter(uniProvidedNewsletter58);
        model.PaidNewsletter paidNewsletter60 = virtualItemSearchResult56.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter61 = virtualItemSearchResult56.uniNewsletter;
        model.Database database69 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database69;
        model.SearchVirtualItem searchVirtualItem71 = new model.SearchVirtualItem(database69);
        model.UniProvidedNewsletter uniProvidedNewsletter73 = searchVirtualItem71.getUniNewsletter("");
        model.VirtualBook virtualBook75 = searchVirtualItem71.getVirtualBook("src/VirtualBook.csv");
        boolean boolean76 = uniProvidedNewsletter61.equals((java.lang.Object) "src/VirtualBook.csv");
        model.RentingNotAllowedException rentingNotAllowedException78 = new model.RentingNotAllowedException("src/Magazine.csv");
        boolean boolean79 = uniProvidedNewsletter61.equals((java.lang.Object) rentingNotAllowedException78);
        uniProvidedNewsletter61.ID = 2174094;
        java.lang.String str82 = uniProvidedNewsletter61.title;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertNull(paidNewsletter57);
        org.junit.Assert.assertNull(paidNewsletter60);
        org.junit.Assert.assertNotNull(uniProvidedNewsletter61);
        org.junit.Assert.assertNotNull(database69);
        org.junit.Assert.assertNull(uniProvidedNewsletter73);
        org.junit.Assert.assertNull(virtualBook75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(str82);
    }

    @Test
    public void test1855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1855");
        model.Faculty faculty0 = new model.Faculty();
        faculty0.username = "hi!";
        java.util.Collection<model.Course> courseCollection3 = null;
        faculty0.courses = courseCollection3;
        java.util.Collection<model.Course> courseCollection5 = faculty0.courses;
        model.Newsletter[] newsletterArray6 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList7 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList7, newsletterArray6);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager9 = new model.NewsletterSubscriptionManager(newsletterList7);
        model.Client client10 = newsletterSubscriptionManager9.client;
        model.Student student11 = new model.Student();
        int int12 = student11.ID;
        model.StudentOnlineResources studentOnlineResources13 = new model.StudentOnlineResources((model.Client) student11);
        student11.ID = '#';
        java.lang.String str16 = student11.email;
        newsletterSubscriptionManager9.client = student11;
        model.Newsletter[] newsletterArray18 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList19 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList19, newsletterArray18);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager21 = new model.NewsletterSubscriptionManager(newsletterList19);
        newsletterSubscriptionManager9.newsletterSubscribed = newsletterList19;
        faculty0.newsletterManager = newsletterSubscriptionManager9;
        faculty0.faculty = "model.RegistrationFailedException: src/Magazine.csv";
        org.junit.Assert.assertNull(courseCollection5);
        org.junit.Assert.assertNotNull(newsletterArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(client10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(newsletterArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1856");
        model.BuySpecialItems buySpecialItems0 = new model.BuySpecialItems();
        model.Payment payment1 = null;
        buySpecialItems0.paymentAPI = payment1;
        model.RequestForum requestForum3 = model.RequestForum.createRequestForum();
        model.LibraryManagementTeam libraryManagementTeam4 = new model.LibraryManagementTeam();
        int int5 = libraryManagementTeam4.ID;
        int int6 = libraryManagementTeam4.accessCode;
        model.Item item7 = null;
        libraryManagementTeam4.addAnItem(item7);
        requestForum3.managementTeam = libraryManagementTeam4;
        java.util.ArrayList<model.Item> itemList10 = libraryManagementTeam4.items;
        buySpecialItems0.purchasedItems = itemList10;
        model.Payment payment12 = buySpecialItems0.paymentAPI;
        model.PayCredit payCredit13 = new model.PayCredit();
        payCredit13.amountPay = 10;
        payCredit13.pay((double) (-1.0f));
        payCredit13.pay((double) ' ');
        payCredit13.pay(0.0d);
        double double22 = payCredit13.amountPay;
        payCredit13.pay((double) (short) 100);
        buySpecialItems0.paymentAPI = payCredit13;
        model.Magazine magazine27 = new model.Magazine("hi!");
        magazine27.location = "model.RegistrationFailedException: ";
        java.lang.String str30 = magazine27.location;
        int int31 = magazine27.copiesAvailable;
        boolean boolean33 = buySpecialItems0.buyAnItem((model.Item) magazine27, 10.0d);
        model.Payment payment34 = buySpecialItems0.paymentAPI;
        model.Item item35 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean37 = buySpecialItems0.buyAnItem(item35, (double) 40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"canBePurchased\" because \"item\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(requestForum3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(itemList10);
        org.junit.Assert.assertNull(payment12);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 41.0d + "'", double22 == 41.0d);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "model.RegistrationFailedException: " + "'", str30, "model.RegistrationFailedException: ");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 20 + "'", int31 == 20);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(payment34);
    }

    @Test
    public void test1857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1857");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.VirtualItemContent virtualItemContent5 = virtualBook4.content;
        model.Student student6 = new model.Student();
        int int7 = student6.ID;
        model.StudentOnlineResources studentOnlineResources8 = new model.StudentOnlineResources((model.Client) student6);
        model.VirtualBook virtualBook10 = studentOnlineResources8.searchAccessibleBook("");
        model.CD cD12 = new model.CD("");
        model.Magazine magazine13 = null;
        model.Book book14 = null;
        model.CD cD15 = null;
        model.Magazine magazine16 = null;
        model.Book[] bookArray17 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList18 = new java.util.ArrayList<model.Book>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList18, bookArray17);
        model.CD[] cDArray20 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList21 = new java.util.ArrayList<model.CD>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList21, cDArray20);
        model.Magazine[] magazineArray23 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList24 = new java.util.ArrayList<model.Magazine>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList24, magazineArray23);
        model.ItemSearchResult itemSearchResult26 = new model.ItemSearchResult(book14, cD15, magazine16, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList21, (java.util.Collection<model.Magazine>) magazineList24);
        model.Book book27 = null;
        model.CD cD28 = null;
        model.Magazine magazine29 = null;
        model.Book[] bookArray30 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList31 = new java.util.ArrayList<model.Book>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList31, bookArray30);
        model.CD[] cDArray33 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList34 = new java.util.ArrayList<model.CD>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList34, cDArray33);
        model.Magazine[] magazineArray36 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList37 = new java.util.ArrayList<model.Magazine>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList37, magazineArray36);
        model.ItemSearchResult itemSearchResult39 = new model.ItemSearchResult(book27, cD28, magazine29, (java.util.Collection<model.Book>) bookList31, (java.util.Collection<model.CD>) cDList34, (java.util.Collection<model.Magazine>) magazineList37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        itemSearchResult39.similarCD = cDList41;
        model.Book book44 = null;
        model.CD cD45 = null;
        model.Magazine magazine46 = null;
        model.Book[] bookArray47 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList48 = new java.util.ArrayList<model.Book>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList48, bookArray47);
        model.CD[] cDArray50 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList51 = new java.util.ArrayList<model.CD>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList51, cDArray50);
        model.Magazine[] magazineArray53 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList54 = new java.util.ArrayList<model.Magazine>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList54, magazineArray53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult(book44, cD45, magazine46, (java.util.Collection<model.Book>) bookList48, (java.util.Collection<model.CD>) cDList51, (java.util.Collection<model.Magazine>) magazineList54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult((model.Book) virtualBook10, cD12, magazine13, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList54);
        int int58 = virtualBook10.ID;
        int int59 = virtualBook10.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter60 = null;
        model.PaidNewsletter paidNewsletter61 = null;
        model.VirtualItemSearchResult virtualItemSearchResult62 = new model.VirtualItemSearchResult(virtualBook10, uniProvidedNewsletter60, paidNewsletter61);
        model.PaidNewsletter paidNewsletter63 = virtualItemSearchResult62.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter64 = new model.UniProvidedNewsletter();
        virtualItemSearchResult62.setUniNewsletter(uniProvidedNewsletter64);
        java.lang.String str66 = uniProvidedNewsletter64.title;
        model.PaidNewsletter paidNewsletter67 = null;
        model.VirtualItemSearchResult virtualItemSearchResult68 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter64, paidNewsletter67);
        uniProvidedNewsletter64.ID = ' ';
        uniProvidedNewsletter64.cost = (byte) 1;
        int int73 = uniProvidedNewsletter64.ID;
        model.VirtualItemContent virtualItemContent75 = new model.VirtualItemContent("src/CD.csv");
        uniProvidedNewsletter64.content = virtualItemContent75;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNull(virtualItemContent5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(virtualBook10);
        org.junit.Assert.assertNotNull(bookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(cDArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(magazineArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(bookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(magazineArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(bookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(cDArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(magazineArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 20 + "'", int59 == 20);
        org.junit.Assert.assertNull(paidNewsletter63);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 32 + "'", int73 == 32);
    }

    @Test
    public void test1858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1858");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter54 = null;
        model.PaidNewsletter paidNewsletter55 = null;
        model.VirtualItemSearchResult virtualItemSearchResult56 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter54, paidNewsletter55);
        model.PaidNewsletter paidNewsletter57 = virtualItemSearchResult56.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter58 = virtualItemSearchResult56.getUniNewsletter();
        model.PaidNewsletter paidNewsletter59 = virtualItemSearchResult56.getPaidNewsletter();
        model.UniProvidedNewsletter uniProvidedNewsletter60 = virtualItemSearchResult56.getUniNewsletter();
        model.PaidNewsletter paidNewsletter61 = null;
        virtualItemSearchResult56.setPaidNewsletter(paidNewsletter61);
        model.UniProvidedNewsletter uniProvidedNewsletter63 = virtualItemSearchResult56.getUniNewsletter();
        model.Student student64 = new model.Student();
        int int65 = student64.ID;
        model.StudentOnlineResources studentOnlineResources66 = new model.StudentOnlineResources((model.Client) student64);
        model.LibraryManagementTeam libraryManagementTeam67 = new model.LibraryManagementTeam();
        int int68 = libraryManagementTeam67.ID;
        model.Student student69 = new model.Student();
        int int70 = student69.ID;
        model.StudentOnlineResources studentOnlineResources71 = new model.StudentOnlineResources((model.Client) student69);
        model.VirtualBook virtualBook73 = studentOnlineResources71.searchAccessibleBook("");
        model.VirtualItemContent virtualItemContent74 = virtualBook73.content;
        libraryManagementTeam67.enableAnItem((model.Item) virtualBook73);
        java.lang.String str76 = studentOnlineResources66.readVirtualItem((model.VirtualItem) virtualBook73);
        virtualItemSearchResult56.virtualBook = virtualBook73;
        int int78 = virtualBook73.copiesAvailable;
        java.lang.String str79 = virtualBook73.author;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertNull(paidNewsletter57);
        org.junit.Assert.assertNull(uniProvidedNewsletter58);
        org.junit.Assert.assertNull(paidNewsletter59);
        org.junit.Assert.assertNull(uniProvidedNewsletter60);
        org.junit.Assert.assertNull(uniProvidedNewsletter63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(virtualBook73);
        org.junit.Assert.assertNull(virtualItemContent74);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 20 + "'", int78 == 20);
        org.junit.Assert.assertNull(str79);
    }

    @Test
    public void test1859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1859");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        model.LibraryManagementTeam libraryManagementTeam54 = new model.LibraryManagementTeam();
        libraryManagementTeam54.accessCode = (byte) 10;
        java.util.ArrayList<model.Item> itemList57 = libraryManagementTeam54.items;
        boolean boolean58 = virtualBook4.equals((java.lang.Object) libraryManagementTeam54);
        java.lang.String str59 = virtualBook4.title;
        java.lang.String str60 = virtualBook4.publisher;
        java.lang.String str61 = virtualBook4.title;
        java.lang.Class<?> wildcardClass62 = virtualBook4.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertNotNull(itemList57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1860");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        java.util.Iterator<model.VirtualItem> virtualItemItor3 = studentOnlineResources2.iterator();
        model.Student student4 = new model.Student();
        int int5 = student4.ID;
        model.StudentOnlineResources studentOnlineResources6 = new model.StudentOnlineResources((model.Client) student4);
        model.VirtualBook virtualBook8 = studentOnlineResources6.searchAccessibleBook("");
        model.CD cD10 = new model.CD("");
        model.Magazine magazine11 = null;
        model.Book book12 = null;
        model.CD cD13 = null;
        model.Magazine magazine14 = null;
        model.Book[] bookArray15 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList16 = new java.util.ArrayList<model.Book>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList16, bookArray15);
        model.CD[] cDArray18 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList19 = new java.util.ArrayList<model.CD>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList19, cDArray18);
        model.Magazine[] magazineArray21 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList22 = new java.util.ArrayList<model.Magazine>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList22, magazineArray21);
        model.ItemSearchResult itemSearchResult24 = new model.ItemSearchResult(book12, cD13, magazine14, (java.util.Collection<model.Book>) bookList16, (java.util.Collection<model.CD>) cDList19, (java.util.Collection<model.Magazine>) magazineList22);
        model.Book book25 = null;
        model.CD cD26 = null;
        model.Magazine magazine27 = null;
        model.Book[] bookArray28 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList29 = new java.util.ArrayList<model.Book>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList29, bookArray28);
        model.CD[] cDArray31 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList32 = new java.util.ArrayList<model.CD>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList32, cDArray31);
        model.Magazine[] magazineArray34 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList35 = new java.util.ArrayList<model.Magazine>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList35, magazineArray34);
        model.ItemSearchResult itemSearchResult37 = new model.ItemSearchResult(book25, cD26, magazine27, (java.util.Collection<model.Book>) bookList29, (java.util.Collection<model.CD>) cDList32, (java.util.Collection<model.Magazine>) magazineList35);
        model.CD[] cDArray38 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList39 = new java.util.ArrayList<model.CD>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList39, cDArray38);
        itemSearchResult37.similarCD = cDList39;
        model.Book book42 = null;
        model.CD cD43 = null;
        model.Magazine magazine44 = null;
        model.Book[] bookArray45 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList46 = new java.util.ArrayList<model.Book>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList46, bookArray45);
        model.CD[] cDArray48 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList49 = new java.util.ArrayList<model.CD>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList49, cDArray48);
        model.Magazine[] magazineArray51 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList52 = new java.util.ArrayList<model.Magazine>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList52, magazineArray51);
        model.ItemSearchResult itemSearchResult54 = new model.ItemSearchResult(book42, cD43, magazine44, (java.util.Collection<model.Book>) bookList46, (java.util.Collection<model.CD>) cDList49, (java.util.Collection<model.Magazine>) magazineList52);
        model.ItemSearchResult itemSearchResult55 = new model.ItemSearchResult((model.Book) virtualBook8, cD10, magazine11, (java.util.Collection<model.Book>) bookList16, (java.util.Collection<model.CD>) cDList39, (java.util.Collection<model.Magazine>) magazineList52);
        java.lang.String str56 = studentOnlineResources2.readVirtualItem((model.VirtualItem) virtualBook8);
        java.lang.String str57 = virtualBook8.publisher;
        int int58 = virtualBook8.ID;
        int int59 = virtualBook8.copiesAvailable;
        virtualBook8.showContent();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(virtualItemItor3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(virtualBook8);
        org.junit.Assert.assertNotNull(bookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(cDArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(magazineArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(bookArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(cDArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(magazineArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(cDArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(bookArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(cDArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(magazineArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 20 + "'", int59 == 20);
    }

    @Test
    public void test1861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1861");
        model.Course course0 = new model.Course();
        java.lang.String str1 = course0.subject;
        int int2 = course0.year;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test1862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1862");
        model.BorrowingManager.maxBorrowCount = (short) 100;
    }

    @Test
    public void test1863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1863");
        model.Course course0 = new model.Course();
        java.lang.String str1 = course0.subject;
        course0.year = (byte) 10;
        int int4 = course0.year;
        course0.year = 6645047;
        course0.subject = "src/Book.csv";
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 10 + "'", int4 == 10);
    }

    @Test
    public void test1864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1864");
        model.Book book1 = new model.Book("src/VirtualBook.csv");
    }

    @Test
    public void test1865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1865");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.Database.database = database7;
        java.lang.String str10 = database7.virtualItemFilePath;
        java.lang.String str11 = database7.getBookFilePath();
        database7.itemPath = "src/Magazine.csv";
        model.Login login14 = model.Login.makeLogin(database7);
        boolean boolean16 = database7.addItem("src/Client.csv");
        model.SearchItems searchItems17 = new model.SearchItems(database7);
        model.ItemSearchResult itemSearchResult19 = searchItems17.searchItem("hi!");
        model.ItemSearchResult itemSearchResult21 = searchItems17.searchItem("src/Newsletter.csv");
        model.ItemSearchResult itemSearchResult23 = searchItems17.searchItem("model.RegistrationFailedException: src/Magazine.csv");
        java.util.Collection<model.Book> bookCollection25 = searchItems17.getSimilarBooks("");
        model.CD cD27 = searchItems17.getCD("model.RentingNotAllowedException: hi!");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "model.RegistrationFailedException: " + "'", str10, "model.RegistrationFailedException: ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "src/Book.csv" + "'", str11, "src/Book.csv");
        org.junit.Assert.assertNotNull(login14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(itemSearchResult19);
        org.junit.Assert.assertNotNull(itemSearchResult21);
        org.junit.Assert.assertNotNull(itemSearchResult23);
        org.junit.Assert.assertNotNull(bookCollection25);
        org.junit.Assert.assertNull(cD27);
    }

    @Test
    public void test1866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1866");
        model.Database database7 = model.Database.createDatabase("src/VirtualBook.csv", "", "model.RegistrationFailedException: src/Magazine.csv", "model.RegistrationFailedException: ", "model.RegistrationFailedException: src/Magazine.csv", "src/CD.csv", "src/CD.csv");
        int int8 = database7.getRandomID();
        java.util.ArrayList<java.lang.String> strList9 = database7.getAllItems();
        model.SearchItems searchItems10 = new model.SearchItems(database7);
        model.SearchVirtualItem searchVirtualItem11 = new model.SearchVirtualItem(database7);
        model.PaidNewsletter paidNewsletter13 = searchVirtualItem11.getPaidNewsletter("model.RegistrationFailedException: src/Book.csv");
        model.PaidNewsletter paidNewsletter15 = searchVirtualItem11.getPaidNewsletter("src/Magazine.csv");
        model.VirtualBook virtualBook17 = searchVirtualItem11.getVirtualBook("");
        org.junit.Assert.assertNotNull(database7);
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2157442 + "'", int8 == 2157442);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(paidNewsletter13);
        org.junit.Assert.assertNull(paidNewsletter15);
        org.junit.Assert.assertNull(virtualBook17);
    }

    @Test
    public void test1867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1867");
        model.Database database7 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database7;
        model.SearchVirtualItem searchVirtualItem9 = new model.SearchVirtualItem(database7);
        model.RentAndReturnSystem rentAndReturnSystem10 = new model.RentAndReturnSystem();
        model.Book book11 = null;
        model.CD cD13 = new model.CD("");
        model.Magazine magazine14 = null;
        java.util.Collection<model.Book> bookCollection15 = null;
        model.Book book16 = null;
        model.CD cD17 = null;
        model.Magazine magazine18 = null;
        model.Book[] bookArray19 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList20 = new java.util.ArrayList<model.Book>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList20, bookArray19);
        model.CD[] cDArray22 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList23 = new java.util.ArrayList<model.CD>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList23, cDArray22);
        model.Magazine[] magazineArray25 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList26 = new java.util.ArrayList<model.Magazine>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList26, magazineArray25);
        model.ItemSearchResult itemSearchResult28 = new model.ItemSearchResult(book16, cD17, magazine18, (java.util.Collection<model.Book>) bookList20, (java.util.Collection<model.CD>) cDList23, (java.util.Collection<model.Magazine>) magazineList26);
        model.Book book29 = null;
        model.CD cD30 = null;
        model.Magazine magazine31 = null;
        model.Book[] bookArray32 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList33 = new java.util.ArrayList<model.Book>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList33, bookArray32);
        model.CD[] cDArray35 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList36 = new java.util.ArrayList<model.CD>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList36, cDArray35);
        model.Magazine[] magazineArray38 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList39 = new java.util.ArrayList<model.Magazine>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList39, magazineArray38);
        model.ItemSearchResult itemSearchResult41 = new model.ItemSearchResult(book29, cD30, magazine31, (java.util.Collection<model.Book>) bookList33, (java.util.Collection<model.CD>) cDList36, (java.util.Collection<model.Magazine>) magazineList39);
        itemSearchResult28.similarCD = cDList36;
        model.Book book43 = null;
        model.CD cD44 = null;
        model.Magazine magazine45 = null;
        model.Book[] bookArray46 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList47 = new java.util.ArrayList<model.Book>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList47, bookArray46);
        model.CD[] cDArray49 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList50 = new java.util.ArrayList<model.CD>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList50, cDArray49);
        model.Magazine[] magazineArray52 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList53 = new java.util.ArrayList<model.Magazine>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList53, magazineArray52);
        model.ItemSearchResult itemSearchResult55 = new model.ItemSearchResult(book43, cD44, magazine45, (java.util.Collection<model.Book>) bookList47, (java.util.Collection<model.CD>) cDList50, (java.util.Collection<model.Magazine>) magazineList53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult(book11, cD13, magazine14, bookCollection15, (java.util.Collection<model.CD>) cDList36, (java.util.Collection<model.Magazine>) magazineList53);
        cD13.ID = (short) 10;
        cD13.canBePurchased = false;
        boolean boolean61 = cD13.canBePurchased;
        model.Faculty faculty62 = new model.Faculty();
        boolean boolean63 = rentAndReturnSystem10.rentAnItem((model.Item) cD13, (model.Client) faculty62);
        java.lang.String str64 = faculty62.faculty;
        database7.addClient((model.Client) faculty62);
        model.Login login66 = new model.Login(database7);
        model.SearchClient searchClient67 = model.SearchClient.makeSearchClient(database7);
        // The following exception was thrown during execution in test generation
        try {
            model.Client client69 = searchClient67.getClient("model.RegistrationFailedException: model.RentingNotAllowedException: hi!");
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"model.Database.getClientFilePath()\" because \"this.db\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(bookArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(cDArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(magazineArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(bookArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(cDArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(magazineArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(bookArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(cDArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(magazineArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(searchClient67);
    }

    @Test
    public void test1868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1868");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        java.util.Iterator<model.VirtualItem> virtualItemItor3 = studentOnlineResources2.iterator();
        model.VirtualItem virtualItem4 = null;
        java.lang.String str5 = studentOnlineResources2.readVirtualItem(virtualItem4);
        model.Client client6 = studentOnlineResources2.client;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = client6.allowedToBorrow();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"model.BorrowingManager.canRent()\" because \"this.borrowManager\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(virtualItemItor3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(client6);
    }

    @Test
    public void test1869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1869");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.BuySpecialItems buySpecialItems1 = new model.BuySpecialItems();
        model.PayDebit payDebit2 = new model.PayDebit();
        buySpecialItems1.paymentAPI = payDebit2;
        rentAndReturnSystem0.paymentAPI = payDebit2;
        model.BuySpecialItems buySpecialItems5 = new model.BuySpecialItems();
        model.Payment payment6 = null;
        buySpecialItems5.paymentAPI = payment6;
        model.Newsletter[] newsletterArray8 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList9 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList9, newsletterArray8);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager11 = new model.NewsletterSubscriptionManager(newsletterList9);
        model.Client client12 = newsletterSubscriptionManager11.client;
        model.PayCredit payCredit13 = new model.PayCredit();
        payCredit13.amountPay = 10;
        newsletterSubscriptionManager11.paymentAPI = payCredit13;
        buySpecialItems5.paymentAPI = payCredit13;
        payCredit13.amountPay = 7435442;
        rentAndReturnSystem0.paymentAPI = payCredit13;
        org.junit.Assert.assertNotNull(newsletterArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(client12);
    }

    @Test
    public void test1870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1870");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Visitor visitor4 = new model.Visitor();
        model.VirtualBook[] virtualBookArray5 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList6 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList6, virtualBookArray5);
        visitor4.virtualBooksAvailable = virtualBookList6;
        newsletterSubscriptionManager3.client = visitor4;
        java.lang.String str10 = visitor4.username;
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(virtualBookArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1871");
        model.VirtualItemContent virtualItemContent1 = new model.VirtualItemContent("src/Newsletter.csv");
        java.lang.String str2 = virtualItemContent1.link;
        java.lang.String str4 = virtualItemContent1.getContent("hi!");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "src/Newsletter.csv" + "'", str2, "src/Newsletter.csv");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "src/Newsletter.csv" + "'", str4, "src/Newsletter.csv");
    }

    @Test
    public void test1872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1872");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        model.Book book4 = null;
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        java.util.Collection<model.Book> bookCollection8 = null;
        model.Book book9 = null;
        model.CD cD10 = null;
        model.Magazine magazine11 = null;
        model.Book[] bookArray12 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList13 = new java.util.ArrayList<model.Book>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList13, bookArray12);
        model.CD[] cDArray15 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList16 = new java.util.ArrayList<model.CD>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList16, cDArray15);
        model.Magazine[] magazineArray18 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList19 = new java.util.ArrayList<model.Magazine>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList19, magazineArray18);
        model.ItemSearchResult itemSearchResult21 = new model.ItemSearchResult(book9, cD10, magazine11, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList16, (java.util.Collection<model.Magazine>) magazineList19);
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        itemSearchResult21.similarCD = cDList29;
        model.Book book36 = null;
        model.CD cD37 = null;
        model.Magazine magazine38 = null;
        model.Book[] bookArray39 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList40 = new java.util.ArrayList<model.Book>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList40, bookArray39);
        model.CD[] cDArray42 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList43 = new java.util.ArrayList<model.CD>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList43, cDArray42);
        model.Magazine[] magazineArray45 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList46 = new java.util.ArrayList<model.Magazine>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList46, magazineArray45);
        model.ItemSearchResult itemSearchResult48 = new model.ItemSearchResult(book36, cD37, magazine38, (java.util.Collection<model.Book>) bookList40, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList46);
        model.ItemSearchResult itemSearchResult49 = new model.ItemSearchResult(book4, cD6, magazine7, bookCollection8, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList46);
        cD6.ID = (short) 10;
        borrowingManager3.removeRentedItem((model.Item) cD6);
        int int53 = borrowingManager3.itemsBorrowedCount;
        model.Client client54 = borrowingManager3.client;
        borrowingManager3.itemsBorrowedCount = 7967658;
        borrowingManager3.amountOwned = '#';
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(bookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cDArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(magazineArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(bookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cDArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(magazineArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(client54);
    }

    @Test
    public void test1873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1873");
        model.SearchBorrowedItem searchBorrowedItem0 = model.SearchBorrowedItem.makeSearchBorrowedItem();
        searchBorrowedItem0.removeItem("src/Book.csv", "");
        model.Student student4 = new model.Student();
        int int5 = student4.ID;
        model.StudentOnlineResources studentOnlineResources6 = new model.StudentOnlineResources((model.Client) student4);
        model.VirtualBook virtualBook8 = studentOnlineResources6.searchAccessibleBook("");
        java.lang.String str9 = virtualBook8.location;
        int int10 = virtualBook8.ID;
        virtualBook8.isBookLost = false;
        model.RentedItem[] rentedItemArray14 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList15 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList15, rentedItemArray14);
        model.BorrowingManager borrowingManager17 = new model.BorrowingManager(rentedItemList15);
        model.Book book18 = null;
        model.CD cD20 = new model.CD("");
        model.Magazine magazine21 = null;
        java.util.Collection<model.Book> bookCollection22 = null;
        model.Book book23 = null;
        model.CD cD24 = null;
        model.Magazine magazine25 = null;
        model.Book[] bookArray26 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList27 = new java.util.ArrayList<model.Book>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList27, bookArray26);
        model.CD[] cDArray29 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList30 = new java.util.ArrayList<model.CD>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList30, cDArray29);
        model.Magazine[] magazineArray32 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList33 = new java.util.ArrayList<model.Magazine>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList33, magazineArray32);
        model.ItemSearchResult itemSearchResult35 = new model.ItemSearchResult(book23, cD24, magazine25, (java.util.Collection<model.Book>) bookList27, (java.util.Collection<model.CD>) cDList30, (java.util.Collection<model.Magazine>) magazineList33);
        model.Book book36 = null;
        model.CD cD37 = null;
        model.Magazine magazine38 = null;
        model.Book[] bookArray39 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList40 = new java.util.ArrayList<model.Book>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList40, bookArray39);
        model.CD[] cDArray42 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList43 = new java.util.ArrayList<model.CD>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList43, cDArray42);
        model.Magazine[] magazineArray45 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList46 = new java.util.ArrayList<model.Magazine>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList46, magazineArray45);
        model.ItemSearchResult itemSearchResult48 = new model.ItemSearchResult(book36, cD37, magazine38, (java.util.Collection<model.Book>) bookList40, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList46);
        itemSearchResult35.similarCD = cDList43;
        model.Book book50 = null;
        model.CD cD51 = null;
        model.Magazine magazine52 = null;
        model.Book[] bookArray53 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList54 = new java.util.ArrayList<model.Book>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList54, bookArray53);
        model.CD[] cDArray56 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList57 = new java.util.ArrayList<model.CD>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList57, cDArray56);
        model.Magazine[] magazineArray59 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList60 = new java.util.ArrayList<model.Magazine>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList60, magazineArray59);
        model.ItemSearchResult itemSearchResult62 = new model.ItemSearchResult(book50, cD51, magazine52, (java.util.Collection<model.Book>) bookList54, (java.util.Collection<model.CD>) cDList57, (java.util.Collection<model.Magazine>) magazineList60);
        model.ItemSearchResult itemSearchResult63 = new model.ItemSearchResult(book18, cD20, magazine21, bookCollection22, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList60);
        cD20.ID = (short) 10;
        borrowingManager17.removeRentedItem((model.Item) cD20);
        model.Client client67 = borrowingManager17.client;
        model.Visitor visitor68 = new model.Visitor();
        borrowingManager17.client = visitor68;
        searchBorrowedItem0.addPhyscialItem((model.Item) virtualBook8, "", (model.Client) visitor68);
        virtualBook8.showContent();
        virtualBook8.edition = 0;
        org.junit.Assert.assertNotNull(searchBorrowedItem0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(virtualBook8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(rentedItemArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(bookArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(cDArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(magazineArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(bookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cDArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(magazineArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(bookArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(cDArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(magazineArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(client67);
    }

    @Test
    public void test1874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1874");
        model.BuySpecialItems buySpecialItems0 = new model.BuySpecialItems();
        model.Payment payment1 = null;
        buySpecialItems0.paymentAPI = payment1;
        model.RequestForum requestForum3 = model.RequestForum.createRequestForum();
        model.LibraryManagementTeam libraryManagementTeam4 = new model.LibraryManagementTeam();
        int int5 = libraryManagementTeam4.ID;
        int int6 = libraryManagementTeam4.accessCode;
        model.Item item7 = null;
        libraryManagementTeam4.addAnItem(item7);
        requestForum3.managementTeam = libraryManagementTeam4;
        java.util.ArrayList<model.Item> itemList10 = libraryManagementTeam4.items;
        buySpecialItems0.purchasedItems = itemList10;
        model.Payment payment12 = buySpecialItems0.paymentAPI;
        model.PayDebit payDebit13 = new model.PayDebit();
        buySpecialItems0.paymentAPI = payDebit13;
        double double15 = payDebit13.amountPay;
        payDebit13.pay((double) '#');
        payDebit13.amountPay = 3173270;
        double double20 = payDebit13.amountPay;
        payDebit13.amountPay = 7150642;
        payDebit13.amountPay = 32;
        org.junit.Assert.assertNotNull(requestForum3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(itemList10);
        org.junit.Assert.assertNull(payment12);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 3173270.0d + "'", double20 == 3173270.0d);
    }

    @Test
    public void test1875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1875");
        model.BookOverDueNotif bookOverDueNotif0 = new model.BookOverDueNotif();
        java.lang.String str1 = bookOverDueNotif0.message;
        bookOverDueNotif0.message = "model.RegistrationFailedException: ";
        bookOverDueNotif0.message = "";
        bookOverDueNotif0.message = "src/CD.csv";
        bookOverDueNotif0.message = "model.RegistrationFailedException: src/Book.csv";
        bookOverDueNotif0.message = "model.RentingNotAllowedException: ";
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test1876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1876");
        model.ItemManagement itemManagement0 = new model.ItemManagement();
        model.Item item2 = itemManagement0.selectAnItemFromDatabase((int) (short) 0);
        model.Database database3 = model.Database.database;
        model.Student student4 = new model.Student();
        int int5 = student4.ID;
        model.StudentOnlineResources studentOnlineResources6 = new model.StudentOnlineResources((model.Client) student4);
        student4.ID = '#';
        database3.addClient((model.Client) student4);
        itemManagement0.database = database3;
        model.Database database11 = itemManagement0.database;
        model.Database database12 = itemManagement0.database;
        model.VirtualBook virtualBook14 = new model.VirtualBook("src/Magazine.csv");
        model.VirtualItemContent virtualItemContent16 = new model.VirtualItemContent("hi!");
        java.lang.String str17 = virtualItemContent16.link;
        java.lang.String str19 = virtualItemContent16.getContent("");
        java.lang.String str21 = virtualItemContent16.getContent("model.RegistrationFailedException: ");
        java.lang.String str22 = virtualItemContent16.link;
        java.lang.String str24 = virtualItemContent16.getContent("hi!");
        virtualBook14.content = virtualItemContent16;
        itemManagement0.enableAnItem((model.Item) virtualBook14);
        model.Database database27 = itemManagement0.database;
        org.junit.Assert.assertNull(item2);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(database27);
    }

    @Test
    public void test1877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1877");
        model.LoginFailedException loginFailedException1 = new model.LoginFailedException("model.LoginFailedException: hi!");
        java.lang.String str2 = loginFailedException1.message;
        model.RentingNotAllowedException rentingNotAllowedException4 = new model.RentingNotAllowedException("model.RegistrationFailedException: src/Magazine.csv");
        loginFailedException1.addSuppressed((java.lang.Throwable) rentingNotAllowedException4);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "model.LoginFailedException: hi!" + "'", str2, "model.LoginFailedException: hi!");
    }

    @Test
    public void test1878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1878");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.Visitor visitor5 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList6 = visitor5.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources7 = new model.StudentOnlineResources((model.Client) visitor5);
        model.RentedItem[] rentedItemArray8 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList9 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList9, rentedItemArray8);
        model.BorrowingManager borrowingManager11 = new model.BorrowingManager(rentedItemList9);
        model.Visitor visitor12 = new model.Visitor();
        visitor12.email = "hi!";
        borrowingManager11.client = visitor12;
        studentOnlineResources7.client = visitor12;
        model.UniProvidedNewsletter uniProvidedNewsletter17 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter17.title = "";
        java.lang.String str20 = studentOnlineResources7.readVirtualItem((model.VirtualItem) uniProvidedNewsletter17);
        newsletterSubscriptionManager3.cancelSubscription((model.Newsletter) uniProvidedNewsletter17);
        java.util.ArrayList<model.Newsletter> newsletterList22 = newsletterSubscriptionManager3.newsletterSubscribed;
        model.NewsletterSubscriptionManager newsletterSubscriptionManager23 = new model.NewsletterSubscriptionManager(newsletterList22);
        model.Newsletter[] newsletterArray24 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList25 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList25, newsletterArray24);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager27 = new model.NewsletterSubscriptionManager(newsletterList25);
        model.Client client28 = newsletterSubscriptionManager27.client;
        model.Student student29 = new model.Student();
        int int30 = student29.ID;
        model.StudentOnlineResources studentOnlineResources31 = new model.StudentOnlineResources((model.Client) student29);
        student29.ID = '#';
        java.lang.String str34 = student29.email;
        newsletterSubscriptionManager27.client = student29;
        model.Newsletter[] newsletterArray36 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList37 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList37, newsletterArray36);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager39 = new model.NewsletterSubscriptionManager(newsletterList37);
        newsletterSubscriptionManager27.newsletterSubscribed = newsletterList37;
        java.util.ArrayList<model.Newsletter> newsletterList41 = newsletterSubscriptionManager27.newsletterSubscribed;
        model.Newsletter[] newsletterArray42 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList43 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList43, newsletterArray42);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager45 = new model.NewsletterSubscriptionManager(newsletterList43);
        model.Client client46 = newsletterSubscriptionManager45.client;
        model.Student student47 = new model.Student();
        int int48 = student47.ID;
        model.StudentOnlineResources studentOnlineResources49 = new model.StudentOnlineResources((model.Client) student47);
        student47.ID = '#';
        java.lang.String str52 = student47.email;
        newsletterSubscriptionManager45.client = student47;
        model.Newsletter[] newsletterArray54 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList55 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList55, newsletterArray54);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager57 = new model.NewsletterSubscriptionManager(newsletterList55);
        newsletterSubscriptionManager45.newsletterSubscribed = newsletterList55;
        newsletterSubscriptionManager27.newsletterSubscribed = newsletterList55;
        model.NewsletterSubscriptionManager newsletterSubscriptionManager60 = new model.NewsletterSubscriptionManager(newsletterList55);
        model.Newsletter[] newsletterArray61 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList62 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList62, newsletterArray61);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager64 = new model.NewsletterSubscriptionManager(newsletterList62);
        model.Client client65 = newsletterSubscriptionManager64.client;
        model.PayCredit payCredit66 = new model.PayCredit();
        payCredit66.amountPay = 10;
        newsletterSubscriptionManager64.paymentAPI = payCredit66;
        payCredit66.amountPay = 1;
        payCredit66.amountPay = 20;
        double double74 = payCredit66.amountPay;
        newsletterSubscriptionManager60.paymentAPI = payCredit66;
        java.util.ArrayList<model.Newsletter> newsletterList76 = newsletterSubscriptionManager60.newsletterSubscribed;
        newsletterSubscriptionManager23.newsletterSubscribed = newsletterList76;
        java.util.ArrayList<model.Newsletter> newsletterList78 = newsletterSubscriptionManager23.newsletterSubscribed;
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertNull(virtualBookList6);
        org.junit.Assert.assertNotNull(rentedItemArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(newsletterList22);
        org.junit.Assert.assertNotNull(newsletterArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(client28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(newsletterArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(newsletterList41);
        org.junit.Assert.assertNotNull(newsletterArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(client46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(newsletterArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(newsletterArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(client65);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 20.0d + "'", double74 == 20.0d);
        org.junit.Assert.assertNotNull(newsletterList76);
        org.junit.Assert.assertNotNull(newsletterList78);
    }

    @Test
    public void test1879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1879");
        int int2 = model.SearchStrategy.calculateDistance("model.RegistrationFailedException: ", "src/BorrowedItems.csv");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 29 + "'", int2 == 29);
    }

    @Test
    public void test1880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1880");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.BorrowingManager borrowingManager3 = student0.borrowManager;
        student0.username = "hi!";
        model.BorrowingManager borrowingManager6 = null;
        student0.borrowManager = borrowingManager6;
        java.util.ArrayList<model.VirtualBook> virtualBookList8 = student0.virtualBooksAvailable;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(borrowingManager3);
        org.junit.Assert.assertNull(virtualBookList8);
    }

    @Test
    public void test1881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1881");
        model.PayCredit payCredit0 = new model.PayCredit();
        payCredit0.amountPay = 10;
        payCredit0.pay((double) (-1.0f));
        double double5 = payCredit0.amountPay;
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 9.0d + "'", double5 == 9.0d);
    }

    @Test
    public void test1882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1882");
        model.LibraryManagementTeam libraryManagementTeam0 = new model.LibraryManagementTeam();
        int int1 = libraryManagementTeam0.ID;
        int int2 = libraryManagementTeam0.accessCode;
        model.ItemManagement itemManagement3 = new model.ItemManagement();
        model.Database database4 = null;
        itemManagement3.database = database4;
        model.Student student6 = new model.Student();
        int int7 = student6.ID;
        model.StudentOnlineResources studentOnlineResources8 = new model.StudentOnlineResources((model.Client) student6);
        model.VirtualBook virtualBook10 = studentOnlineResources8.searchAccessibleBook("");
        itemManagement3.disableAnItem((model.Item) virtualBook10);
        libraryManagementTeam0.itemManagement = itemManagement3;
        model.Student student13 = new model.Student();
        int int14 = student13.ID;
        model.StudentOnlineResources studentOnlineResources15 = new model.StudentOnlineResources((model.Client) student13);
        model.VirtualBook virtualBook17 = studentOnlineResources15.searchAccessibleBook("");
        java.lang.String str18 = virtualBook17.location;
        java.lang.String str19 = virtualBook17.title;
        java.lang.String str20 = virtualBook17.author;
        itemManagement3.enableAnItem((model.Item) virtualBook17);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(virtualBook10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(virtualBook17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test1883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1883");
        model.LoginFailedException loginFailedException1 = new model.LoginFailedException("src/Magazine.csv");
        java.lang.Throwable[] throwableArray2 = loginFailedException1.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray2);
    }

    @Test
    public void test1884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1884");
        model.LibraryManagementTeam libraryManagementTeam0 = new model.LibraryManagementTeam();
        libraryManagementTeam0.accessCode = (short) 10;
        model.Student student3 = new model.Student();
        int int4 = student3.ID;
        model.StudentOnlineResources studentOnlineResources5 = new model.StudentOnlineResources((model.Client) student3);
        model.VirtualBook virtualBook7 = studentOnlineResources5.searchAccessibleBook("");
        model.CD cD9 = new model.CD("");
        model.Magazine magazine10 = null;
        model.Book book11 = null;
        model.CD cD12 = null;
        model.Magazine magazine13 = null;
        model.Book[] bookArray14 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList15 = new java.util.ArrayList<model.Book>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList15, bookArray14);
        model.CD[] cDArray17 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList18 = new java.util.ArrayList<model.CD>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList18, cDArray17);
        model.Magazine[] magazineArray20 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList21 = new java.util.ArrayList<model.Magazine>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList21, magazineArray20);
        model.ItemSearchResult itemSearchResult23 = new model.ItemSearchResult(book11, cD12, magazine13, (java.util.Collection<model.Book>) bookList15, (java.util.Collection<model.CD>) cDList18, (java.util.Collection<model.Magazine>) magazineList21);
        model.Book book24 = null;
        model.CD cD25 = null;
        model.Magazine magazine26 = null;
        model.Book[] bookArray27 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList28 = new java.util.ArrayList<model.Book>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList28, bookArray27);
        model.CD[] cDArray30 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList31 = new java.util.ArrayList<model.CD>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList31, cDArray30);
        model.Magazine[] magazineArray33 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList34 = new java.util.ArrayList<model.Magazine>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList34, magazineArray33);
        model.ItemSearchResult itemSearchResult36 = new model.ItemSearchResult(book24, cD25, magazine26, (java.util.Collection<model.Book>) bookList28, (java.util.Collection<model.CD>) cDList31, (java.util.Collection<model.Magazine>) magazineList34);
        model.CD[] cDArray37 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList38 = new java.util.ArrayList<model.CD>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList38, cDArray37);
        itemSearchResult36.similarCD = cDList38;
        model.Book book41 = null;
        model.CD cD42 = null;
        model.Magazine magazine43 = null;
        model.Book[] bookArray44 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList45 = new java.util.ArrayList<model.Book>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList45, bookArray44);
        model.CD[] cDArray47 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList48 = new java.util.ArrayList<model.CD>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList48, cDArray47);
        model.Magazine[] magazineArray50 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList51 = new java.util.ArrayList<model.Magazine>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList51, magazineArray50);
        model.ItemSearchResult itemSearchResult53 = new model.ItemSearchResult(book41, cD42, magazine43, (java.util.Collection<model.Book>) bookList45, (java.util.Collection<model.CD>) cDList48, (java.util.Collection<model.Magazine>) magazineList51);
        model.ItemSearchResult itemSearchResult54 = new model.ItemSearchResult((model.Book) virtualBook7, cD9, magazine10, (java.util.Collection<model.Book>) bookList15, (java.util.Collection<model.CD>) cDList38, (java.util.Collection<model.Magazine>) magazineList51);
        virtualBook7.ID = (short) 10;
        int int57 = virtualBook7.ID;
        virtualBook7.showContent();
        virtualBook7.publisher = "src/Book.csv";
        model.VirtualItemContent virtualItemContent61 = virtualBook7.content;
        java.lang.String str62 = virtualBook7.author;
        java.lang.String str63 = virtualBook7.author;
        libraryManagementTeam0.disableAnItem((model.Item) virtualBook7);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(virtualBook7);
        org.junit.Assert.assertNotNull(bookArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(cDArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(magazineArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(bookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(cDArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(magazineArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(cDArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(bookArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(cDArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(magazineArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNull(virtualItemContent61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(str63);
    }

    @Test
    public void test1885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1885");
        model.ItemManagement itemManagement0 = new model.ItemManagement();
        model.Database database1 = null;
        itemManagement0.database = database1;
        model.BuySpecialItems buySpecialItems3 = new model.BuySpecialItems();
        model.Book book4 = null;
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        java.util.Collection<model.Book> bookCollection8 = null;
        model.Book book9 = null;
        model.CD cD10 = null;
        model.Magazine magazine11 = null;
        model.Book[] bookArray12 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList13 = new java.util.ArrayList<model.Book>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList13, bookArray12);
        model.CD[] cDArray15 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList16 = new java.util.ArrayList<model.CD>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList16, cDArray15);
        model.Magazine[] magazineArray18 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList19 = new java.util.ArrayList<model.Magazine>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList19, magazineArray18);
        model.ItemSearchResult itemSearchResult21 = new model.ItemSearchResult(book9, cD10, magazine11, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList16, (java.util.Collection<model.Magazine>) magazineList19);
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        itemSearchResult21.similarCD = cDList29;
        model.Book book36 = null;
        model.CD cD37 = null;
        model.Magazine magazine38 = null;
        model.Book[] bookArray39 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList40 = new java.util.ArrayList<model.Book>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList40, bookArray39);
        model.CD[] cDArray42 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList43 = new java.util.ArrayList<model.CD>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList43, cDArray42);
        model.Magazine[] magazineArray45 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList46 = new java.util.ArrayList<model.Magazine>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList46, magazineArray45);
        model.ItemSearchResult itemSearchResult48 = new model.ItemSearchResult(book36, cD37, magazine38, (java.util.Collection<model.Book>) bookList40, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList46);
        model.ItemSearchResult itemSearchResult49 = new model.ItemSearchResult(book4, cD6, magazine7, bookCollection8, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList46);
        cD6.ID = (short) 10;
        boolean boolean53 = buySpecialItems3.buyAnItem((model.Item) cD6, (double) 0);
        itemManagement0.enableAnItem((model.Item) cD6);
        model.Database database62 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str63 = database62.getVirtualBookFilePath();
        model.Database.database = database62;
        java.lang.String str65 = database62.virtualItemFilePath;
        itemManagement0.database = database62;
        model.Register register67 = model.Register.makeRegister(database62);
        model.Database database75 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str76 = database75.getVirtualBookFilePath();
        model.Database.database = database75;
        java.lang.String str78 = database75.virtualItemFilePath;
        model.Login login79 = model.Login.makeLogin(database75);
        model.Database database87 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        model.SearchClient searchClient88 = model.SearchClient.makeSearchClient(database87);
        login79.db = database87;
        model.Client client91 = database87.getClient("");
        model.Register register92 = model.Register.makeRegister(database87);
        register67.database = database87;
        java.lang.String str94 = database87.getVirtualBookFilePath();
        org.junit.Assert.assertNotNull(bookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cDArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(magazineArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(bookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cDArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(magazineArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(database62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "src/VirtualBook.csv" + "'", str63, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "model.RegistrationFailedException: " + "'", str65, "model.RegistrationFailedException: ");
        org.junit.Assert.assertNotNull(register67);
        org.junit.Assert.assertNotNull(database75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "src/VirtualBook.csv" + "'", str76, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "model.RegistrationFailedException: " + "'", str78, "model.RegistrationFailedException: ");
        org.junit.Assert.assertNotNull(login79);
        org.junit.Assert.assertNotNull(database87);
        org.junit.Assert.assertNotNull(searchClient88);
        org.junit.Assert.assertNotNull(client91);
        org.junit.Assert.assertNotNull(register92);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "src/VirtualBook.csv" + "'", str94, "src/VirtualBook.csv");
    }

    @Test
    public void test1886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1886");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        virtualBook4.ISBN = "hi!";
        int int55 = virtualBook4.ID;
        model.VirtualItemContent virtualItemContent57 = new model.VirtualItemContent("hi!");
        virtualBook4.content = virtualItemContent57;
        java.lang.String str59 = virtualBook4.ISBN;
        model.Student student60 = new model.Student();
        student60.viewMyOnlineResource();
        boolean boolean62 = virtualBook4.equals((java.lang.Object) student60);
        virtualBook4.showContent();
        virtualBook4.ID = 7150642;
        model.Student student66 = new model.Student();
        int int67 = student66.ID;
        model.StudentOnlineResources studentOnlineResources68 = new model.StudentOnlineResources((model.Client) student66);
        java.util.Iterator<model.VirtualItem> virtualItemItor69 = studentOnlineResources68.iterator();
        model.VirtualBook virtualBook71 = studentOnlineResources68.searchAccessibleBook("model.RegistrationFailedException: src/Magazine.csv");
        model.VirtualItemContent virtualItemContent73 = new model.VirtualItemContent("hi!");
        java.lang.String str74 = virtualItemContent73.link;
        java.lang.String str76 = virtualItemContent73.getContent("");
        java.lang.String str78 = virtualItemContent73.getContent("hi!");
        java.lang.String str79 = virtualItemContent73.link;
        virtualBook71.content = virtualItemContent73;
        virtualBook4.content = virtualItemContent73;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNull(virtualItemItor69);
        org.junit.Assert.assertNotNull(virtualBook71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
    }

    @Test
    public void test1887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1887");
        model.ItemManagement itemManagement0 = new model.ItemManagement();
        model.Database database1 = null;
        itemManagement0.database = database1;
        model.BuySpecialItems buySpecialItems3 = new model.BuySpecialItems();
        model.Book book4 = null;
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        java.util.Collection<model.Book> bookCollection8 = null;
        model.Book book9 = null;
        model.CD cD10 = null;
        model.Magazine magazine11 = null;
        model.Book[] bookArray12 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList13 = new java.util.ArrayList<model.Book>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList13, bookArray12);
        model.CD[] cDArray15 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList16 = new java.util.ArrayList<model.CD>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList16, cDArray15);
        model.Magazine[] magazineArray18 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList19 = new java.util.ArrayList<model.Magazine>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList19, magazineArray18);
        model.ItemSearchResult itemSearchResult21 = new model.ItemSearchResult(book9, cD10, magazine11, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList16, (java.util.Collection<model.Magazine>) magazineList19);
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        itemSearchResult21.similarCD = cDList29;
        model.Book book36 = null;
        model.CD cD37 = null;
        model.Magazine magazine38 = null;
        model.Book[] bookArray39 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList40 = new java.util.ArrayList<model.Book>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList40, bookArray39);
        model.CD[] cDArray42 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList43 = new java.util.ArrayList<model.CD>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList43, cDArray42);
        model.Magazine[] magazineArray45 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList46 = new java.util.ArrayList<model.Magazine>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList46, magazineArray45);
        model.ItemSearchResult itemSearchResult48 = new model.ItemSearchResult(book36, cD37, magazine38, (java.util.Collection<model.Book>) bookList40, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList46);
        model.ItemSearchResult itemSearchResult49 = new model.ItemSearchResult(book4, cD6, magazine7, bookCollection8, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList46);
        cD6.ID = (short) 10;
        boolean boolean53 = buySpecialItems3.buyAnItem((model.Item) cD6, (double) 0);
        itemManagement0.enableAnItem((model.Item) cD6);
        model.RentedItem[] rentedItemArray55 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList56 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList56, rentedItemArray55);
        model.BorrowingManager borrowingManager58 = new model.BorrowingManager(rentedItemList56);
        model.RentedItem[] rentedItemArray59 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList60 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList60, rentedItemArray59);
        model.BorrowingManager borrowingManager62 = new model.BorrowingManager(rentedItemList60);
        model.RentedItem[] rentedItemArray63 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList64 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList64, rentedItemArray63);
        model.BorrowingManager borrowingManager66 = new model.BorrowingManager(rentedItemList64);
        borrowingManager62.physicalItemBorrowed = rentedItemList64;
        borrowingManager58.physicalItemBorrowed = rentedItemList64;
        model.Visitor visitor69 = new model.Visitor();
        model.VirtualBook[] virtualBookArray70 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList71 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList71, virtualBookArray70);
        visitor69.virtualBooksAvailable = virtualBookList71;
        borrowingManager58.client = visitor69;
        model.Faculty faculty75 = new model.Faculty();
        java.lang.String str76 = faculty75.faculty;
        borrowingManager58.client = faculty75;
        int int78 = borrowingManager58.itemsBorrowedCount;
        int int79 = borrowingManager58.itemsBorrowedCount;
        model.Student student80 = new model.Student();
        int int81 = student80.ID;
        model.StudentOnlineResources studentOnlineResources82 = new model.StudentOnlineResources((model.Client) student80);
        model.VirtualBook virtualBook84 = studentOnlineResources82.searchAccessibleBook("");
        borrowingManager58.removeRentedItem((model.Item) virtualBook84);
        itemManagement0.disableAnItem((model.Item) virtualBook84);
        model.Student student87 = new model.Student();
        int int88 = student87.ID;
        model.StudentOnlineResources studentOnlineResources89 = new model.StudentOnlineResources((model.Client) student87);
        model.VirtualBook virtualBook91 = studentOnlineResources89.searchAccessibleBook("");
        java.lang.String str92 = virtualBook91.location;
        int int93 = virtualBook91.ID;
        virtualBook91.isBookLost = false;
        java.lang.String str96 = virtualBook91.author;
        int int97 = virtualBook91.copiesAvailable;
        boolean boolean98 = virtualBook84.equals((java.lang.Object) int97);
        org.junit.Assert.assertNotNull(bookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cDArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(magazineArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(bookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cDArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(magazineArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(rentedItemArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(rentedItemArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(rentedItemArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(virtualBookArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(virtualBook84);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNotNull(virtualBook91);
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertNull(str96);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 20 + "'", int97 == 20);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test1888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1888");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.UniProvidedNewsletter uniProvidedNewsletter5 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter5.title = "";
        java.lang.String str8 = uniProvidedNewsletter5.title;
        newsletterSubscriptionManager3.subscribeToUniProvidedNewsletter(uniProvidedNewsletter5, "");
        java.util.ArrayList<model.Newsletter> newsletterList11 = newsletterSubscriptionManager3.newsletterSubscribed;
        model.Visitor visitor12 = new model.Visitor();
        visitor12.email = "hi!";
        newsletterSubscriptionManager3.client = visitor12;
        model.StudentOnlineResources studentOnlineResources16 = new model.StudentOnlineResources((model.Client) visitor12);
        model.Newsletter newsletter18 = studentOnlineResources16.searchSubscribedNewsletter("src/VirtualBook.csv");
        model.Request request19 = new model.Request();
        java.lang.String str20 = request19.type;
        model.Database database28 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database28;
        model.SearchVirtualItem searchVirtualItem30 = new model.SearchVirtualItem(database28);
        model.RentAndReturnSystem rentAndReturnSystem31 = new model.RentAndReturnSystem();
        model.Book book32 = null;
        model.CD cD34 = new model.CD("");
        model.Magazine magazine35 = null;
        java.util.Collection<model.Book> bookCollection36 = null;
        model.Book book37 = null;
        model.CD cD38 = null;
        model.Magazine magazine39 = null;
        model.Book[] bookArray40 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList41 = new java.util.ArrayList<model.Book>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList41, bookArray40);
        model.CD[] cDArray43 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList44 = new java.util.ArrayList<model.CD>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList44, cDArray43);
        model.Magazine[] magazineArray46 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList47 = new java.util.ArrayList<model.Magazine>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList47, magazineArray46);
        model.ItemSearchResult itemSearchResult49 = new model.ItemSearchResult(book37, cD38, magazine39, (java.util.Collection<model.Book>) bookList41, (java.util.Collection<model.CD>) cDList44, (java.util.Collection<model.Magazine>) magazineList47);
        model.Book book50 = null;
        model.CD cD51 = null;
        model.Magazine magazine52 = null;
        model.Book[] bookArray53 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList54 = new java.util.ArrayList<model.Book>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList54, bookArray53);
        model.CD[] cDArray56 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList57 = new java.util.ArrayList<model.CD>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList57, cDArray56);
        model.Magazine[] magazineArray59 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList60 = new java.util.ArrayList<model.Magazine>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList60, magazineArray59);
        model.ItemSearchResult itemSearchResult62 = new model.ItemSearchResult(book50, cD51, magazine52, (java.util.Collection<model.Book>) bookList54, (java.util.Collection<model.CD>) cDList57, (java.util.Collection<model.Magazine>) magazineList60);
        itemSearchResult49.similarCD = cDList57;
        model.Book book64 = null;
        model.CD cD65 = null;
        model.Magazine magazine66 = null;
        model.Book[] bookArray67 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList68 = new java.util.ArrayList<model.Book>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList68, bookArray67);
        model.CD[] cDArray70 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList71 = new java.util.ArrayList<model.CD>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList71, cDArray70);
        model.Magazine[] magazineArray73 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList74 = new java.util.ArrayList<model.Magazine>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList74, magazineArray73);
        model.ItemSearchResult itemSearchResult76 = new model.ItemSearchResult(book64, cD65, magazine66, (java.util.Collection<model.Book>) bookList68, (java.util.Collection<model.CD>) cDList71, (java.util.Collection<model.Magazine>) magazineList74);
        model.ItemSearchResult itemSearchResult77 = new model.ItemSearchResult(book32, cD34, magazine35, bookCollection36, (java.util.Collection<model.CD>) cDList57, (java.util.Collection<model.Magazine>) magazineList74);
        cD34.ID = (short) 10;
        cD34.canBePurchased = false;
        boolean boolean82 = cD34.canBePurchased;
        model.Faculty faculty83 = new model.Faculty();
        boolean boolean84 = rentAndReturnSystem31.rentAnItem((model.Item) cD34, (model.Client) faculty83);
        java.lang.String str85 = faculty83.faculty;
        database28.addClient((model.Client) faculty83);
        request19.requestee = faculty83;
        model.NewsletterSubscriptionManager newsletterSubscriptionManager88 = faculty83.newsletterManager;
        faculty83.email = "";
        studentOnlineResources16.client = faculty83;
        model.VirtualBook virtualBook93 = studentOnlineResources16.searchAccessibleBook("model.LoginFailedException: hi!");
        model.Newsletter newsletter95 = studentOnlineResources16.searchSubscribedNewsletter("model.RentingNotAllowedException: ");
        model.Newsletter newsletter97 = studentOnlineResources16.searchSubscribedNewsletter("model.RegistrationFailedException: src/Book.csv");
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(newsletterList11);
        org.junit.Assert.assertNull(newsletter18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(bookArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(cDArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(magazineArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(bookArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(cDArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(magazineArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(bookArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(cDArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(magazineArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNull(newsletterSubscriptionManager88);
        org.junit.Assert.assertNotNull(virtualBook93);
        org.junit.Assert.assertNull(newsletter95);
        org.junit.Assert.assertNull(newsletter97);
    }

    @Test
    public void test1889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1889");
        model.LoginFailedException loginFailedException1 = new model.LoginFailedException("model.RegistrationFailedException: src/Book.csv");
        model.RentingNotAllowedException rentingNotAllowedException3 = new model.RentingNotAllowedException("hi!");
        java.lang.String str4 = rentingNotAllowedException3.message;
        model.RegistrationFailedException registrationFailedException6 = new model.RegistrationFailedException("");
        rentingNotAllowedException3.addSuppressed((java.lang.Throwable) registrationFailedException6);
        loginFailedException1.addSuppressed((java.lang.Throwable) registrationFailedException6);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
    }

    @Test
    public void test1890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1890");
        model.Course course0 = new model.Course();
        java.lang.String str1 = course0.subject;
        course0.subject = "";
        int int4 = course0.year;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test1891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1891");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.VirtualItemContent virtualItemContent5 = virtualBook4.content;
        model.Student student6 = new model.Student();
        int int7 = student6.ID;
        model.StudentOnlineResources studentOnlineResources8 = new model.StudentOnlineResources((model.Client) student6);
        model.VirtualBook virtualBook10 = studentOnlineResources8.searchAccessibleBook("");
        model.CD cD12 = new model.CD("");
        model.Magazine magazine13 = null;
        model.Book book14 = null;
        model.CD cD15 = null;
        model.Magazine magazine16 = null;
        model.Book[] bookArray17 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList18 = new java.util.ArrayList<model.Book>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList18, bookArray17);
        model.CD[] cDArray20 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList21 = new java.util.ArrayList<model.CD>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList21, cDArray20);
        model.Magazine[] magazineArray23 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList24 = new java.util.ArrayList<model.Magazine>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList24, magazineArray23);
        model.ItemSearchResult itemSearchResult26 = new model.ItemSearchResult(book14, cD15, magazine16, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList21, (java.util.Collection<model.Magazine>) magazineList24);
        model.Book book27 = null;
        model.CD cD28 = null;
        model.Magazine magazine29 = null;
        model.Book[] bookArray30 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList31 = new java.util.ArrayList<model.Book>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList31, bookArray30);
        model.CD[] cDArray33 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList34 = new java.util.ArrayList<model.CD>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList34, cDArray33);
        model.Magazine[] magazineArray36 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList37 = new java.util.ArrayList<model.Magazine>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList37, magazineArray36);
        model.ItemSearchResult itemSearchResult39 = new model.ItemSearchResult(book27, cD28, magazine29, (java.util.Collection<model.Book>) bookList31, (java.util.Collection<model.CD>) cDList34, (java.util.Collection<model.Magazine>) magazineList37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        itemSearchResult39.similarCD = cDList41;
        model.Book book44 = null;
        model.CD cD45 = null;
        model.Magazine magazine46 = null;
        model.Book[] bookArray47 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList48 = new java.util.ArrayList<model.Book>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList48, bookArray47);
        model.CD[] cDArray50 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList51 = new java.util.ArrayList<model.CD>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList51, cDArray50);
        model.Magazine[] magazineArray53 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList54 = new java.util.ArrayList<model.Magazine>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList54, magazineArray53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult(book44, cD45, magazine46, (java.util.Collection<model.Book>) bookList48, (java.util.Collection<model.CD>) cDList51, (java.util.Collection<model.Magazine>) magazineList54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult((model.Book) virtualBook10, cD12, magazine13, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList54);
        int int58 = virtualBook10.ID;
        int int59 = virtualBook10.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter60 = null;
        model.PaidNewsletter paidNewsletter61 = null;
        model.VirtualItemSearchResult virtualItemSearchResult62 = new model.VirtualItemSearchResult(virtualBook10, uniProvidedNewsletter60, paidNewsletter61);
        model.PaidNewsletter paidNewsletter63 = virtualItemSearchResult62.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter64 = new model.UniProvidedNewsletter();
        virtualItemSearchResult62.setUniNewsletter(uniProvidedNewsletter64);
        java.lang.String str66 = uniProvidedNewsletter64.title;
        model.PaidNewsletter paidNewsletter67 = null;
        model.VirtualItemSearchResult virtualItemSearchResult68 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter64, paidNewsletter67);
        model.VirtualBook virtualBook69 = virtualItemSearchResult68.virtualBook;
        model.PaidNewsletter paidNewsletter70 = new model.PaidNewsletter();
        virtualItemSearchResult68.setPaidNewsletter(paidNewsletter70);
        paidNewsletter70.subscriptionPrice = 'a';
        paidNewsletter70.subscriptionPrice = 0.0d;
        paidNewsletter70.cost = 40;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNull(virtualItemContent5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(virtualBook10);
        org.junit.Assert.assertNotNull(bookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(cDArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(magazineArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(bookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(magazineArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(bookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(cDArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(magazineArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 20 + "'", int59 == 20);
        org.junit.Assert.assertNull(paidNewsletter63);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(virtualBook69);
    }

    @Test
    public void test1892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1892");
        model.Database database0 = null;
        model.Register register1 = model.Register.makeRegister(database0);
        model.Faculty faculty2 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection3 = faculty2.courses;
        boolean boolean6 = register1.registerAsStaff((model.Staff) faculty2, "src/Book.csv", "src/Book.csv");
        model.Database database7 = model.Database.database;
        model.Student student8 = new model.Student();
        int int9 = student8.ID;
        model.StudentOnlineResources studentOnlineResources10 = new model.StudentOnlineResources((model.Client) student8);
        student8.ID = '#';
        database7.addClient((model.Client) student8);
        student8.email = "hi!";
        boolean boolean18 = register1.registerAsStaff((model.Staff) student8, "src/CD.csv", "src/Book.csv");
        model.Database database26 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str27 = database26.getVirtualBookFilePath();
        register1.database = database26;
        model.Database database36 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str37 = database36.getVirtualBookFilePath();
        model.Database.database = database36;
        register1.database = database36;
        model.SearchItems searchItems40 = new model.SearchItems(database36);
        java.lang.String str41 = database36.getCDFilePath();
        java.lang.String str42 = database36.getVirtualBookFilePath();
        int int43 = database36.getRandomID();
        org.junit.Assert.assertNotNull(register1);
        org.junit.Assert.assertNull(courseCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "src/VirtualBook.csv" + "'", str27, "src/VirtualBook.csv");
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "src/VirtualBook.csv" + "'", str37, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "src/CD.csv" + "'", str41, "src/CD.csv");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "src/VirtualBook.csv" + "'", str42, "src/VirtualBook.csv");
// flaky:         org.junit.Assert.assertTrue("'" + int43 + "' != '" + 8462301 + "'", int43 == 8462301);
    }

    @Test
    public void test1893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1893");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.Student student5 = new model.Student();
        int int6 = student5.ID;
        model.StudentOnlineResources studentOnlineResources7 = new model.StudentOnlineResources((model.Client) student5);
        student5.ID = '#';
        java.lang.String str10 = student5.email;
        newsletterSubscriptionManager3.client = student5;
        model.Newsletter[] newsletterArray12 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList13 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList13, newsletterArray12);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager15 = new model.NewsletterSubscriptionManager(newsletterList13);
        newsletterSubscriptionManager3.newsletterSubscribed = newsletterList13;
        java.util.ArrayList<model.Newsletter> newsletterList17 = newsletterSubscriptionManager3.newsletterSubscribed;
        model.Newsletter[] newsletterArray18 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList19 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList19, newsletterArray18);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager21 = new model.NewsletterSubscriptionManager(newsletterList19);
        model.Client client22 = newsletterSubscriptionManager21.client;
        model.Student student23 = new model.Student();
        int int24 = student23.ID;
        model.StudentOnlineResources studentOnlineResources25 = new model.StudentOnlineResources((model.Client) student23);
        student23.ID = '#';
        java.lang.String str28 = student23.email;
        newsletterSubscriptionManager21.client = student23;
        model.Newsletter[] newsletterArray30 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList31 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList31, newsletterArray30);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager33 = new model.NewsletterSubscriptionManager(newsletterList31);
        newsletterSubscriptionManager21.newsletterSubscribed = newsletterList31;
        newsletterSubscriptionManager3.newsletterSubscribed = newsletterList31;
        model.NewsletterSubscriptionManager newsletterSubscriptionManager36 = new model.NewsletterSubscriptionManager(newsletterList31);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager37 = new model.NewsletterSubscriptionManager(newsletterList31);
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(newsletterArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(newsletterList17);
        org.junit.Assert.assertNotNull(newsletterArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(client22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(newsletterArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test1894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1894");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.Payment payment1 = rentAndReturnSystem0.paymentAPI;
        model.PayMobileWallet payMobileWallet2 = new model.PayMobileWallet();
        payMobileWallet2.amountPay = 100.0f;
        payMobileWallet2.pay((double) 100L);
        rentAndReturnSystem0.paymentAPI = payMobileWallet2;
        model.PayCredit payCredit8 = new model.PayCredit();
        payCredit8.amountPay = 10;
        rentAndReturnSystem0.paymentAPI = payCredit8;
        model.RentAndReturnSystem rentAndReturnSystem12 = new model.RentAndReturnSystem();
        model.Payment payment13 = rentAndReturnSystem12.paymentAPI;
        model.PayMobileWallet payMobileWallet14 = new model.PayMobileWallet();
        payMobileWallet14.amountPay = 100.0f;
        payMobileWallet14.amountPay = (byte) -1;
        rentAndReturnSystem12.paymentAPI = payMobileWallet14;
        payMobileWallet14.amountPay = 0.0d;
        payMobileWallet14.amountPay = 1;
        rentAndReturnSystem0.paymentAPI = payMobileWallet14;
        model.Payment payment25 = rentAndReturnSystem0.paymentAPI;
        org.junit.Assert.assertNull(payment1);
        org.junit.Assert.assertNull(payment13);
        org.junit.Assert.assertNotNull(payment25);
    }

    @Test
    public void test1895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1895");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.Client client5 = newsletterSubscriptionManager3.client;
        model.PayCredit payCredit6 = new model.PayCredit();
        payCredit6.pay((double) (short) 100);
        payCredit6.amountPay = ' ';
        double double11 = payCredit6.amountPay;
        payCredit6.pay((double) 12);
        double double14 = payCredit6.amountPay;
        newsletterSubscriptionManager3.paymentAPI = payCredit6;
        model.PaidNewsletter paidNewsletter16 = null;
        newsletterSubscriptionManager3.subscribeToPaidNewsletter(paidNewsletter16, "src/VirtualBook.csv");
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertNull(client5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 32.0d + "'", double11 == 32.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 44.0d + "'", double14 == 44.0d);
    }

    @Test
    public void test1896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1896");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        model.Client client9 = database7.getClient("");
        java.lang.String str10 = database7.getClientFilePath();
        boolean boolean12 = database7.addItem("src/Book.csv");
        model.Register register13 = model.Register.makeRegister(database7);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(client9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "src/Client.csv" + "'", str10, "src/Client.csv");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(register13);
    }

    @Test
    public void test1897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1897");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        model.RentedItem[] rentedItemArray4 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList5 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList5, rentedItemArray4);
        model.BorrowingManager borrowingManager7 = new model.BorrowingManager(rentedItemList5);
        borrowingManager3.physicalItemBorrowed = rentedItemList5;
        borrowingManager3.amountOwned = 100.0f;
        model.Database database11 = null;
        model.Register register12 = model.Register.makeRegister(database11);
        model.Faculty faculty13 = new model.Faculty();
        faculty13.username = "hi!";
        java.util.Collection<model.Course> courseCollection16 = null;
        faculty13.courses = courseCollection16;
        java.util.Collection<model.Course> courseCollection18 = faculty13.courses;
        model.Newsletter[] newsletterArray19 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList20 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList20, newsletterArray19);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager22 = new model.NewsletterSubscriptionManager(newsletterList20);
        model.Client client23 = newsletterSubscriptionManager22.client;
        model.Student student24 = new model.Student();
        int int25 = student24.ID;
        model.StudentOnlineResources studentOnlineResources26 = new model.StudentOnlineResources((model.Client) student24);
        student24.ID = '#';
        java.lang.String str29 = student24.email;
        newsletterSubscriptionManager22.client = student24;
        model.Newsletter[] newsletterArray31 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList32 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList32, newsletterArray31);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager34 = new model.NewsletterSubscriptionManager(newsletterList32);
        newsletterSubscriptionManager22.newsletterSubscribed = newsletterList32;
        faculty13.newsletterManager = newsletterSubscriptionManager22;
        model.Newsletter[] newsletterArray37 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList38 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList38, newsletterArray37);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager40 = new model.NewsletterSubscriptionManager(newsletterList38);
        model.Client client41 = newsletterSubscriptionManager40.client;
        model.Student student42 = new model.Student();
        int int43 = student42.ID;
        model.StudentOnlineResources studentOnlineResources44 = new model.StudentOnlineResources((model.Client) student42);
        student42.ID = '#';
        java.lang.String str47 = student42.email;
        newsletterSubscriptionManager40.client = student42;
        student42.ID = (short) 1;
        newsletterSubscriptionManager22.client = student42;
        int int52 = student42.ID;
        java.lang.String str53 = student42.username;
        boolean boolean56 = register12.registerAsStaff((model.Staff) student42, "src/BorrowedItems.csv", "model.RegistrationFailedException: model.RentingNotAllowedException: hi!");
        model.Database database57 = null;
        model.Register register58 = model.Register.makeRegister(database57);
        model.Faculty faculty59 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection60 = faculty59.courses;
        boolean boolean63 = register58.registerAsStaff((model.Staff) faculty59, "src/Book.csv", "src/Book.csv");
        model.Database database64 = register58.database;
        model.ValidateRegistration validateRegistration65 = new model.ValidateRegistration();
        model.Student student66 = new model.Student();
        student66.viewMyOnlineResource();
        boolean boolean68 = validateRegistration65.validateStaffRegistration((model.Staff) student66);
        model.Faculty faculty69 = new model.Faculty();
        boolean boolean70 = validateRegistration65.validateStaffRegistration((model.Staff) faculty69);
        boolean boolean73 = register58.registerAsStaff((model.Staff) faculty69, "src/Book.csv", "model.RegistrationFailedException: ");
        model.Faculty faculty74 = new model.Faculty();
        faculty74.username = "hi!";
        java.util.Collection<model.Course> courseCollection77 = null;
        faculty74.courses = courseCollection77;
        boolean boolean81 = register58.registerAsStaff((model.Staff) faculty74, "", "src/Magazine.csv");
        boolean boolean84 = register12.registerAsStaff((model.Staff) faculty74, "src/Client.csv", "model.RentingNotAllowedException: ");
        borrowingManager3.client = faculty74;
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(rentedItemArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(register12);
        org.junit.Assert.assertNull(courseCollection18);
        org.junit.Assert.assertNotNull(newsletterArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(client23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(newsletterArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(newsletterArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(client41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(register58);
        org.junit.Assert.assertNull(courseCollection60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(database64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test1898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1898");
        model.Database database7 = model.Database.createDatabase("src/Client.csv", "src/CD.csv", "model.RegistrationFailedException: src/Magazine.csv", "src/Magazine.csv", "", "model.RegistrationFailedException: src/Magazine.csv", "src/VirtualBook.csv");
        model.SearchItems searchItems8 = new model.SearchItems(database7);
        java.util.Collection<model.Book> bookCollection10 = searchItems8.getSimilarBooks("model.RentingNotAllowedException: ");
        model.Book book12 = searchItems8.getBook("model.RegistrationFailedException: src/Book.csv");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(bookCollection10);
        org.junit.Assert.assertNull(book12);
    }

    @Test
    public void test1899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1899");
        model.BuySpecialItems buySpecialItems0 = new model.BuySpecialItems();
        model.Payment payment1 = null;
        buySpecialItems0.paymentAPI = payment1;
        model.PayMobileWallet payMobileWallet3 = new model.PayMobileWallet();
        buySpecialItems0.paymentAPI = payMobileWallet3;
        payMobileWallet3.amountPay = (-1L);
        double double7 = payMobileWallet3.amountPay;
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-1.0d) + "'", double7 == (-1.0d));
    }

    @Test
    public void test1900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1900");
        model.UniProvidedNewsletter uniProvidedNewsletter0 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter0.title = "hi!";
        model.LoginFailedException loginFailedException4 = new model.LoginFailedException("hi!");
        model.LoginFailedException loginFailedException6 = new model.LoginFailedException("hi!");
        model.LoginFailedException loginFailedException8 = new model.LoginFailedException("hi!");
        loginFailedException6.addSuppressed((java.lang.Throwable) loginFailedException8);
        model.RegistrationFailedException registrationFailedException11 = new model.RegistrationFailedException("src/Book.csv");
        loginFailedException8.addSuppressed((java.lang.Throwable) registrationFailedException11);
        loginFailedException4.addSuppressed((java.lang.Throwable) registrationFailedException11);
        boolean boolean14 = uniProvidedNewsletter0.equals((java.lang.Object) loginFailedException4);
        java.lang.String str15 = loginFailedException4.toString();
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "model.LoginFailedException: hi!" + "'", str15, "model.LoginFailedException: hi!");
    }

    @Test
    public void test1901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1901");
        model.Visitor visitor0 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList1 = visitor0.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) visitor0);
        model.RentedItem[] rentedItemArray3 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList4 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList4, rentedItemArray3);
        model.BorrowingManager borrowingManager6 = new model.BorrowingManager(rentedItemList4);
        model.Visitor visitor7 = new model.Visitor();
        visitor7.email = "hi!";
        borrowingManager6.client = visitor7;
        studentOnlineResources2.client = visitor7;
        model.Student student12 = new model.Student();
        int int13 = student12.ID;
        model.StudentOnlineResources studentOnlineResources14 = new model.StudentOnlineResources((model.Client) student12);
        model.VirtualBook virtualBook16 = studentOnlineResources14.searchAccessibleBook("");
        model.CD cD18 = new model.CD("");
        model.Magazine magazine19 = null;
        model.Book book20 = null;
        model.CD cD21 = null;
        model.Magazine magazine22 = null;
        model.Book[] bookArray23 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList24 = new java.util.ArrayList<model.Book>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList24, bookArray23);
        model.CD[] cDArray26 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList27 = new java.util.ArrayList<model.CD>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList27, cDArray26);
        model.Magazine[] magazineArray29 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList30 = new java.util.ArrayList<model.Magazine>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList30, magazineArray29);
        model.ItemSearchResult itemSearchResult32 = new model.ItemSearchResult(book20, cD21, magazine22, (java.util.Collection<model.Book>) bookList24, (java.util.Collection<model.CD>) cDList27, (java.util.Collection<model.Magazine>) magazineList30);
        model.Book book33 = null;
        model.CD cD34 = null;
        model.Magazine magazine35 = null;
        model.Book[] bookArray36 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList37 = new java.util.ArrayList<model.Book>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList37, bookArray36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        model.Magazine[] magazineArray42 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList43 = new java.util.ArrayList<model.Magazine>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList43, magazineArray42);
        model.ItemSearchResult itemSearchResult45 = new model.ItemSearchResult(book33, cD34, magazine35, (java.util.Collection<model.Book>) bookList37, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList43);
        model.CD[] cDArray46 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList47 = new java.util.ArrayList<model.CD>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList47, cDArray46);
        itemSearchResult45.similarCD = cDList47;
        model.Book book50 = null;
        model.CD cD51 = null;
        model.Magazine magazine52 = null;
        model.Book[] bookArray53 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList54 = new java.util.ArrayList<model.Book>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList54, bookArray53);
        model.CD[] cDArray56 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList57 = new java.util.ArrayList<model.CD>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList57, cDArray56);
        model.Magazine[] magazineArray59 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList60 = new java.util.ArrayList<model.Magazine>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList60, magazineArray59);
        model.ItemSearchResult itemSearchResult62 = new model.ItemSearchResult(book50, cD51, magazine52, (java.util.Collection<model.Book>) bookList54, (java.util.Collection<model.CD>) cDList57, (java.util.Collection<model.Magazine>) magazineList60);
        model.ItemSearchResult itemSearchResult63 = new model.ItemSearchResult((model.Book) virtualBook16, cD18, magazine19, (java.util.Collection<model.Book>) bookList24, (java.util.Collection<model.CD>) cDList47, (java.util.Collection<model.Magazine>) magazineList60);
        java.lang.String str64 = studentOnlineResources2.readVirtualItem((model.VirtualItem) virtualBook16);
        model.VirtualItem virtualItem65 = null;
        java.lang.String str66 = studentOnlineResources2.readVirtualItem(virtualItem65);
        model.RentedItem[] rentedItemArray67 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList68 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList68, rentedItemArray67);
        model.BorrowingManager borrowingManager70 = new model.BorrowingManager(rentedItemList68);
        boolean boolean71 = borrowingManager70.canRent();
        model.Student student72 = new model.Student();
        int int73 = student72.ID;
        model.StudentOnlineResources studentOnlineResources74 = new model.StudentOnlineResources((model.Client) student72);
        java.util.Iterator<model.VirtualItem> virtualItemItor75 = studentOnlineResources74.iterator();
        model.VirtualItem virtualItem76 = null;
        java.lang.String str77 = studentOnlineResources74.readVirtualItem(virtualItem76);
        model.Client client78 = studentOnlineResources74.client;
        model.NewsletterSubscriptionManager newsletterSubscriptionManager79 = client78.newsletterManager;
        borrowingManager70.client = client78;
        studentOnlineResources2.client = client78;
        client78.viewMyOnlineResource();
        org.junit.Assert.assertNull(virtualBookList1);
        org.junit.Assert.assertNotNull(rentedItemArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(virtualBook16);
        org.junit.Assert.assertNotNull(bookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(cDArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(magazineArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(bookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(magazineArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(cDArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(bookArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(cDArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(magazineArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(rentedItemArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNull(virtualItemItor75);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(client78);
        org.junit.Assert.assertNull(newsletterSubscriptionManager79);
    }

    @Test
    public void test1902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1902");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.Visitor visitor5 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList6 = visitor5.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources7 = new model.StudentOnlineResources((model.Client) visitor5);
        model.RentedItem[] rentedItemArray8 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList9 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList9, rentedItemArray8);
        model.BorrowingManager borrowingManager11 = new model.BorrowingManager(rentedItemList9);
        model.Visitor visitor12 = new model.Visitor();
        visitor12.email = "hi!";
        borrowingManager11.client = visitor12;
        studentOnlineResources7.client = visitor12;
        model.UniProvidedNewsletter uniProvidedNewsletter17 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter17.title = "";
        java.lang.String str20 = studentOnlineResources7.readVirtualItem((model.VirtualItem) uniProvidedNewsletter17);
        newsletterSubscriptionManager3.cancelSubscription((model.Newsletter) uniProvidedNewsletter17);
        model.UniProvidedNewsletter uniProvidedNewsletter22 = null;
        newsletterSubscriptionManager3.subscribeToUniProvidedNewsletter(uniProvidedNewsletter22, "model.RentingNotAllowedException: hi!");
        java.util.ArrayList<model.Newsletter> newsletterList25 = newsletterSubscriptionManager3.newsletterSubscribed;
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertNull(virtualBookList6);
        org.junit.Assert.assertNotNull(rentedItemArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(newsletterList25);
    }

    @Test
    public void test1903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1903");
        model.Database database7 = model.Database.createDatabase("src/VirtualBook.csv", "", "model.RegistrationFailedException: src/Magazine.csv", "model.RegistrationFailedException: ", "model.RegistrationFailedException: src/Magazine.csv", "src/CD.csv", "src/CD.csv");
        java.lang.Class<?> wildcardClass8 = database7.getClass();
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1904");
        model.LibraryManagementTeam libraryManagementTeam0 = new model.LibraryManagementTeam();
        int int1 = libraryManagementTeam0.ID;
        model.Student student2 = new model.Student();
        int int3 = student2.ID;
        model.StudentOnlineResources studentOnlineResources4 = new model.StudentOnlineResources((model.Client) student2);
        model.VirtualBook virtualBook6 = studentOnlineResources4.searchAccessibleBook("");
        model.VirtualItemContent virtualItemContent7 = virtualBook6.content;
        libraryManagementTeam0.enableAnItem((model.Item) virtualBook6);
        libraryManagementTeam0.ID = (byte) 1;
        model.Student student11 = new model.Student();
        int int12 = student11.ID;
        model.StudentOnlineResources studentOnlineResources13 = new model.StudentOnlineResources((model.Client) student11);
        model.VirtualBook virtualBook15 = studentOnlineResources13.searchAccessibleBook("");
        model.VirtualItemContent virtualItemContent16 = virtualBook15.content;
        model.Student student17 = new model.Student();
        int int18 = student17.ID;
        model.StudentOnlineResources studentOnlineResources19 = new model.StudentOnlineResources((model.Client) student17);
        model.VirtualBook virtualBook21 = studentOnlineResources19.searchAccessibleBook("");
        model.CD cD23 = new model.CD("");
        model.Magazine magazine24 = null;
        model.Book book25 = null;
        model.CD cD26 = null;
        model.Magazine magazine27 = null;
        model.Book[] bookArray28 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList29 = new java.util.ArrayList<model.Book>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList29, bookArray28);
        model.CD[] cDArray31 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList32 = new java.util.ArrayList<model.CD>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList32, cDArray31);
        model.Magazine[] magazineArray34 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList35 = new java.util.ArrayList<model.Magazine>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList35, magazineArray34);
        model.ItemSearchResult itemSearchResult37 = new model.ItemSearchResult(book25, cD26, magazine27, (java.util.Collection<model.Book>) bookList29, (java.util.Collection<model.CD>) cDList32, (java.util.Collection<model.Magazine>) magazineList35);
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.CD[] cDArray51 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList52 = new java.util.ArrayList<model.CD>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList52, cDArray51);
        itemSearchResult50.similarCD = cDList52;
        model.Book book55 = null;
        model.CD cD56 = null;
        model.Magazine magazine57 = null;
        model.Book[] bookArray58 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList59 = new java.util.ArrayList<model.Book>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList59, bookArray58);
        model.CD[] cDArray61 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList62 = new java.util.ArrayList<model.CD>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList62, cDArray61);
        model.Magazine[] magazineArray64 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList65 = new java.util.ArrayList<model.Magazine>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList65, magazineArray64);
        model.ItemSearchResult itemSearchResult67 = new model.ItemSearchResult(book55, cD56, magazine57, (java.util.Collection<model.Book>) bookList59, (java.util.Collection<model.CD>) cDList62, (java.util.Collection<model.Magazine>) magazineList65);
        model.ItemSearchResult itemSearchResult68 = new model.ItemSearchResult((model.Book) virtualBook21, cD23, magazine24, (java.util.Collection<model.Book>) bookList29, (java.util.Collection<model.CD>) cDList52, (java.util.Collection<model.Magazine>) magazineList65);
        int int69 = virtualBook21.ID;
        int int70 = virtualBook21.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter71 = null;
        model.PaidNewsletter paidNewsletter72 = null;
        model.VirtualItemSearchResult virtualItemSearchResult73 = new model.VirtualItemSearchResult(virtualBook21, uniProvidedNewsletter71, paidNewsletter72);
        model.PaidNewsletter paidNewsletter74 = virtualItemSearchResult73.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter75 = new model.UniProvidedNewsletter();
        virtualItemSearchResult73.setUniNewsletter(uniProvidedNewsletter75);
        java.lang.String str77 = uniProvidedNewsletter75.title;
        model.PaidNewsletter paidNewsletter78 = null;
        model.VirtualItemSearchResult virtualItemSearchResult79 = new model.VirtualItemSearchResult(virtualBook15, uniProvidedNewsletter75, paidNewsletter78);
        model.VirtualBook virtualBook80 = virtualItemSearchResult79.virtualBook;
        libraryManagementTeam0.enableAnItem((model.Item) virtualBook80);
        int int82 = virtualBook80.ID;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(virtualBook6);
        org.junit.Assert.assertNull(virtualItemContent7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(virtualBook15);
        org.junit.Assert.assertNull(virtualItemContent16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(virtualBook21);
        org.junit.Assert.assertNotNull(bookArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(cDArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(magazineArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(cDArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(bookArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(cDArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(magazineArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 20 + "'", int70 == 20);
        org.junit.Assert.assertNull(paidNewsletter74);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(virtualBook80);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
    }

    @Test
    public void test1905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1905");
        model.Request request0 = new model.Request();
        java.lang.String str1 = request0.type;
        model.Database database9 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database9;
        model.SearchVirtualItem searchVirtualItem11 = new model.SearchVirtualItem(database9);
        model.RentAndReturnSystem rentAndReturnSystem12 = new model.RentAndReturnSystem();
        model.Book book13 = null;
        model.CD cD15 = new model.CD("");
        model.Magazine magazine16 = null;
        java.util.Collection<model.Book> bookCollection17 = null;
        model.Book book18 = null;
        model.CD cD19 = null;
        model.Magazine magazine20 = null;
        model.Book[] bookArray21 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList22 = new java.util.ArrayList<model.Book>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList22, bookArray21);
        model.CD[] cDArray24 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList25 = new java.util.ArrayList<model.CD>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList25, cDArray24);
        model.Magazine[] magazineArray27 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList28 = new java.util.ArrayList<model.Magazine>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList28, magazineArray27);
        model.ItemSearchResult itemSearchResult30 = new model.ItemSearchResult(book18, cD19, magazine20, (java.util.Collection<model.Book>) bookList22, (java.util.Collection<model.CD>) cDList25, (java.util.Collection<model.Magazine>) magazineList28);
        model.Book book31 = null;
        model.CD cD32 = null;
        model.Magazine magazine33 = null;
        model.Book[] bookArray34 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList35 = new java.util.ArrayList<model.Book>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList35, bookArray34);
        model.CD[] cDArray37 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList38 = new java.util.ArrayList<model.CD>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList38, cDArray37);
        model.Magazine[] magazineArray40 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList41 = new java.util.ArrayList<model.Magazine>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList41, magazineArray40);
        model.ItemSearchResult itemSearchResult43 = new model.ItemSearchResult(book31, cD32, magazine33, (java.util.Collection<model.Book>) bookList35, (java.util.Collection<model.CD>) cDList38, (java.util.Collection<model.Magazine>) magazineList41);
        itemSearchResult30.similarCD = cDList38;
        model.Book book45 = null;
        model.CD cD46 = null;
        model.Magazine magazine47 = null;
        model.Book[] bookArray48 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList49 = new java.util.ArrayList<model.Book>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList49, bookArray48);
        model.CD[] cDArray51 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList52 = new java.util.ArrayList<model.CD>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList52, cDArray51);
        model.Magazine[] magazineArray54 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList55 = new java.util.ArrayList<model.Magazine>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList55, magazineArray54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult(book45, cD46, magazine47, (java.util.Collection<model.Book>) bookList49, (java.util.Collection<model.CD>) cDList52, (java.util.Collection<model.Magazine>) magazineList55);
        model.ItemSearchResult itemSearchResult58 = new model.ItemSearchResult(book13, cD15, magazine16, bookCollection17, (java.util.Collection<model.CD>) cDList38, (java.util.Collection<model.Magazine>) magazineList55);
        cD15.ID = (short) 10;
        cD15.canBePurchased = false;
        boolean boolean63 = cD15.canBePurchased;
        model.Faculty faculty64 = new model.Faculty();
        boolean boolean65 = rentAndReturnSystem12.rentAnItem((model.Item) cD15, (model.Client) faculty64);
        java.lang.String str66 = faculty64.faculty;
        database9.addClient((model.Client) faculty64);
        request0.requestee = faculty64;
        java.util.ArrayList<model.VirtualBook> virtualBookList69 = faculty64.virtualBooksAvailable;
        faculty64.faculty = "model.RegistrationFailedException: src/Book.csv";
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(bookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(cDArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(magazineArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(bookArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(cDArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(magazineArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(bookArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(cDArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(magazineArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(virtualBookList69);
    }

    @Test
    public void test1906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1906");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.LibraryManagementTeam libraryManagementTeam1 = requestForum0.managementTeam;
        model.RequestForum requestForum2 = model.RequestForum.createRequestForum();
        model.RequestForum requestForum3 = model.RequestForum.createRequestForum();
        model.Request request4 = new model.Request();
        request4.title = "";
        java.lang.String str7 = requestForum3.makeARequest(request4);
        int int8 = requestForum2.assessBooksPriority(request4);
        model.LibraryManagementTeam libraryManagementTeam9 = new model.LibraryManagementTeam();
        int int10 = libraryManagementTeam9.ID;
        int int11 = libraryManagementTeam9.accessCode;
        model.Item item12 = null;
        libraryManagementTeam9.addAnItem(item12);
        java.util.ArrayList<model.Item> itemList14 = libraryManagementTeam9.items;
        requestForum2.managementTeam = libraryManagementTeam9;
        requestForum0.managementTeam = libraryManagementTeam9;
        model.Request request17 = null;
        int int18 = requestForum0.assessBooksPriority(request17);
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertNotNull(libraryManagementTeam1);
        org.junit.Assert.assertNotNull(requestForum2);
        org.junit.Assert.assertNotNull(requestForum3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(itemList14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test1907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1907");
        model.Course course0 = new model.Course();
        java.lang.String str1 = course0.code;
        java.lang.String str2 = course0.subject;
        course0.subject = "model.RegistrationFailedException: ";
        course0.subject = "src/Magazine.csv";
        java.lang.String str7 = course0.code;
        course0.subject = "model.RentingNotAllowedException: hi!";
        course0.subject = "";
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1908");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.PayCredit payCredit1 = new model.PayCredit();
        rentAndReturnSystem0.paymentAPI = payCredit1;
        payCredit1.pay((double) 0L);
        payCredit1.amountPay = 4649131;
    }

    @Test
    public void test1909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1909");
        model.BuySpecialItems buySpecialItems0 = new model.BuySpecialItems();
        model.Payment payment1 = buySpecialItems0.paymentAPI;
        java.util.ArrayList<model.Item> itemList2 = buySpecialItems0.purchasedItems;
        model.Payment payment3 = buySpecialItems0.paymentAPI;
        model.Student student4 = new model.Student();
        int int5 = student4.ID;
        model.StudentOnlineResources studentOnlineResources6 = new model.StudentOnlineResources((model.Client) student4);
        model.VirtualBook virtualBook8 = studentOnlineResources6.searchAccessibleBook("");
        virtualBook8.ID = 20;
        virtualBook8.ID = (short) 100;
        boolean boolean13 = virtualBook8.canBePurchased;
        boolean boolean15 = buySpecialItems0.buyAnItem((model.Item) virtualBook8, (double) 31);
        model.LibraryManagementTeam libraryManagementTeam16 = new model.LibraryManagementTeam();
        int int17 = libraryManagementTeam16.ID;
        model.Student student18 = new model.Student();
        int int19 = student18.ID;
        model.StudentOnlineResources studentOnlineResources20 = new model.StudentOnlineResources((model.Client) student18);
        model.VirtualBook virtualBook22 = studentOnlineResources20.searchAccessibleBook("");
        model.VirtualItemContent virtualItemContent23 = virtualBook22.content;
        libraryManagementTeam16.enableAnItem((model.Item) virtualBook22);
        java.util.ArrayList<model.Item> itemList25 = libraryManagementTeam16.items;
        buySpecialItems0.purchasedItems = itemList25;
        model.PayMobileWallet payMobileWallet27 = new model.PayMobileWallet();
        payMobileWallet27.amountPay = 100.0f;
        payMobileWallet27.amountPay = (byte) -1;
        payMobileWallet27.pay((double) 2174094);
        buySpecialItems0.paymentAPI = payMobileWallet27;
        org.junit.Assert.assertNull(payment1);
        org.junit.Assert.assertNotNull(itemList2);
        org.junit.Assert.assertNull(payment3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(virtualBook8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(virtualBook22);
        org.junit.Assert.assertNull(virtualItemContent23);
        org.junit.Assert.assertNotNull(itemList25);
    }

    @Test
    public void test1910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1910");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.VirtualItemContent virtualItemContent5 = virtualBook4.content;
        model.Student student6 = new model.Student();
        int int7 = student6.ID;
        model.StudentOnlineResources studentOnlineResources8 = new model.StudentOnlineResources((model.Client) student6);
        model.VirtualBook virtualBook10 = studentOnlineResources8.searchAccessibleBook("");
        model.CD cD12 = new model.CD("");
        model.Magazine magazine13 = null;
        model.Book book14 = null;
        model.CD cD15 = null;
        model.Magazine magazine16 = null;
        model.Book[] bookArray17 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList18 = new java.util.ArrayList<model.Book>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList18, bookArray17);
        model.CD[] cDArray20 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList21 = new java.util.ArrayList<model.CD>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList21, cDArray20);
        model.Magazine[] magazineArray23 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList24 = new java.util.ArrayList<model.Magazine>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList24, magazineArray23);
        model.ItemSearchResult itemSearchResult26 = new model.ItemSearchResult(book14, cD15, magazine16, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList21, (java.util.Collection<model.Magazine>) magazineList24);
        model.Book book27 = null;
        model.CD cD28 = null;
        model.Magazine magazine29 = null;
        model.Book[] bookArray30 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList31 = new java.util.ArrayList<model.Book>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList31, bookArray30);
        model.CD[] cDArray33 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList34 = new java.util.ArrayList<model.CD>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList34, cDArray33);
        model.Magazine[] magazineArray36 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList37 = new java.util.ArrayList<model.Magazine>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList37, magazineArray36);
        model.ItemSearchResult itemSearchResult39 = new model.ItemSearchResult(book27, cD28, magazine29, (java.util.Collection<model.Book>) bookList31, (java.util.Collection<model.CD>) cDList34, (java.util.Collection<model.Magazine>) magazineList37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        itemSearchResult39.similarCD = cDList41;
        model.Book book44 = null;
        model.CD cD45 = null;
        model.Magazine magazine46 = null;
        model.Book[] bookArray47 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList48 = new java.util.ArrayList<model.Book>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList48, bookArray47);
        model.CD[] cDArray50 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList51 = new java.util.ArrayList<model.CD>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList51, cDArray50);
        model.Magazine[] magazineArray53 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList54 = new java.util.ArrayList<model.Magazine>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList54, magazineArray53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult(book44, cD45, magazine46, (java.util.Collection<model.Book>) bookList48, (java.util.Collection<model.CD>) cDList51, (java.util.Collection<model.Magazine>) magazineList54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult((model.Book) virtualBook10, cD12, magazine13, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList54);
        int int58 = virtualBook10.ID;
        int int59 = virtualBook10.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter60 = null;
        model.PaidNewsletter paidNewsletter61 = null;
        model.VirtualItemSearchResult virtualItemSearchResult62 = new model.VirtualItemSearchResult(virtualBook10, uniProvidedNewsletter60, paidNewsletter61);
        model.PaidNewsletter paidNewsletter63 = virtualItemSearchResult62.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter64 = new model.UniProvidedNewsletter();
        virtualItemSearchResult62.setUniNewsletter(uniProvidedNewsletter64);
        java.lang.String str66 = uniProvidedNewsletter64.title;
        model.PaidNewsletter paidNewsletter67 = null;
        model.VirtualItemSearchResult virtualItemSearchResult68 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter64, paidNewsletter67);
        model.VirtualBook virtualBook69 = virtualItemSearchResult68.virtualBook;
        model.PaidNewsletter paidNewsletter70 = new model.PaidNewsletter();
        virtualItemSearchResult68.setPaidNewsletter(paidNewsletter70);
        paidNewsletter70.showContent();
        model.VirtualItemContent virtualItemContent73 = paidNewsletter70.content;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNull(virtualItemContent5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(virtualBook10);
        org.junit.Assert.assertNotNull(bookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(cDArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(magazineArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(bookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(magazineArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(bookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(cDArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(magazineArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 20 + "'", int59 == 20);
        org.junit.Assert.assertNull(paidNewsletter63);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(virtualBook69);
        org.junit.Assert.assertNull(virtualItemContent73);
    }

    @Test
    public void test1911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1911");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.UniProvidedNewsletter uniProvidedNewsletter5 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter5.title = "";
        java.lang.String str8 = uniProvidedNewsletter5.title;
        newsletterSubscriptionManager3.subscribeToUniProvidedNewsletter(uniProvidedNewsletter5, "");
        java.util.ArrayList<model.Newsletter> newsletterList11 = newsletterSubscriptionManager3.newsletterSubscribed;
        model.Visitor visitor12 = new model.Visitor();
        visitor12.email = "hi!";
        newsletterSubscriptionManager3.client = visitor12;
        model.StudentOnlineResources studentOnlineResources16 = new model.StudentOnlineResources((model.Client) visitor12);
        model.Newsletter newsletter18 = studentOnlineResources16.searchSubscribedNewsletter("model.RegistrationFailedException: src/Book.csv");
        java.util.Iterator<model.VirtualItem> virtualItemItor19 = studentOnlineResources16.iterator();
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(newsletterList11);
        org.junit.Assert.assertNull(newsletter18);
        org.junit.Assert.assertNull(virtualItemItor19);
    }

    @Test
    public void test1912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1912");
        model.Book book0 = null;
        model.CD cD1 = null;
        model.Magazine magazine2 = null;
        model.Book[] bookArray3 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList4 = new java.util.ArrayList<model.Book>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList4, bookArray3);
        model.CD[] cDArray6 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList7 = new java.util.ArrayList<model.CD>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList7, cDArray6);
        model.Magazine[] magazineArray9 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList10 = new java.util.ArrayList<model.Magazine>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList10, magazineArray9);
        model.ItemSearchResult itemSearchResult12 = new model.ItemSearchResult(book0, cD1, magazine2, (java.util.Collection<model.Book>) bookList4, (java.util.Collection<model.CD>) cDList7, (java.util.Collection<model.Magazine>) magazineList10);
        model.Book book13 = null;
        model.CD cD14 = null;
        model.Magazine magazine15 = null;
        model.Book[] bookArray16 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList17 = new java.util.ArrayList<model.Book>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList17, bookArray16);
        model.CD[] cDArray19 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList20 = new java.util.ArrayList<model.CD>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList20, cDArray19);
        model.Magazine[] magazineArray22 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList23 = new java.util.ArrayList<model.Magazine>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList23, magazineArray22);
        model.ItemSearchResult itemSearchResult25 = new model.ItemSearchResult(book13, cD14, magazine15, (java.util.Collection<model.Book>) bookList17, (java.util.Collection<model.CD>) cDList20, (java.util.Collection<model.Magazine>) magazineList23);
        itemSearchResult12.similarCD = cDList20;
        model.Magazine magazine27 = itemSearchResult12.magazine;
        model.CD cD28 = itemSearchResult12.cd;
        model.Book book29 = null;
        model.CD cD31 = new model.CD("");
        model.Magazine magazine32 = null;
        java.util.Collection<model.Book> bookCollection33 = null;
        model.Book book34 = null;
        model.CD cD35 = null;
        model.Magazine magazine36 = null;
        model.Book[] bookArray37 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList38 = new java.util.ArrayList<model.Book>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList38, bookArray37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        model.Magazine[] magazineArray43 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList44 = new java.util.ArrayList<model.Magazine>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList44, magazineArray43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book34, cD35, magazine36, (java.util.Collection<model.Book>) bookList38, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList44);
        model.Book book47 = null;
        model.CD cD48 = null;
        model.Magazine magazine49 = null;
        model.Book[] bookArray50 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList51 = new java.util.ArrayList<model.Book>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList51, bookArray50);
        model.CD[] cDArray53 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList54 = new java.util.ArrayList<model.CD>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList54, cDArray53);
        model.Magazine[] magazineArray56 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList57 = new java.util.ArrayList<model.Magazine>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList57, magazineArray56);
        model.ItemSearchResult itemSearchResult59 = new model.ItemSearchResult(book47, cD48, magazine49, (java.util.Collection<model.Book>) bookList51, (java.util.Collection<model.CD>) cDList54, (java.util.Collection<model.Magazine>) magazineList57);
        itemSearchResult46.similarCD = cDList54;
        model.Book book61 = null;
        model.CD cD62 = null;
        model.Magazine magazine63 = null;
        model.Book[] bookArray64 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList65 = new java.util.ArrayList<model.Book>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList65, bookArray64);
        model.CD[] cDArray67 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList68 = new java.util.ArrayList<model.CD>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList68, cDArray67);
        model.Magazine[] magazineArray70 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList71 = new java.util.ArrayList<model.Magazine>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList71, magazineArray70);
        model.ItemSearchResult itemSearchResult73 = new model.ItemSearchResult(book61, cD62, magazine63, (java.util.Collection<model.Book>) bookList65, (java.util.Collection<model.CD>) cDList68, (java.util.Collection<model.Magazine>) magazineList71);
        model.ItemSearchResult itemSearchResult74 = new model.ItemSearchResult(book29, cD31, magazine32, bookCollection33, (java.util.Collection<model.CD>) cDList54, (java.util.Collection<model.Magazine>) magazineList71);
        model.Book book75 = null;
        itemSearchResult74.book = book75;
        java.util.Collection<model.Book> bookCollection77 = itemSearchResult74.similarBooks;
        model.Magazine magazine79 = new model.Magazine("");
        itemSearchResult74.magazine = magazine79;
        itemSearchResult12.magazine = magazine79;
        java.util.Collection<model.Book> bookCollection82 = itemSearchResult12.similarBooks;
        java.util.Collection<model.Book> bookCollection83 = itemSearchResult12.similarBooks;
        org.junit.Assert.assertNotNull(bookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(cDArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(magazineArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(bookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(cDArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(magazineArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(magazine27);
        org.junit.Assert.assertNull(cD28);
        org.junit.Assert.assertNotNull(bookArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(magazineArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(bookArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(cDArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(magazineArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(bookArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(cDArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(magazineArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(bookCollection77);
        org.junit.Assert.assertNotNull(bookCollection82);
        org.junit.Assert.assertNotNull(bookCollection83);
    }

    @Test
    public void test1913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1913");
        model.SearchBorrowedItem searchBorrowedItem0 = model.SearchBorrowedItem.makeSearchBorrowedItem();
        searchBorrowedItem0.removeItem("src/Book.csv", "");
        model.Student student4 = new model.Student();
        int int5 = student4.ID;
        model.StudentOnlineResources studentOnlineResources6 = new model.StudentOnlineResources((model.Client) student4);
        model.VirtualBook virtualBook8 = studentOnlineResources6.searchAccessibleBook("");
        java.lang.String str9 = virtualBook8.location;
        int int10 = virtualBook8.ID;
        virtualBook8.isBookLost = false;
        model.RentedItem[] rentedItemArray14 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList15 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList15, rentedItemArray14);
        model.BorrowingManager borrowingManager17 = new model.BorrowingManager(rentedItemList15);
        model.Book book18 = null;
        model.CD cD20 = new model.CD("");
        model.Magazine magazine21 = null;
        java.util.Collection<model.Book> bookCollection22 = null;
        model.Book book23 = null;
        model.CD cD24 = null;
        model.Magazine magazine25 = null;
        model.Book[] bookArray26 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList27 = new java.util.ArrayList<model.Book>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList27, bookArray26);
        model.CD[] cDArray29 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList30 = new java.util.ArrayList<model.CD>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList30, cDArray29);
        model.Magazine[] magazineArray32 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList33 = new java.util.ArrayList<model.Magazine>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList33, magazineArray32);
        model.ItemSearchResult itemSearchResult35 = new model.ItemSearchResult(book23, cD24, magazine25, (java.util.Collection<model.Book>) bookList27, (java.util.Collection<model.CD>) cDList30, (java.util.Collection<model.Magazine>) magazineList33);
        model.Book book36 = null;
        model.CD cD37 = null;
        model.Magazine magazine38 = null;
        model.Book[] bookArray39 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList40 = new java.util.ArrayList<model.Book>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList40, bookArray39);
        model.CD[] cDArray42 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList43 = new java.util.ArrayList<model.CD>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList43, cDArray42);
        model.Magazine[] magazineArray45 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList46 = new java.util.ArrayList<model.Magazine>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList46, magazineArray45);
        model.ItemSearchResult itemSearchResult48 = new model.ItemSearchResult(book36, cD37, magazine38, (java.util.Collection<model.Book>) bookList40, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList46);
        itemSearchResult35.similarCD = cDList43;
        model.Book book50 = null;
        model.CD cD51 = null;
        model.Magazine magazine52 = null;
        model.Book[] bookArray53 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList54 = new java.util.ArrayList<model.Book>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList54, bookArray53);
        model.CD[] cDArray56 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList57 = new java.util.ArrayList<model.CD>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList57, cDArray56);
        model.Magazine[] magazineArray59 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList60 = new java.util.ArrayList<model.Magazine>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList60, magazineArray59);
        model.ItemSearchResult itemSearchResult62 = new model.ItemSearchResult(book50, cD51, magazine52, (java.util.Collection<model.Book>) bookList54, (java.util.Collection<model.CD>) cDList57, (java.util.Collection<model.Magazine>) magazineList60);
        model.ItemSearchResult itemSearchResult63 = new model.ItemSearchResult(book18, cD20, magazine21, bookCollection22, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList60);
        cD20.ID = (short) 10;
        borrowingManager17.removeRentedItem((model.Item) cD20);
        model.Client client67 = borrowingManager17.client;
        model.Visitor visitor68 = new model.Visitor();
        borrowingManager17.client = visitor68;
        searchBorrowedItem0.addPhyscialItem((model.Item) virtualBook8, "", (model.Client) visitor68);
        java.util.ArrayList<model.VirtualItem> virtualItemList73 = searchBorrowedItem0.searchBorrowedVirtualItem("", "src/Newsletter.csv");
        java.util.ArrayList<model.VirtualItem> virtualItemList76 = searchBorrowedItem0.searchBorrowedVirtualItem("", "model.RegistrationFailedException: src/Magazine.csv");
        org.junit.Assert.assertNotNull(searchBorrowedItem0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(virtualBook8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(rentedItemArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(bookArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(cDArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(magazineArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(bookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cDArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(magazineArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(bookArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(cDArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(magazineArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(client67);
        org.junit.Assert.assertNotNull(virtualItemList73);
        org.junit.Assert.assertNotNull(virtualItemList76);
    }

    @Test
    public void test1914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1914");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.Request request1 = new model.Request();
        request1.title = "";
        java.lang.String str4 = requestForum0.makeARequest(request1);
        model.RequestForum requestForum5 = model.RequestForum.createRequestForum();
        model.RequestForum requestForum6 = model.RequestForum.createRequestForum();
        model.Request request7 = new model.Request();
        request7.title = "";
        java.lang.String str10 = requestForum6.makeARequest(request7);
        int int11 = requestForum5.assessBooksPriority(request7);
        java.lang.String str12 = request7.type;
        java.lang.String str13 = request7.type;
        java.lang.String str14 = requestForum0.makeARequest(request7);
        model.LibraryManagementTeam libraryManagementTeam15 = requestForum0.managementTeam;
        model.Request request16 = new model.Request();
        java.lang.String str17 = request16.type;
        model.ValidateRegistration validateRegistration18 = new model.ValidateRegistration();
        model.Student student19 = new model.Student();
        student19.viewMyOnlineResource();
        boolean boolean21 = validateRegistration18.validateStaffRegistration((model.Staff) student19);
        request16.requestee = student19;
        request16.title = "hi!";
        request16.type = "src/VirtualBook.csv";
        java.lang.String str27 = requestForum0.makeARequest(request16);
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(requestForum5);
        org.junit.Assert.assertNotNull(requestForum6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(libraryManagementTeam15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
    }

    @Test
    public void test1915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1915");
        model.Database database7 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database7;
        model.SearchVirtualItem searchVirtualItem9 = new model.SearchVirtualItem(database7);
        model.Register register10 = model.Register.makeRegister(database7);
        model.Database database11 = register10.database;
        java.lang.String str12 = database11.getBookFilePath();
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(register10);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "src/Book.csv" + "'", str12, "src/Book.csv");
    }

    @Test
    public void test1916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1916");
        model.Database database7 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database7;
        model.SearchVirtualItem searchVirtualItem9 = new model.SearchVirtualItem(database7);
        database7.itemPath = "model.RegistrationFailedException: src/Book.csv";
        model.Database.database = database7;
        model.Client client14 = database7.getClient("model.RegistrationFailedException: src/Book.csv");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(client14);
    }

    @Test
    public void test1917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1917");
        model.Database database7 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database7;
        model.SearchVirtualItem searchVirtualItem9 = new model.SearchVirtualItem(database7);
        model.Login login10 = new model.Login(database7);
        model.Register register11 = model.Register.makeRegister(database7);
        java.lang.String str12 = database7.getBorrowedItemFilePath();
        java.util.ArrayList<java.lang.String> strList13 = database7.getAllItems();
        java.lang.String str14 = database7.getBookFilePath();
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(register11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "src/BorrowedItems.csv" + "'", str12, "src/BorrowedItems.csv");
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "src/Book.csv" + "'", str14, "src/Book.csv");
    }

    @Test
    public void test1918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1918");
        model.Database database0 = model.Database.database;
        java.util.ArrayList<java.lang.String> strList1 = database0.getAllItems();
        model.Client client3 = database0.getClient("src/Magazine.csv");
        model.Register register4 = model.Register.makeRegister(database0);
        model.Login login5 = model.Login.makeLogin(database0);
        java.lang.String str6 = database0.getNewspaperFilePath();
        org.junit.Assert.assertNotNull(database0);
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(client3);
        org.junit.Assert.assertNotNull(register4);
        org.junit.Assert.assertNotNull(login5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "src/Newsletter.csv" + "'", str6, "src/Newsletter.csv");
    }

    @Test
    public void test1919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1919");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.RentedItem[] rentedItemArray4 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList5 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList5, rentedItemArray4);
        model.BorrowingManager borrowingManager7 = new model.BorrowingManager(rentedItemList5);
        model.Visitor visitor8 = new model.Visitor();
        visitor8.email = "hi!";
        borrowingManager7.client = visitor8;
        model.RentedItem[] rentedItemArray12 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList13 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList13, rentedItemArray12);
        model.BorrowingManager borrowingManager15 = new model.BorrowingManager(rentedItemList13);
        model.Visitor visitor16 = new model.Visitor();
        visitor16.email = "hi!";
        borrowingManager15.client = visitor16;
        visitor8.borrowManager = borrowingManager15;
        newsletterSubscriptionManager3.client = visitor8;
        model.PayCredit payCredit22 = new model.PayCredit();
        payCredit22.amountPay = 10;
        newsletterSubscriptionManager3.paymentAPI = payCredit22;
        java.util.ArrayList<model.Newsletter> newsletterList26 = newsletterSubscriptionManager3.newsletterSubscribed;
        model.Newsletter[] newsletterArray27 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList28 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList28, newsletterArray27);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager30 = new model.NewsletterSubscriptionManager(newsletterList28);
        model.Visitor visitor31 = new model.Visitor();
        model.VirtualBook[] virtualBookArray32 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList33 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList33, virtualBookArray32);
        visitor31.virtualBooksAvailable = virtualBookList33;
        newsletterSubscriptionManager30.client = visitor31;
        java.util.ArrayList<model.Newsletter> newsletterList37 = newsletterSubscriptionManager30.newsletterSubscribed;
        newsletterSubscriptionManager3.newsletterSubscribed = newsletterList37;
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(rentedItemArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rentedItemArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(newsletterList26);
        org.junit.Assert.assertNotNull(newsletterArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(virtualBookArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(newsletterList37);
    }

    @Test
    public void test1920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1920");
        model.BorrowingManager.maxBorrowCount = 1;
    }

    @Test
    public void test1921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1921");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.UniProvidedNewsletter uniProvidedNewsletter5 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter5.title = "";
        java.lang.String str8 = uniProvidedNewsletter5.title;
        newsletterSubscriptionManager3.subscribeToUniProvidedNewsletter(uniProvidedNewsletter5, "");
        model.Student student11 = new model.Student();
        int int12 = student11.ID;
        model.StudentOnlineResources studentOnlineResources13 = new model.StudentOnlineResources((model.Client) student11);
        model.VirtualBook virtualBook15 = studentOnlineResources13.searchAccessibleBook("");
        model.CD cD17 = new model.CD("");
        model.Magazine magazine18 = null;
        model.Book book19 = null;
        model.CD cD20 = null;
        model.Magazine magazine21 = null;
        model.Book[] bookArray22 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList23 = new java.util.ArrayList<model.Book>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList23, bookArray22);
        model.CD[] cDArray25 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList26 = new java.util.ArrayList<model.CD>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList26, cDArray25);
        model.Magazine[] magazineArray28 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList29 = new java.util.ArrayList<model.Magazine>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList29, magazineArray28);
        model.ItemSearchResult itemSearchResult31 = new model.ItemSearchResult(book19, cD20, magazine21, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList29);
        model.Book book32 = null;
        model.CD cD33 = null;
        model.Magazine magazine34 = null;
        model.Book[] bookArray35 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList36 = new java.util.ArrayList<model.Book>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList36, bookArray35);
        model.CD[] cDArray38 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList39 = new java.util.ArrayList<model.CD>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList39, cDArray38);
        model.Magazine[] magazineArray41 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList42 = new java.util.ArrayList<model.Magazine>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList42, magazineArray41);
        model.ItemSearchResult itemSearchResult44 = new model.ItemSearchResult(book32, cD33, magazine34, (java.util.Collection<model.Book>) bookList36, (java.util.Collection<model.CD>) cDList39, (java.util.Collection<model.Magazine>) magazineList42);
        model.CD[] cDArray45 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList46 = new java.util.ArrayList<model.CD>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList46, cDArray45);
        itemSearchResult44.similarCD = cDList46;
        model.Book book49 = null;
        model.CD cD50 = null;
        model.Magazine magazine51 = null;
        model.Book[] bookArray52 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList53 = new java.util.ArrayList<model.Book>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList53, bookArray52);
        model.CD[] cDArray55 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList56 = new java.util.ArrayList<model.CD>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList56, cDArray55);
        model.Magazine[] magazineArray58 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList59 = new java.util.ArrayList<model.Magazine>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList59, magazineArray58);
        model.ItemSearchResult itemSearchResult61 = new model.ItemSearchResult(book49, cD50, magazine51, (java.util.Collection<model.Book>) bookList53, (java.util.Collection<model.CD>) cDList56, (java.util.Collection<model.Magazine>) magazineList59);
        model.ItemSearchResult itemSearchResult62 = new model.ItemSearchResult((model.Book) virtualBook15, cD17, magazine18, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList46, (java.util.Collection<model.Magazine>) magazineList59);
        int int63 = virtualBook15.ID;
        int int64 = virtualBook15.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter65 = null;
        model.PaidNewsletter paidNewsletter66 = null;
        model.VirtualItemSearchResult virtualItemSearchResult67 = new model.VirtualItemSearchResult(virtualBook15, uniProvidedNewsletter65, paidNewsletter66);
        model.PaidNewsletter paidNewsletter68 = virtualItemSearchResult67.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter69 = new model.UniProvidedNewsletter();
        virtualItemSearchResult67.setUniNewsletter(uniProvidedNewsletter69);
        java.lang.String str71 = uniProvidedNewsletter69.title;
        uniProvidedNewsletter69.cost = 0L;
        newsletterSubscriptionManager3.subscribeToUniProvidedNewsletter(uniProvidedNewsletter69, "");
        model.BuySpecialItems buySpecialItems76 = new model.BuySpecialItems();
        model.Payment payment77 = null;
        buySpecialItems76.paymentAPI = payment77;
        model.PayMobileWallet payMobileWallet79 = new model.PayMobileWallet();
        buySpecialItems76.paymentAPI = payMobileWallet79;
        payMobileWallet79.amountPay = (-1L);
        payMobileWallet79.pay((double) (-1.0f));
        payMobileWallet79.pay((double) 31);
        payMobileWallet79.amountPay = ' ';
        newsletterSubscriptionManager3.paymentAPI = payMobileWallet79;
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(virtualBook15);
        org.junit.Assert.assertNotNull(bookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(magazineArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(bookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(cDArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(magazineArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(bookArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(cDArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(magazineArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 20 + "'", int64 == 20);
        org.junit.Assert.assertNull(paidNewsletter68);
        org.junit.Assert.assertNull(str71);
    }

    @Test
    public void test1922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1922");
        model.Book book0 = null;
        model.CD cD1 = null;
        model.Magazine magazine2 = null;
        model.Book[] bookArray3 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList4 = new java.util.ArrayList<model.Book>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList4, bookArray3);
        model.CD[] cDArray6 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList7 = new java.util.ArrayList<model.CD>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList7, cDArray6);
        model.Magazine[] magazineArray9 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList10 = new java.util.ArrayList<model.Magazine>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList10, magazineArray9);
        model.ItemSearchResult itemSearchResult12 = new model.ItemSearchResult(book0, cD1, magazine2, (java.util.Collection<model.Book>) bookList4, (java.util.Collection<model.CD>) cDList7, (java.util.Collection<model.Magazine>) magazineList10);
        model.Book book13 = null;
        model.CD cD14 = null;
        model.Magazine magazine15 = null;
        model.Book[] bookArray16 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList17 = new java.util.ArrayList<model.Book>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList17, bookArray16);
        model.CD[] cDArray19 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList20 = new java.util.ArrayList<model.CD>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList20, cDArray19);
        model.Magazine[] magazineArray22 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList23 = new java.util.ArrayList<model.Magazine>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList23, magazineArray22);
        model.ItemSearchResult itemSearchResult25 = new model.ItemSearchResult(book13, cD14, magazine15, (java.util.Collection<model.Book>) bookList17, (java.util.Collection<model.CD>) cDList20, (java.util.Collection<model.Magazine>) magazineList23);
        itemSearchResult12.similarCD = cDList20;
        model.Magazine magazine27 = itemSearchResult12.magazine;
        model.CD cD28 = itemSearchResult12.cd;
        java.util.Collection<model.Magazine> magazineCollection29 = itemSearchResult12.similarMagazine;
        model.Student student30 = new model.Student();
        int int31 = student30.ID;
        model.StudentOnlineResources studentOnlineResources32 = new model.StudentOnlineResources((model.Client) student30);
        model.VirtualBook virtualBook34 = studentOnlineResources32.searchAccessibleBook("");
        model.CD cD36 = new model.CD("");
        model.Magazine magazine37 = null;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.Book book51 = null;
        model.CD cD52 = null;
        model.Magazine magazine53 = null;
        model.Book[] bookArray54 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList55 = new java.util.ArrayList<model.Book>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList55, bookArray54);
        model.CD[] cDArray57 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList58 = new java.util.ArrayList<model.CD>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList58, cDArray57);
        model.Magazine[] magazineArray60 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList61 = new java.util.ArrayList<model.Magazine>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList61, magazineArray60);
        model.ItemSearchResult itemSearchResult63 = new model.ItemSearchResult(book51, cD52, magazine53, (java.util.Collection<model.Book>) bookList55, (java.util.Collection<model.CD>) cDList58, (java.util.Collection<model.Magazine>) magazineList61);
        model.CD[] cDArray64 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList65 = new java.util.ArrayList<model.CD>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList65, cDArray64);
        itemSearchResult63.similarCD = cDList65;
        model.Book book68 = null;
        model.CD cD69 = null;
        model.Magazine magazine70 = null;
        model.Book[] bookArray71 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList72 = new java.util.ArrayList<model.Book>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList72, bookArray71);
        model.CD[] cDArray74 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList75 = new java.util.ArrayList<model.CD>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList75, cDArray74);
        model.Magazine[] magazineArray77 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList78 = new java.util.ArrayList<model.Magazine>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList78, magazineArray77);
        model.ItemSearchResult itemSearchResult80 = new model.ItemSearchResult(book68, cD69, magazine70, (java.util.Collection<model.Book>) bookList72, (java.util.Collection<model.CD>) cDList75, (java.util.Collection<model.Magazine>) magazineList78);
        model.ItemSearchResult itemSearchResult81 = new model.ItemSearchResult((model.Book) virtualBook34, cD36, magazine37, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList65, (java.util.Collection<model.Magazine>) magazineList78);
        virtualBook34.ID = (short) 10;
        virtualBook34.showContent();
        virtualBook34.author = "";
        itemSearchResult12.book = virtualBook34;
        model.Student student88 = new model.Student();
        int int89 = student88.ID;
        model.StudentOnlineResources studentOnlineResources90 = new model.StudentOnlineResources((model.Client) student88);
        model.VirtualBook virtualBook92 = studentOnlineResources90.searchAccessibleBook("");
        java.lang.String str93 = virtualBook92.location;
        int int94 = virtualBook92.ID;
        itemSearchResult12.book = virtualBook92;
        model.Book book96 = itemSearchResult12.book;
        int int97 = book96.edition;
        java.lang.String str98 = book96.publisher;
        org.junit.Assert.assertNotNull(bookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(cDArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(magazineArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(bookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(cDArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(magazineArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(magazine27);
        org.junit.Assert.assertNull(cD28);
        org.junit.Assert.assertNotNull(magazineCollection29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(virtualBook34);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(bookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(cDArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(magazineArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(cDArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(bookArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(cDArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(magazineArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertNotNull(virtualBook92);
        org.junit.Assert.assertNull(str93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
        org.junit.Assert.assertNotNull(book96);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 0 + "'", int97 == 0);
        org.junit.Assert.assertNull(str98);
    }

    @Test
    public void test1923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1923");
        model.ItemManagement itemManagement0 = new model.ItemManagement();
        model.Database database1 = null;
        itemManagement0.database = database1;
        model.Student student3 = new model.Student();
        int int4 = student3.ID;
        model.StudentOnlineResources studentOnlineResources5 = new model.StudentOnlineResources((model.Client) student3);
        model.VirtualBook virtualBook7 = studentOnlineResources5.searchAccessibleBook("");
        itemManagement0.disableAnItem((model.Item) virtualBook7);
        model.Item item10 = itemManagement0.selectAnItemFromDatabase((int) '#');
        model.ItemManagement itemManagement11 = new model.ItemManagement();
        model.Database database12 = null;
        itemManagement11.database = database12;
        model.Student student14 = new model.Student();
        int int15 = student14.ID;
        model.StudentOnlineResources studentOnlineResources16 = new model.StudentOnlineResources((model.Client) student14);
        model.VirtualBook virtualBook18 = studentOnlineResources16.searchAccessibleBook("");
        itemManagement11.disableAnItem((model.Item) virtualBook18);
        itemManagement0.disableAnItem((model.Item) virtualBook18);
        java.lang.String str21 = virtualBook18.ISBN;
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(virtualBook7);
        org.junit.Assert.assertNull(item10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(virtualBook18);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test1924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1924");
        model.Database database0 = null;
        model.Register register1 = model.Register.makeRegister(database0);
        model.Faculty faculty2 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection3 = faculty2.courses;
        boolean boolean6 = register1.registerAsStaff((model.Staff) faculty2, "src/Book.csv", "src/Book.csv");
        model.Faculty faculty7 = new model.Faculty();
        java.lang.String str8 = faculty7.faculty;
        java.lang.String str9 = faculty7.faculty;
        faculty7.viewMyOnlineResource();
        model.Course course11 = new model.Course();
        java.lang.String str12 = course11.subject;
        java.lang.String str13 = course11.subject;
        java.lang.String str14 = course11.code;
        java.lang.String str15 = course11.code;
        course11.subject = "";
        model.Course course18 = new model.Course();
        java.lang.String str19 = course18.code;
        model.Course course20 = new model.Course();
        java.lang.String str21 = course20.subject;
        course20.code = "";
        int int24 = course20.year;
        course20.subject = "src/CD.csv";
        model.Course course27 = new model.Course();
        java.lang.String str28 = course27.subject;
        java.lang.String str29 = course27.subject;
        java.lang.String str30 = course27.code;
        java.lang.String str31 = course27.code;
        model.Course course32 = new model.Course();
        model.Course course33 = new model.Course();
        java.lang.String str34 = course33.subject;
        course33.year = (byte) 10;
        model.Course course37 = new model.Course();
        model.Course course38 = new model.Course();
        java.lang.String str39 = course38.subject;
        java.lang.String str40 = course38.subject;
        java.lang.String str41 = course38.code;
        java.lang.String str42 = course38.code;
        course38.subject = "";
        model.Course course45 = new model.Course();
        java.lang.String str46 = course45.code;
        java.lang.String str47 = course45.subject;
        course45.subject = "model.RegistrationFailedException: ";
        course45.subject = "src/Magazine.csv";
        course45.subject = "model.RegistrationFailedException: ";
        model.Course course54 = new model.Course();
        java.lang.String str55 = course54.subject;
        java.lang.String str56 = course54.subject;
        model.Course course57 = new model.Course();
        java.lang.String str58 = course57.subject;
        course57.code = "";
        course57.subject = "src/Magazine.csv";
        model.Course course63 = new model.Course();
        java.lang.String str64 = course63.code;
        java.lang.String str65 = course63.subject;
        model.Course course66 = new model.Course();
        java.lang.String str67 = course66.subject;
        course66.code = "";
        int int70 = course66.year;
        course66.subject = "src/CD.csv";
        model.Course course73 = new model.Course();
        java.lang.String str74 = course73.subject;
        course73.code = "";
        int int77 = course73.year;
        course73.subject = "src/CD.csv";
        model.Course[] courseArray80 = new model.Course[] { course11, course18, course20, course27, course32, course33, course37, course38, course45, course54, course57, course63, course66, course73 };
        java.util.ArrayList<model.Course> courseList81 = new java.util.ArrayList<model.Course>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<model.Course>) courseList81, courseArray80);
        faculty7.courses = courseList81;
        faculty2.courses = courseList81;
        java.util.Collection<model.Course> courseCollection85 = faculty2.courses;
        java.lang.String str86 = faculty2.email;
        faculty2.username = "src/Client.csv";
        org.junit.Assert.assertNotNull(register1);
        org.junit.Assert.assertNull(courseCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(courseArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(courseCollection85);
        org.junit.Assert.assertNull(str86);
    }

    @Test
    public void test1925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1925");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.VirtualItemContent virtualItemContent5 = virtualBook4.content;
        model.Student student6 = new model.Student();
        int int7 = student6.ID;
        model.StudentOnlineResources studentOnlineResources8 = new model.StudentOnlineResources((model.Client) student6);
        model.VirtualBook virtualBook10 = studentOnlineResources8.searchAccessibleBook("");
        model.CD cD12 = new model.CD("");
        model.Magazine magazine13 = null;
        model.Book book14 = null;
        model.CD cD15 = null;
        model.Magazine magazine16 = null;
        model.Book[] bookArray17 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList18 = new java.util.ArrayList<model.Book>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList18, bookArray17);
        model.CD[] cDArray20 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList21 = new java.util.ArrayList<model.CD>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList21, cDArray20);
        model.Magazine[] magazineArray23 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList24 = new java.util.ArrayList<model.Magazine>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList24, magazineArray23);
        model.ItemSearchResult itemSearchResult26 = new model.ItemSearchResult(book14, cD15, magazine16, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList21, (java.util.Collection<model.Magazine>) magazineList24);
        model.Book book27 = null;
        model.CD cD28 = null;
        model.Magazine magazine29 = null;
        model.Book[] bookArray30 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList31 = new java.util.ArrayList<model.Book>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList31, bookArray30);
        model.CD[] cDArray33 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList34 = new java.util.ArrayList<model.CD>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList34, cDArray33);
        model.Magazine[] magazineArray36 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList37 = new java.util.ArrayList<model.Magazine>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList37, magazineArray36);
        model.ItemSearchResult itemSearchResult39 = new model.ItemSearchResult(book27, cD28, magazine29, (java.util.Collection<model.Book>) bookList31, (java.util.Collection<model.CD>) cDList34, (java.util.Collection<model.Magazine>) magazineList37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        itemSearchResult39.similarCD = cDList41;
        model.Book book44 = null;
        model.CD cD45 = null;
        model.Magazine magazine46 = null;
        model.Book[] bookArray47 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList48 = new java.util.ArrayList<model.Book>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList48, bookArray47);
        model.CD[] cDArray50 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList51 = new java.util.ArrayList<model.CD>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList51, cDArray50);
        model.Magazine[] magazineArray53 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList54 = new java.util.ArrayList<model.Magazine>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList54, magazineArray53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult(book44, cD45, magazine46, (java.util.Collection<model.Book>) bookList48, (java.util.Collection<model.CD>) cDList51, (java.util.Collection<model.Magazine>) magazineList54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult((model.Book) virtualBook10, cD12, magazine13, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList54);
        int int58 = virtualBook10.ID;
        int int59 = virtualBook10.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter60 = null;
        model.PaidNewsletter paidNewsletter61 = null;
        model.VirtualItemSearchResult virtualItemSearchResult62 = new model.VirtualItemSearchResult(virtualBook10, uniProvidedNewsletter60, paidNewsletter61);
        model.PaidNewsletter paidNewsletter63 = virtualItemSearchResult62.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter64 = new model.UniProvidedNewsletter();
        virtualItemSearchResult62.setUniNewsletter(uniProvidedNewsletter64);
        java.lang.String str66 = uniProvidedNewsletter64.title;
        model.PaidNewsletter paidNewsletter67 = null;
        model.VirtualItemSearchResult virtualItemSearchResult68 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter64, paidNewsletter67);
        virtualBook4.showContent();
        virtualBook4.location = "";
        int int72 = virtualBook4.edition;
        int int73 = virtualBook4.edition;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNull(virtualItemContent5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(virtualBook10);
        org.junit.Assert.assertNotNull(bookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(cDArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(magazineArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(bookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(magazineArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(bookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(cDArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(magazineArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 20 + "'", int59 == 20);
        org.junit.Assert.assertNull(paidNewsletter63);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
    }

    @Test
    public void test1926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1926");
        model.Book book0 = null;
        model.CD cD1 = null;
        model.Magazine magazine2 = null;
        model.Book[] bookArray3 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList4 = new java.util.ArrayList<model.Book>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList4, bookArray3);
        model.CD[] cDArray6 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList7 = new java.util.ArrayList<model.CD>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList7, cDArray6);
        model.Magazine[] magazineArray9 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList10 = new java.util.ArrayList<model.Magazine>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList10, magazineArray9);
        model.ItemSearchResult itemSearchResult12 = new model.ItemSearchResult(book0, cD1, magazine2, (java.util.Collection<model.Book>) bookList4, (java.util.Collection<model.CD>) cDList7, (java.util.Collection<model.Magazine>) magazineList10);
        model.Book book13 = null;
        model.CD cD14 = null;
        model.Magazine magazine15 = null;
        model.Book[] bookArray16 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList17 = new java.util.ArrayList<model.Book>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList17, bookArray16);
        model.CD[] cDArray19 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList20 = new java.util.ArrayList<model.CD>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList20, cDArray19);
        model.Magazine[] magazineArray22 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList23 = new java.util.ArrayList<model.Magazine>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList23, magazineArray22);
        model.ItemSearchResult itemSearchResult25 = new model.ItemSearchResult(book13, cD14, magazine15, (java.util.Collection<model.Book>) bookList17, (java.util.Collection<model.CD>) cDList20, (java.util.Collection<model.Magazine>) magazineList23);
        itemSearchResult12.similarCD = cDList20;
        model.Magazine magazine27 = itemSearchResult12.magazine;
        model.CD cD28 = itemSearchResult12.cd;
        java.util.Collection<model.Book> bookCollection29 = itemSearchResult12.similarBooks;
        model.Student student30 = new model.Student();
        int int31 = student30.ID;
        model.StudentOnlineResources studentOnlineResources32 = new model.StudentOnlineResources((model.Client) student30);
        model.VirtualBook virtualBook34 = studentOnlineResources32.searchAccessibleBook("");
        model.CD cD36 = new model.CD("");
        model.Magazine magazine37 = null;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.Book book51 = null;
        model.CD cD52 = null;
        model.Magazine magazine53 = null;
        model.Book[] bookArray54 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList55 = new java.util.ArrayList<model.Book>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList55, bookArray54);
        model.CD[] cDArray57 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList58 = new java.util.ArrayList<model.CD>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList58, cDArray57);
        model.Magazine[] magazineArray60 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList61 = new java.util.ArrayList<model.Magazine>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList61, magazineArray60);
        model.ItemSearchResult itemSearchResult63 = new model.ItemSearchResult(book51, cD52, magazine53, (java.util.Collection<model.Book>) bookList55, (java.util.Collection<model.CD>) cDList58, (java.util.Collection<model.Magazine>) magazineList61);
        model.CD[] cDArray64 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList65 = new java.util.ArrayList<model.CD>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList65, cDArray64);
        itemSearchResult63.similarCD = cDList65;
        model.Book book68 = null;
        model.CD cD69 = null;
        model.Magazine magazine70 = null;
        model.Book[] bookArray71 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList72 = new java.util.ArrayList<model.Book>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList72, bookArray71);
        model.CD[] cDArray74 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList75 = new java.util.ArrayList<model.CD>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList75, cDArray74);
        model.Magazine[] magazineArray77 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList78 = new java.util.ArrayList<model.Magazine>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList78, magazineArray77);
        model.ItemSearchResult itemSearchResult80 = new model.ItemSearchResult(book68, cD69, magazine70, (java.util.Collection<model.Book>) bookList72, (java.util.Collection<model.CD>) cDList75, (java.util.Collection<model.Magazine>) magazineList78);
        model.ItemSearchResult itemSearchResult81 = new model.ItemSearchResult((model.Book) virtualBook34, cD36, magazine37, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList65, (java.util.Collection<model.Magazine>) magazineList78);
        itemSearchResult12.book = virtualBook34;
        java.util.Collection<model.Book> bookCollection83 = itemSearchResult12.similarBooks;
        org.junit.Assert.assertNotNull(bookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(cDArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(magazineArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(bookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(cDArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(magazineArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(magazine27);
        org.junit.Assert.assertNull(cD28);
        org.junit.Assert.assertNotNull(bookCollection29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(virtualBook34);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(bookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(cDArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(magazineArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(cDArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(bookArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(cDArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(magazineArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(bookCollection83);
    }

    @Test
    public void test1927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1927");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        java.util.ArrayList<model.Newsletter> newsletterList5 = newsletterSubscriptionManager3.newsletterSubscribed;
        model.BuySpecialItems buySpecialItems6 = new model.BuySpecialItems();
        model.Payment payment7 = null;
        buySpecialItems6.paymentAPI = payment7;
        model.PayMobileWallet payMobileWallet9 = new model.PayMobileWallet();
        buySpecialItems6.paymentAPI = payMobileWallet9;
        double double11 = payMobileWallet9.amountPay;
        newsletterSubscriptionManager3.paymentAPI = payMobileWallet9;
        model.Newsletter[] newsletterArray13 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList14 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList14, newsletterArray13);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager16 = new model.NewsletterSubscriptionManager(newsletterList14);
        model.Client client17 = newsletterSubscriptionManager16.client;
        model.Visitor visitor18 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList19 = visitor18.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources20 = new model.StudentOnlineResources((model.Client) visitor18);
        model.RentedItem[] rentedItemArray21 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList22 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList22, rentedItemArray21);
        model.BorrowingManager borrowingManager24 = new model.BorrowingManager(rentedItemList22);
        model.Visitor visitor25 = new model.Visitor();
        visitor25.email = "hi!";
        borrowingManager24.client = visitor25;
        studentOnlineResources20.client = visitor25;
        model.UniProvidedNewsletter uniProvidedNewsletter30 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter30.title = "";
        java.lang.String str33 = studentOnlineResources20.readVirtualItem((model.VirtualItem) uniProvidedNewsletter30);
        newsletterSubscriptionManager16.cancelSubscription((model.Newsletter) uniProvidedNewsletter30);
        java.util.ArrayList<model.Newsletter> newsletterList35 = newsletterSubscriptionManager16.newsletterSubscribed;
        model.NewsletterSubscriptionManager newsletterSubscriptionManager36 = new model.NewsletterSubscriptionManager(newsletterList35);
        model.Newsletter[] newsletterArray37 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList38 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList38, newsletterArray37);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager40 = new model.NewsletterSubscriptionManager(newsletterList38);
        model.Client client41 = newsletterSubscriptionManager40.client;
        model.Student student42 = new model.Student();
        int int43 = student42.ID;
        model.StudentOnlineResources studentOnlineResources44 = new model.StudentOnlineResources((model.Client) student42);
        student42.ID = '#';
        java.lang.String str47 = student42.email;
        newsletterSubscriptionManager40.client = student42;
        model.Newsletter[] newsletterArray49 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList50 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList50, newsletterArray49);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager52 = new model.NewsletterSubscriptionManager(newsletterList50);
        newsletterSubscriptionManager40.newsletterSubscribed = newsletterList50;
        java.util.ArrayList<model.Newsletter> newsletterList54 = newsletterSubscriptionManager40.newsletterSubscribed;
        model.Newsletter[] newsletterArray55 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList56 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList56, newsletterArray55);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager58 = new model.NewsletterSubscriptionManager(newsletterList56);
        model.Client client59 = newsletterSubscriptionManager58.client;
        model.Student student60 = new model.Student();
        int int61 = student60.ID;
        model.StudentOnlineResources studentOnlineResources62 = new model.StudentOnlineResources((model.Client) student60);
        student60.ID = '#';
        java.lang.String str65 = student60.email;
        newsletterSubscriptionManager58.client = student60;
        model.Newsletter[] newsletterArray67 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList68 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList68, newsletterArray67);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager70 = new model.NewsletterSubscriptionManager(newsletterList68);
        newsletterSubscriptionManager58.newsletterSubscribed = newsletterList68;
        newsletterSubscriptionManager40.newsletterSubscribed = newsletterList68;
        model.NewsletterSubscriptionManager newsletterSubscriptionManager73 = new model.NewsletterSubscriptionManager(newsletterList68);
        model.Newsletter[] newsletterArray74 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList75 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList75, newsletterArray74);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager77 = new model.NewsletterSubscriptionManager(newsletterList75);
        model.Client client78 = newsletterSubscriptionManager77.client;
        model.PayCredit payCredit79 = new model.PayCredit();
        payCredit79.amountPay = 10;
        newsletterSubscriptionManager77.paymentAPI = payCredit79;
        payCredit79.amountPay = 1;
        payCredit79.amountPay = 20;
        double double87 = payCredit79.amountPay;
        newsletterSubscriptionManager73.paymentAPI = payCredit79;
        java.util.ArrayList<model.Newsletter> newsletterList89 = newsletterSubscriptionManager73.newsletterSubscribed;
        newsletterSubscriptionManager36.newsletterSubscribed = newsletterList89;
        newsletterSubscriptionManager3.newsletterSubscribed = newsletterList89;
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertNotNull(newsletterList5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(newsletterArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(client17);
        org.junit.Assert.assertNull(virtualBookList19);
        org.junit.Assert.assertNotNull(rentedItemArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(newsletterList35);
        org.junit.Assert.assertNotNull(newsletterArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(client41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(newsletterArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(newsletterList54);
        org.junit.Assert.assertNotNull(newsletterArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(client59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(newsletterArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(newsletterArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(client78);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 20.0d + "'", double87 == 20.0d);
        org.junit.Assert.assertNotNull(newsletterList89);
    }

    @Test
    public void test1928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1928");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.Database.database = database7;
        java.lang.String str10 = database7.virtualItemFilePath;
        java.lang.String str11 = database7.getBookFilePath();
        database7.itemPath = "src/Magazine.csv";
        model.Client client15 = database7.getClient("src/CD.csv");
        java.lang.String str16 = database7.getCDFilePath();
        java.lang.String str17 = database7.virtualItemFilePath;
        model.Login login18 = model.Login.makeLogin(database7);
        java.lang.String str19 = database7.getNewspaperFilePath();
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "model.RegistrationFailedException: " + "'", str10, "model.RegistrationFailedException: ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "src/Book.csv" + "'", str11, "src/Book.csv");
        org.junit.Assert.assertNotNull(client15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "src/CD.csv" + "'", str16, "src/CD.csv");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "model.RegistrationFailedException: " + "'", str17, "model.RegistrationFailedException: ");
        org.junit.Assert.assertNotNull(login18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "src/Newsletter.csv" + "'", str19, "src/Newsletter.csv");
    }

    @Test
    public void test1929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1929");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        borrowingManager3.itemsBorrowedCount = 2108587;
        borrowingManager3.itemsBorrowedCount = 31;
        borrowingManager3.amountOwned = 4749527;
        borrowingManager3.itemsBorrowedCount = 4786463;
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test1930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1930");
        model.Visitor visitor0 = new model.Visitor();
        model.StudentOnlineResources studentOnlineResources1 = new model.StudentOnlineResources((model.Client) visitor0);
        model.Newsletter newsletter3 = studentOnlineResources1.searchSubscribedNewsletter("model.RentingNotAllowedException: ");
        model.VirtualBook virtualBook5 = studentOnlineResources1.searchAccessibleBook("src/CD.csv");
        org.junit.Assert.assertNull(newsletter3);
        org.junit.Assert.assertNotNull(virtualBook5);
    }

    @Test
    public void test1931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1931");
        model.VirtualBook virtualBook1 = new model.VirtualBook("src/BorrowedItems.csv");
        boolean boolean2 = virtualBook1.canBePurchased;
        int int3 = virtualBook1.edition;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test1932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1932");
        model.ItemManagement itemManagement0 = new model.ItemManagement();
        model.Item item2 = itemManagement0.selectAnItemFromDatabase((int) (short) 0);
        model.Database database3 = null;
        model.Login login4 = new model.Login(database3);
        model.Database database12 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str13 = database12.getBookFilePath();
        database12.itemPath = "hi!";
        model.Database.database = database12;
        java.lang.String str17 = database12.getNewspaperFilePath();
        login4.db = database12;
        boolean boolean20 = database12.addItem("model.RegistrationFailedException: src/Magazine.csv");
        model.SearchVirtualItem searchVirtualItem21 = new model.SearchVirtualItem(database12);
        itemManagement0.database = database12;
        java.util.ArrayList<java.lang.String> strList23 = database12.getAllItems();
        org.junit.Assert.assertNull(item2);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "src/Book.csv" + "'", str13, "src/Book.csv");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "src/Newsletter.csv" + "'", str17, "src/Newsletter.csv");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strList23);
    }

    @Test
    public void test1933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1933");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.Payment payment1 = rentAndReturnSystem0.paymentAPI;
        model.PayMobileWallet payMobileWallet2 = new model.PayMobileWallet();
        payMobileWallet2.amountPay = 100.0f;
        payMobileWallet2.amountPay = (byte) -1;
        rentAndReturnSystem0.paymentAPI = payMobileWallet2;
        model.Payment payment8 = rentAndReturnSystem0.paymentAPI;
        model.PayCredit payCredit9 = new model.PayCredit();
        payCredit9.pay((double) (short) 100);
        payCredit9.amountPay = ' ';
        double double14 = payCredit9.amountPay;
        rentAndReturnSystem0.paymentAPI = payCredit9;
        payCredit9.amountPay = 10L;
        org.junit.Assert.assertNull(payment1);
        org.junit.Assert.assertNotNull(payment8);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 32.0d + "'", double14 == 32.0d);
    }

    @Test
    public void test1934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1934");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.Visitor visitor5 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList6 = visitor5.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources7 = new model.StudentOnlineResources((model.Client) visitor5);
        model.RentedItem[] rentedItemArray8 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList9 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList9, rentedItemArray8);
        model.BorrowingManager borrowingManager11 = new model.BorrowingManager(rentedItemList9);
        model.Visitor visitor12 = new model.Visitor();
        visitor12.email = "hi!";
        borrowingManager11.client = visitor12;
        studentOnlineResources7.client = visitor12;
        model.UniProvidedNewsletter uniProvidedNewsletter17 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter17.title = "";
        java.lang.String str20 = studentOnlineResources7.readVirtualItem((model.VirtualItem) uniProvidedNewsletter17);
        newsletterSubscriptionManager3.cancelSubscription((model.Newsletter) uniProvidedNewsletter17);
        java.util.ArrayList<model.Newsletter> newsletterList22 = newsletterSubscriptionManager3.newsletterSubscribed;
        model.Client client23 = newsletterSubscriptionManager3.client;
        model.BuySpecialItems buySpecialItems24 = new model.BuySpecialItems();
        model.Payment payment25 = null;
        buySpecialItems24.paymentAPI = payment25;
        model.PayMobileWallet payMobileWallet27 = new model.PayMobileWallet();
        buySpecialItems24.paymentAPI = payMobileWallet27;
        payMobileWallet27.amountPay = 1.0d;
        double double31 = payMobileWallet27.amountPay;
        newsletterSubscriptionManager3.paymentAPI = payMobileWallet27;
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertNull(virtualBookList6);
        org.junit.Assert.assertNotNull(rentedItemArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(newsletterList22);
        org.junit.Assert.assertNull(client23);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
    }

    @Test
    public void test1935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1935");
        model.LibraryManagementTeam libraryManagementTeam0 = new model.LibraryManagementTeam();
        int int1 = libraryManagementTeam0.ID;
        int int2 = libraryManagementTeam0.accessCode;
        model.Item item3 = null;
        libraryManagementTeam0.addAnItem(item3);
        java.util.ArrayList<model.Item> itemList5 = libraryManagementTeam0.items;
        model.ItemManagement itemManagement6 = libraryManagementTeam0.itemManagement;
        java.util.ArrayList<model.Item> itemList7 = libraryManagementTeam0.items;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(itemList5);
        org.junit.Assert.assertNull(itemManagement6);
        org.junit.Assert.assertNotNull(itemList7);
    }

    @Test
    public void test1936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1936");
        model.Database database0 = null;
        model.Register register1 = model.Register.makeRegister(database0);
        model.Faculty faculty2 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection3 = faculty2.courses;
        boolean boolean6 = register1.registerAsStaff((model.Staff) faculty2, "src/Book.csv", "src/Book.csv");
        model.Database database7 = model.Database.database;
        model.Student student8 = new model.Student();
        int int9 = student8.ID;
        model.StudentOnlineResources studentOnlineResources10 = new model.StudentOnlineResources((model.Client) student8);
        student8.ID = '#';
        database7.addClient((model.Client) student8);
        student8.email = "hi!";
        boolean boolean18 = register1.registerAsStaff((model.Staff) student8, "src/CD.csv", "src/Book.csv");
        model.Database database26 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str27 = database26.getVirtualBookFilePath();
        register1.database = database26;
        model.Database database36 = model.Database.createDatabase("", "src/CD.csv", "model.RegistrationFailedException: src/Magazine.csv", "model.RegistrationFailedException: src/Magazine.csv", "model.RegistrationFailedException: ", "src/Magazine.csv", "hi!");
        register1.database = database36;
        model.Database database38 = null;
        register1.database = database38;
        model.Database database40 = model.Database.database;
        java.util.ArrayList<java.lang.String> strList41 = database40.getAllItems();
        model.Student student42 = new model.Student();
        int int43 = student42.ID;
        model.StudentOnlineResources studentOnlineResources44 = new model.StudentOnlineResources((model.Client) student42);
        model.StudentOnlineResources studentOnlineResources45 = new model.StudentOnlineResources((model.Client) student42);
        database40.addClient((model.Client) student42);
        register1.database = database40;
        model.Database database48 = register1.database;
        model.Login login49 = model.Login.makeLogin(database48);
        model.Login login50 = new model.Login(database48);
        org.junit.Assert.assertNotNull(register1);
        org.junit.Assert.assertNull(courseCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "src/VirtualBook.csv" + "'", str27, "src/VirtualBook.csv");
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(database48);
        org.junit.Assert.assertNotNull(login49);
    }

    @Test
    public void test1937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1937");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.Student student5 = new model.Student();
        int int6 = student5.ID;
        model.StudentOnlineResources studentOnlineResources7 = new model.StudentOnlineResources((model.Client) student5);
        student5.ID = '#';
        java.lang.String str10 = student5.email;
        newsletterSubscriptionManager3.client = student5;
        model.Newsletter[] newsletterArray12 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList13 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList13, newsletterArray12);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager15 = new model.NewsletterSubscriptionManager(newsletterList13);
        newsletterSubscriptionManager3.newsletterSubscribed = newsletterList13;
        java.util.ArrayList<model.Newsletter> newsletterList17 = newsletterSubscriptionManager3.newsletterSubscribed;
        model.Newsletter[] newsletterArray18 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList19 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList19, newsletterArray18);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager21 = new model.NewsletterSubscriptionManager(newsletterList19);
        model.Client client22 = newsletterSubscriptionManager21.client;
        model.Student student23 = new model.Student();
        int int24 = student23.ID;
        model.StudentOnlineResources studentOnlineResources25 = new model.StudentOnlineResources((model.Client) student23);
        student23.ID = '#';
        java.lang.String str28 = student23.email;
        newsletterSubscriptionManager21.client = student23;
        model.Newsletter[] newsletterArray30 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList31 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList31, newsletterArray30);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager33 = new model.NewsletterSubscriptionManager(newsletterList31);
        newsletterSubscriptionManager21.newsletterSubscribed = newsletterList31;
        newsletterSubscriptionManager3.newsletterSubscribed = newsletterList31;
        java.util.ArrayList<model.Newsletter> newsletterList36 = newsletterSubscriptionManager3.newsletterSubscribed;
        model.Payment payment37 = newsletterSubscriptionManager3.paymentAPI;
        model.Payment payment38 = newsletterSubscriptionManager3.paymentAPI;
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(newsletterArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(newsletterList17);
        org.junit.Assert.assertNotNull(newsletterArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(client22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(newsletterArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(newsletterList36);
        org.junit.Assert.assertNull(payment37);
        org.junit.Assert.assertNull(payment38);
    }

    @Test
    public void test1938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1938");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.Database.database = database7;
        java.lang.String str10 = database7.virtualItemFilePath;
        model.Login login11 = new model.Login(database7);
        java.lang.String str12 = database7.getClientFilePath();
        model.Register register13 = model.Register.makeRegister(database7);
        java.lang.String str14 = database7.getVirtualBookFilePath();
        java.lang.String str15 = database7.getClientFilePath();
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "model.RegistrationFailedException: " + "'", str10, "model.RegistrationFailedException: ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "src/Client.csv" + "'", str12, "src/Client.csv");
        org.junit.Assert.assertNotNull(register13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "src/VirtualBook.csv" + "'", str14, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "src/Client.csv" + "'", str15, "src/Client.csv");
    }

    @Test
    public void test1939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1939");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.Database.database = database7;
        database7.itemPath = "";
        model.SearchClient searchClient12 = model.SearchClient.makeSearchClient(database7);
        java.lang.String str13 = database7.getVirtualBookFilePath();
        model.Client client15 = database7.getClient("model.RegistrationFailedException: src/Book.csv");
        java.lang.String str16 = database7.getBorrowedItemFilePath();
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
        org.junit.Assert.assertNotNull(searchClient12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "src/VirtualBook.csv" + "'", str13, "src/VirtualBook.csv");
        org.junit.Assert.assertNotNull(client15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "src/BorrowedItems.csv" + "'", str16, "src/BorrowedItems.csv");
    }

    @Test
    public void test1940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1940");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter54 = null;
        model.PaidNewsletter paidNewsletter55 = null;
        model.VirtualItemSearchResult virtualItemSearchResult56 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter54, paidNewsletter55);
        model.PaidNewsletter paidNewsletter57 = virtualItemSearchResult56.paidNewsletter;
        model.VirtualBook virtualBook58 = virtualItemSearchResult56.virtualBook;
        model.VirtualBook virtualBook59 = virtualItemSearchResult56.getVirtualBook();
        model.PaidNewsletter paidNewsletter60 = virtualItemSearchResult56.getPaidNewsletter();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertNull(paidNewsletter57);
        org.junit.Assert.assertNotNull(virtualBook58);
        org.junit.Assert.assertNotNull(virtualBook59);
        org.junit.Assert.assertNull(paidNewsletter60);
    }

    @Test
    public void test1941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1941");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.Database.database = database7;
        java.lang.String str10 = database7.virtualItemFilePath;
        model.Login login11 = model.Login.makeLogin(database7);
        java.util.ArrayList<java.lang.String> strList12 = database7.getAllItems();
        java.lang.String str13 = database7.getBookFilePath();
        java.lang.String str14 = database7.getNewspaperFilePath();
        boolean boolean16 = database7.addItem("");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "model.RegistrationFailedException: " + "'", str10, "model.RegistrationFailedException: ");
        org.junit.Assert.assertNotNull(login11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "src/Book.csv" + "'", str13, "src/Book.csv");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "src/Newsletter.csv" + "'", str14, "src/Newsletter.csv");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test1942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1942");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter54 = null;
        model.PaidNewsletter paidNewsletter55 = null;
        model.VirtualItemSearchResult virtualItemSearchResult56 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter54, paidNewsletter55);
        virtualBook4.title = "src/Magazine.csv";
        java.lang.String str59 = virtualBook4.publisher;
        virtualBook4.location = "src/Book.csv";
        java.time.LocalDate localDate62 = null;
        // The following exception was thrown during execution in test generation
        try {
            model.RentedItem rentedItem63 = new model.RentedItem((model.Item) virtualBook4, localDate62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.format(java.time.format.DateTimeFormatter)\" because \"borrowDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertNull(str59);
    }

    @Test
    public void test1943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1943");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter54 = null;
        model.PaidNewsletter paidNewsletter55 = null;
        model.VirtualItemSearchResult virtualItemSearchResult56 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter54, paidNewsletter55);
        model.UniProvidedNewsletter uniProvidedNewsletter57 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter57.title = "hi!";
        uniProvidedNewsletter57.title = "";
        virtualItemSearchResult56.uniNewsletter = uniProvidedNewsletter57;
        model.UniProvidedNewsletter uniProvidedNewsletter63 = virtualItemSearchResult56.uniNewsletter;
        model.PaidNewsletter paidNewsletter64 = virtualItemSearchResult56.getPaidNewsletter();
        model.PaidNewsletter paidNewsletter65 = new model.PaidNewsletter();
        virtualItemSearchResult56.setPaidNewsletter(paidNewsletter65);
        model.VirtualBook virtualBook67 = virtualItemSearchResult56.virtualBook;
        model.VirtualItemContent virtualItemContent69 = new model.VirtualItemContent("hi!");
        java.lang.String str70 = virtualItemContent69.link;
        java.lang.String str72 = virtualItemContent69.getContent("");
        java.lang.String str74 = virtualItemContent69.getContent("model.RegistrationFailedException: ");
        java.lang.String str75 = virtualItemContent69.link;
        java.lang.String str77 = virtualItemContent69.getContent("hi!");
        java.lang.String str79 = virtualItemContent69.getContent("model.RegistrationFailedException: ");
        virtualBook67.content = virtualItemContent69;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertNotNull(uniProvidedNewsletter63);
        org.junit.Assert.assertNull(paidNewsletter64);
        org.junit.Assert.assertNotNull(virtualBook67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!" + "'", str77, "hi!");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
    }

    @Test
    public void test1944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1944");
        model.Faculty faculty0 = new model.Faculty();
        faculty0.username = "hi!";
        java.util.Collection<model.Course> courseCollection3 = null;
        faculty0.courses = courseCollection3;
        java.util.Collection<model.Course> courseCollection5 = faculty0.courses;
        model.Newsletter[] newsletterArray6 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList7 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList7, newsletterArray6);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager9 = new model.NewsletterSubscriptionManager(newsletterList7);
        model.Client client10 = newsletterSubscriptionManager9.client;
        model.Student student11 = new model.Student();
        int int12 = student11.ID;
        model.StudentOnlineResources studentOnlineResources13 = new model.StudentOnlineResources((model.Client) student11);
        student11.ID = '#';
        java.lang.String str16 = student11.email;
        newsletterSubscriptionManager9.client = student11;
        model.Newsletter[] newsletterArray18 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList19 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList19, newsletterArray18);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager21 = new model.NewsletterSubscriptionManager(newsletterList19);
        newsletterSubscriptionManager9.newsletterSubscribed = newsletterList19;
        faculty0.newsletterManager = newsletterSubscriptionManager9;
        java.util.ArrayList<model.VirtualBook> virtualBookList24 = faculty0.virtualBooksAvailable;
        faculty0.email = "src/BorrowedItems.csv";
        java.lang.String str27 = faculty0.email;
        org.junit.Assert.assertNull(courseCollection5);
        org.junit.Assert.assertNotNull(newsletterArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(client10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(newsletterArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(virtualBookList24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "src/BorrowedItems.csv" + "'", str27, "src/BorrowedItems.csv");
    }

    @Test
    public void test1945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1945");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.Database.database = database7;
        java.lang.String str10 = database7.virtualItemFilePath;
        java.lang.String str11 = database7.getBookFilePath();
        database7.itemPath = "src/Magazine.csv";
        model.Login login14 = model.Login.makeLogin(database7);
        boolean boolean16 = database7.addItem("src/Client.csv");
        model.SearchItems searchItems17 = new model.SearchItems(database7);
        model.Book book19 = searchItems17.getBook("src/Magazine.csv");
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "src/Newsletter.csv" + "'", str10, "src/Newsletter.csv");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "src/Book.csv" + "'", str11, "src/Book.csv");
        org.junit.Assert.assertNotNull(login14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(book19);
    }

    @Test
    public void test1946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1946");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.UniProvidedNewsletter uniProvidedNewsletter5 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter5.title = "";
        java.lang.String str8 = uniProvidedNewsletter5.title;
        newsletterSubscriptionManager3.subscribeToUniProvidedNewsletter(uniProvidedNewsletter5, "");
        model.Student student11 = new model.Student();
        int int12 = student11.ID;
        model.StudentOnlineResources studentOnlineResources13 = new model.StudentOnlineResources((model.Client) student11);
        model.VirtualBook virtualBook15 = studentOnlineResources13.searchAccessibleBook("");
        model.CD cD17 = new model.CD("");
        model.Magazine magazine18 = null;
        model.Book book19 = null;
        model.CD cD20 = null;
        model.Magazine magazine21 = null;
        model.Book[] bookArray22 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList23 = new java.util.ArrayList<model.Book>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList23, bookArray22);
        model.CD[] cDArray25 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList26 = new java.util.ArrayList<model.CD>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList26, cDArray25);
        model.Magazine[] magazineArray28 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList29 = new java.util.ArrayList<model.Magazine>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList29, magazineArray28);
        model.ItemSearchResult itemSearchResult31 = new model.ItemSearchResult(book19, cD20, magazine21, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList29);
        model.Book book32 = null;
        model.CD cD33 = null;
        model.Magazine magazine34 = null;
        model.Book[] bookArray35 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList36 = new java.util.ArrayList<model.Book>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList36, bookArray35);
        model.CD[] cDArray38 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList39 = new java.util.ArrayList<model.CD>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList39, cDArray38);
        model.Magazine[] magazineArray41 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList42 = new java.util.ArrayList<model.Magazine>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList42, magazineArray41);
        model.ItemSearchResult itemSearchResult44 = new model.ItemSearchResult(book32, cD33, magazine34, (java.util.Collection<model.Book>) bookList36, (java.util.Collection<model.CD>) cDList39, (java.util.Collection<model.Magazine>) magazineList42);
        model.CD[] cDArray45 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList46 = new java.util.ArrayList<model.CD>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList46, cDArray45);
        itemSearchResult44.similarCD = cDList46;
        model.Book book49 = null;
        model.CD cD50 = null;
        model.Magazine magazine51 = null;
        model.Book[] bookArray52 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList53 = new java.util.ArrayList<model.Book>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList53, bookArray52);
        model.CD[] cDArray55 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList56 = new java.util.ArrayList<model.CD>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList56, cDArray55);
        model.Magazine[] magazineArray58 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList59 = new java.util.ArrayList<model.Magazine>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList59, magazineArray58);
        model.ItemSearchResult itemSearchResult61 = new model.ItemSearchResult(book49, cD50, magazine51, (java.util.Collection<model.Book>) bookList53, (java.util.Collection<model.CD>) cDList56, (java.util.Collection<model.Magazine>) magazineList59);
        model.ItemSearchResult itemSearchResult62 = new model.ItemSearchResult((model.Book) virtualBook15, cD17, magazine18, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList46, (java.util.Collection<model.Magazine>) magazineList59);
        int int63 = virtualBook15.ID;
        int int64 = virtualBook15.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter65 = null;
        model.PaidNewsletter paidNewsletter66 = null;
        model.VirtualItemSearchResult virtualItemSearchResult67 = new model.VirtualItemSearchResult(virtualBook15, uniProvidedNewsletter65, paidNewsletter66);
        model.PaidNewsletter paidNewsletter68 = virtualItemSearchResult67.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter69 = new model.UniProvidedNewsletter();
        virtualItemSearchResult67.setUniNewsletter(uniProvidedNewsletter69);
        java.lang.String str71 = uniProvidedNewsletter69.title;
        uniProvidedNewsletter69.cost = 0L;
        newsletterSubscriptionManager3.subscribeToUniProvidedNewsletter(uniProvidedNewsletter69, "");
        int int76 = uniProvidedNewsletter69.ID;
        java.lang.String str77 = uniProvidedNewsletter69.title;
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(virtualBook15);
        org.junit.Assert.assertNotNull(bookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(magazineArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(bookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(cDArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(magazineArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(bookArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(cDArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(magazineArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 20 + "'", int64 == 20);
        org.junit.Assert.assertNull(paidNewsletter68);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNull(str77);
    }

    @Test
    public void test1947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1947");
        model.Database database0 = null;
        model.Register register1 = model.Register.makeRegister(database0);
        model.Faculty faculty2 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection3 = faculty2.courses;
        boolean boolean6 = register1.registerAsStaff((model.Staff) faculty2, "src/Book.csv", "src/Book.csv");
        model.Database database7 = model.Database.database;
        model.Student student8 = new model.Student();
        int int9 = student8.ID;
        model.StudentOnlineResources studentOnlineResources10 = new model.StudentOnlineResources((model.Client) student8);
        student8.ID = '#';
        database7.addClient((model.Client) student8);
        student8.email = "hi!";
        boolean boolean18 = register1.registerAsStaff((model.Staff) student8, "src/CD.csv", "src/Book.csv");
        model.Database database26 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str27 = database26.getVirtualBookFilePath();
        register1.database = database26;
        model.Database database36 = model.Database.createDatabase("", "src/CD.csv", "model.RegistrationFailedException: src/Magazine.csv", "model.RegistrationFailedException: src/Magazine.csv", "model.RegistrationFailedException: ", "src/Magazine.csv", "hi!");
        register1.database = database36;
        model.Database database38 = null;
        register1.database = database38;
        model.Database database40 = register1.database;
        model.Faculty faculty41 = new model.Faculty();
        faculty41.username = "hi!";
        java.lang.String str44 = faculty41.username;
        model.Book book45 = null;
        model.CD cD46 = null;
        model.Magazine magazine47 = null;
        model.Book[] bookArray48 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList49 = new java.util.ArrayList<model.Book>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList49, bookArray48);
        model.CD[] cDArray51 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList52 = new java.util.ArrayList<model.CD>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList52, cDArray51);
        model.Magazine[] magazineArray54 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList55 = new java.util.ArrayList<model.Magazine>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList55, magazineArray54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult(book45, cD46, magazine47, (java.util.Collection<model.Book>) bookList49, (java.util.Collection<model.CD>) cDList52, (java.util.Collection<model.Magazine>) magazineList55);
        faculty41.textbooks = bookList49;
        faculty41.viewMyOnlineResource();
        boolean boolean62 = register1.registerAsStaff((model.Staff) faculty41, "model.RegistrationFailedException: model.RentingNotAllowedException: hi!", "src/Book.csv");
        model.Staff staff63 = null;
        boolean boolean66 = register1.registerAsStaff(staff63, "src/Client.csv", "src/Magazine.csv");
        org.junit.Assert.assertNotNull(register1);
        org.junit.Assert.assertNull(courseCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "src/VirtualBook.csv" + "'", str27, "src/VirtualBook.csv");
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNull(database40);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNotNull(bookArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(cDArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(magazineArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test1948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1948");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        virtualBook4.ID = (short) 10;
        boolean boolean54 = virtualBook4.canBePurchased;
        java.util.Calendar calendar55 = virtualBook4.date;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(calendar55);
    }

    @Test
    public void test1949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1949");
        model.Magazine magazine1 = new model.Magazine("model.RegistrationFailedException: model.RentingNotAllowedException: hi!");
    }

    @Test
    public void test1950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1950");
        model.Database database0 = model.Database.database;
        java.lang.String str1 = database0.getMagazineFilePath();
        int int2 = database0.getRandomID();
        database0.virtualItemFilePath = "model.RegistrationFailedException: model.RentingNotAllowedException: hi!";
        org.junit.Assert.assertNotNull(database0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "src/Magazine.csv" + "'", str1, "src/Magazine.csv");
// flaky:         org.junit.Assert.assertTrue("'" + int2 + "' != '" + 3615566 + "'", int2 == 3615566);
    }

    @Test
    public void test1951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1951");
        model.Database database0 = null;
        model.Register register1 = model.Register.makeRegister(database0);
        model.Faculty faculty2 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection3 = faculty2.courses;
        boolean boolean6 = register1.registerAsStaff((model.Staff) faculty2, "src/Book.csv", "src/Book.csv");
        java.lang.String str7 = faculty2.faculty;
        faculty2.ID = 'a';
        org.junit.Assert.assertNotNull(register1);
        org.junit.Assert.assertNull(courseCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1952");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.StudentOnlineResources studentOnlineResources3 = new model.StudentOnlineResources((model.Client) student0);
        model.RentedItem[] rentedItemArray4 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList5 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList5, rentedItemArray4);
        model.BorrowingManager borrowingManager7 = new model.BorrowingManager(rentedItemList5);
        model.Visitor visitor8 = new model.Visitor();
        visitor8.email = "hi!";
        borrowingManager7.client = visitor8;
        studentOnlineResources3.client = visitor8;
        model.Student student13 = new model.Student();
        int int14 = student13.ID;
        model.StudentOnlineResources studentOnlineResources15 = new model.StudentOnlineResources((model.Client) student13);
        model.VirtualBook virtualBook17 = studentOnlineResources15.searchAccessibleBook("");
        java.lang.String str18 = virtualBook17.location;
        model.VirtualItemContent virtualItemContent19 = virtualBook17.content;
        java.lang.String str20 = studentOnlineResources3.readVirtualItem((model.VirtualItem) virtualBook17);
        model.ItemManagement itemManagement21 = new model.ItemManagement();
        model.Item item23 = itemManagement21.selectAnItemFromDatabase((int) (short) 0);
        model.Database database24 = itemManagement21.database;
        model.BuySpecialItems buySpecialItems25 = new model.BuySpecialItems();
        model.CD cD27 = new model.CD("");
        int int28 = cD27.ID;
        boolean boolean30 = buySpecialItems25.buyAnItem((model.Item) cD27, (double) (short) 0);
        itemManagement21.addAnItem((model.Item) cD27);
        model.Student student32 = new model.Student();
        int int33 = student32.ID;
        model.StudentOnlineResources studentOnlineResources34 = new model.StudentOnlineResources((model.Client) student32);
        model.VirtualBook virtualBook36 = studentOnlineResources34.searchAccessibleBook("");
        model.CD cD38 = new model.CD("");
        model.Magazine magazine39 = null;
        model.Book book40 = null;
        model.CD cD41 = null;
        model.Magazine magazine42 = null;
        model.Book[] bookArray43 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList44 = new java.util.ArrayList<model.Book>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList44, bookArray43);
        model.CD[] cDArray46 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList47 = new java.util.ArrayList<model.CD>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList47, cDArray46);
        model.Magazine[] magazineArray49 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList50 = new java.util.ArrayList<model.Magazine>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList50, magazineArray49);
        model.ItemSearchResult itemSearchResult52 = new model.ItemSearchResult(book40, cD41, magazine42, (java.util.Collection<model.Book>) bookList44, (java.util.Collection<model.CD>) cDList47, (java.util.Collection<model.Magazine>) magazineList50);
        model.Book book53 = null;
        model.CD cD54 = null;
        model.Magazine magazine55 = null;
        model.Book[] bookArray56 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList57 = new java.util.ArrayList<model.Book>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList57, bookArray56);
        model.CD[] cDArray59 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList60 = new java.util.ArrayList<model.CD>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList60, cDArray59);
        model.Magazine[] magazineArray62 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList63 = new java.util.ArrayList<model.Magazine>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList63, magazineArray62);
        model.ItemSearchResult itemSearchResult65 = new model.ItemSearchResult(book53, cD54, magazine55, (java.util.Collection<model.Book>) bookList57, (java.util.Collection<model.CD>) cDList60, (java.util.Collection<model.Magazine>) magazineList63);
        model.CD[] cDArray66 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList67 = new java.util.ArrayList<model.CD>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList67, cDArray66);
        itemSearchResult65.similarCD = cDList67;
        model.Book book70 = null;
        model.CD cD71 = null;
        model.Magazine magazine72 = null;
        model.Book[] bookArray73 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList74 = new java.util.ArrayList<model.Book>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList74, bookArray73);
        model.CD[] cDArray76 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList77 = new java.util.ArrayList<model.CD>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList77, cDArray76);
        model.Magazine[] magazineArray79 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList80 = new java.util.ArrayList<model.Magazine>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList80, magazineArray79);
        model.ItemSearchResult itemSearchResult82 = new model.ItemSearchResult(book70, cD71, magazine72, (java.util.Collection<model.Book>) bookList74, (java.util.Collection<model.CD>) cDList77, (java.util.Collection<model.Magazine>) magazineList80);
        model.ItemSearchResult itemSearchResult83 = new model.ItemSearchResult((model.Book) virtualBook36, cD38, magazine39, (java.util.Collection<model.Book>) bookList44, (java.util.Collection<model.CD>) cDList67, (java.util.Collection<model.Magazine>) magazineList80);
        int int84 = virtualBook36.ID;
        int int85 = virtualBook36.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter86 = null;
        model.PaidNewsletter paidNewsletter87 = null;
        model.VirtualItemSearchResult virtualItemSearchResult88 = new model.VirtualItemSearchResult(virtualBook36, uniProvidedNewsletter86, paidNewsletter87);
        model.PaidNewsletter paidNewsletter89 = virtualItemSearchResult88.getPaidNewsletter();
        model.PaidNewsletter paidNewsletter90 = virtualItemSearchResult88.getPaidNewsletter();
        model.VirtualBook virtualBook91 = virtualItemSearchResult88.getVirtualBook();
        itemManagement21.enableAnItem((model.Item) virtualBook91);
        java.lang.String str93 = studentOnlineResources3.readVirtualItem((model.VirtualItem) virtualBook91);
        java.util.Calendar calendar94 = null;
        virtualBook91.date = calendar94;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(rentedItemArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(virtualBook17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(virtualItemContent19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(item23);
        org.junit.Assert.assertNull(database24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(virtualBook36);
        org.junit.Assert.assertNotNull(bookArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(cDArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(magazineArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(bookArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(cDArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(magazineArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(cDArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(bookArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(cDArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(magazineArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 20 + "'", int85 == 20);
        org.junit.Assert.assertNull(paidNewsletter89);
        org.junit.Assert.assertNull(paidNewsletter90);
        org.junit.Assert.assertNotNull(virtualBook91);
        org.junit.Assert.assertNull(str93);
    }

    @Test
    public void test1953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1953");
        model.Course course0 = new model.Course();
        java.lang.String str1 = course0.subject;
        course0.code = "";
        int int4 = course0.year;
        course0.subject = "src/CD.csv";
        java.lang.String str7 = course0.code;
        course0.subject = "src/Newsletter.csv";
        java.lang.String str10 = course0.code;
        course0.code = "hi!";
        java.lang.String str13 = course0.code;
        java.lang.String str14 = course0.code;
        course0.code = "src/Magazine.csv";
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test1954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1954");
        model.Database database0 = null;
        model.Login login1 = new model.Login(database0);
        model.Database database9 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str10 = database9.getBookFilePath();
        database9.itemPath = "hi!";
        model.Database.database = database9;
        java.lang.String str14 = database9.getNewspaperFilePath();
        login1.db = database9;
        model.Database database16 = null;
        model.Register register17 = model.Register.makeRegister(database16);
        model.Faculty faculty18 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection19 = faculty18.courses;
        boolean boolean22 = register17.registerAsStaff((model.Staff) faculty18, "src/Book.csv", "src/Book.csv");
        model.Faculty faculty23 = new model.Faculty();
        faculty23.username = "hi!";
        java.lang.String str26 = faculty23.username;
        boolean boolean29 = register17.registerAsStaff((model.Staff) faculty23, "src/CD.csv", "hi!");
        model.Database database37 = model.Database.createDatabase("src/Book.csv", "src/CD.csv", "hi!", "src/Client.csv", "hi!", "model.RegistrationFailedException: ", "");
        register17.database = database37;
        login1.db = database37;
        model.ItemManagement itemManagement40 = new model.ItemManagement();
        model.Database database41 = null;
        itemManagement40.database = database41;
        model.Database database50 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        java.lang.String str51 = database50.itemPath;
        itemManagement40.database = database50;
        model.SearchVirtualItem searchVirtualItem53 = new model.SearchVirtualItem(database50);
        java.lang.String str54 = database50.getNewspaperFilePath();
        login1.db = database50;
        model.Database database63 = model.Database.createDatabase("src/Client.csv", "src/Book.csv", "model.RegistrationFailedException: src/Book.csv", "src/VirtualBook.csv", "model.RegistrationFailedException: ", "model.RegistrationFailedException: src/Book.csv", "src/CD.csv");
        model.SearchVirtualItem searchVirtualItem64 = new model.SearchVirtualItem(database63);
        java.lang.String str65 = database63.itemPath;
        login1.db = database63;
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "src/Book.csv" + "'", str10, "src/Book.csv");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "src/Newsletter.csv" + "'", str14, "src/Newsletter.csv");
        org.junit.Assert.assertNotNull(register17);
        org.junit.Assert.assertNull(courseCollection19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(database37);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "src/Newsletter.csv" + "'", str54, "src/Newsletter.csv");
        org.junit.Assert.assertNotNull(database63);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
    }

    @Test
    public void test1955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1955");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.Book book1 = null;
        model.CD cD3 = new model.CD("");
        model.Magazine magazine4 = null;
        java.util.Collection<model.Book> bookCollection5 = null;
        model.Book book6 = null;
        model.CD cD7 = null;
        model.Magazine magazine8 = null;
        model.Book[] bookArray9 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList10 = new java.util.ArrayList<model.Book>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList10, bookArray9);
        model.CD[] cDArray12 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList13 = new java.util.ArrayList<model.CD>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList13, cDArray12);
        model.Magazine[] magazineArray15 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList16 = new java.util.ArrayList<model.Magazine>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList16, magazineArray15);
        model.ItemSearchResult itemSearchResult18 = new model.ItemSearchResult(book6, cD7, magazine8, (java.util.Collection<model.Book>) bookList10, (java.util.Collection<model.CD>) cDList13, (java.util.Collection<model.Magazine>) magazineList16);
        model.Book book19 = null;
        model.CD cD20 = null;
        model.Magazine magazine21 = null;
        model.Book[] bookArray22 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList23 = new java.util.ArrayList<model.Book>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList23, bookArray22);
        model.CD[] cDArray25 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList26 = new java.util.ArrayList<model.CD>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList26, cDArray25);
        model.Magazine[] magazineArray28 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList29 = new java.util.ArrayList<model.Magazine>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList29, magazineArray28);
        model.ItemSearchResult itemSearchResult31 = new model.ItemSearchResult(book19, cD20, magazine21, (java.util.Collection<model.Book>) bookList23, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList29);
        itemSearchResult18.similarCD = cDList26;
        model.Book book33 = null;
        model.CD cD34 = null;
        model.Magazine magazine35 = null;
        model.Book[] bookArray36 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList37 = new java.util.ArrayList<model.Book>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList37, bookArray36);
        model.CD[] cDArray39 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList40 = new java.util.ArrayList<model.CD>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList40, cDArray39);
        model.Magazine[] magazineArray42 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList43 = new java.util.ArrayList<model.Magazine>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList43, magazineArray42);
        model.ItemSearchResult itemSearchResult45 = new model.ItemSearchResult(book33, cD34, magazine35, (java.util.Collection<model.Book>) bookList37, (java.util.Collection<model.CD>) cDList40, (java.util.Collection<model.Magazine>) magazineList43);
        model.ItemSearchResult itemSearchResult46 = new model.ItemSearchResult(book1, cD3, magazine4, bookCollection5, (java.util.Collection<model.CD>) cDList26, (java.util.Collection<model.Magazine>) magazineList43);
        cD3.ID = (short) 10;
        cD3.canBePurchased = false;
        boolean boolean51 = cD3.canBePurchased;
        model.Faculty faculty52 = new model.Faculty();
        boolean boolean53 = rentAndReturnSystem0.rentAnItem((model.Item) cD3, (model.Client) faculty52);
        java.lang.String str54 = faculty52.faculty;
        model.RentedItem[] rentedItemArray55 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList56 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList56, rentedItemArray55);
        model.BorrowingManager borrowingManager58 = new model.BorrowingManager(rentedItemList56);
        boolean boolean59 = borrowingManager58.canRent();
        model.Client client60 = borrowingManager58.client;
        faculty52.borrowManager = borrowingManager58;
        java.util.ArrayList<model.RentedItem> rentedItemList62 = borrowingManager58.physicalItemBorrowed;
        org.junit.Assert.assertNotNull(bookArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(cDArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(magazineArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(bookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(cDArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(magazineArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(bookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(magazineArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(rentedItemArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(client60);
        org.junit.Assert.assertNotNull(rentedItemList62);
    }

    @Test
    public void test1956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1956");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.UniProvidedNewsletter uniProvidedNewsletter5 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter5.title = "";
        java.lang.String str8 = uniProvidedNewsletter5.title;
        newsletterSubscriptionManager3.subscribeToUniProvidedNewsletter(uniProvidedNewsletter5, "");
        java.util.ArrayList<model.Newsletter> newsletterList11 = newsletterSubscriptionManager3.newsletterSubscribed;
        model.Visitor visitor12 = new model.Visitor();
        visitor12.email = "hi!";
        newsletterSubscriptionManager3.client = visitor12;
        model.StudentOnlineResources studentOnlineResources16 = new model.StudentOnlineResources((model.Client) visitor12);
        model.Newsletter newsletter18 = studentOnlineResources16.searchSubscribedNewsletter("src/VirtualBook.csv");
        model.Request request19 = new model.Request();
        java.lang.String str20 = request19.type;
        model.Database database28 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database28;
        model.SearchVirtualItem searchVirtualItem30 = new model.SearchVirtualItem(database28);
        model.RentAndReturnSystem rentAndReturnSystem31 = new model.RentAndReturnSystem();
        model.Book book32 = null;
        model.CD cD34 = new model.CD("");
        model.Magazine magazine35 = null;
        java.util.Collection<model.Book> bookCollection36 = null;
        model.Book book37 = null;
        model.CD cD38 = null;
        model.Magazine magazine39 = null;
        model.Book[] bookArray40 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList41 = new java.util.ArrayList<model.Book>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList41, bookArray40);
        model.CD[] cDArray43 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList44 = new java.util.ArrayList<model.CD>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList44, cDArray43);
        model.Magazine[] magazineArray46 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList47 = new java.util.ArrayList<model.Magazine>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList47, magazineArray46);
        model.ItemSearchResult itemSearchResult49 = new model.ItemSearchResult(book37, cD38, magazine39, (java.util.Collection<model.Book>) bookList41, (java.util.Collection<model.CD>) cDList44, (java.util.Collection<model.Magazine>) magazineList47);
        model.Book book50 = null;
        model.CD cD51 = null;
        model.Magazine magazine52 = null;
        model.Book[] bookArray53 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList54 = new java.util.ArrayList<model.Book>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList54, bookArray53);
        model.CD[] cDArray56 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList57 = new java.util.ArrayList<model.CD>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList57, cDArray56);
        model.Magazine[] magazineArray59 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList60 = new java.util.ArrayList<model.Magazine>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList60, magazineArray59);
        model.ItemSearchResult itemSearchResult62 = new model.ItemSearchResult(book50, cD51, magazine52, (java.util.Collection<model.Book>) bookList54, (java.util.Collection<model.CD>) cDList57, (java.util.Collection<model.Magazine>) magazineList60);
        itemSearchResult49.similarCD = cDList57;
        model.Book book64 = null;
        model.CD cD65 = null;
        model.Magazine magazine66 = null;
        model.Book[] bookArray67 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList68 = new java.util.ArrayList<model.Book>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList68, bookArray67);
        model.CD[] cDArray70 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList71 = new java.util.ArrayList<model.CD>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList71, cDArray70);
        model.Magazine[] magazineArray73 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList74 = new java.util.ArrayList<model.Magazine>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList74, magazineArray73);
        model.ItemSearchResult itemSearchResult76 = new model.ItemSearchResult(book64, cD65, magazine66, (java.util.Collection<model.Book>) bookList68, (java.util.Collection<model.CD>) cDList71, (java.util.Collection<model.Magazine>) magazineList74);
        model.ItemSearchResult itemSearchResult77 = new model.ItemSearchResult(book32, cD34, magazine35, bookCollection36, (java.util.Collection<model.CD>) cDList57, (java.util.Collection<model.Magazine>) magazineList74);
        cD34.ID = (short) 10;
        cD34.canBePurchased = false;
        boolean boolean82 = cD34.canBePurchased;
        model.Faculty faculty83 = new model.Faculty();
        boolean boolean84 = rentAndReturnSystem31.rentAnItem((model.Item) cD34, (model.Client) faculty83);
        java.lang.String str85 = faculty83.faculty;
        database28.addClient((model.Client) faculty83);
        request19.requestee = faculty83;
        model.NewsletterSubscriptionManager newsletterSubscriptionManager88 = faculty83.newsletterManager;
        faculty83.email = "";
        studentOnlineResources16.client = faculty83;
        java.util.Iterator<model.VirtualItem> virtualItemItor92 = studentOnlineResources16.iterator();
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(newsletterList11);
        org.junit.Assert.assertNull(newsletter18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(bookArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(cDArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(magazineArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(bookArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(cDArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(magazineArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(bookArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(cDArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(magazineArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNull(newsletterSubscriptionManager88);
        org.junit.Assert.assertNull(virtualItemItor92);
    }

    @Test
    public void test1957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1957");
        model.BuySpecialItems buySpecialItems0 = new model.BuySpecialItems();
        model.Payment payment1 = null;
        buySpecialItems0.paymentAPI = payment1;
        model.RequestForum requestForum3 = model.RequestForum.createRequestForum();
        model.LibraryManagementTeam libraryManagementTeam4 = new model.LibraryManagementTeam();
        int int5 = libraryManagementTeam4.ID;
        int int6 = libraryManagementTeam4.accessCode;
        model.Item item7 = null;
        libraryManagementTeam4.addAnItem(item7);
        requestForum3.managementTeam = libraryManagementTeam4;
        java.util.ArrayList<model.Item> itemList10 = libraryManagementTeam4.items;
        buySpecialItems0.purchasedItems = itemList10;
        model.Payment payment12 = buySpecialItems0.paymentAPI;
        model.PayDebit payDebit13 = new model.PayDebit();
        buySpecialItems0.paymentAPI = payDebit13;
        double double15 = payDebit13.amountPay;
        payDebit13.pay((double) '#');
        double double18 = payDebit13.amountPay;
        org.junit.Assert.assertNotNull(requestForum3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(itemList10);
        org.junit.Assert.assertNull(payment12);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 35.0d + "'", double18 == 35.0d);
    }

    @Test
    public void test1958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1958");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        model.Visitor visitor4 = new model.Visitor();
        visitor4.email = "hi!";
        borrowingManager3.client = visitor4;
        model.SearchBorrowedItem searchBorrowedItem8 = model.SearchBorrowedItem.makeSearchBorrowedItem();
        model.Visitor visitor9 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList10 = visitor9.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources11 = new model.StudentOnlineResources((model.Client) visitor9);
        model.RentedItem[] rentedItemArray12 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList13 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList13, rentedItemArray12);
        model.BorrowingManager borrowingManager15 = new model.BorrowingManager(rentedItemList13);
        model.Visitor visitor16 = new model.Visitor();
        visitor16.email = "hi!";
        borrowingManager15.client = visitor16;
        studentOnlineResources11.client = visitor16;
        model.Student student21 = new model.Student();
        int int22 = student21.ID;
        model.StudentOnlineResources studentOnlineResources23 = new model.StudentOnlineResources((model.Client) student21);
        model.VirtualBook virtualBook25 = studentOnlineResources23.searchAccessibleBook("");
        model.CD cD27 = new model.CD("");
        model.Magazine magazine28 = null;
        model.Book book29 = null;
        model.CD cD30 = null;
        model.Magazine magazine31 = null;
        model.Book[] bookArray32 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList33 = new java.util.ArrayList<model.Book>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList33, bookArray32);
        model.CD[] cDArray35 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList36 = new java.util.ArrayList<model.CD>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList36, cDArray35);
        model.Magazine[] magazineArray38 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList39 = new java.util.ArrayList<model.Magazine>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList39, magazineArray38);
        model.ItemSearchResult itemSearchResult41 = new model.ItemSearchResult(book29, cD30, magazine31, (java.util.Collection<model.Book>) bookList33, (java.util.Collection<model.CD>) cDList36, (java.util.Collection<model.Magazine>) magazineList39);
        model.Book book42 = null;
        model.CD cD43 = null;
        model.Magazine magazine44 = null;
        model.Book[] bookArray45 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList46 = new java.util.ArrayList<model.Book>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList46, bookArray45);
        model.CD[] cDArray48 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList49 = new java.util.ArrayList<model.CD>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList49, cDArray48);
        model.Magazine[] magazineArray51 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList52 = new java.util.ArrayList<model.Magazine>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList52, magazineArray51);
        model.ItemSearchResult itemSearchResult54 = new model.ItemSearchResult(book42, cD43, magazine44, (java.util.Collection<model.Book>) bookList46, (java.util.Collection<model.CD>) cDList49, (java.util.Collection<model.Magazine>) magazineList52);
        model.CD[] cDArray55 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList56 = new java.util.ArrayList<model.CD>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList56, cDArray55);
        itemSearchResult54.similarCD = cDList56;
        model.Book book59 = null;
        model.CD cD60 = null;
        model.Magazine magazine61 = null;
        model.Book[] bookArray62 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList63 = new java.util.ArrayList<model.Book>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList63, bookArray62);
        model.CD[] cDArray65 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList66 = new java.util.ArrayList<model.CD>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList66, cDArray65);
        model.Magazine[] magazineArray68 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList69 = new java.util.ArrayList<model.Magazine>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList69, magazineArray68);
        model.ItemSearchResult itemSearchResult71 = new model.ItemSearchResult(book59, cD60, magazine61, (java.util.Collection<model.Book>) bookList63, (java.util.Collection<model.CD>) cDList66, (java.util.Collection<model.Magazine>) magazineList69);
        model.ItemSearchResult itemSearchResult72 = new model.ItemSearchResult((model.Book) virtualBook25, cD27, magazine28, (java.util.Collection<model.Book>) bookList33, (java.util.Collection<model.CD>) cDList56, (java.util.Collection<model.Magazine>) magazineList69);
        java.lang.String str73 = studentOnlineResources11.readVirtualItem((model.VirtualItem) virtualBook25);
        model.Visitor visitor75 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList76 = visitor75.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources77 = new model.StudentOnlineResources((model.Client) visitor75);
        searchBorrowedItem8.addPhyscialItem((model.Item) virtualBook25, "", (model.Client) visitor75);
        model.SearchBorrowedItem.object = searchBorrowedItem8;
        java.util.ArrayList<model.RentedItem> rentedItemList82 = searchBorrowedItem8.searchBorrowedItem("src/VirtualBook.csv", "src/BorrowedItems.csv");
        borrowingManager3.physicalItemBorrowed = rentedItemList82;
        float float84 = borrowingManager3.amountOwned;
        double double85 = borrowingManager3.checkBalanceOwed();
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(searchBorrowedItem8);
        org.junit.Assert.assertNull(virtualBookList10);
        org.junit.Assert.assertNotNull(rentedItemArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(virtualBook25);
        org.junit.Assert.assertNotNull(bookArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(cDArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(magazineArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(bookArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(cDArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(magazineArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(cDArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(bookArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(cDArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(magazineArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNull(virtualBookList76);
        org.junit.Assert.assertNotNull(rentedItemList82);
        org.junit.Assert.assertTrue("'" + float84 + "' != '" + 0.0f + "'", float84 == 0.0f);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
    }

    @Test
    public void test1959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1959");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter54 = null;
        model.PaidNewsletter paidNewsletter55 = null;
        model.VirtualItemSearchResult virtualItemSearchResult56 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter54, paidNewsletter55);
        model.PaidNewsletter paidNewsletter57 = virtualItemSearchResult56.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter58 = new model.UniProvidedNewsletter();
        virtualItemSearchResult56.setUniNewsletter(uniProvidedNewsletter58);
        model.PaidNewsletter paidNewsletter60 = virtualItemSearchResult56.getPaidNewsletter();
        model.PaidNewsletter paidNewsletter61 = virtualItemSearchResult56.getPaidNewsletter();
        model.VirtualBook virtualBook62 = virtualItemSearchResult56.virtualBook;
        model.VirtualBook virtualBook63 = virtualItemSearchResult56.getVirtualBook();
        model.PaidNewsletter paidNewsletter64 = virtualItemSearchResult56.getPaidNewsletter();
        model.Student student65 = new model.Student();
        int int66 = student65.ID;
        model.StudentOnlineResources studentOnlineResources67 = new model.StudentOnlineResources((model.Client) student65);
        model.VirtualBook virtualBook69 = studentOnlineResources67.searchAccessibleBook("");
        java.lang.String str70 = virtualBook69.location;
        int int71 = virtualBook69.ID;
        virtualBook69.isBookLost = false;
        java.lang.String str74 = virtualBook69.author;
        virtualBook69.isBookLost = true;
        virtualBook69.edition = (byte) 10;
        virtualBook69.ISBN = "";
        virtualItemSearchResult56.setVirtualBook(virtualBook69);
        model.BuySpecialItems buySpecialItems82 = new model.BuySpecialItems();
        model.Payment payment83 = buySpecialItems82.paymentAPI;
        java.util.ArrayList<model.Item> itemList84 = buySpecialItems82.purchasedItems;
        model.Payment payment85 = buySpecialItems82.paymentAPI;
        model.Student student86 = new model.Student();
        int int87 = student86.ID;
        model.StudentOnlineResources studentOnlineResources88 = new model.StudentOnlineResources((model.Client) student86);
        model.VirtualBook virtualBook90 = studentOnlineResources88.searchAccessibleBook("");
        virtualBook90.ID = 20;
        virtualBook90.ID = (short) 100;
        boolean boolean95 = virtualBook90.canBePurchased;
        boolean boolean97 = buySpecialItems82.buyAnItem((model.Item) virtualBook90, (double) 31);
        virtualItemSearchResult56.setVirtualBook(virtualBook90);
        model.VirtualBook virtualBook99 = virtualItemSearchResult56.virtualBook;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertNull(paidNewsletter57);
        org.junit.Assert.assertNull(paidNewsletter60);
        org.junit.Assert.assertNull(paidNewsletter61);
        org.junit.Assert.assertNotNull(virtualBook62);
        org.junit.Assert.assertNotNull(virtualBook63);
        org.junit.Assert.assertNull(paidNewsletter64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(virtualBook69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNull(payment83);
        org.junit.Assert.assertNotNull(itemList84);
        org.junit.Assert.assertNull(payment85);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(virtualBook90);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(virtualBook99);
    }

    @Test
    public void test1960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1960");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.UniProvidedNewsletter uniProvidedNewsletter5 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter5.title = "";
        java.lang.String str8 = uniProvidedNewsletter5.title;
        newsletterSubscriptionManager3.subscribeToUniProvidedNewsletter(uniProvidedNewsletter5, "");
        java.util.ArrayList<model.Newsletter> newsletterList11 = newsletterSubscriptionManager3.newsletterSubscribed;
        model.Visitor visitor12 = new model.Visitor();
        visitor12.email = "hi!";
        newsletterSubscriptionManager3.client = visitor12;
        java.util.ArrayList<model.VirtualBook> virtualBookList16 = visitor12.virtualBooksAvailable;
        java.lang.String str17 = visitor12.username;
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(newsletterList11);
        org.junit.Assert.assertNull(virtualBookList16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test1961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1961");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.VirtualItemContent virtualItemContent5 = virtualBook4.content;
        model.Student student6 = new model.Student();
        int int7 = student6.ID;
        model.StudentOnlineResources studentOnlineResources8 = new model.StudentOnlineResources((model.Client) student6);
        model.VirtualBook virtualBook10 = studentOnlineResources8.searchAccessibleBook("");
        model.CD cD12 = new model.CD("");
        model.Magazine magazine13 = null;
        model.Book book14 = null;
        model.CD cD15 = null;
        model.Magazine magazine16 = null;
        model.Book[] bookArray17 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList18 = new java.util.ArrayList<model.Book>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList18, bookArray17);
        model.CD[] cDArray20 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList21 = new java.util.ArrayList<model.CD>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList21, cDArray20);
        model.Magazine[] magazineArray23 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList24 = new java.util.ArrayList<model.Magazine>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList24, magazineArray23);
        model.ItemSearchResult itemSearchResult26 = new model.ItemSearchResult(book14, cD15, magazine16, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList21, (java.util.Collection<model.Magazine>) magazineList24);
        model.Book book27 = null;
        model.CD cD28 = null;
        model.Magazine magazine29 = null;
        model.Book[] bookArray30 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList31 = new java.util.ArrayList<model.Book>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList31, bookArray30);
        model.CD[] cDArray33 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList34 = new java.util.ArrayList<model.CD>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList34, cDArray33);
        model.Magazine[] magazineArray36 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList37 = new java.util.ArrayList<model.Magazine>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList37, magazineArray36);
        model.ItemSearchResult itemSearchResult39 = new model.ItemSearchResult(book27, cD28, magazine29, (java.util.Collection<model.Book>) bookList31, (java.util.Collection<model.CD>) cDList34, (java.util.Collection<model.Magazine>) magazineList37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        itemSearchResult39.similarCD = cDList41;
        model.Book book44 = null;
        model.CD cD45 = null;
        model.Magazine magazine46 = null;
        model.Book[] bookArray47 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList48 = new java.util.ArrayList<model.Book>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList48, bookArray47);
        model.CD[] cDArray50 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList51 = new java.util.ArrayList<model.CD>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList51, cDArray50);
        model.Magazine[] magazineArray53 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList54 = new java.util.ArrayList<model.Magazine>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList54, magazineArray53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult(book44, cD45, magazine46, (java.util.Collection<model.Book>) bookList48, (java.util.Collection<model.CD>) cDList51, (java.util.Collection<model.Magazine>) magazineList54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult((model.Book) virtualBook10, cD12, magazine13, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList54);
        int int58 = virtualBook10.ID;
        int int59 = virtualBook10.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter60 = null;
        model.PaidNewsletter paidNewsletter61 = null;
        model.VirtualItemSearchResult virtualItemSearchResult62 = new model.VirtualItemSearchResult(virtualBook10, uniProvidedNewsletter60, paidNewsletter61);
        model.PaidNewsletter paidNewsletter63 = virtualItemSearchResult62.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter64 = new model.UniProvidedNewsletter();
        virtualItemSearchResult62.setUniNewsletter(uniProvidedNewsletter64);
        java.lang.String str66 = uniProvidedNewsletter64.title;
        model.PaidNewsletter paidNewsletter67 = null;
        model.VirtualItemSearchResult virtualItemSearchResult68 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter64, paidNewsletter67);
        model.VirtualBook virtualBook69 = virtualItemSearchResult68.virtualBook;
        model.PaidNewsletter paidNewsletter70 = new model.PaidNewsletter();
        virtualItemSearchResult68.setPaidNewsletter(paidNewsletter70);
        paidNewsletter70.subscriptionPrice = 'a';
        double double74 = paidNewsletter70.subscriptionPrice;
        paidNewsletter70.subscriptionPrice = (-1L);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNull(virtualItemContent5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(virtualBook10);
        org.junit.Assert.assertNotNull(bookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(cDArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(magazineArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(bookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(magazineArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(bookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(cDArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(magazineArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 20 + "'", int59 == 20);
        org.junit.Assert.assertNull(paidNewsletter63);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(virtualBook69);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 97.0d + "'", double74 == 97.0d);
    }

    @Test
    public void test1962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1962");
        model.LibraryManagementTeam libraryManagementTeam0 = new model.LibraryManagementTeam();
        int int1 = libraryManagementTeam0.ID;
        libraryManagementTeam0.accessCode = (-1);
        model.Student student4 = new model.Student();
        int int5 = student4.ID;
        model.StudentOnlineResources studentOnlineResources6 = new model.StudentOnlineResources((model.Client) student4);
        model.VirtualBook virtualBook8 = studentOnlineResources6.searchAccessibleBook("");
        model.VirtualItemContent virtualItemContent9 = virtualBook8.content;
        model.Student student10 = new model.Student();
        int int11 = student10.ID;
        model.StudentOnlineResources studentOnlineResources12 = new model.StudentOnlineResources((model.Client) student10);
        model.VirtualBook virtualBook14 = studentOnlineResources12.searchAccessibleBook("");
        model.CD cD16 = new model.CD("");
        model.Magazine magazine17 = null;
        model.Book book18 = null;
        model.CD cD19 = null;
        model.Magazine magazine20 = null;
        model.Book[] bookArray21 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList22 = new java.util.ArrayList<model.Book>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList22, bookArray21);
        model.CD[] cDArray24 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList25 = new java.util.ArrayList<model.CD>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList25, cDArray24);
        model.Magazine[] magazineArray27 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList28 = new java.util.ArrayList<model.Magazine>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList28, magazineArray27);
        model.ItemSearchResult itemSearchResult30 = new model.ItemSearchResult(book18, cD19, magazine20, (java.util.Collection<model.Book>) bookList22, (java.util.Collection<model.CD>) cDList25, (java.util.Collection<model.Magazine>) magazineList28);
        model.Book book31 = null;
        model.CD cD32 = null;
        model.Magazine magazine33 = null;
        model.Book[] bookArray34 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList35 = new java.util.ArrayList<model.Book>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList35, bookArray34);
        model.CD[] cDArray37 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList38 = new java.util.ArrayList<model.CD>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList38, cDArray37);
        model.Magazine[] magazineArray40 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList41 = new java.util.ArrayList<model.Magazine>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList41, magazineArray40);
        model.ItemSearchResult itemSearchResult43 = new model.ItemSearchResult(book31, cD32, magazine33, (java.util.Collection<model.Book>) bookList35, (java.util.Collection<model.CD>) cDList38, (java.util.Collection<model.Magazine>) magazineList41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        itemSearchResult43.similarCD = cDList45;
        model.Book book48 = null;
        model.CD cD49 = null;
        model.Magazine magazine50 = null;
        model.Book[] bookArray51 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList52 = new java.util.ArrayList<model.Book>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList52, bookArray51);
        model.CD[] cDArray54 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList55 = new java.util.ArrayList<model.CD>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList55, cDArray54);
        model.Magazine[] magazineArray57 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList58 = new java.util.ArrayList<model.Magazine>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList58, magazineArray57);
        model.ItemSearchResult itemSearchResult60 = new model.ItemSearchResult(book48, cD49, magazine50, (java.util.Collection<model.Book>) bookList52, (java.util.Collection<model.CD>) cDList55, (java.util.Collection<model.Magazine>) magazineList58);
        model.ItemSearchResult itemSearchResult61 = new model.ItemSearchResult((model.Book) virtualBook14, cD16, magazine17, (java.util.Collection<model.Book>) bookList22, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList58);
        int int62 = virtualBook14.ID;
        int int63 = virtualBook14.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter64 = null;
        model.PaidNewsletter paidNewsletter65 = null;
        model.VirtualItemSearchResult virtualItemSearchResult66 = new model.VirtualItemSearchResult(virtualBook14, uniProvidedNewsletter64, paidNewsletter65);
        model.PaidNewsletter paidNewsletter67 = virtualItemSearchResult66.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter68 = new model.UniProvidedNewsletter();
        virtualItemSearchResult66.setUniNewsletter(uniProvidedNewsletter68);
        java.lang.String str70 = uniProvidedNewsletter68.title;
        model.PaidNewsletter paidNewsletter71 = null;
        model.VirtualItemSearchResult virtualItemSearchResult72 = new model.VirtualItemSearchResult(virtualBook8, uniProvidedNewsletter68, paidNewsletter71);
        model.VirtualItemContent virtualItemContent74 = new model.VirtualItemContent("hi!");
        java.lang.String str75 = virtualItemContent74.link;
        java.lang.String str77 = virtualItemContent74.getContent("");
        java.lang.String str79 = virtualItemContent74.getContent("model.RegistrationFailedException: ");
        java.lang.String str80 = virtualItemContent74.link;
        virtualBook8.content = virtualItemContent74;
        libraryManagementTeam0.enableAnItem((model.Item) virtualBook8);
        model.Magazine magazine84 = new model.Magazine("hi!");
        libraryManagementTeam0.addAnItem((model.Item) magazine84);
        libraryManagementTeam0.ID = 97;
        model.ItemManagement itemManagement88 = libraryManagementTeam0.itemManagement;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(virtualBook8);
        org.junit.Assert.assertNull(virtualItemContent9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(virtualBook14);
        org.junit.Assert.assertNotNull(bookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(cDArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(magazineArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(bookArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(cDArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(magazineArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(bookArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(cDArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(magazineArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 20 + "'", int63 == 20);
        org.junit.Assert.assertNull(paidNewsletter67);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!" + "'", str77, "hi!");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertNull(itemManagement88);
    }

    @Test
    public void test1963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1963");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.Payment payment1 = rentAndReturnSystem0.paymentAPI;
        model.PayMobileWallet payMobileWallet2 = new model.PayMobileWallet();
        payMobileWallet2.amountPay = 100.0f;
        payMobileWallet2.pay((double) 100L);
        rentAndReturnSystem0.paymentAPI = payMobileWallet2;
        model.Payment payment8 = rentAndReturnSystem0.paymentAPI;
        model.Student student9 = new model.Student();
        int int10 = student9.ID;
        model.StudentOnlineResources studentOnlineResources11 = new model.StudentOnlineResources((model.Client) student9);
        model.VirtualBook virtualBook13 = studentOnlineResources11.searchAccessibleBook("");
        model.CD cD15 = new model.CD("");
        model.Magazine magazine16 = null;
        model.Book book17 = null;
        model.CD cD18 = null;
        model.Magazine magazine19 = null;
        model.Book[] bookArray20 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList21 = new java.util.ArrayList<model.Book>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList21, bookArray20);
        model.CD[] cDArray23 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList24 = new java.util.ArrayList<model.CD>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList24, cDArray23);
        model.Magazine[] magazineArray26 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList27 = new java.util.ArrayList<model.Magazine>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList27, magazineArray26);
        model.ItemSearchResult itemSearchResult29 = new model.ItemSearchResult(book17, cD18, magazine19, (java.util.Collection<model.Book>) bookList21, (java.util.Collection<model.CD>) cDList24, (java.util.Collection<model.Magazine>) magazineList27);
        model.Book book30 = null;
        model.CD cD31 = null;
        model.Magazine magazine32 = null;
        model.Book[] bookArray33 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList34 = new java.util.ArrayList<model.Book>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList34, bookArray33);
        model.CD[] cDArray36 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList37 = new java.util.ArrayList<model.CD>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList37, cDArray36);
        model.Magazine[] magazineArray39 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList40 = new java.util.ArrayList<model.Magazine>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList40, magazineArray39);
        model.ItemSearchResult itemSearchResult42 = new model.ItemSearchResult(book30, cD31, magazine32, (java.util.Collection<model.Book>) bookList34, (java.util.Collection<model.CD>) cDList37, (java.util.Collection<model.Magazine>) magazineList40);
        model.CD[] cDArray43 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList44 = new java.util.ArrayList<model.CD>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList44, cDArray43);
        itemSearchResult42.similarCD = cDList44;
        model.Book book47 = null;
        model.CD cD48 = null;
        model.Magazine magazine49 = null;
        model.Book[] bookArray50 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList51 = new java.util.ArrayList<model.Book>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList51, bookArray50);
        model.CD[] cDArray53 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList54 = new java.util.ArrayList<model.CD>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList54, cDArray53);
        model.Magazine[] magazineArray56 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList57 = new java.util.ArrayList<model.Magazine>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList57, magazineArray56);
        model.ItemSearchResult itemSearchResult59 = new model.ItemSearchResult(book47, cD48, magazine49, (java.util.Collection<model.Book>) bookList51, (java.util.Collection<model.CD>) cDList54, (java.util.Collection<model.Magazine>) magazineList57);
        model.ItemSearchResult itemSearchResult60 = new model.ItemSearchResult((model.Book) virtualBook13, cD15, magazine16, (java.util.Collection<model.Book>) bookList21, (java.util.Collection<model.CD>) cDList44, (java.util.Collection<model.Magazine>) magazineList57);
        int int61 = virtualBook13.ID;
        int int62 = virtualBook13.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter63 = null;
        model.PaidNewsletter paidNewsletter64 = null;
        model.VirtualItemSearchResult virtualItemSearchResult65 = new model.VirtualItemSearchResult(virtualBook13, uniProvidedNewsletter63, paidNewsletter64);
        model.PaidNewsletter paidNewsletter66 = virtualItemSearchResult65.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter67 = virtualItemSearchResult65.getUniNewsletter();
        model.PaidNewsletter paidNewsletter68 = virtualItemSearchResult65.getPaidNewsletter();
        model.VirtualBook virtualBook69 = virtualItemSearchResult65.virtualBook;
        model.Student student70 = new model.Student();
        int int71 = student70.ID;
        model.StudentOnlineResources studentOnlineResources72 = new model.StudentOnlineResources((model.Client) student70);
        boolean boolean73 = rentAndReturnSystem0.rentAnItem((model.Item) virtualBook69, (model.Client) student70);
        model.Payment payment74 = rentAndReturnSystem0.paymentAPI;
        org.junit.Assert.assertNull(payment1);
        org.junit.Assert.assertNotNull(payment8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(virtualBook13);
        org.junit.Assert.assertNotNull(bookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(cDArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(magazineArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(bookArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(cDArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(magazineArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cDArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(bookArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(cDArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(magazineArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 20 + "'", int62 == 20);
        org.junit.Assert.assertNull(paidNewsletter66);
        org.junit.Assert.assertNull(uniProvidedNewsletter67);
        org.junit.Assert.assertNull(paidNewsletter68);
        org.junit.Assert.assertNotNull(virtualBook69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(payment74);
    }

    @Test
    public void test1964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1964");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.StudentOnlineResources studentOnlineResources3 = new model.StudentOnlineResources((model.Client) student0);
        model.RentedItem[] rentedItemArray4 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList5 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList5, rentedItemArray4);
        model.BorrowingManager borrowingManager7 = new model.BorrowingManager(rentedItemList5);
        model.Visitor visitor8 = new model.Visitor();
        visitor8.email = "hi!";
        borrowingManager7.client = visitor8;
        studentOnlineResources3.client = visitor8;
        model.Newsletter newsletter14 = studentOnlineResources3.searchSubscribedNewsletter("src/CD.csv");
        model.VirtualBook virtualBook16 = studentOnlineResources3.searchAccessibleBook("model.RegistrationFailedException: model.RentingNotAllowedException: hi!");
        model.Client client17 = studentOnlineResources3.client;
        client17.username = "model.RentingNotAllowedException: src/Magazine.csv";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(rentedItemArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(newsletter14);
        org.junit.Assert.assertNotNull(virtualBook16);
        org.junit.Assert.assertNotNull(client17);
    }

    @Test
    public void test1965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1965");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter54 = null;
        model.PaidNewsletter paidNewsletter55 = null;
        model.VirtualItemSearchResult virtualItemSearchResult56 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter54, paidNewsletter55);
        model.PaidNewsletter paidNewsletter57 = virtualItemSearchResult56.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter58 = virtualItemSearchResult56.getUniNewsletter();
        model.PaidNewsletter paidNewsletter59 = virtualItemSearchResult56.getPaidNewsletter();
        model.UniProvidedNewsletter uniProvidedNewsletter60 = virtualItemSearchResult56.getUniNewsletter();
        model.PaidNewsletter paidNewsletter61 = null;
        virtualItemSearchResult56.setPaidNewsletter(paidNewsletter61);
        model.VirtualBook virtualBook63 = virtualItemSearchResult56.virtualBook;
        model.RentAndReturnSystem rentAndReturnSystem64 = new model.RentAndReturnSystem();
        model.Payment payment65 = rentAndReturnSystem64.paymentAPI;
        model.PayMobileWallet payMobileWallet66 = new model.PayMobileWallet();
        payMobileWallet66.amountPay = 100.0f;
        payMobileWallet66.amountPay = (byte) -1;
        rentAndReturnSystem64.paymentAPI = payMobileWallet66;
        payMobileWallet66.amountPay = 0.0d;
        payMobileWallet66.amountPay = 1;
        boolean boolean76 = virtualBook63.equals((java.lang.Object) payMobileWallet66);
        java.lang.String str77 = virtualBook63.title;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertNull(paidNewsletter57);
        org.junit.Assert.assertNull(uniProvidedNewsletter58);
        org.junit.Assert.assertNull(paidNewsletter59);
        org.junit.Assert.assertNull(uniProvidedNewsletter60);
        org.junit.Assert.assertNotNull(virtualBook63);
        org.junit.Assert.assertNull(payment65);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
    }

    @Test
    public void test1966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1966");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.VirtualItemContent virtualItemContent5 = virtualBook4.content;
        model.Student student6 = new model.Student();
        int int7 = student6.ID;
        model.StudentOnlineResources studentOnlineResources8 = new model.StudentOnlineResources((model.Client) student6);
        model.VirtualBook virtualBook10 = studentOnlineResources8.searchAccessibleBook("");
        model.CD cD12 = new model.CD("");
        model.Magazine magazine13 = null;
        model.Book book14 = null;
        model.CD cD15 = null;
        model.Magazine magazine16 = null;
        model.Book[] bookArray17 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList18 = new java.util.ArrayList<model.Book>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList18, bookArray17);
        model.CD[] cDArray20 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList21 = new java.util.ArrayList<model.CD>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList21, cDArray20);
        model.Magazine[] magazineArray23 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList24 = new java.util.ArrayList<model.Magazine>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList24, magazineArray23);
        model.ItemSearchResult itemSearchResult26 = new model.ItemSearchResult(book14, cD15, magazine16, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList21, (java.util.Collection<model.Magazine>) magazineList24);
        model.Book book27 = null;
        model.CD cD28 = null;
        model.Magazine magazine29 = null;
        model.Book[] bookArray30 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList31 = new java.util.ArrayList<model.Book>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList31, bookArray30);
        model.CD[] cDArray33 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList34 = new java.util.ArrayList<model.CD>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList34, cDArray33);
        model.Magazine[] magazineArray36 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList37 = new java.util.ArrayList<model.Magazine>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList37, magazineArray36);
        model.ItemSearchResult itemSearchResult39 = new model.ItemSearchResult(book27, cD28, magazine29, (java.util.Collection<model.Book>) bookList31, (java.util.Collection<model.CD>) cDList34, (java.util.Collection<model.Magazine>) magazineList37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        itemSearchResult39.similarCD = cDList41;
        model.Book book44 = null;
        model.CD cD45 = null;
        model.Magazine magazine46 = null;
        model.Book[] bookArray47 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList48 = new java.util.ArrayList<model.Book>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList48, bookArray47);
        model.CD[] cDArray50 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList51 = new java.util.ArrayList<model.CD>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList51, cDArray50);
        model.Magazine[] magazineArray53 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList54 = new java.util.ArrayList<model.Magazine>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList54, magazineArray53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult(book44, cD45, magazine46, (java.util.Collection<model.Book>) bookList48, (java.util.Collection<model.CD>) cDList51, (java.util.Collection<model.Magazine>) magazineList54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult((model.Book) virtualBook10, cD12, magazine13, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList54);
        int int58 = virtualBook10.ID;
        int int59 = virtualBook10.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter60 = null;
        model.PaidNewsletter paidNewsletter61 = null;
        model.VirtualItemSearchResult virtualItemSearchResult62 = new model.VirtualItemSearchResult(virtualBook10, uniProvidedNewsletter60, paidNewsletter61);
        model.PaidNewsletter paidNewsletter63 = virtualItemSearchResult62.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter64 = new model.UniProvidedNewsletter();
        virtualItemSearchResult62.setUniNewsletter(uniProvidedNewsletter64);
        java.lang.String str66 = uniProvidedNewsletter64.title;
        model.PaidNewsletter paidNewsletter67 = null;
        model.VirtualItemSearchResult virtualItemSearchResult68 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter64, paidNewsletter67);
        model.VirtualBook virtualBook69 = virtualItemSearchResult68.virtualBook;
        model.PaidNewsletter paidNewsletter70 = new model.PaidNewsletter();
        virtualItemSearchResult68.setPaidNewsletter(paidNewsletter70);
        model.UniProvidedNewsletter uniProvidedNewsletter72 = virtualItemSearchResult68.uniNewsletter;
        java.lang.String str73 = uniProvidedNewsletter72.title;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNull(virtualItemContent5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(virtualBook10);
        org.junit.Assert.assertNotNull(bookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(cDArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(magazineArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(bookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(magazineArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(bookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(cDArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(magazineArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 20 + "'", int59 == 20);
        org.junit.Assert.assertNull(paidNewsletter63);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(virtualBook69);
        org.junit.Assert.assertNotNull(uniProvidedNewsletter72);
        org.junit.Assert.assertNull(str73);
    }

    @Test
    public void test1967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1967");
        model.Course course0 = new model.Course();
        java.lang.String str1 = course0.code;
        java.lang.String str2 = course0.subject;
        course0.subject = "model.RegistrationFailedException: ";
        course0.year = 4207892;
        course0.year = 0;
        int int9 = course0.year;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test1968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1968");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        java.util.Calendar calendar54 = null;
        virtualBook4.date = calendar54;
        int int56 = virtualBook4.copiesAvailable;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 20 + "'", int56 == 20);
    }

    @Test
    public void test1969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1969");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.VirtualItemContent virtualItemContent5 = virtualBook4.content;
        model.Student student6 = new model.Student();
        int int7 = student6.ID;
        model.StudentOnlineResources studentOnlineResources8 = new model.StudentOnlineResources((model.Client) student6);
        model.VirtualBook virtualBook10 = studentOnlineResources8.searchAccessibleBook("");
        model.CD cD12 = new model.CD("");
        model.Magazine magazine13 = null;
        model.Book book14 = null;
        model.CD cD15 = null;
        model.Magazine magazine16 = null;
        model.Book[] bookArray17 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList18 = new java.util.ArrayList<model.Book>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList18, bookArray17);
        model.CD[] cDArray20 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList21 = new java.util.ArrayList<model.CD>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList21, cDArray20);
        model.Magazine[] magazineArray23 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList24 = new java.util.ArrayList<model.Magazine>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList24, magazineArray23);
        model.ItemSearchResult itemSearchResult26 = new model.ItemSearchResult(book14, cD15, magazine16, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList21, (java.util.Collection<model.Magazine>) magazineList24);
        model.Book book27 = null;
        model.CD cD28 = null;
        model.Magazine magazine29 = null;
        model.Book[] bookArray30 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList31 = new java.util.ArrayList<model.Book>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList31, bookArray30);
        model.CD[] cDArray33 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList34 = new java.util.ArrayList<model.CD>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList34, cDArray33);
        model.Magazine[] magazineArray36 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList37 = new java.util.ArrayList<model.Magazine>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList37, magazineArray36);
        model.ItemSearchResult itemSearchResult39 = new model.ItemSearchResult(book27, cD28, magazine29, (java.util.Collection<model.Book>) bookList31, (java.util.Collection<model.CD>) cDList34, (java.util.Collection<model.Magazine>) magazineList37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        itemSearchResult39.similarCD = cDList41;
        model.Book book44 = null;
        model.CD cD45 = null;
        model.Magazine magazine46 = null;
        model.Book[] bookArray47 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList48 = new java.util.ArrayList<model.Book>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList48, bookArray47);
        model.CD[] cDArray50 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList51 = new java.util.ArrayList<model.CD>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList51, cDArray50);
        model.Magazine[] magazineArray53 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList54 = new java.util.ArrayList<model.Magazine>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList54, magazineArray53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult(book44, cD45, magazine46, (java.util.Collection<model.Book>) bookList48, (java.util.Collection<model.CD>) cDList51, (java.util.Collection<model.Magazine>) magazineList54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult((model.Book) virtualBook10, cD12, magazine13, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList54);
        int int58 = virtualBook10.ID;
        int int59 = virtualBook10.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter60 = null;
        model.PaidNewsletter paidNewsletter61 = null;
        model.VirtualItemSearchResult virtualItemSearchResult62 = new model.VirtualItemSearchResult(virtualBook10, uniProvidedNewsletter60, paidNewsletter61);
        model.PaidNewsletter paidNewsletter63 = virtualItemSearchResult62.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter64 = new model.UniProvidedNewsletter();
        virtualItemSearchResult62.setUniNewsletter(uniProvidedNewsletter64);
        java.lang.String str66 = uniProvidedNewsletter64.title;
        model.PaidNewsletter paidNewsletter67 = null;
        model.VirtualItemSearchResult virtualItemSearchResult68 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter64, paidNewsletter67);
        model.VirtualBook virtualBook69 = virtualItemSearchResult68.virtualBook;
        model.PaidNewsletter paidNewsletter70 = new model.PaidNewsletter();
        virtualItemSearchResult68.setPaidNewsletter(paidNewsletter70);
        paidNewsletter70.subscriptionPrice = (-1.0f);
        paidNewsletter70.cost = 0.0f;
        paidNewsletter70.ID = 7435442;
        paidNewsletter70.subscriptionPrice = 1719890.0d;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNull(virtualItemContent5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(virtualBook10);
        org.junit.Assert.assertNotNull(bookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(cDArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(magazineArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(bookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(magazineArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(bookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(cDArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(magazineArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 20 + "'", int59 == 20);
        org.junit.Assert.assertNull(paidNewsletter63);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(virtualBook69);
    }

    @Test
    public void test1970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1970");
        model.RegistrationFailedException registrationFailedException1 = new model.RegistrationFailedException("src/Magazine.csv");
        model.RentingNotAllowedException rentingNotAllowedException3 = new model.RentingNotAllowedException("src/CD.csv");
        registrationFailedException1.addSuppressed((java.lang.Throwable) rentingNotAllowedException3);
        model.LoginFailedException loginFailedException6 = new model.LoginFailedException("");
        model.LoginFailedException loginFailedException8 = new model.LoginFailedException("src/Newsletter.csv");
        model.Student student9 = new model.Student();
        int int10 = student9.ID;
        model.StudentOnlineResources studentOnlineResources11 = new model.StudentOnlineResources((model.Client) student9);
        model.VirtualBook virtualBook13 = studentOnlineResources11.searchAccessibleBook("");
        model.CD cD15 = new model.CD("");
        model.Magazine magazine16 = null;
        model.Book book17 = null;
        model.CD cD18 = null;
        model.Magazine magazine19 = null;
        model.Book[] bookArray20 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList21 = new java.util.ArrayList<model.Book>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList21, bookArray20);
        model.CD[] cDArray23 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList24 = new java.util.ArrayList<model.CD>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList24, cDArray23);
        model.Magazine[] magazineArray26 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList27 = new java.util.ArrayList<model.Magazine>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList27, magazineArray26);
        model.ItemSearchResult itemSearchResult29 = new model.ItemSearchResult(book17, cD18, magazine19, (java.util.Collection<model.Book>) bookList21, (java.util.Collection<model.CD>) cDList24, (java.util.Collection<model.Magazine>) magazineList27);
        model.Book book30 = null;
        model.CD cD31 = null;
        model.Magazine magazine32 = null;
        model.Book[] bookArray33 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList34 = new java.util.ArrayList<model.Book>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList34, bookArray33);
        model.CD[] cDArray36 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList37 = new java.util.ArrayList<model.CD>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList37, cDArray36);
        model.Magazine[] magazineArray39 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList40 = new java.util.ArrayList<model.Magazine>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList40, magazineArray39);
        model.ItemSearchResult itemSearchResult42 = new model.ItemSearchResult(book30, cD31, magazine32, (java.util.Collection<model.Book>) bookList34, (java.util.Collection<model.CD>) cDList37, (java.util.Collection<model.Magazine>) magazineList40);
        model.CD[] cDArray43 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList44 = new java.util.ArrayList<model.CD>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList44, cDArray43);
        itemSearchResult42.similarCD = cDList44;
        model.Book book47 = null;
        model.CD cD48 = null;
        model.Magazine magazine49 = null;
        model.Book[] bookArray50 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList51 = new java.util.ArrayList<model.Book>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList51, bookArray50);
        model.CD[] cDArray53 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList54 = new java.util.ArrayList<model.CD>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList54, cDArray53);
        model.Magazine[] magazineArray56 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList57 = new java.util.ArrayList<model.Magazine>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList57, magazineArray56);
        model.ItemSearchResult itemSearchResult59 = new model.ItemSearchResult(book47, cD48, magazine49, (java.util.Collection<model.Book>) bookList51, (java.util.Collection<model.CD>) cDList54, (java.util.Collection<model.Magazine>) magazineList57);
        model.ItemSearchResult itemSearchResult60 = new model.ItemSearchResult((model.Book) virtualBook13, cD15, magazine16, (java.util.Collection<model.Book>) bookList21, (java.util.Collection<model.CD>) cDList44, (java.util.Collection<model.Magazine>) magazineList57);
        int int61 = virtualBook13.ID;
        int int62 = virtualBook13.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter63 = null;
        model.PaidNewsletter paidNewsletter64 = null;
        model.VirtualItemSearchResult virtualItemSearchResult65 = new model.VirtualItemSearchResult(virtualBook13, uniProvidedNewsletter63, paidNewsletter64);
        model.PaidNewsletter paidNewsletter66 = virtualItemSearchResult65.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter67 = new model.UniProvidedNewsletter();
        virtualItemSearchResult65.setUniNewsletter(uniProvidedNewsletter67);
        model.PaidNewsletter paidNewsletter69 = virtualItemSearchResult65.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter70 = virtualItemSearchResult65.uniNewsletter;
        model.Database database78 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database78;
        model.SearchVirtualItem searchVirtualItem80 = new model.SearchVirtualItem(database78);
        model.UniProvidedNewsletter uniProvidedNewsletter82 = searchVirtualItem80.getUniNewsletter("");
        model.VirtualBook virtualBook84 = searchVirtualItem80.getVirtualBook("src/VirtualBook.csv");
        boolean boolean85 = uniProvidedNewsletter70.equals((java.lang.Object) "src/VirtualBook.csv");
        model.RentingNotAllowedException rentingNotAllowedException87 = new model.RentingNotAllowedException("src/Magazine.csv");
        boolean boolean88 = uniProvidedNewsletter70.equals((java.lang.Object) rentingNotAllowedException87);
        loginFailedException8.addSuppressed((java.lang.Throwable) rentingNotAllowedException87);
        loginFailedException6.addSuppressed((java.lang.Throwable) rentingNotAllowedException87);
        rentingNotAllowedException3.addSuppressed((java.lang.Throwable) loginFailedException6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(virtualBook13);
        org.junit.Assert.assertNotNull(bookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(cDArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(magazineArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(bookArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(cDArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(magazineArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cDArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(bookArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(cDArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(magazineArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 20 + "'", int62 == 20);
        org.junit.Assert.assertNull(paidNewsletter66);
        org.junit.Assert.assertNull(paidNewsletter69);
        org.junit.Assert.assertNotNull(uniProvidedNewsletter70);
        org.junit.Assert.assertNotNull(database78);
        org.junit.Assert.assertNull(uniProvidedNewsletter82);
        org.junit.Assert.assertNull(virtualBook84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test1971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1971");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        java.lang.String str5 = virtualBook4.location;
        int int6 = virtualBook4.ID;
        virtualBook4.isBookLost = false;
        java.lang.String str9 = virtualBook4.author;
        virtualBook4.isBookLost = true;
        boolean boolean12 = virtualBook4.isBookLost;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test1972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1972");
        model.Visitor visitor0 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList1 = visitor0.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) visitor0);
        model.RentedItem[] rentedItemArray3 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList4 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList4, rentedItemArray3);
        model.BorrowingManager borrowingManager6 = new model.BorrowingManager(rentedItemList4);
        model.Visitor visitor7 = new model.Visitor();
        visitor7.email = "hi!";
        borrowingManager6.client = visitor7;
        studentOnlineResources2.client = visitor7;
        model.Newsletter newsletter13 = studentOnlineResources2.searchSubscribedNewsletter("model.RegistrationFailedException: src/Book.csv");
        org.junit.Assert.assertNull(virtualBookList1);
        org.junit.Assert.assertNotNull(rentedItemArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(newsletter13);
    }

    @Test
    public void test1973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1973");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        model.Book book4 = null;
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        java.util.Collection<model.Book> bookCollection8 = null;
        model.Book book9 = null;
        model.CD cD10 = null;
        model.Magazine magazine11 = null;
        model.Book[] bookArray12 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList13 = new java.util.ArrayList<model.Book>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList13, bookArray12);
        model.CD[] cDArray15 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList16 = new java.util.ArrayList<model.CD>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList16, cDArray15);
        model.Magazine[] magazineArray18 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList19 = new java.util.ArrayList<model.Magazine>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList19, magazineArray18);
        model.ItemSearchResult itemSearchResult21 = new model.ItemSearchResult(book9, cD10, magazine11, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList16, (java.util.Collection<model.Magazine>) magazineList19);
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        itemSearchResult21.similarCD = cDList29;
        model.Book book36 = null;
        model.CD cD37 = null;
        model.Magazine magazine38 = null;
        model.Book[] bookArray39 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList40 = new java.util.ArrayList<model.Book>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList40, bookArray39);
        model.CD[] cDArray42 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList43 = new java.util.ArrayList<model.CD>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList43, cDArray42);
        model.Magazine[] magazineArray45 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList46 = new java.util.ArrayList<model.Magazine>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList46, magazineArray45);
        model.ItemSearchResult itemSearchResult48 = new model.ItemSearchResult(book36, cD37, magazine38, (java.util.Collection<model.Book>) bookList40, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList46);
        model.ItemSearchResult itemSearchResult49 = new model.ItemSearchResult(book4, cD6, magazine7, bookCollection8, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList46);
        cD6.ID = (short) 10;
        borrowingManager3.removeRentedItem((model.Item) cD6);
        int int53 = borrowingManager3.itemsBorrowedCount;
        model.Client client54 = borrowingManager3.client;
        borrowingManager3.itemsBorrowedCount = 7967658;
        borrowingManager3.amountOwned = 100L;
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(bookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cDArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(magazineArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(bookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cDArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(magazineArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(client54);
    }

    @Test
    public void test1974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1974");
        model.Request request0 = new model.Request();
        request0.title = "src/Client.csv";
        request0.title = "src/Book.csv";
        model.ItemManagement itemManagement5 = new model.ItemManagement();
        model.Database database6 = null;
        itemManagement5.database = database6;
        model.BuySpecialItems buySpecialItems8 = new model.BuySpecialItems();
        model.Book book9 = null;
        model.CD cD11 = new model.CD("");
        model.Magazine magazine12 = null;
        java.util.Collection<model.Book> bookCollection13 = null;
        model.Book book14 = null;
        model.CD cD15 = null;
        model.Magazine magazine16 = null;
        model.Book[] bookArray17 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList18 = new java.util.ArrayList<model.Book>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList18, bookArray17);
        model.CD[] cDArray20 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList21 = new java.util.ArrayList<model.CD>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList21, cDArray20);
        model.Magazine[] magazineArray23 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList24 = new java.util.ArrayList<model.Magazine>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList24, magazineArray23);
        model.ItemSearchResult itemSearchResult26 = new model.ItemSearchResult(book14, cD15, magazine16, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList21, (java.util.Collection<model.Magazine>) magazineList24);
        model.Book book27 = null;
        model.CD cD28 = null;
        model.Magazine magazine29 = null;
        model.Book[] bookArray30 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList31 = new java.util.ArrayList<model.Book>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList31, bookArray30);
        model.CD[] cDArray33 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList34 = new java.util.ArrayList<model.CD>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList34, cDArray33);
        model.Magazine[] magazineArray36 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList37 = new java.util.ArrayList<model.Magazine>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList37, magazineArray36);
        model.ItemSearchResult itemSearchResult39 = new model.ItemSearchResult(book27, cD28, magazine29, (java.util.Collection<model.Book>) bookList31, (java.util.Collection<model.CD>) cDList34, (java.util.Collection<model.Magazine>) magazineList37);
        itemSearchResult26.similarCD = cDList34;
        model.Book book41 = null;
        model.CD cD42 = null;
        model.Magazine magazine43 = null;
        model.Book[] bookArray44 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList45 = new java.util.ArrayList<model.Book>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList45, bookArray44);
        model.CD[] cDArray47 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList48 = new java.util.ArrayList<model.CD>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList48, cDArray47);
        model.Magazine[] magazineArray50 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList51 = new java.util.ArrayList<model.Magazine>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList51, magazineArray50);
        model.ItemSearchResult itemSearchResult53 = new model.ItemSearchResult(book41, cD42, magazine43, (java.util.Collection<model.Book>) bookList45, (java.util.Collection<model.CD>) cDList48, (java.util.Collection<model.Magazine>) magazineList51);
        model.ItemSearchResult itemSearchResult54 = new model.ItemSearchResult(book9, cD11, magazine12, bookCollection13, (java.util.Collection<model.CD>) cDList34, (java.util.Collection<model.Magazine>) magazineList51);
        cD11.ID = (short) 10;
        boolean boolean58 = buySpecialItems8.buyAnItem((model.Item) cD11, (double) 0);
        itemManagement5.enableAnItem((model.Item) cD11);
        model.Database database60 = model.Database.database;
        model.Student student61 = new model.Student();
        int int62 = student61.ID;
        model.StudentOnlineResources studentOnlineResources63 = new model.StudentOnlineResources((model.Client) student61);
        student61.ID = '#';
        database60.addClient((model.Client) student61);
        itemManagement5.database = database60;
        model.Client client69 = database60.getClient("hi!");
        model.Client client71 = database60.getClient("src/Newsletter.csv");
        request0.requestee = client71;
        org.junit.Assert.assertNotNull(bookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(cDArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(magazineArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(bookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(magazineArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(bookArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(cDArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(magazineArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(database60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(client69);
        org.junit.Assert.assertNotNull(client71);
    }

    @Test
    public void test1975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1975");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.LibraryManagementTeam libraryManagementTeam1 = requestForum0.managementTeam;
        model.LibraryManagementTeam libraryManagementTeam2 = requestForum0.managementTeam;
        model.LibraryManagementTeam libraryManagementTeam3 = requestForum0.managementTeam;
        java.util.ArrayList<model.Item> itemList4 = libraryManagementTeam3.items;
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertNotNull(libraryManagementTeam1);
        org.junit.Assert.assertNotNull(libraryManagementTeam2);
        org.junit.Assert.assertNotNull(libraryManagementTeam3);
        org.junit.Assert.assertNotNull(itemList4);
    }

    @Test
    public void test1976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1976");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        int int53 = virtualBook4.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter54 = null;
        model.PaidNewsletter paidNewsletter55 = null;
        model.VirtualItemSearchResult virtualItemSearchResult56 = new model.VirtualItemSearchResult(virtualBook4, uniProvidedNewsletter54, paidNewsletter55);
        model.PaidNewsletter paidNewsletter57 = virtualItemSearchResult56.paidNewsletter;
        model.UniProvidedNewsletter uniProvidedNewsletter58 = new model.UniProvidedNewsletter();
        virtualItemSearchResult56.setUniNewsletter(uniProvidedNewsletter58);
        model.UniProvidedNewsletter uniProvidedNewsletter60 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter60.title = "";
        java.lang.String str63 = uniProvidedNewsletter60.title;
        virtualItemSearchResult56.uniNewsletter = uniProvidedNewsletter60;
        model.PaidNewsletter paidNewsletter65 = virtualItemSearchResult56.getPaidNewsletter();
        model.VirtualBook virtualBook66 = virtualItemSearchResult56.getVirtualBook();
        int int67 = virtualBook66.ID;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
        org.junit.Assert.assertNull(paidNewsletter57);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNull(paidNewsletter65);
        org.junit.Assert.assertNotNull(virtualBook66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
    }

    @Test
    public void test1977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1977");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        model.Book book8 = null;
        model.CD cD9 = null;
        model.Magazine magazine10 = null;
        model.Book[] bookArray11 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList12 = new java.util.ArrayList<model.Book>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList12, bookArray11);
        model.CD[] cDArray14 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList15 = new java.util.ArrayList<model.CD>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList15, cDArray14);
        model.Magazine[] magazineArray17 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList18 = new java.util.ArrayList<model.Magazine>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList18, magazineArray17);
        model.ItemSearchResult itemSearchResult20 = new model.ItemSearchResult(book8, cD9, magazine10, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList15, (java.util.Collection<model.Magazine>) magazineList18);
        model.Book book21 = null;
        model.CD cD22 = null;
        model.Magazine magazine23 = null;
        model.Book[] bookArray24 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList25 = new java.util.ArrayList<model.Book>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList25, bookArray24);
        model.CD[] cDArray27 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList28 = new java.util.ArrayList<model.CD>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList28, cDArray27);
        model.Magazine[] magazineArray30 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList31 = new java.util.ArrayList<model.Magazine>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList31, magazineArray30);
        model.ItemSearchResult itemSearchResult33 = new model.ItemSearchResult(book21, cD22, magazine23, (java.util.Collection<model.Book>) bookList25, (java.util.Collection<model.CD>) cDList28, (java.util.Collection<model.Magazine>) magazineList31);
        model.CD[] cDArray34 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList35 = new java.util.ArrayList<model.CD>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList35, cDArray34);
        itemSearchResult33.similarCD = cDList35;
        model.Book book38 = null;
        model.CD cD39 = null;
        model.Magazine magazine40 = null;
        model.Book[] bookArray41 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList42 = new java.util.ArrayList<model.Book>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList42, bookArray41);
        model.CD[] cDArray44 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList45 = new java.util.ArrayList<model.CD>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList45, cDArray44);
        model.Magazine[] magazineArray47 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList48 = new java.util.ArrayList<model.Magazine>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList48, magazineArray47);
        model.ItemSearchResult itemSearchResult50 = new model.ItemSearchResult(book38, cD39, magazine40, (java.util.Collection<model.Book>) bookList42, (java.util.Collection<model.CD>) cDList45, (java.util.Collection<model.Magazine>) magazineList48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult((model.Book) virtualBook4, cD6, magazine7, (java.util.Collection<model.Book>) bookList12, (java.util.Collection<model.CD>) cDList35, (java.util.Collection<model.Magazine>) magazineList48);
        int int52 = virtualBook4.ID;
        virtualBook4.ISBN = "hi!";
        int int55 = virtualBook4.ID;
        // The following exception was thrown during execution in test generation
        try {
            model.RentedItem rentedItem57 = new model.RentedItem((model.Item) virtualBook4, "src/Book.csv");
            org.junit.Assert.fail("Expected exception of type java.time.format.DateTimeParseException; message: Text 'src/Book.csv' could not be parsed at index 0");
        } catch (java.time.format.DateTimeParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNotNull(bookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cDArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(magazineArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(bookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cDArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(magazineArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(bookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(cDArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(magazineArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
    }

    @Test
    public void test1978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1978");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.Student student5 = new model.Student();
        int int6 = student5.ID;
        model.StudentOnlineResources studentOnlineResources7 = new model.StudentOnlineResources((model.Client) student5);
        student5.ID = '#';
        java.lang.String str10 = student5.email;
        newsletterSubscriptionManager3.client = student5;
        model.BuySpecialItems buySpecialItems12 = new model.BuySpecialItems();
        model.Book book13 = null;
        model.CD cD15 = new model.CD("");
        model.Magazine magazine16 = null;
        java.util.Collection<model.Book> bookCollection17 = null;
        model.Book book18 = null;
        model.CD cD19 = null;
        model.Magazine magazine20 = null;
        model.Book[] bookArray21 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList22 = new java.util.ArrayList<model.Book>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList22, bookArray21);
        model.CD[] cDArray24 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList25 = new java.util.ArrayList<model.CD>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList25, cDArray24);
        model.Magazine[] magazineArray27 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList28 = new java.util.ArrayList<model.Magazine>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList28, magazineArray27);
        model.ItemSearchResult itemSearchResult30 = new model.ItemSearchResult(book18, cD19, magazine20, (java.util.Collection<model.Book>) bookList22, (java.util.Collection<model.CD>) cDList25, (java.util.Collection<model.Magazine>) magazineList28);
        model.Book book31 = null;
        model.CD cD32 = null;
        model.Magazine magazine33 = null;
        model.Book[] bookArray34 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList35 = new java.util.ArrayList<model.Book>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList35, bookArray34);
        model.CD[] cDArray37 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList38 = new java.util.ArrayList<model.CD>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList38, cDArray37);
        model.Magazine[] magazineArray40 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList41 = new java.util.ArrayList<model.Magazine>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList41, magazineArray40);
        model.ItemSearchResult itemSearchResult43 = new model.ItemSearchResult(book31, cD32, magazine33, (java.util.Collection<model.Book>) bookList35, (java.util.Collection<model.CD>) cDList38, (java.util.Collection<model.Magazine>) magazineList41);
        itemSearchResult30.similarCD = cDList38;
        model.Book book45 = null;
        model.CD cD46 = null;
        model.Magazine magazine47 = null;
        model.Book[] bookArray48 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList49 = new java.util.ArrayList<model.Book>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList49, bookArray48);
        model.CD[] cDArray51 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList52 = new java.util.ArrayList<model.CD>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList52, cDArray51);
        model.Magazine[] magazineArray54 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList55 = new java.util.ArrayList<model.Magazine>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList55, magazineArray54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult(book45, cD46, magazine47, (java.util.Collection<model.Book>) bookList49, (java.util.Collection<model.CD>) cDList52, (java.util.Collection<model.Magazine>) magazineList55);
        model.ItemSearchResult itemSearchResult58 = new model.ItemSearchResult(book13, cD15, magazine16, bookCollection17, (java.util.Collection<model.CD>) cDList38, (java.util.Collection<model.Magazine>) magazineList55);
        cD15.ID = (short) 10;
        boolean boolean62 = buySpecialItems12.buyAnItem((model.Item) cD15, (double) 0);
        model.PayDebit payDebit63 = new model.PayDebit();
        buySpecialItems12.paymentAPI = payDebit63;
        newsletterSubscriptionManager3.paymentAPI = payDebit63;
        double double66 = payDebit63.amountPay;
        payDebit63.amountPay = (short) 1;
        payDebit63.pay(10.0d);
        payDebit63.pay((double) '#');
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(bookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(cDArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(magazineArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(bookArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(cDArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(magazineArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(bookArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(cDArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(magazineArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
    }

    @Test
    public void test1979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1979");
        model.Student student0 = new model.Student();
        int int1 = student0.ID;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) student0);
        model.VirtualBook virtualBook4 = studentOnlineResources2.searchAccessibleBook("");
        java.lang.String str5 = virtualBook4.location;
        int int6 = virtualBook4.ID;
        virtualBook4.isBookLost = false;
        java.lang.String str9 = virtualBook4.author;
        java.lang.String str10 = virtualBook4.author;
        model.BuySpecialItems buySpecialItems11 = new model.BuySpecialItems();
        model.Payment payment12 = buySpecialItems11.paymentAPI;
        boolean boolean13 = virtualBook4.equals((java.lang.Object) buySpecialItems11);
        virtualBook4.ID = 36;
        virtualBook4.publisher = "model.RentingNotAllowedException: hi!";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(virtualBook4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(payment12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1980");
        model.RequestForum requestForum0 = model.RequestForum.createRequestForum();
        model.RequestForum requestForum1 = model.RequestForum.createRequestForum();
        model.Request request2 = new model.Request();
        request2.title = "";
        java.lang.String str5 = requestForum1.makeARequest(request2);
        int int6 = requestForum0.assessBooksPriority(request2);
        model.LibraryManagementTeam libraryManagementTeam7 = new model.LibraryManagementTeam();
        int int8 = libraryManagementTeam7.ID;
        int int9 = libraryManagementTeam7.accessCode;
        model.Item item10 = null;
        libraryManagementTeam7.addAnItem(item10);
        java.util.ArrayList<model.Item> itemList12 = libraryManagementTeam7.items;
        requestForum0.managementTeam = libraryManagementTeam7;
        model.LibraryManagementTeam libraryManagementTeam14 = requestForum0.managementTeam;
        int int15 = libraryManagementTeam14.accessCode;
        model.ItemManagement itemManagement16 = libraryManagementTeam14.itemManagement;
        libraryManagementTeam14.accessCode = '#';
        java.util.ArrayList<model.Item> itemList19 = libraryManagementTeam14.items;
        model.LibraryManagementTeam libraryManagementTeam20 = model.LibraryManagementTeam.createLibraryManagementTeam();
        java.util.ArrayList<model.Item> itemList21 = libraryManagementTeam20.items;
        libraryManagementTeam14.items = itemList21;
        org.junit.Assert.assertNotNull(requestForum0);
        org.junit.Assert.assertNotNull(requestForum1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(itemList12);
        org.junit.Assert.assertNotNull(libraryManagementTeam14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(itemManagement16);
        org.junit.Assert.assertNotNull(itemList19);
        org.junit.Assert.assertNotNull(libraryManagementTeam20);
        org.junit.Assert.assertNotNull(itemList21);
    }

    @Test
    public void test1981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1981");
        model.ItemManagement itemManagement0 = new model.ItemManagement();
        model.Database database1 = null;
        itemManagement0.database = database1;
        model.BuySpecialItems buySpecialItems3 = new model.BuySpecialItems();
        model.Book book4 = null;
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        java.util.Collection<model.Book> bookCollection8 = null;
        model.Book book9 = null;
        model.CD cD10 = null;
        model.Magazine magazine11 = null;
        model.Book[] bookArray12 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList13 = new java.util.ArrayList<model.Book>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList13, bookArray12);
        model.CD[] cDArray15 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList16 = new java.util.ArrayList<model.CD>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList16, cDArray15);
        model.Magazine[] magazineArray18 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList19 = new java.util.ArrayList<model.Magazine>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList19, magazineArray18);
        model.ItemSearchResult itemSearchResult21 = new model.ItemSearchResult(book9, cD10, magazine11, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList16, (java.util.Collection<model.Magazine>) magazineList19);
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        itemSearchResult21.similarCD = cDList29;
        model.Book book36 = null;
        model.CD cD37 = null;
        model.Magazine magazine38 = null;
        model.Book[] bookArray39 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList40 = new java.util.ArrayList<model.Book>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList40, bookArray39);
        model.CD[] cDArray42 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList43 = new java.util.ArrayList<model.CD>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList43, cDArray42);
        model.Magazine[] magazineArray45 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList46 = new java.util.ArrayList<model.Magazine>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList46, magazineArray45);
        model.ItemSearchResult itemSearchResult48 = new model.ItemSearchResult(book36, cD37, magazine38, (java.util.Collection<model.Book>) bookList40, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList46);
        model.ItemSearchResult itemSearchResult49 = new model.ItemSearchResult(book4, cD6, magazine7, bookCollection8, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList46);
        cD6.ID = (short) 10;
        boolean boolean53 = buySpecialItems3.buyAnItem((model.Item) cD6, (double) 0);
        itemManagement0.enableAnItem((model.Item) cD6);
        model.Database database55 = model.Database.database;
        model.Student student56 = new model.Student();
        int int57 = student56.ID;
        model.StudentOnlineResources studentOnlineResources58 = new model.StudentOnlineResources((model.Client) student56);
        student56.ID = '#';
        database55.addClient((model.Client) student56);
        itemManagement0.database = database55;
        model.SearchItems searchItems63 = new model.SearchItems(database55);
        int int64 = database55.getRandomID();
        org.junit.Assert.assertNotNull(bookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cDArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(magazineArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(bookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cDArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(magazineArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + int64 + "' != '" + 5031522 + "'", int64 == 5031522);
    }

    @Test
    public void test1982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1982");
        model.Database database0 = null;
        model.Register register1 = model.Register.makeRegister(database0);
        model.Faculty faculty2 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection3 = faculty2.courses;
        boolean boolean6 = register1.registerAsStaff((model.Staff) faculty2, "src/Book.csv", "src/Book.csv");
        model.Database database7 = model.Database.database;
        model.Student student8 = new model.Student();
        int int9 = student8.ID;
        model.StudentOnlineResources studentOnlineResources10 = new model.StudentOnlineResources((model.Client) student8);
        student8.ID = '#';
        database7.addClient((model.Client) student8);
        student8.email = "hi!";
        boolean boolean18 = register1.registerAsStaff((model.Staff) student8, "src/CD.csv", "src/Book.csv");
        model.Database database26 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str27 = database26.getVirtualBookFilePath();
        register1.database = database26;
        model.Database database36 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str37 = database36.getVirtualBookFilePath();
        model.Database.database = database36;
        register1.database = database36;
        model.Database database47 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.SearchVirtualItem searchVirtualItem48 = new model.SearchVirtualItem(database47);
        int int49 = database47.getRandomID();
        model.Database.database = database47;
        register1.database = database47;
        model.Login login52 = model.Login.makeLogin(database47);
        model.Database database53 = login52.db;
        model.Database database54 = login52.db;
        org.junit.Assert.assertNotNull(register1);
        org.junit.Assert.assertNull(courseCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "src/VirtualBook.csv" + "'", str27, "src/VirtualBook.csv");
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "src/VirtualBook.csv" + "'", str37, "src/VirtualBook.csv");
        org.junit.Assert.assertNotNull(database47);
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1935373 + "'", int49 == 1935373);
        org.junit.Assert.assertNotNull(login52);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(database54);
    }

    @Test
    public void test1983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1983");
        model.ItemManagement itemManagement0 = new model.ItemManagement();
        model.Database database1 = null;
        itemManagement0.database = database1;
        model.Student student3 = new model.Student();
        int int4 = student3.ID;
        model.StudentOnlineResources studentOnlineResources5 = new model.StudentOnlineResources((model.Client) student3);
        model.VirtualBook virtualBook7 = studentOnlineResources5.searchAccessibleBook("");
        itemManagement0.disableAnItem((model.Item) virtualBook7);
        model.Item item10 = itemManagement0.selectAnItemFromDatabase((int) '#');
        model.ItemManagement itemManagement11 = new model.ItemManagement();
        model.Database database12 = null;
        itemManagement11.database = database12;
        model.Student student14 = new model.Student();
        int int15 = student14.ID;
        model.StudentOnlineResources studentOnlineResources16 = new model.StudentOnlineResources((model.Client) student14);
        model.VirtualBook virtualBook18 = studentOnlineResources16.searchAccessibleBook("");
        itemManagement11.disableAnItem((model.Item) virtualBook18);
        itemManagement0.disableAnItem((model.Item) virtualBook18);
        model.Database database21 = itemManagement0.database;
        model.Database database22 = itemManagement0.database;
        model.Database database30 = model.Database.createDatabase("hi!", "model.RegistrationFailedException: src/Magazine.csv", "src/CD.csv", "src/Client.csv", "model.LoginFailedException: hi!", "model.RegistrationFailedException: src/Magazine.csv", "model.LoginFailedException: hi!");
        itemManagement0.database = database30;
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(virtualBook7);
        org.junit.Assert.assertNull(item10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(virtualBook18);
        org.junit.Assert.assertNull(database21);
        org.junit.Assert.assertNull(database22);
        org.junit.Assert.assertNotNull(database30);
    }

    @Test
    public void test1984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1984");
        model.Database database0 = null;
        model.Register register1 = model.Register.makeRegister(database0);
        model.Faculty faculty2 = new model.Faculty();
        java.util.Collection<model.Course> courseCollection3 = faculty2.courses;
        boolean boolean6 = register1.registerAsStaff((model.Staff) faculty2, "src/Book.csv", "src/Book.csv");
        model.Database database7 = model.Database.database;
        model.Student student8 = new model.Student();
        int int9 = student8.ID;
        model.StudentOnlineResources studentOnlineResources10 = new model.StudentOnlineResources((model.Client) student8);
        student8.ID = '#';
        database7.addClient((model.Client) student8);
        student8.email = "hi!";
        boolean boolean18 = register1.registerAsStaff((model.Staff) student8, "src/CD.csv", "src/Book.csv");
        model.Database database26 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str27 = database26.getVirtualBookFilePath();
        register1.database = database26;
        model.Database database29 = model.Database.database;
        model.Student student30 = new model.Student();
        int int31 = student30.ID;
        model.StudentOnlineResources studentOnlineResources32 = new model.StudentOnlineResources((model.Client) student30);
        student30.ID = '#';
        database29.addClient((model.Client) student30);
        java.lang.String str36 = database29.getCDFilePath();
        java.util.ArrayList<java.lang.String> strList37 = database29.getAllItems();
        model.Database.database = database29;
        register1.database = database29;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean43 = false; // flaky: register1.register("src/Magazine.csv", "model.RegistrationFailedException: ", "model.RegistrationFailedException: src/Magazine.csv");
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"model.Database.getClientFilePath()\" because \"this.db\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(register1);
        org.junit.Assert.assertNull(courseCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "src/VirtualBook.csv" + "'", str27, "src/VirtualBook.csv");
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "src/CD.csv" + "'", str36, "src/CD.csv");
        org.junit.Assert.assertNotNull(strList37);
    }

    @Test
    public void test1985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1985");
        model.VirtualBook virtualBook1 = new model.VirtualBook("src/Newsletter.csv");
    }

    @Test
    public void test1986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1986");
        model.Database database0 = null;
        model.Login login1 = new model.Login(database0);
        model.Database database9 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str10 = database9.getBookFilePath();
        database9.itemPath = "hi!";
        model.Database.database = database9;
        java.lang.String str14 = database9.getNewspaperFilePath();
        login1.db = database9;
        boolean boolean17 = database9.addItem("model.RegistrationFailedException: src/Magazine.csv");
        java.lang.String str18 = database9.itemPath;
        model.Database.database = database9;
        model.Register register20 = model.Register.makeRegister(database9);
        model.ItemManagement itemManagement21 = new model.ItemManagement();
        model.Item item23 = itemManagement21.selectAnItemFromDatabase((int) (short) 0);
        model.Database database24 = model.Database.database;
        model.Student student25 = new model.Student();
        int int26 = student25.ID;
        model.StudentOnlineResources studentOnlineResources27 = new model.StudentOnlineResources((model.Client) student25);
        student25.ID = '#';
        database24.addClient((model.Client) student25);
        itemManagement21.database = database24;
        model.Database database32 = itemManagement21.database;
        model.Register register33 = model.Register.makeRegister(database32);
        register20.database = database32;
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "src/Book.csv" + "'", str10, "src/Book.csv");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "src/Newsletter.csv" + "'", str14, "src/Newsletter.csv");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(register20);
        org.junit.Assert.assertNull(item23);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(database32);
        org.junit.Assert.assertNotNull(register33);
    }

    @Test
    public void test1987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1987");
        model.LibraryManagementTeam libraryManagementTeam0 = new model.LibraryManagementTeam();
        model.Student student1 = new model.Student();
        int int2 = student1.ID;
        model.StudentOnlineResources studentOnlineResources3 = new model.StudentOnlineResources((model.Client) student1);
        model.VirtualBook virtualBook5 = studentOnlineResources3.searchAccessibleBook("");
        model.CD cD7 = new model.CD("");
        model.Magazine magazine8 = null;
        model.Book book9 = null;
        model.CD cD10 = null;
        model.Magazine magazine11 = null;
        model.Book[] bookArray12 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList13 = new java.util.ArrayList<model.Book>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList13, bookArray12);
        model.CD[] cDArray15 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList16 = new java.util.ArrayList<model.CD>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList16, cDArray15);
        model.Magazine[] magazineArray18 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList19 = new java.util.ArrayList<model.Magazine>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList19, magazineArray18);
        model.ItemSearchResult itemSearchResult21 = new model.ItemSearchResult(book9, cD10, magazine11, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList16, (java.util.Collection<model.Magazine>) magazineList19);
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        model.CD[] cDArray35 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList36 = new java.util.ArrayList<model.CD>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList36, cDArray35);
        itemSearchResult34.similarCD = cDList36;
        model.Book book39 = null;
        model.CD cD40 = null;
        model.Magazine magazine41 = null;
        model.Book[] bookArray42 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList43 = new java.util.ArrayList<model.Book>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList43, bookArray42);
        model.CD[] cDArray45 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList46 = new java.util.ArrayList<model.CD>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList46, cDArray45);
        model.Magazine[] magazineArray48 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList49 = new java.util.ArrayList<model.Magazine>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList49, magazineArray48);
        model.ItemSearchResult itemSearchResult51 = new model.ItemSearchResult(book39, cD40, magazine41, (java.util.Collection<model.Book>) bookList43, (java.util.Collection<model.CD>) cDList46, (java.util.Collection<model.Magazine>) magazineList49);
        model.ItemSearchResult itemSearchResult52 = new model.ItemSearchResult((model.Book) virtualBook5, cD7, magazine8, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList36, (java.util.Collection<model.Magazine>) magazineList49);
        int int53 = virtualBook5.ID;
        virtualBook5.ISBN = "hi!";
        int int56 = virtualBook5.ID;
        model.VirtualItemContent virtualItemContent58 = new model.VirtualItemContent("hi!");
        virtualBook5.content = virtualItemContent58;
        java.lang.String str60 = virtualBook5.ISBN;
        virtualBook5.isBookLost = true;
        model.VirtualItemContent virtualItemContent63 = virtualBook5.content;
        libraryManagementTeam0.enableAnItem((model.Item) virtualBook5);
        virtualBook5.author = "";
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(virtualBook5);
        org.junit.Assert.assertNotNull(bookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cDArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(magazineArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(cDArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(bookArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(cDArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(magazineArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertNotNull(virtualItemContent63);
    }

    @Test
    public void test1988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1988");
        java.lang.String[] strArray2 = new java.lang.String[] { "model.RegistrationFailedException: " };
        model.Item item3 = model.ItemFactory.makeItem("src/Client.csv", strArray2);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNull(item3);
    }

    @Test
    public void test1989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1989");
        model.BookOverDueNotif bookOverDueNotif0 = new model.BookOverDueNotif();
        java.lang.String str1 = bookOverDueNotif0.message;
        bookOverDueNotif0.message = "model.RegistrationFailedException: ";
        bookOverDueNotif0.message = "src/Book.csv";
        bookOverDueNotif0.message = "src/BorrowedItems.csv";
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test1990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1990");
        model.ItemManagement itemManagement0 = new model.ItemManagement();
        model.Item item2 = itemManagement0.selectAnItemFromDatabase((int) (short) 0);
        model.Database database3 = model.Database.database;
        model.Student student4 = new model.Student();
        int int5 = student4.ID;
        model.StudentOnlineResources studentOnlineResources6 = new model.StudentOnlineResources((model.Client) student4);
        student4.ID = '#';
        database3.addClient((model.Client) student4);
        itemManagement0.database = database3;
        model.Magazine magazine12 = new model.Magazine("hi!");
        magazine12.location = "model.RegistrationFailedException: ";
        magazine12.author = "src/VirtualBook.csv";
        itemManagement0.disableAnItem((model.Item) magazine12);
        magazine12.title = "";
        java.lang.String str20 = magazine12.publisher;
        magazine12.author = "model.RegistrationFailedException: src/Book.csv";
        org.junit.Assert.assertNull(item2);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test1991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1991");
        model.UniProvidedNewsletter uniProvidedNewsletter0 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter0.title = "hi!";
        model.Faculty faculty3 = new model.Faculty();
        java.lang.String str4 = faculty3.email;
        boolean boolean5 = uniProvidedNewsletter0.equals((java.lang.Object) str4);
        model.VirtualItemContent virtualItemContent7 = new model.VirtualItemContent("src/Book.csv");
        uniProvidedNewsletter0.content = virtualItemContent7;
        java.lang.String str9 = virtualItemContent7.link;
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "src/Book.csv" + "'", str9, "src/Book.csv");
    }

    @Test
    public void test1992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1992");
        model.Faculty faculty0 = new model.Faculty();
        java.lang.String str1 = faculty0.faculty;
        faculty0.email = "src/BorrowedItems.csv";
        java.lang.String str4 = faculty0.username;
        model.Book book5 = null;
        model.CD cD6 = null;
        model.Magazine magazine7 = null;
        model.Book[] bookArray8 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList9 = new java.util.ArrayList<model.Book>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList9, bookArray8);
        model.CD[] cDArray11 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList12 = new java.util.ArrayList<model.CD>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList12, cDArray11);
        model.Magazine[] magazineArray14 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList15 = new java.util.ArrayList<model.Magazine>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList15, magazineArray14);
        model.ItemSearchResult itemSearchResult17 = new model.ItemSearchResult(book5, cD6, magazine7, (java.util.Collection<model.Book>) bookList9, (java.util.Collection<model.CD>) cDList12, (java.util.Collection<model.Magazine>) magazineList15);
        faculty0.textbooks = bookList9;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(bookArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(cDArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(magazineArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1993");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.BuySpecialItems buySpecialItems1 = new model.BuySpecialItems();
        model.PayDebit payDebit2 = new model.PayDebit();
        buySpecialItems1.paymentAPI = payDebit2;
        rentAndReturnSystem0.paymentAPI = payDebit2;
        model.Payment payment5 = rentAndReturnSystem0.paymentAPI;
        model.Student student6 = new model.Student();
        int int7 = student6.ID;
        model.StudentOnlineResources studentOnlineResources8 = new model.StudentOnlineResources((model.Client) student6);
        model.VirtualBook virtualBook10 = studentOnlineResources8.searchAccessibleBook("");
        model.CD cD12 = new model.CD("");
        model.Magazine magazine13 = null;
        model.Book book14 = null;
        model.CD cD15 = null;
        model.Magazine magazine16 = null;
        model.Book[] bookArray17 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList18 = new java.util.ArrayList<model.Book>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList18, bookArray17);
        model.CD[] cDArray20 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList21 = new java.util.ArrayList<model.CD>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList21, cDArray20);
        model.Magazine[] magazineArray23 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList24 = new java.util.ArrayList<model.Magazine>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList24, magazineArray23);
        model.ItemSearchResult itemSearchResult26 = new model.ItemSearchResult(book14, cD15, magazine16, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList21, (java.util.Collection<model.Magazine>) magazineList24);
        model.Book book27 = null;
        model.CD cD28 = null;
        model.Magazine magazine29 = null;
        model.Book[] bookArray30 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList31 = new java.util.ArrayList<model.Book>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList31, bookArray30);
        model.CD[] cDArray33 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList34 = new java.util.ArrayList<model.CD>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList34, cDArray33);
        model.Magazine[] magazineArray36 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList37 = new java.util.ArrayList<model.Magazine>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList37, magazineArray36);
        model.ItemSearchResult itemSearchResult39 = new model.ItemSearchResult(book27, cD28, magazine29, (java.util.Collection<model.Book>) bookList31, (java.util.Collection<model.CD>) cDList34, (java.util.Collection<model.Magazine>) magazineList37);
        model.CD[] cDArray40 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList41 = new java.util.ArrayList<model.CD>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList41, cDArray40);
        itemSearchResult39.similarCD = cDList41;
        model.Book book44 = null;
        model.CD cD45 = null;
        model.Magazine magazine46 = null;
        model.Book[] bookArray47 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList48 = new java.util.ArrayList<model.Book>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList48, bookArray47);
        model.CD[] cDArray50 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList51 = new java.util.ArrayList<model.CD>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList51, cDArray50);
        model.Magazine[] magazineArray53 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList54 = new java.util.ArrayList<model.Magazine>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList54, magazineArray53);
        model.ItemSearchResult itemSearchResult56 = new model.ItemSearchResult(book44, cD45, magazine46, (java.util.Collection<model.Book>) bookList48, (java.util.Collection<model.CD>) cDList51, (java.util.Collection<model.Magazine>) magazineList54);
        model.ItemSearchResult itemSearchResult57 = new model.ItemSearchResult((model.Book) virtualBook10, cD12, magazine13, (java.util.Collection<model.Book>) bookList18, (java.util.Collection<model.CD>) cDList41, (java.util.Collection<model.Magazine>) magazineList54);
        int int58 = virtualBook10.ID;
        int int59 = virtualBook10.copiesAvailable;
        model.UniProvidedNewsletter uniProvidedNewsletter60 = null;
        model.PaidNewsletter paidNewsletter61 = null;
        model.VirtualItemSearchResult virtualItemSearchResult62 = new model.VirtualItemSearchResult(virtualBook10, uniProvidedNewsletter60, paidNewsletter61);
        virtualBook10.title = "src/Magazine.csv";
        java.lang.String str65 = virtualBook10.publisher;
        virtualBook10.location = "src/Book.csv";
        model.Faculty faculty68 = new model.Faculty();
        faculty68.username = "hi!";
        java.util.Collection<model.Course> courseCollection71 = null;
        faculty68.courses = courseCollection71;
        java.util.Collection<model.Course> courseCollection73 = faculty68.courses;
        model.Newsletter[] newsletterArray74 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList75 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList75, newsletterArray74);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager77 = new model.NewsletterSubscriptionManager(newsletterList75);
        model.Client client78 = newsletterSubscriptionManager77.client;
        model.Student student79 = new model.Student();
        int int80 = student79.ID;
        model.StudentOnlineResources studentOnlineResources81 = new model.StudentOnlineResources((model.Client) student79);
        student79.ID = '#';
        java.lang.String str84 = student79.email;
        newsletterSubscriptionManager77.client = student79;
        model.Newsletter[] newsletterArray86 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList87 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList87, newsletterArray86);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager89 = new model.NewsletterSubscriptionManager(newsletterList87);
        newsletterSubscriptionManager77.newsletterSubscribed = newsletterList87;
        faculty68.newsletterManager = newsletterSubscriptionManager77;
        java.util.ArrayList<model.VirtualBook> virtualBookList92 = faculty68.virtualBooksAvailable;
        faculty68.email = "src/BorrowedItems.csv";
        boolean boolean95 = rentAndReturnSystem0.returnAnItem((model.Item) virtualBook10, (model.Client) faculty68);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager96 = faculty68.newsletterManager;
        org.junit.Assert.assertNotNull(payment5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(virtualBook10);
        org.junit.Assert.assertNotNull(bookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(cDArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(magazineArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(bookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cDArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(magazineArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cDArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(bookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(cDArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(magazineArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 20 + "'", int59 == 20);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(courseCollection73);
        org.junit.Assert.assertNotNull(newsletterArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(client78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(newsletterArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNull(virtualBookList92);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(newsletterSubscriptionManager96);
    }

    @Test
    public void test1994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1994");
        model.Visitor visitor0 = new model.Visitor();
        java.util.ArrayList<model.VirtualBook> virtualBookList1 = visitor0.virtualBooksAvailable;
        model.StudentOnlineResources studentOnlineResources2 = new model.StudentOnlineResources((model.Client) visitor0);
        model.RentedItem[] rentedItemArray3 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList4 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList4, rentedItemArray3);
        model.BorrowingManager borrowingManager6 = new model.BorrowingManager(rentedItemList4);
        model.Visitor visitor7 = new model.Visitor();
        visitor7.email = "hi!";
        borrowingManager6.client = visitor7;
        studentOnlineResources2.client = visitor7;
        model.UniProvidedNewsletter uniProvidedNewsletter12 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter12.title = "";
        java.lang.String str15 = studentOnlineResources2.readVirtualItem((model.VirtualItem) uniProvidedNewsletter12);
        model.VirtualItemContent virtualItemContent17 = new model.VirtualItemContent("hi!");
        java.lang.String str18 = virtualItemContent17.link;
        java.lang.String str19 = virtualItemContent17.link;
        uniProvidedNewsletter12.content = virtualItemContent17;
        java.lang.String str22 = virtualItemContent17.getContent("model.RentingNotAllowedException: hi!");
        org.junit.Assert.assertNull(virtualBookList1);
        org.junit.Assert.assertNotNull(rentedItemArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
    }

    @Test
    public void test1995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1995");
        model.RentedItem[] rentedItemArray0 = new model.RentedItem[] {};
        java.util.ArrayList<model.RentedItem> rentedItemList1 = new java.util.ArrayList<model.RentedItem>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.RentedItem>) rentedItemList1, rentedItemArray0);
        model.BorrowingManager borrowingManager3 = new model.BorrowingManager(rentedItemList1);
        boolean boolean4 = borrowingManager3.canRent();
        model.Client client5 = borrowingManager3.client;
        double double6 = borrowingManager3.checkBalanceOwed();
        boolean boolean7 = borrowingManager3.canRent();
        org.junit.Assert.assertNotNull(rentedItemArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(client5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test1996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1996");
        model.Database database7 = model.Database.createDatabase("model.RegistrationFailedException: ", "hi!", "model.RegistrationFailedException: ", "", "", "model.RegistrationFailedException: ", "model.RegistrationFailedException: ");
        java.lang.String str8 = database7.getVirtualBookFilePath();
        model.Database.database = database7;
        java.lang.String str10 = database7.virtualItemFilePath;
        model.Login login11 = new model.Login(database7);
        java.lang.String str12 = database7.getClientFilePath();
        model.Register register13 = model.Register.makeRegister(database7);
        model.Login login14 = model.Login.makeLogin(database7);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "src/VirtualBook.csv" + "'", str8, "src/VirtualBook.csv");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "model.RegistrationFailedException: model.RentingNotAllowedException: hi!" + "'", str10, "model.RegistrationFailedException: model.RentingNotAllowedException: hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "src/Client.csv" + "'", str12, "src/Client.csv");
        org.junit.Assert.assertNotNull(register13);
        org.junit.Assert.assertNotNull(login14);
    }

    @Test
    public void test1997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1997");
        model.Newsletter[] newsletterArray0 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList1 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList1, newsletterArray0);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager3 = new model.NewsletterSubscriptionManager(newsletterList1);
        model.Client client4 = newsletterSubscriptionManager3.client;
        model.UniProvidedNewsletter uniProvidedNewsletter5 = new model.UniProvidedNewsletter();
        uniProvidedNewsletter5.title = "";
        java.lang.String str8 = uniProvidedNewsletter5.title;
        newsletterSubscriptionManager3.subscribeToUniProvidedNewsletter(uniProvidedNewsletter5, "");
        java.util.ArrayList<model.Newsletter> newsletterList11 = newsletterSubscriptionManager3.newsletterSubscribed;
        model.Visitor visitor12 = new model.Visitor();
        visitor12.email = "hi!";
        newsletterSubscriptionManager3.client = visitor12;
        model.StudentOnlineResources studentOnlineResources16 = new model.StudentOnlineResources((model.Client) visitor12);
        model.Newsletter newsletter18 = studentOnlineResources16.searchSubscribedNewsletter("src/VirtualBook.csv");
        model.Request request19 = new model.Request();
        java.lang.String str20 = request19.type;
        model.Database database28 = model.Database.createDatabase("hi!", "hi!", "", "model.RegistrationFailedException: ", "", "", "");
        model.Database.database = database28;
        model.SearchVirtualItem searchVirtualItem30 = new model.SearchVirtualItem(database28);
        model.RentAndReturnSystem rentAndReturnSystem31 = new model.RentAndReturnSystem();
        model.Book book32 = null;
        model.CD cD34 = new model.CD("");
        model.Magazine magazine35 = null;
        java.util.Collection<model.Book> bookCollection36 = null;
        model.Book book37 = null;
        model.CD cD38 = null;
        model.Magazine magazine39 = null;
        model.Book[] bookArray40 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList41 = new java.util.ArrayList<model.Book>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList41, bookArray40);
        model.CD[] cDArray43 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList44 = new java.util.ArrayList<model.CD>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList44, cDArray43);
        model.Magazine[] magazineArray46 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList47 = new java.util.ArrayList<model.Magazine>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList47, magazineArray46);
        model.ItemSearchResult itemSearchResult49 = new model.ItemSearchResult(book37, cD38, magazine39, (java.util.Collection<model.Book>) bookList41, (java.util.Collection<model.CD>) cDList44, (java.util.Collection<model.Magazine>) magazineList47);
        model.Book book50 = null;
        model.CD cD51 = null;
        model.Magazine magazine52 = null;
        model.Book[] bookArray53 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList54 = new java.util.ArrayList<model.Book>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList54, bookArray53);
        model.CD[] cDArray56 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList57 = new java.util.ArrayList<model.CD>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList57, cDArray56);
        model.Magazine[] magazineArray59 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList60 = new java.util.ArrayList<model.Magazine>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList60, magazineArray59);
        model.ItemSearchResult itemSearchResult62 = new model.ItemSearchResult(book50, cD51, magazine52, (java.util.Collection<model.Book>) bookList54, (java.util.Collection<model.CD>) cDList57, (java.util.Collection<model.Magazine>) magazineList60);
        itemSearchResult49.similarCD = cDList57;
        model.Book book64 = null;
        model.CD cD65 = null;
        model.Magazine magazine66 = null;
        model.Book[] bookArray67 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList68 = new java.util.ArrayList<model.Book>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList68, bookArray67);
        model.CD[] cDArray70 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList71 = new java.util.ArrayList<model.CD>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList71, cDArray70);
        model.Magazine[] magazineArray73 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList74 = new java.util.ArrayList<model.Magazine>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList74, magazineArray73);
        model.ItemSearchResult itemSearchResult76 = new model.ItemSearchResult(book64, cD65, magazine66, (java.util.Collection<model.Book>) bookList68, (java.util.Collection<model.CD>) cDList71, (java.util.Collection<model.Magazine>) magazineList74);
        model.ItemSearchResult itemSearchResult77 = new model.ItemSearchResult(book32, cD34, magazine35, bookCollection36, (java.util.Collection<model.CD>) cDList57, (java.util.Collection<model.Magazine>) magazineList74);
        cD34.ID = (short) 10;
        cD34.canBePurchased = false;
        boolean boolean82 = cD34.canBePurchased;
        model.Faculty faculty83 = new model.Faculty();
        boolean boolean84 = rentAndReturnSystem31.rentAnItem((model.Item) cD34, (model.Client) faculty83);
        java.lang.String str85 = faculty83.faculty;
        database28.addClient((model.Client) faculty83);
        request19.requestee = faculty83;
        model.NewsletterSubscriptionManager newsletterSubscriptionManager88 = faculty83.newsletterManager;
        faculty83.email = "";
        studentOnlineResources16.client = faculty83;
        model.VirtualBook virtualBook93 = studentOnlineResources16.searchAccessibleBook("model.LoginFailedException: hi!");
        java.lang.Class<?> wildcardClass94 = virtualBook93.getClass();
        org.junit.Assert.assertNotNull(newsletterArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(client4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(newsletterList11);
        org.junit.Assert.assertNull(newsletter18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(bookArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(cDArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(magazineArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(bookArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(cDArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(magazineArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(bookArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(cDArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(magazineArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNull(newsletterSubscriptionManager88);
        org.junit.Assert.assertNotNull(virtualBook93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1998");
        model.Database database0 = model.Database.database;
        model.Student student1 = new model.Student();
        int int2 = student1.ID;
        model.StudentOnlineResources studentOnlineResources3 = new model.StudentOnlineResources((model.Client) student1);
        student1.ID = '#';
        database0.addClient((model.Client) student1);
        student1.email = "hi!";
        model.Faculty faculty9 = new model.Faculty();
        faculty9.username = "hi!";
        java.util.Collection<model.Course> courseCollection12 = null;
        faculty9.courses = courseCollection12;
        java.util.Collection<model.Course> courseCollection14 = faculty9.courses;
        model.Newsletter[] newsletterArray15 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList16 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList16, newsletterArray15);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager18 = new model.NewsletterSubscriptionManager(newsletterList16);
        model.Client client19 = newsletterSubscriptionManager18.client;
        model.Student student20 = new model.Student();
        int int21 = student20.ID;
        model.StudentOnlineResources studentOnlineResources22 = new model.StudentOnlineResources((model.Client) student20);
        student20.ID = '#';
        java.lang.String str25 = student20.email;
        newsletterSubscriptionManager18.client = student20;
        model.Newsletter[] newsletterArray27 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList28 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList28, newsletterArray27);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager30 = new model.NewsletterSubscriptionManager(newsletterList28);
        newsletterSubscriptionManager18.newsletterSubscribed = newsletterList28;
        faculty9.newsletterManager = newsletterSubscriptionManager18;
        model.Newsletter[] newsletterArray33 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList34 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList34, newsletterArray33);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager36 = new model.NewsletterSubscriptionManager(newsletterList34);
        model.Client client37 = newsletterSubscriptionManager36.client;
        model.Student student38 = new model.Student();
        int int39 = student38.ID;
        model.StudentOnlineResources studentOnlineResources40 = new model.StudentOnlineResources((model.Client) student38);
        student38.ID = '#';
        java.lang.String str43 = student38.email;
        newsletterSubscriptionManager36.client = student38;
        student38.ID = (short) 1;
        newsletterSubscriptionManager18.client = student38;
        model.Newsletter[] newsletterArray48 = new model.Newsletter[] {};
        java.util.ArrayList<model.Newsletter> newsletterList49 = new java.util.ArrayList<model.Newsletter>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<model.Newsletter>) newsletterList49, newsletterArray48);
        model.NewsletterSubscriptionManager newsletterSubscriptionManager51 = new model.NewsletterSubscriptionManager(newsletterList49);
        model.Visitor visitor52 = new model.Visitor();
        model.VirtualBook[] virtualBookArray53 = new model.VirtualBook[] {};
        java.util.ArrayList<model.VirtualBook> virtualBookList54 = new java.util.ArrayList<model.VirtualBook>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<model.VirtualBook>) virtualBookList54, virtualBookArray53);
        visitor52.virtualBooksAvailable = virtualBookList54;
        newsletterSubscriptionManager51.client = visitor52;
        java.lang.String str58 = visitor52.email;
        newsletterSubscriptionManager18.client = visitor52;
        model.Client client60 = newsletterSubscriptionManager18.client;
        student1.newsletterManager = newsletterSubscriptionManager18;
        org.junit.Assert.assertNotNull(database0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(courseCollection14);
        org.junit.Assert.assertNotNull(newsletterArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(client19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(newsletterArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(newsletterArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(client37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(newsletterArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(virtualBookArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(client60);
    }

    @Test
    public void test1999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1999");
        model.RentAndReturnSystem rentAndReturnSystem0 = new model.RentAndReturnSystem();
        model.PayCredit payCredit1 = new model.PayCredit();
        rentAndReturnSystem0.paymentAPI = payCredit1;
        payCredit1.pay((double) (short) -1);
        double double5 = payCredit1.amountPay;
        payCredit1.amountPay = 9047933;
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + (-1.0d) + "'", double5 == (-1.0d));
    }

    @Test
    public void test2000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test2000");
        model.ItemManagement itemManagement0 = new model.ItemManagement();
        model.Database database1 = null;
        itemManagement0.database = database1;
        model.BuySpecialItems buySpecialItems3 = new model.BuySpecialItems();
        model.Book book4 = null;
        model.CD cD6 = new model.CD("");
        model.Magazine magazine7 = null;
        java.util.Collection<model.Book> bookCollection8 = null;
        model.Book book9 = null;
        model.CD cD10 = null;
        model.Magazine magazine11 = null;
        model.Book[] bookArray12 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList13 = new java.util.ArrayList<model.Book>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList13, bookArray12);
        model.CD[] cDArray15 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList16 = new java.util.ArrayList<model.CD>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList16, cDArray15);
        model.Magazine[] magazineArray18 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList19 = new java.util.ArrayList<model.Magazine>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList19, magazineArray18);
        model.ItemSearchResult itemSearchResult21 = new model.ItemSearchResult(book9, cD10, magazine11, (java.util.Collection<model.Book>) bookList13, (java.util.Collection<model.CD>) cDList16, (java.util.Collection<model.Magazine>) magazineList19);
        model.Book book22 = null;
        model.CD cD23 = null;
        model.Magazine magazine24 = null;
        model.Book[] bookArray25 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList26 = new java.util.ArrayList<model.Book>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList26, bookArray25);
        model.CD[] cDArray28 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList29 = new java.util.ArrayList<model.CD>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList29, cDArray28);
        model.Magazine[] magazineArray31 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList32 = new java.util.ArrayList<model.Magazine>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList32, magazineArray31);
        model.ItemSearchResult itemSearchResult34 = new model.ItemSearchResult(book22, cD23, magazine24, (java.util.Collection<model.Book>) bookList26, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList32);
        itemSearchResult21.similarCD = cDList29;
        model.Book book36 = null;
        model.CD cD37 = null;
        model.Magazine magazine38 = null;
        model.Book[] bookArray39 = new model.Book[] {};
        java.util.ArrayList<model.Book> bookList40 = new java.util.ArrayList<model.Book>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<model.Book>) bookList40, bookArray39);
        model.CD[] cDArray42 = new model.CD[] {};
        java.util.ArrayList<model.CD> cDList43 = new java.util.ArrayList<model.CD>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<model.CD>) cDList43, cDArray42);
        model.Magazine[] magazineArray45 = new model.Magazine[] {};
        java.util.ArrayList<model.Magazine> magazineList46 = new java.util.ArrayList<model.Magazine>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<model.Magazine>) magazineList46, magazineArray45);
        model.ItemSearchResult itemSearchResult48 = new model.ItemSearchResult(book36, cD37, magazine38, (java.util.Collection<model.Book>) bookList40, (java.util.Collection<model.CD>) cDList43, (java.util.Collection<model.Magazine>) magazineList46);
        model.ItemSearchResult itemSearchResult49 = new model.ItemSearchResult(book4, cD6, magazine7, bookCollection8, (java.util.Collection<model.CD>) cDList29, (java.util.Collection<model.Magazine>) magazineList46);
        cD6.ID = (short) 10;
        boolean boolean53 = buySpecialItems3.buyAnItem((model.Item) cD6, (double) 0);
        itemManagement0.enableAnItem((model.Item) cD6);
        model.Database database62 = model.Database.createDatabase("src/Client.csv", "model.LoginFailedException: hi!", "model.RegistrationFailedException: src/Magazine.csv", "src/CD.csv", "model.LoginFailedException: hi!", "model.RegistrationFailedException: src/Book.csv", "");
        itemManagement0.database = database62;
        org.junit.Assert.assertNotNull(bookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cDArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(magazineArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(bookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cDArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(magazineArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(bookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cDArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(magazineArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(database62);
    }
}
